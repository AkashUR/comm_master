69
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='BinaryMessage'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='size'
15 scope (ThisExpr)
16 name (SimpleName)
17 identifier='mask'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='BinaryMessage'
21 statement (ExpressionStmt)
22 expression (MethodCallExpr)
23 name (SimpleName)
24 identifier='load'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='mask'
28 arguments
29 argument (NameExpr)
30 name (SimpleName)
31 identifier='offset'
32 argument (NameExpr)
33 name (SimpleName)
34 identifier='width'
35 argument (NameExpr)
36 name (SimpleName)
37 identifier='value'
38 statement (ExpressionStmt)
39 expression (MethodCallExpr)
40 name (SimpleName)
41 identifier='xor'
42 scope (ThisExpr)
43 arguments
44 argument (NameExpr)
45 name (SimpleName)
46 identifier='mask'
47 type (VoidType)
48 name (SimpleName)
49 identifier='xor'
50 parameters
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='offset'
55 type (PrimitiveType)
56 type='INT'
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='width'
61 type (PrimitiveType)
62 type='INT'
63 parameter (Parameter)
64 isVarArgs='false'
65 name (SimpleName)
66 identifier='value'
67 type (PrimitiveType)
68 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
12 15
6 16
16 17
6 18
18 19
19 20
2 21
21 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
30 31
28 32
32 33
33 34
28 35
35 36
36 37
2 38
38 39
39 40
40 41
39 42
39 43
43 44
44 45
45 46
0 47
0 48
48 49
0 50
50 51
51 52
51 53
53 54
51 55
55 56
50 57
57 58
57 59
59 60
57 61
61 62
50 63
63 64
63 65
65 66
63 67
67 68

Performs exclusive or of the value against this bitset starting at the offset position using width bits from the value.
