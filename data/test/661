1141
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ArrayCreationExpr)
8 elementType (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Input'
11 initializer (ArrayInitializerExpr)
12 values
13 value (ObjectCreationExpr)
14 type (ClassOrInterfaceType)
15 name (SimpleName)
16 identifier='Input'
17 arguments
18 argument (StringLiteralExpr)
19 value='foo'
20 argument (IntegerLiteralExpr)
21 value='50'
22 value (ObjectCreationExpr)
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='Input'
26 arguments
27 argument (StringLiteralExpr)
28 value='bar'
29 argument (IntegerLiteralExpr)
30 value='10'
31 value (ObjectCreationExpr)
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='Input'
35 arguments
36 argument (StringLiteralExpr)
37 value='barbar'
38 argument (IntegerLiteralExpr)
39 value='12'
40 value (ObjectCreationExpr)
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='Input'
44 arguments
45 argument (StringLiteralExpr)
46 value='barbara'
47 argument (IntegerLiteralExpr)
48 value='6'
49 levels
50 level (ArrayCreationLevel)
51 name (SimpleName)
52 identifier='keys'
53 type (ArrayType)
54 origin='NAME'
55 componentType (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='Input'
58 statement (ExpressionStmt)
59 expression (VariableDeclarationExpr)
60 variables
61 variable (VariableDeclarator)
62 initializer (ObjectCreationExpr)
63 type (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='MockAnalyzer'
66 arguments
67 argument (MethodCallExpr)
68 name (SimpleName)
69 identifier='random'
70 argument (FieldAccessExpr)
71 name (SimpleName)
72 identifier='KEYWORD'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='MockTokenizer'
76 argument (BooleanLiteralExpr)
77 value='false'
78 name (SimpleName)
79 identifier='analyzer'
80 type (ClassOrInterfaceType)
81 name (SimpleName)
82 identifier='Analyzer'
83 statement (ExpressionStmt)
84 expression (VariableDeclarationExpr)
85 variables
86 variable (VariableDeclarator)
87 initializer (MethodCallExpr)
88 name (SimpleName)
89 identifier='getDirectory'
90 name (SimpleName)
91 identifier='tempDir'
92 type (ClassOrInterfaceType)
93 name (SimpleName)
94 identifier='Directory'
95 statement (ExpressionStmt)
96 expression (VariableDeclarationExpr)
97 variables
98 variable (VariableDeclarator)
99 initializer (ObjectCreationExpr)
100 type (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='FuzzySuggester'
103 arguments
104 argument (NameExpr)
105 name (SimpleName)
106 identifier='tempDir'
107 argument (StringLiteralExpr)
108 value='fuzzy'
109 argument (NameExpr)
110 name (SimpleName)
111 identifier='analyzer'
112 name (SimpleName)
113 identifier='suggester'
114 type (ClassOrInterfaceType)
115 name (SimpleName)
116 identifier='FuzzySuggester'
117 statement (ExpressionStmt)
118 expression (MethodCallExpr)
119 name (SimpleName)
120 identifier='build'
121 scope (NameExpr)
122 name (SimpleName)
123 identifier='suggester'
124 arguments
125 argument (ObjectCreationExpr)
126 type (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='InputArrayIterator'
129 arguments
130 argument (NameExpr)
131 name (SimpleName)
132 identifier='keys'
133 statement (ExpressionStmt)
134 expression (VariableDeclarationExpr)
135 variables
136 variable (VariableDeclarator)
137 initializer (MethodCallExpr)
138 name (SimpleName)
139 identifier='lookup'
140 scope (NameExpr)
141 name (SimpleName)
142 identifier='suggester'
143 arguments
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='stringToCharSequence'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='TestUtil'
150 arguments
151 argument (StringLiteralExpr)
152 value='bariar'
153 argument (MethodCallExpr)
154 name (SimpleName)
155 identifier='random'
156 argument (BooleanLiteralExpr)
157 value='false'
158 argument (IntegerLiteralExpr)
159 value='2'
160 name (SimpleName)
161 identifier='results'
162 type (ClassOrInterfaceType)
163 name (SimpleName)
164 identifier='List'
165 typeArguments
166 typeArgument (ClassOrInterfaceType)
167 name (SimpleName)
168 identifier='LookupResult'
169 statement (ExpressionStmt)
170 expression (MethodCallExpr)
171 name (SimpleName)
172 identifier='assertEquals'
173 arguments
174 argument (IntegerLiteralExpr)
175 value='2'
176 argument (MethodCallExpr)
177 name (SimpleName)
178 identifier='size'
179 scope (NameExpr)
180 name (SimpleName)
181 identifier='results'
182 statement (ExpressionStmt)
183 expression (MethodCallExpr)
184 name (SimpleName)
185 identifier='assertEquals'
186 arguments
187 argument (StringLiteralExpr)
188 value='barbar'
189 argument (MethodCallExpr)
190 name (SimpleName)
191 identifier='toString'
192 scope (FieldAccessExpr)
193 name (SimpleName)
194 identifier='key'
195 scope (MethodCallExpr)
196 name (SimpleName)
197 identifier='get'
198 scope (NameExpr)
199 name (SimpleName)
200 identifier='results'
201 arguments
202 argument (IntegerLiteralExpr)
203 value='0'
204 statement (ExpressionStmt)
205 expression (MethodCallExpr)
206 name (SimpleName)
207 identifier='assertEquals'
208 arguments
209 argument (IntegerLiteralExpr)
210 value='12'
211 argument (FieldAccessExpr)
212 name (SimpleName)
213 identifier='value'
214 scope (MethodCallExpr)
215 name (SimpleName)
216 identifier='get'
217 scope (NameExpr)
218 name (SimpleName)
219 identifier='results'
220 arguments
221 argument (IntegerLiteralExpr)
222 value='0'
223 argument (DoubleLiteralExpr)
224 value='0.01F'
225 statement (ExpressionStmt)
226 expression (AssignExpr)
227 operator='ASSIGN'
228 target (NameExpr)
229 name (SimpleName)
230 identifier='results'
231 value (MethodCallExpr)
232 name (SimpleName)
233 identifier='lookup'
234 scope (NameExpr)
235 name (SimpleName)
236 identifier='suggester'
237 arguments
238 argument (MethodCallExpr)
239 name (SimpleName)
240 identifier='stringToCharSequence'
241 scope (NameExpr)
242 name (SimpleName)
243 identifier='TestUtil'
244 arguments
245 argument (StringLiteralExpr)
246 value='barbr'
247 argument (MethodCallExpr)
248 name (SimpleName)
249 identifier='random'
250 argument (BooleanLiteralExpr)
251 value='false'
252 argument (IntegerLiteralExpr)
253 value='2'
254 statement (ExpressionStmt)
255 expression (MethodCallExpr)
256 name (SimpleName)
257 identifier='assertEquals'
258 arguments
259 argument (IntegerLiteralExpr)
260 value='2'
261 argument (MethodCallExpr)
262 name (SimpleName)
263 identifier='size'
264 scope (NameExpr)
265 name (SimpleName)
266 identifier='results'
267 statement (ExpressionStmt)
268 expression (MethodCallExpr)
269 name (SimpleName)
270 identifier='assertEquals'
271 arguments
272 argument (StringLiteralExpr)
273 value='barbar'
274 argument (MethodCallExpr)
275 name (SimpleName)
276 identifier='toString'
277 scope (FieldAccessExpr)
278 name (SimpleName)
279 identifier='key'
280 scope (MethodCallExpr)
281 name (SimpleName)
282 identifier='get'
283 scope (NameExpr)
284 name (SimpleName)
285 identifier='results'
286 arguments
287 argument (IntegerLiteralExpr)
288 value='0'
289 statement (ExpressionStmt)
290 expression (MethodCallExpr)
291 name (SimpleName)
292 identifier='assertEquals'
293 arguments
294 argument (IntegerLiteralExpr)
295 value='12'
296 argument (FieldAccessExpr)
297 name (SimpleName)
298 identifier='value'
299 scope (MethodCallExpr)
300 name (SimpleName)
301 identifier='get'
302 scope (NameExpr)
303 name (SimpleName)
304 identifier='results'
305 arguments
306 argument (IntegerLiteralExpr)
307 value='0'
308 argument (DoubleLiteralExpr)
309 value='0.01F'
310 statement (ExpressionStmt)
311 expression (AssignExpr)
312 operator='ASSIGN'
313 target (NameExpr)
314 name (SimpleName)
315 identifier='results'
316 value (MethodCallExpr)
317 name (SimpleName)
318 identifier='lookup'
319 scope (NameExpr)
320 name (SimpleName)
321 identifier='suggester'
322 arguments
323 argument (MethodCallExpr)
324 name (SimpleName)
325 identifier='stringToCharSequence'
326 scope (NameExpr)
327 name (SimpleName)
328 identifier='TestUtil'
329 arguments
330 argument (StringLiteralExpr)
331 value='barbara'
332 argument (MethodCallExpr)
333 name (SimpleName)
334 identifier='random'
335 argument (BooleanLiteralExpr)
336 value='false'
337 argument (IntegerLiteralExpr)
338 value='2'
339 statement (ExpressionStmt)
340 expression (MethodCallExpr)
341 name (SimpleName)
342 identifier='assertEquals'
343 arguments
344 argument (IntegerLiteralExpr)
345 value='2'
346 argument (MethodCallExpr)
347 name (SimpleName)
348 identifier='size'
349 scope (NameExpr)
350 name (SimpleName)
351 identifier='results'
352 statement (ExpressionStmt)
353 expression (MethodCallExpr)
354 name (SimpleName)
355 identifier='assertEquals'
356 arguments
357 argument (StringLiteralExpr)
358 value='barbara'
359 argument (MethodCallExpr)
360 name (SimpleName)
361 identifier='toString'
362 scope (FieldAccessExpr)
363 name (SimpleName)
364 identifier='key'
365 scope (MethodCallExpr)
366 name (SimpleName)
367 identifier='get'
368 scope (NameExpr)
369 name (SimpleName)
370 identifier='results'
371 arguments
372 argument (IntegerLiteralExpr)
373 value='0'
374 statement (ExpressionStmt)
375 expression (MethodCallExpr)
376 name (SimpleName)
377 identifier='assertEquals'
378 arguments
379 argument (IntegerLiteralExpr)
380 value='6'
381 argument (FieldAccessExpr)
382 name (SimpleName)
383 identifier='value'
384 scope (MethodCallExpr)
385 name (SimpleName)
386 identifier='get'
387 scope (NameExpr)
388 name (SimpleName)
389 identifier='results'
390 arguments
391 argument (IntegerLiteralExpr)
392 value='0'
393 argument (DoubleLiteralExpr)
394 value='0.01F'
395 statement (ExpressionStmt)
396 expression (AssignExpr)
397 operator='ASSIGN'
398 target (NameExpr)
399 name (SimpleName)
400 identifier='results'
401 value (MethodCallExpr)
402 name (SimpleName)
403 identifier='lookup'
404 scope (NameExpr)
405 name (SimpleName)
406 identifier='suggester'
407 arguments
408 argument (MethodCallExpr)
409 name (SimpleName)
410 identifier='stringToCharSequence'
411 scope (NameExpr)
412 name (SimpleName)
413 identifier='TestUtil'
414 arguments
415 argument (StringLiteralExpr)
416 value='barbar'
417 argument (MethodCallExpr)
418 name (SimpleName)
419 identifier='random'
420 argument (BooleanLiteralExpr)
421 value='false'
422 argument (IntegerLiteralExpr)
423 value='2'
424 statement (ExpressionStmt)
425 expression (MethodCallExpr)
426 name (SimpleName)
427 identifier='assertEquals'
428 arguments
429 argument (IntegerLiteralExpr)
430 value='2'
431 argument (MethodCallExpr)
432 name (SimpleName)
433 identifier='size'
434 scope (NameExpr)
435 name (SimpleName)
436 identifier='results'
437 statement (ExpressionStmt)
438 expression (MethodCallExpr)
439 name (SimpleName)
440 identifier='assertEquals'
441 arguments
442 argument (StringLiteralExpr)
443 value='barbar'
444 argument (MethodCallExpr)
445 name (SimpleName)
446 identifier='toString'
447 scope (FieldAccessExpr)
448 name (SimpleName)
449 identifier='key'
450 scope (MethodCallExpr)
451 name (SimpleName)
452 identifier='get'
453 scope (NameExpr)
454 name (SimpleName)
455 identifier='results'
456 arguments
457 argument (IntegerLiteralExpr)
458 value='0'
459 statement (ExpressionStmt)
460 expression (MethodCallExpr)
461 name (SimpleName)
462 identifier='assertEquals'
463 arguments
464 argument (IntegerLiteralExpr)
465 value='12'
466 argument (FieldAccessExpr)
467 name (SimpleName)
468 identifier='value'
469 scope (MethodCallExpr)
470 name (SimpleName)
471 identifier='get'
472 scope (NameExpr)
473 name (SimpleName)
474 identifier='results'
475 arguments
476 argument (IntegerLiteralExpr)
477 value='0'
478 argument (DoubleLiteralExpr)
479 value='0.01F'
480 statement (ExpressionStmt)
481 expression (MethodCallExpr)
482 name (SimpleName)
483 identifier='assertEquals'
484 arguments
485 argument (StringLiteralExpr)
486 value='barbara'
487 argument (MethodCallExpr)
488 name (SimpleName)
489 identifier='toString'
490 scope (FieldAccessExpr)
491 name (SimpleName)
492 identifier='key'
493 scope (MethodCallExpr)
494 name (SimpleName)
495 identifier='get'
496 scope (NameExpr)
497 name (SimpleName)
498 identifier='results'
499 arguments
500 argument (IntegerLiteralExpr)
501 value='1'
502 statement (ExpressionStmt)
503 expression (MethodCallExpr)
504 name (SimpleName)
505 identifier='assertEquals'
506 arguments
507 argument (IntegerLiteralExpr)
508 value='6'
509 argument (FieldAccessExpr)
510 name (SimpleName)
511 identifier='value'
512 scope (MethodCallExpr)
513 name (SimpleName)
514 identifier='get'
515 scope (NameExpr)
516 name (SimpleName)
517 identifier='results'
518 arguments
519 argument (IntegerLiteralExpr)
520 value='1'
521 argument (DoubleLiteralExpr)
522 value='0.01F'
523 statement (ExpressionStmt)
524 expression (AssignExpr)
525 operator='ASSIGN'
526 target (NameExpr)
527 name (SimpleName)
528 identifier='results'
529 value (MethodCallExpr)
530 name (SimpleName)
531 identifier='lookup'
532 scope (NameExpr)
533 name (SimpleName)
534 identifier='suggester'
535 arguments
536 argument (MethodCallExpr)
537 name (SimpleName)
538 identifier='stringToCharSequence'
539 scope (NameExpr)
540 name (SimpleName)
541 identifier='TestUtil'
542 arguments
543 argument (StringLiteralExpr)
544 value='barbaa'
545 argument (MethodCallExpr)
546 name (SimpleName)
547 identifier='random'
548 argument (BooleanLiteralExpr)
549 value='false'
550 argument (IntegerLiteralExpr)
551 value='2'
552 statement (ExpressionStmt)
553 expression (MethodCallExpr)
554 name (SimpleName)
555 identifier='assertEquals'
556 arguments
557 argument (IntegerLiteralExpr)
558 value='2'
559 argument (MethodCallExpr)
560 name (SimpleName)
561 identifier='size'
562 scope (NameExpr)
563 name (SimpleName)
564 identifier='results'
565 statement (ExpressionStmt)
566 expression (MethodCallExpr)
567 name (SimpleName)
568 identifier='assertEquals'
569 arguments
570 argument (StringLiteralExpr)
571 value='barbar'
572 argument (MethodCallExpr)
573 name (SimpleName)
574 identifier='toString'
575 scope (FieldAccessExpr)
576 name (SimpleName)
577 identifier='key'
578 scope (MethodCallExpr)
579 name (SimpleName)
580 identifier='get'
581 scope (NameExpr)
582 name (SimpleName)
583 identifier='results'
584 arguments
585 argument (IntegerLiteralExpr)
586 value='0'
587 statement (ExpressionStmt)
588 expression (MethodCallExpr)
589 name (SimpleName)
590 identifier='assertEquals'
591 arguments
592 argument (IntegerLiteralExpr)
593 value='12'
594 argument (FieldAccessExpr)
595 name (SimpleName)
596 identifier='value'
597 scope (MethodCallExpr)
598 name (SimpleName)
599 identifier='get'
600 scope (NameExpr)
601 name (SimpleName)
602 identifier='results'
603 arguments
604 argument (IntegerLiteralExpr)
605 value='0'
606 argument (DoubleLiteralExpr)
607 value='0.01F'
608 statement (ExpressionStmt)
609 expression (MethodCallExpr)
610 name (SimpleName)
611 identifier='assertEquals'
612 arguments
613 argument (StringLiteralExpr)
614 value='barbara'
615 argument (MethodCallExpr)
616 name (SimpleName)
617 identifier='toString'
618 scope (FieldAccessExpr)
619 name (SimpleName)
620 identifier='key'
621 scope (MethodCallExpr)
622 name (SimpleName)
623 identifier='get'
624 scope (NameExpr)
625 name (SimpleName)
626 identifier='results'
627 arguments
628 argument (IntegerLiteralExpr)
629 value='1'
630 statement (ExpressionStmt)
631 expression (MethodCallExpr)
632 name (SimpleName)
633 identifier='assertEquals'
634 arguments
635 argument (IntegerLiteralExpr)
636 value='6'
637 argument (FieldAccessExpr)
638 name (SimpleName)
639 identifier='value'
640 scope (MethodCallExpr)
641 name (SimpleName)
642 identifier='get'
643 scope (NameExpr)
644 name (SimpleName)
645 identifier='results'
646 arguments
647 argument (IntegerLiteralExpr)
648 value='1'
649 argument (DoubleLiteralExpr)
650 value='0.01F'
651 statement (ExpressionStmt)
652 expression (AssignExpr)
653 operator='ASSIGN'
654 target (NameExpr)
655 name (SimpleName)
656 identifier='results'
657 value (MethodCallExpr)
658 name (SimpleName)
659 identifier='lookup'
660 scope (NameExpr)
661 name (SimpleName)
662 identifier='suggester'
663 arguments
664 argument (MethodCallExpr)
665 name (SimpleName)
666 identifier='stringToCharSequence'
667 scope (NameExpr)
668 name (SimpleName)
669 identifier='TestUtil'
670 arguments
671 argument (StringLiteralExpr)
672 value='f'
673 argument (MethodCallExpr)
674 name (SimpleName)
675 identifier='random'
676 argument (BooleanLiteralExpr)
677 value='false'
678 argument (IntegerLiteralExpr)
679 value='2'
680 statement (ExpressionStmt)
681 expression (MethodCallExpr)
682 name (SimpleName)
683 identifier='assertEquals'
684 arguments
685 argument (IntegerLiteralExpr)
686 value='1'
687 argument (MethodCallExpr)
688 name (SimpleName)
689 identifier='size'
690 scope (NameExpr)
691 name (SimpleName)
692 identifier='results'
693 statement (ExpressionStmt)
694 expression (MethodCallExpr)
695 name (SimpleName)
696 identifier='assertEquals'
697 arguments
698 argument (StringLiteralExpr)
699 value='foo'
700 argument (MethodCallExpr)
701 name (SimpleName)
702 identifier='toString'
703 scope (FieldAccessExpr)
704 name (SimpleName)
705 identifier='key'
706 scope (MethodCallExpr)
707 name (SimpleName)
708 identifier='get'
709 scope (NameExpr)
710 name (SimpleName)
711 identifier='results'
712 arguments
713 argument (IntegerLiteralExpr)
714 value='0'
715 statement (ExpressionStmt)
716 expression (MethodCallExpr)
717 name (SimpleName)
718 identifier='assertEquals'
719 arguments
720 argument (IntegerLiteralExpr)
721 value='50'
722 argument (FieldAccessExpr)
723 name (SimpleName)
724 identifier='value'
725 scope (MethodCallExpr)
726 name (SimpleName)
727 identifier='get'
728 scope (NameExpr)
729 name (SimpleName)
730 identifier='results'
731 arguments
732 argument (IntegerLiteralExpr)
733 value='0'
734 argument (DoubleLiteralExpr)
735 value='0.01F'
736 statement (ExpressionStmt)
737 expression (AssignExpr)
738 operator='ASSIGN'
739 target (NameExpr)
740 name (SimpleName)
741 identifier='results'
742 value (MethodCallExpr)
743 name (SimpleName)
744 identifier='lookup'
745 scope (NameExpr)
746 name (SimpleName)
747 identifier='suggester'
748 arguments
749 argument (MethodCallExpr)
750 name (SimpleName)
751 identifier='stringToCharSequence'
752 scope (NameExpr)
753 name (SimpleName)
754 identifier='TestUtil'
755 arguments
756 argument (StringLiteralExpr)
757 value='bar'
758 argument (MethodCallExpr)
759 name (SimpleName)
760 identifier='random'
761 argument (BooleanLiteralExpr)
762 value='false'
763 argument (IntegerLiteralExpr)
764 value='1'
765 statement (ExpressionStmt)
766 expression (MethodCallExpr)
767 name (SimpleName)
768 identifier='assertEquals'
769 arguments
770 argument (IntegerLiteralExpr)
771 value='1'
772 argument (MethodCallExpr)
773 name (SimpleName)
774 identifier='size'
775 scope (NameExpr)
776 name (SimpleName)
777 identifier='results'
778 statement (ExpressionStmt)
779 expression (MethodCallExpr)
780 name (SimpleName)
781 identifier='assertEquals'
782 arguments
783 argument (StringLiteralExpr)
784 value='bar'
785 argument (MethodCallExpr)
786 name (SimpleName)
787 identifier='toString'
788 scope (FieldAccessExpr)
789 name (SimpleName)
790 identifier='key'
791 scope (MethodCallExpr)
792 name (SimpleName)
793 identifier='get'
794 scope (NameExpr)
795 name (SimpleName)
796 identifier='results'
797 arguments
798 argument (IntegerLiteralExpr)
799 value='0'
800 statement (ExpressionStmt)
801 expression (MethodCallExpr)
802 name (SimpleName)
803 identifier='assertEquals'
804 arguments
805 argument (IntegerLiteralExpr)
806 value='10'
807 argument (FieldAccessExpr)
808 name (SimpleName)
809 identifier='value'
810 scope (MethodCallExpr)
811 name (SimpleName)
812 identifier='get'
813 scope (NameExpr)
814 name (SimpleName)
815 identifier='results'
816 arguments
817 argument (IntegerLiteralExpr)
818 value='0'
819 argument (DoubleLiteralExpr)
820 value='0.01F'
821 statement (ExpressionStmt)
822 expression (AssignExpr)
823 operator='ASSIGN'
824 target (NameExpr)
825 name (SimpleName)
826 identifier='results'
827 value (MethodCallExpr)
828 name (SimpleName)
829 identifier='lookup'
830 scope (NameExpr)
831 name (SimpleName)
832 identifier='suggester'
833 arguments
834 argument (MethodCallExpr)
835 name (SimpleName)
836 identifier='stringToCharSequence'
837 scope (NameExpr)
838 name (SimpleName)
839 identifier='TestUtil'
840 arguments
841 argument (StringLiteralExpr)
842 value='b'
843 argument (MethodCallExpr)
844 name (SimpleName)
845 identifier='random'
846 argument (BooleanLiteralExpr)
847 value='false'
848 argument (IntegerLiteralExpr)
849 value='2'
850 statement (ExpressionStmt)
851 expression (MethodCallExpr)
852 name (SimpleName)
853 identifier='assertEquals'
854 arguments
855 argument (IntegerLiteralExpr)
856 value='2'
857 argument (MethodCallExpr)
858 name (SimpleName)
859 identifier='size'
860 scope (NameExpr)
861 name (SimpleName)
862 identifier='results'
863 statement (ExpressionStmt)
864 expression (MethodCallExpr)
865 name (SimpleName)
866 identifier='assertEquals'
867 arguments
868 argument (StringLiteralExpr)
869 value='barbar'
870 argument (MethodCallExpr)
871 name (SimpleName)
872 identifier='toString'
873 scope (FieldAccessExpr)
874 name (SimpleName)
875 identifier='key'
876 scope (MethodCallExpr)
877 name (SimpleName)
878 identifier='get'
879 scope (NameExpr)
880 name (SimpleName)
881 identifier='results'
882 arguments
883 argument (IntegerLiteralExpr)
884 value='0'
885 statement (ExpressionStmt)
886 expression (MethodCallExpr)
887 name (SimpleName)
888 identifier='assertEquals'
889 arguments
890 argument (IntegerLiteralExpr)
891 value='12'
892 argument (FieldAccessExpr)
893 name (SimpleName)
894 identifier='value'
895 scope (MethodCallExpr)
896 name (SimpleName)
897 identifier='get'
898 scope (NameExpr)
899 name (SimpleName)
900 identifier='results'
901 arguments
902 argument (IntegerLiteralExpr)
903 value='0'
904 argument (DoubleLiteralExpr)
905 value='0.01F'
906 statement (ExpressionStmt)
907 expression (MethodCallExpr)
908 name (SimpleName)
909 identifier='assertEquals'
910 arguments
911 argument (StringLiteralExpr)
912 value='bar'
913 argument (MethodCallExpr)
914 name (SimpleName)
915 identifier='toString'
916 scope (FieldAccessExpr)
917 name (SimpleName)
918 identifier='key'
919 scope (MethodCallExpr)
920 name (SimpleName)
921 identifier='get'
922 scope (NameExpr)
923 name (SimpleName)
924 identifier='results'
925 arguments
926 argument (IntegerLiteralExpr)
927 value='1'
928 statement (ExpressionStmt)
929 expression (MethodCallExpr)
930 name (SimpleName)
931 identifier='assertEquals'
932 arguments
933 argument (IntegerLiteralExpr)
934 value='10'
935 argument (FieldAccessExpr)
936 name (SimpleName)
937 identifier='value'
938 scope (MethodCallExpr)
939 name (SimpleName)
940 identifier='get'
941 scope (NameExpr)
942 name (SimpleName)
943 identifier='results'
944 arguments
945 argument (IntegerLiteralExpr)
946 value='1'
947 argument (DoubleLiteralExpr)
948 value='0.01F'
949 statement (ExpressionStmt)
950 expression (AssignExpr)
951 operator='ASSIGN'
952 target (NameExpr)
953 name (SimpleName)
954 identifier='results'
955 value (MethodCallExpr)
956 name (SimpleName)
957 identifier='lookup'
958 scope (NameExpr)
959 name (SimpleName)
960 identifier='suggester'
961 arguments
962 argument (MethodCallExpr)
963 name (SimpleName)
964 identifier='stringToCharSequence'
965 scope (NameExpr)
966 name (SimpleName)
967 identifier='TestUtil'
968 arguments
969 argument (StringLiteralExpr)
970 value='ba'
971 argument (MethodCallExpr)
972 name (SimpleName)
973 identifier='random'
974 argument (BooleanLiteralExpr)
975 value='false'
976 argument (IntegerLiteralExpr)
977 value='3'
978 statement (ExpressionStmt)
979 expression (MethodCallExpr)
980 name (SimpleName)
981 identifier='assertEquals'
982 arguments
983 argument (IntegerLiteralExpr)
984 value='3'
985 argument (MethodCallExpr)
986 name (SimpleName)
987 identifier='size'
988 scope (NameExpr)
989 name (SimpleName)
990 identifier='results'
991 statement (ExpressionStmt)
992 expression (MethodCallExpr)
993 name (SimpleName)
994 identifier='assertEquals'
995 arguments
996 argument (StringLiteralExpr)
997 value='barbar'
998 argument (MethodCallExpr)
999 name (SimpleName)
1000 identifier='toString'
1001 scope (FieldAccessExpr)
1002 name (SimpleName)
1003 identifier='key'
1004 scope (MethodCallExpr)
1005 name (SimpleName)
1006 identifier='get'
1007 scope (NameExpr)
1008 name (SimpleName)
1009 identifier='results'
1010 arguments
1011 argument (IntegerLiteralExpr)
1012 value='0'
1013 statement (ExpressionStmt)
1014 expression (MethodCallExpr)
1015 name (SimpleName)
1016 identifier='assertEquals'
1017 arguments
1018 argument (IntegerLiteralExpr)
1019 value='12'
1020 argument (FieldAccessExpr)
1021 name (SimpleName)
1022 identifier='value'
1023 scope (MethodCallExpr)
1024 name (SimpleName)
1025 identifier='get'
1026 scope (NameExpr)
1027 name (SimpleName)
1028 identifier='results'
1029 arguments
1030 argument (IntegerLiteralExpr)
1031 value='0'
1032 argument (DoubleLiteralExpr)
1033 value='0.01F'
1034 statement (ExpressionStmt)
1035 expression (MethodCallExpr)
1036 name (SimpleName)
1037 identifier='assertEquals'
1038 arguments
1039 argument (StringLiteralExpr)
1040 value='bar'
1041 argument (MethodCallExpr)
1042 name (SimpleName)
1043 identifier='toString'
1044 scope (FieldAccessExpr)
1045 name (SimpleName)
1046 identifier='key'
1047 scope (MethodCallExpr)
1048 name (SimpleName)
1049 identifier='get'
1050 scope (NameExpr)
1051 name (SimpleName)
1052 identifier='results'
1053 arguments
1054 argument (IntegerLiteralExpr)
1055 value='1'
1056 statement (ExpressionStmt)
1057 expression (MethodCallExpr)
1058 name (SimpleName)
1059 identifier='assertEquals'
1060 arguments
1061 argument (IntegerLiteralExpr)
1062 value='10'
1063 argument (FieldAccessExpr)
1064 name (SimpleName)
1065 identifier='value'
1066 scope (MethodCallExpr)
1067 name (SimpleName)
1068 identifier='get'
1069 scope (NameExpr)
1070 name (SimpleName)
1071 identifier='results'
1072 arguments
1073 argument (IntegerLiteralExpr)
1074 value='1'
1075 argument (DoubleLiteralExpr)
1076 value='0.01F'
1077 statement (ExpressionStmt)
1078 expression (MethodCallExpr)
1079 name (SimpleName)
1080 identifier='assertEquals'
1081 arguments
1082 argument (StringLiteralExpr)
1083 value='barbara'
1084 argument (MethodCallExpr)
1085 name (SimpleName)
1086 identifier='toString'
1087 scope (FieldAccessExpr)
1088 name (SimpleName)
1089 identifier='key'
1090 scope (MethodCallExpr)
1091 name (SimpleName)
1092 identifier='get'
1093 scope (NameExpr)
1094 name (SimpleName)
1095 identifier='results'
1096 arguments
1097 argument (IntegerLiteralExpr)
1098 value='2'
1099 statement (ExpressionStmt)
1100 expression (MethodCallExpr)
1101 name (SimpleName)
1102 identifier='assertEquals'
1103 arguments
1104 argument (IntegerLiteralExpr)
1105 value='6'
1106 argument (FieldAccessExpr)
1107 name (SimpleName)
1108 identifier='value'
1109 scope (MethodCallExpr)
1110 name (SimpleName)
1111 identifier='get'
1112 scope (NameExpr)
1113 name (SimpleName)
1114 identifier='results'
1115 arguments
1116 argument (IntegerLiteralExpr)
1117 value='2'
1118 argument (DoubleLiteralExpr)
1119 value='0.01F'
1120 statement (ExpressionStmt)
1121 expression (MethodCallExpr)
1122 name (SimpleName)
1123 identifier='close'
1124 scope (NameExpr)
1125 name (SimpleName)
1126 identifier='IOUtils'
1127 arguments
1128 argument (NameExpr)
1129 name (SimpleName)
1130 identifier='analyzer'
1131 argument (NameExpr)
1132 name (SimpleName)
1133 identifier='tempDir'
1134 type (VoidType)
1135 name (SimpleName)
1136 identifier='testKeyword'
1137 thrownExceptions
1138 thrownException (ClassOrInterfaceType)
1139 name (SimpleName)
1140 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
14 15
15 16
13 17
17 18
18 19
17 20
20 21
12 22
22 23
23 24
24 25
22 26
26 27
27 28
26 29
29 30
12 31
31 32
32 33
33 34
31 35
35 36
36 37
35 38
38 39
12 40
40 41
41 42
42 43
40 44
44 45
45 46
44 47
47 48
7 49
49 50
6 51
51 52
6 53
53 54
53 55
55 56
56 57
2 58
58 59
59 60
60 61
61 62
62 63
63 64
64 65
62 66
66 67
67 68
68 69
66 70
70 71
71 72
70 73
73 74
74 75
66 76
76 77
61 78
78 79
61 80
80 81
81 82
2 83
83 84
84 85
85 86
86 87
87 88
88 89
86 90
90 91
86 92
92 93
93 94
2 95
95 96
96 97
97 98
98 99
99 100
100 101
101 102
99 103
103 104
104 105
105 106
103 107
107 108
103 109
109 110
110 111
98 112
112 113
98 114
114 115
115 116
2 117
117 118
118 119
119 120
118 121
121 122
122 123
118 124
124 125
125 126
126 127
127 128
125 129
129 130
130 131
131 132
2 133
133 134
134 135
135 136
136 137
137 138
138 139
137 140
140 141
141 142
137 143
143 144
144 145
145 146
144 147
147 148
148 149
144 150
150 151
151 152
150 153
153 154
154 155
143 156
156 157
143 158
158 159
136 160
160 161
136 162
162 163
163 164
162 165
165 166
166 167
167 168
2 169
169 170
170 171
171 172
170 173
173 174
174 175
173 176
176 177
177 178
176 179
179 180
180 181
2 182
182 183
183 184
184 185
183 186
186 187
187 188
186 189
189 190
190 191
189 192
192 193
193 194
192 195
195 196
196 197
195 198
198 199
199 200
195 201
201 202
202 203
2 204
204 205
205 206
206 207
205 208
208 209
209 210
208 211
211 212
212 213
211 214
214 215
215 216
214 217
217 218
218 219
214 220
220 221
221 222
208 223
223 224
2 225
225 226
226 227
226 228
228 229
229 230
226 231
231 232
232 233
231 234
234 235
235 236
231 237
237 238
238 239
239 240
238 241
241 242
242 243
238 244
244 245
245 246
244 247
247 248
248 249
237 250
250 251
237 252
252 253
2 254
254 255
255 256
256 257
255 258
258 259
259 260
258 261
261 262
262 263
261 264
264 265
265 266
2 267
267 268
268 269
269 270
268 271
271 272
272 273
271 274
274 275
275 276
274 277
277 278
278 279
277 280
280 281
281 282
280 283
283 284
284 285
280 286
286 287
287 288
2 289
289 290
290 291
291 292
290 293
293 294
294 295
293 296
296 297
297 298
296 299
299 300
300 301
299 302
302 303
303 304
299 305
305 306
306 307
293 308
308 309
2 310
310 311
311 312
311 313
313 314
314 315
311 316
316 317
317 318
316 319
319 320
320 321
316 322
322 323
323 324
324 325
323 326
326 327
327 328
323 329
329 330
330 331
329 332
332 333
333 334
322 335
335 336
322 337
337 338
2 339
339 340
340 341
341 342
340 343
343 344
344 345
343 346
346 347
347 348
346 349
349 350
350 351
2 352
352 353
353 354
354 355
353 356
356 357
357 358
356 359
359 360
360 361
359 362
362 363
363 364
362 365
365 366
366 367
365 368
368 369
369 370
365 371
371 372
372 373
2 374
374 375
375 376
376 377
375 378
378 379
379 380
378 381
381 382
382 383
381 384
384 385
385 386
384 387
387 388
388 389
384 390
390 391
391 392
378 393
393 394
2 395
395 396
396 397
396 398
398 399
399 400
396 401
401 402
402 403
401 404
404 405
405 406
401 407
407 408
408 409
409 410
408 411
411 412
412 413
408 414
414 415
415 416
414 417
417 418
418 419
407 420
420 421
407 422
422 423
2 424
424 425
425 426
426 427
425 428
428 429
429 430
428 431
431 432
432 433
431 434
434 435
435 436
2 437
437 438
438 439
439 440
438 441
441 442
442 443
441 444
444 445
445 446
444 447
447 448
448 449
447 450
450 451
451 452
450 453
453 454
454 455
450 456
456 457
457 458
2 459
459 460
460 461
461 462
460 463
463 464
464 465
463 466
466 467
467 468
466 469
469 470
470 471
469 472
472 473
473 474
469 475
475 476
476 477
463 478
478 479
2 480
480 481
481 482
482 483
481 484
484 485
485 486
484 487
487 488
488 489
487 490
490 491
491 492
490 493
493 494
494 495
493 496
496 497
497 498
493 499
499 500
500 501
2 502
502 503
503 504
504 505
503 506
506 507
507 508
506 509
509 510
510 511
509 512
512 513
513 514
512 515
515 516
516 517
512 518
518 519
519 520
506 521
521 522
2 523
523 524
524 525
524 526
526 527
527 528
524 529
529 530
530 531
529 532
532 533
533 534
529 535
535 536
536 537
537 538
536 539
539 540
540 541
536 542
542 543
543 544
542 545
545 546
546 547
535 548
548 549
535 550
550 551
2 552
552 553
553 554
554 555
553 556
556 557
557 558
556 559
559 560
560 561
559 562
562 563
563 564
2 565
565 566
566 567
567 568
566 569
569 570
570 571
569 572
572 573
573 574
572 575
575 576
576 577
575 578
578 579
579 580
578 581
581 582
582 583
578 584
584 585
585 586
2 587
587 588
588 589
589 590
588 591
591 592
592 593
591 594
594 595
595 596
594 597
597 598
598 599
597 600
600 601
601 602
597 603
603 604
604 605
591 606
606 607
2 608
608 609
609 610
610 611
609 612
612 613
613 614
612 615
615 616
616 617
615 618
618 619
619 620
618 621
621 622
622 623
621 624
624 625
625 626
621 627
627 628
628 629
2 630
630 631
631 632
632 633
631 634
634 635
635 636
634 637
637 638
638 639
637 640
640 641
641 642
640 643
643 644
644 645
640 646
646 647
647 648
634 649
649 650
2 651
651 652
652 653
652 654
654 655
655 656
652 657
657 658
658 659
657 660
660 661
661 662
657 663
663 664
664 665
665 666
664 667
667 668
668 669
664 670
670 671
671 672
670 673
673 674
674 675
663 676
676 677
663 678
678 679
2 680
680 681
681 682
682 683
681 684
684 685
685 686
684 687
687 688
688 689
687 690
690 691
691 692
2 693
693 694
694 695
695 696
694 697
697 698
698 699
697 700
700 701
701 702
700 703
703 704
704 705
703 706
706 707
707 708
706 709
709 710
710 711
706 712
712 713
713 714
2 715
715 716
716 717
717 718
716 719
719 720
720 721
719 722
722 723
723 724
722 725
725 726
726 727
725 728
728 729
729 730
725 731
731 732
732 733
719 734
734 735
2 736
736 737
737 738
737 739
739 740
740 741
737 742
742 743
743 744
742 745
745 746
746 747
742 748
748 749
749 750
750 751
749 752
752 753
753 754
749 755
755 756
756 757
755 758
758 759
759 760
748 761
761 762
748 763
763 764
2 765
765 766
766 767
767 768
766 769
769 770
770 771
769 772
772 773
773 774
772 775
775 776
776 777
2 778
778 779
779 780
780 781
779 782
782 783
783 784
782 785
785 786
786 787
785 788
788 789
789 790
788 791
791 792
792 793
791 794
794 795
795 796
791 797
797 798
798 799
2 800
800 801
801 802
802 803
801 804
804 805
805 806
804 807
807 808
808 809
807 810
810 811
811 812
810 813
813 814
814 815
810 816
816 817
817 818
804 819
819 820
2 821
821 822
822 823
822 824
824 825
825 826
822 827
827 828
828 829
827 830
830 831
831 832
827 833
833 834
834 835
835 836
834 837
837 838
838 839
834 840
840 841
841 842
840 843
843 844
844 845
833 846
846 847
833 848
848 849
2 850
850 851
851 852
852 853
851 854
854 855
855 856
854 857
857 858
858 859
857 860
860 861
861 862
2 863
863 864
864 865
865 866
864 867
867 868
868 869
867 870
870 871
871 872
870 873
873 874
874 875
873 876
876 877
877 878
876 879
879 880
880 881
876 882
882 883
883 884
2 885
885 886
886 887
887 888
886 889
889 890
890 891
889 892
892 893
893 894
892 895
895 896
896 897
895 898
898 899
899 900
895 901
901 902
902 903
889 904
904 905
2 906
906 907
907 908
908 909
907 910
910 911
911 912
910 913
913 914
914 915
913 916
916 917
917 918
916 919
919 920
920 921
919 922
922 923
923 924
919 925
925 926
926 927
2 928
928 929
929 930
930 931
929 932
932 933
933 934
932 935
935 936
936 937
935 938
938 939
939 940
938 941
941 942
942 943
938 944
944 945
945 946
932 947
947 948
2 949
949 950
950 951
950 952
952 953
953 954
950 955
955 956
956 957
955 958
958 959
959 960
955 961
961 962
962 963
963 964
962 965
965 966
966 967
962 968
968 969
969 970
968 971
971 972
972 973
961 974
974 975
961 976
976 977
2 978
978 979
979 980
980 981
979 982
982 983
983 984
982 985
985 986
986 987
985 988
988 989
989 990
2 991
991 992
992 993
993 994
992 995
995 996
996 997
995 998
998 999
999 1000
998 1001
1001 1002
1002 1003
1001 1004
1004 1005
1005 1006
1004 1007
1007 1008
1008 1009
1004 1010
1010 1011
1011 1012
2 1013
1013 1014
1014 1015
1015 1016
1014 1017
1017 1018
1018 1019
1017 1020
1020 1021
1021 1022
1020 1023
1023 1024
1024 1025
1023 1026
1026 1027
1027 1028
1023 1029
1029 1030
1030 1031
1017 1032
1032 1033
2 1034
1034 1035
1035 1036
1036 1037
1035 1038
1038 1039
1039 1040
1038 1041
1041 1042
1042 1043
1041 1044
1044 1045
1045 1046
1044 1047
1047 1048
1048 1049
1047 1050
1050 1051
1051 1052
1047 1053
1053 1054
1054 1055
2 1056
1056 1057
1057 1058
1058 1059
1057 1060
1060 1061
1061 1062
1060 1063
1063 1064
1064 1065
1063 1066
1066 1067
1067 1068
1066 1069
1069 1070
1070 1071
1066 1072
1072 1073
1073 1074
1060 1075
1075 1076
2 1077
1077 1078
1078 1079
1079 1080
1078 1081
1081 1082
1082 1083
1081 1084
1084 1085
1085 1086
1084 1087
1087 1088
1088 1089
1087 1090
1090 1091
1091 1092
1090 1093
1093 1094
1094 1095
1090 1096
1096 1097
1097 1098
2 1099
1099 1100
1100 1101
1101 1102
1100 1103
1103 1104
1104 1105
1103 1106
1106 1107
1107 1108
1106 1109
1109 1110
1110 1111
1109 1112
1112 1113
1113 1114
1109 1115
1115 1116
1116 1117
1103 1118
1118 1119
2 1120
1120 1121
1121 1122
1122 1123
1121 1124
1124 1125
1125 1126
1121 1127
1127 1128
1128 1129
1129 1130
1127 1131
1131 1132
1132 1133
0 1134
0 1135
1135 1136
0 1137
1137 1138
1138 1139
1139 1140

this is basically the WFST test ported to KeywordAnalyzer. so it acts the same
