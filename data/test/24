1277
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='createMock'
10 arguments
11 argument (ClassExpr)
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='IDeviceListener'
15 name (SimpleName)
16 identifier='mockListener'
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='IDeviceListener'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='anyTimes'
24 scope (MethodCallExpr)
25 name (SimpleName)
26 identifier='andReturn'
27 scope (MethodCallExpr)
28 name (SimpleName)
29 identifier='expect'
30 arguments
31 argument (MethodCallExpr)
32 name (SimpleName)
33 identifier='getName'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='mockListener'
37 arguments
38 argument (StringLiteralExpr)
39 value='mockListener'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='atLeastOnce'
44 scope (MethodCallExpr)
45 name (SimpleName)
46 identifier='andReturn'
47 scope (MethodCallExpr)
48 name (SimpleName)
49 identifier='expect'
50 arguments
51 argument (MethodCallExpr)
52 name (SimpleName)
53 identifier='isCallbackOrderingPostreq'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='mockListener'
57 arguments
58 argument (CastExpr)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='anyObject'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='String'
65 argument (CastExpr)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='anyObject'
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='String'
72 arguments
73 argument (BooleanLiteralExpr)
74 value='false'
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='atLeastOnce'
79 scope (MethodCallExpr)
80 name (SimpleName)
81 identifier='andReturn'
82 scope (MethodCallExpr)
83 name (SimpleName)
84 identifier='expect'
85 arguments
86 argument (MethodCallExpr)
87 name (SimpleName)
88 identifier='isCallbackOrderingPrereq'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='mockListener'
92 arguments
93 argument (CastExpr)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='anyObject'
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='String'
100 argument (CastExpr)
101 expression (MethodCallExpr)
102 name (SimpleName)
103 identifier='anyObject'
104 type (ClassOrInterfaceType)
105 name (SimpleName)
106 identifier='String'
107 arguments
108 argument (BooleanLiteralExpr)
109 value='false'
110 statement (ExpressionStmt)
111 expression (VariableDeclarationExpr)
112 variables
113 variable (VariableDeclarator)
114 initializer (MethodCallExpr)
115 name (SimpleName)
116 identifier='createMock'
117 arguments
118 argument (ClassExpr)
119 type (ClassOrInterfaceType)
120 name (SimpleName)
121 identifier='ITopologyService'
122 name (SimpleName)
123 identifier='mockTopology'
124 type (ClassOrInterfaceType)
125 name (SimpleName)
126 identifier='ITopologyService'
127 statement (ExpressionStmt)
128 expression (MethodCallExpr)
129 name (SimpleName)
130 identifier='anyTimes'
131 scope (MethodCallExpr)
132 name (SimpleName)
133 identifier='andReturn'
134 scope (MethodCallExpr)
135 name (SimpleName)
136 identifier='expect'
137 arguments
138 argument (MethodCallExpr)
139 name (SimpleName)
140 identifier='isAttachmentPointPort'
141 scope (NameExpr)
142 name (SimpleName)
143 identifier='mockTopology'
144 arguments
145 argument (MethodCallExpr)
146 name (SimpleName)
147 identifier='of'
148 scope (NameExpr)
149 name (SimpleName)
150 identifier='DatapathId'
151 arguments
152 argument (MethodCallExpr)
153 name (SimpleName)
154 identifier='anyLong'
155 argument (MethodCallExpr)
156 name (SimpleName)
157 identifier='of'
158 scope (NameExpr)
159 name (SimpleName)
160 identifier='OFPort'
161 arguments
162 argument (MethodCallExpr)
163 name (SimpleName)
164 identifier='anyShort'
165 arguments
166 argument (BooleanLiteralExpr)
167 value='true'
168 statement (ExpressionStmt)
169 expression (MethodCallExpr)
170 name (SimpleName)
171 identifier='anyTimes'
172 scope (MethodCallExpr)
173 name (SimpleName)
174 identifier='andReturn'
175 scope (MethodCallExpr)
176 name (SimpleName)
177 identifier='expect'
178 arguments
179 argument (MethodCallExpr)
180 name (SimpleName)
181 identifier='isBroadcastDomainPort'
182 scope (NameExpr)
183 name (SimpleName)
184 identifier='mockTopology'
185 arguments
186 argument (MethodCallExpr)
187 name (SimpleName)
188 identifier='of'
189 scope (NameExpr)
190 name (SimpleName)
191 identifier='DatapathId'
192 arguments
193 argument (LongLiteralExpr)
194 value='1L'
195 argument (MethodCallExpr)
196 name (SimpleName)
197 identifier='of'
198 scope (NameExpr)
199 name (SimpleName)
200 identifier='OFPort'
201 arguments
202 argument (IntegerLiteralExpr)
203 value='1'
204 arguments
205 argument (BooleanLiteralExpr)
206 value='false'
207 statement (ExpressionStmt)
208 expression (MethodCallExpr)
209 name (SimpleName)
210 identifier='anyTimes'
211 scope (MethodCallExpr)
212 name (SimpleName)
213 identifier='andReturn'
214 scope (MethodCallExpr)
215 name (SimpleName)
216 identifier='expect'
217 arguments
218 argument (MethodCallExpr)
219 name (SimpleName)
220 identifier='isBroadcastDomainPort'
221 scope (NameExpr)
222 name (SimpleName)
223 identifier='mockTopology'
224 arguments
225 argument (MethodCallExpr)
226 name (SimpleName)
227 identifier='of'
228 scope (NameExpr)
229 name (SimpleName)
230 identifier='DatapathId'
231 arguments
232 argument (LongLiteralExpr)
233 value='5L'
234 argument (MethodCallExpr)
235 name (SimpleName)
236 identifier='of'
237 scope (NameExpr)
238 name (SimpleName)
239 identifier='OFPort'
240 arguments
241 argument (IntegerLiteralExpr)
242 value='1'
243 arguments
244 argument (BooleanLiteralExpr)
245 value='false'
246 statement (ExpressionStmt)
247 expression (MethodCallExpr)
248 name (SimpleName)
249 identifier='anyTimes'
250 scope (MethodCallExpr)
251 name (SimpleName)
252 identifier='andReturn'
253 scope (MethodCallExpr)
254 name (SimpleName)
255 identifier='expect'
256 arguments
257 argument (MethodCallExpr)
258 name (SimpleName)
259 identifier='getL2DomainId'
260 scope (NameExpr)
261 name (SimpleName)
262 identifier='mockTopology'
263 arguments
264 argument (MethodCallExpr)
265 name (SimpleName)
266 identifier='of'
267 scope (NameExpr)
268 name (SimpleName)
269 identifier='DatapathId'
270 arguments
271 argument (LongLiteralExpr)
272 value='1L'
273 arguments
274 argument (MethodCallExpr)
275 name (SimpleName)
276 identifier='of'
277 scope (NameExpr)
278 name (SimpleName)
279 identifier='DatapathId'
280 arguments
281 argument (LongLiteralExpr)
282 value='1L'
283 statement (ExpressionStmt)
284 expression (MethodCallExpr)
285 name (SimpleName)
286 identifier='anyTimes'
287 scope (MethodCallExpr)
288 name (SimpleName)
289 identifier='andReturn'
290 scope (MethodCallExpr)
291 name (SimpleName)
292 identifier='expect'
293 arguments
294 argument (MethodCallExpr)
295 name (SimpleName)
296 identifier='getL2DomainId'
297 scope (NameExpr)
298 name (SimpleName)
299 identifier='mockTopology'
300 arguments
301 argument (MethodCallExpr)
302 name (SimpleName)
303 identifier='of'
304 scope (NameExpr)
305 name (SimpleName)
306 identifier='DatapathId'
307 arguments
308 argument (LongLiteralExpr)
309 value='5L'
310 arguments
311 argument (MethodCallExpr)
312 name (SimpleName)
313 identifier='of'
314 scope (NameExpr)
315 name (SimpleName)
316 identifier='DatapathId'
317 arguments
318 argument (LongLiteralExpr)
319 value='5L'
320 statement (ExpressionStmt)
321 expression (MethodCallExpr)
322 name (SimpleName)
323 identifier='anyTimes'
324 scope (MethodCallExpr)
325 name (SimpleName)
326 identifier='andReturn'
327 scope (MethodCallExpr)
328 name (SimpleName)
329 identifier='expect'
330 arguments
331 argument (MethodCallExpr)
332 name (SimpleName)
333 identifier='isConsistent'
334 scope (NameExpr)
335 name (SimpleName)
336 identifier='mockTopology'
337 arguments
338 argument (MethodCallExpr)
339 name (SimpleName)
340 identifier='of'
341 scope (NameExpr)
342 name (SimpleName)
343 identifier='DatapathId'
344 arguments
345 argument (LongLiteralExpr)
346 value='1L'
347 argument (MethodCallExpr)
348 name (SimpleName)
349 identifier='of'
350 scope (NameExpr)
351 name (SimpleName)
352 identifier='OFPort'
353 arguments
354 argument (IntegerLiteralExpr)
355 value='1'
356 argument (MethodCallExpr)
357 name (SimpleName)
358 identifier='of'
359 scope (NameExpr)
360 name (SimpleName)
361 identifier='DatapathId'
362 arguments
363 argument (LongLiteralExpr)
364 value='5L'
365 argument (MethodCallExpr)
366 name (SimpleName)
367 identifier='of'
368 scope (NameExpr)
369 name (SimpleName)
370 identifier='OFPort'
371 arguments
372 argument (IntegerLiteralExpr)
373 value='1'
374 arguments
375 argument (BooleanLiteralExpr)
376 value='false'
377 statement (ExpressionStmt)
378 expression (VariableDeclarationExpr)
379 variables
380 variable (VariableDeclarator)
381 initializer (ObjectCreationExpr)
382 type (ClassOrInterfaceType)
383 name (SimpleName)
384 identifier='Date'
385 name (SimpleName)
386 identifier='topologyUpdateTime'
387 type (ClassOrInterfaceType)
388 name (SimpleName)
389 identifier='Date'
390 statement (ExpressionStmt)
391 expression (MethodCallExpr)
392 name (SimpleName)
393 identifier='anyTimes'
394 scope (MethodCallExpr)
395 name (SimpleName)
396 identifier='andReturn'
397 scope (MethodCallExpr)
398 name (SimpleName)
399 identifier='expect'
400 arguments
401 argument (MethodCallExpr)
402 name (SimpleName)
403 identifier='getLastUpdateTime'
404 scope (NameExpr)
405 name (SimpleName)
406 identifier='mockTopology'
407 arguments
408 argument (NameExpr)
409 name (SimpleName)
410 identifier='topologyUpdateTime'
411 statement (ExpressionStmt)
412 expression (MethodCallExpr)
413 name (SimpleName)
414 identifier='replay'
415 arguments
416 argument (NameExpr)
417 name (SimpleName)
418 identifier='mockTopology'
419 statement (ExpressionStmt)
420 expression (AssignExpr)
421 operator='ASSIGN'
422 target (FieldAccessExpr)
423 name (SimpleName)
424 identifier='topology'
425 scope (NameExpr)
426 name (SimpleName)
427 identifier='deviceManager'
428 value (NameExpr)
429 name (SimpleName)
430 identifier='mockTopology'
431 statement (ExpressionStmt)
432 expression (VariableDeclarationExpr)
433 variables
434 variable (VariableDeclarator)
435 initializer (MethodCallExpr)
436 name (SimpleName)
437 identifier='getInstance'
438 scope (NameExpr)
439 name (SimpleName)
440 identifier='Calendar'
441 name (SimpleName)
442 identifier='c'
443 type (ClassOrInterfaceType)
444 name (SimpleName)
445 identifier='Calendar'
446 statement (ExpressionStmt)
447 expression (VariableDeclarationExpr)
448 variables
449 variable (VariableDeclarator)
450 initializer (ObjectCreationExpr)
451 type (ClassOrInterfaceType)
452 name (SimpleName)
453 identifier='Entity'
454 arguments
455 argument (MethodCallExpr)
456 name (SimpleName)
457 identifier='of'
458 scope (NameExpr)
459 name (SimpleName)
460 identifier='MacAddress'
461 arguments
462 argument (LongLiteralExpr)
463 value='1L'
464 argument (NullLiteralExpr)
465 argument (MethodCallExpr)
466 name (SimpleName)
467 identifier='of'
468 scope (NameExpr)
469 name (SimpleName)
470 identifier='IPv4Address'
471 arguments
472 argument (IntegerLiteralExpr)
473 value='2'
474 argument (MethodCallExpr)
475 name (SimpleName)
476 identifier='of'
477 scope (NameExpr)
478 name (SimpleName)
479 identifier='DatapathId'
480 arguments
481 argument (LongLiteralExpr)
482 value='1L'
483 argument (MethodCallExpr)
484 name (SimpleName)
485 identifier='of'
486 scope (NameExpr)
487 name (SimpleName)
488 identifier='OFPort'
489 arguments
490 argument (IntegerLiteralExpr)
491 value='1'
492 argument (MethodCallExpr)
493 name (SimpleName)
494 identifier='getTime'
495 scope (NameExpr)
496 name (SimpleName)
497 identifier='c'
498 name (SimpleName)
499 identifier='entity1'
500 type (ClassOrInterfaceType)
501 name (SimpleName)
502 identifier='Entity'
503 statement (ExpressionStmt)
504 expression (MethodCallExpr)
505 name (SimpleName)
506 identifier='add'
507 scope (NameExpr)
508 name (SimpleName)
509 identifier='c'
510 arguments
511 argument (FieldAccessExpr)
512 name (SimpleName)
513 identifier='MILLISECOND'
514 scope (NameExpr)
515 name (SimpleName)
516 identifier='Calendar'
517 argument (BinaryExpr)
518 operator='MINUS'
519 left (UnaryExpr)
520 operator='MINUS'
521 expression (FieldAccessExpr)
522 name (SimpleName)
523 identifier='ENTITY_TIMEOUT'
524 scope (NameExpr)
525 name (SimpleName)
526 identifier='DeviceManagerImpl'
527 right (IntegerLiteralExpr)
528 value='1'
529 statement (ExpressionStmt)
530 expression (VariableDeclarationExpr)
531 variables
532 variable (VariableDeclarator)
533 initializer (ObjectCreationExpr)
534 type (ClassOrInterfaceType)
535 name (SimpleName)
536 identifier='Entity'
537 arguments
538 argument (MethodCallExpr)
539 name (SimpleName)
540 identifier='of'
541 scope (NameExpr)
542 name (SimpleName)
543 identifier='MacAddress'
544 arguments
545 argument (LongLiteralExpr)
546 value='1L'
547 argument (NullLiteralExpr)
548 argument (MethodCallExpr)
549 name (SimpleName)
550 identifier='of'
551 scope (NameExpr)
552 name (SimpleName)
553 identifier='IPv4Address'
554 arguments
555 argument (IntegerLiteralExpr)
556 value='1'
557 argument (MethodCallExpr)
558 name (SimpleName)
559 identifier='of'
560 scope (NameExpr)
561 name (SimpleName)
562 identifier='DatapathId'
563 arguments
564 argument (LongLiteralExpr)
565 value='5L'
566 argument (MethodCallExpr)
567 name (SimpleName)
568 identifier='of'
569 scope (NameExpr)
570 name (SimpleName)
571 identifier='OFPort'
572 arguments
573 argument (IntegerLiteralExpr)
574 value='1'
575 argument (MethodCallExpr)
576 name (SimpleName)
577 identifier='getTime'
578 scope (NameExpr)
579 name (SimpleName)
580 identifier='c'
581 name (SimpleName)
582 identifier='entity2'
583 type (ClassOrInterfaceType)
584 name (SimpleName)
585 identifier='Entity'
586 statement (ExpressionStmt)
587 expression (MethodCallExpr)
588 name (SimpleName)
589 identifier='learnDeviceByEntity'
590 scope (NameExpr)
591 name (SimpleName)
592 identifier='deviceManager'
593 arguments
594 argument (NameExpr)
595 name (SimpleName)
596 identifier='entity1'
597 statement (ExpressionStmt)
598 expression (VariableDeclarationExpr)
599 variables
600 variable (VariableDeclarator)
601 initializer (MethodCallExpr)
602 name (SimpleName)
603 identifier='learnDeviceByEntity'
604 scope (NameExpr)
605 name (SimpleName)
606 identifier='deviceManager'
607 arguments
608 argument (NameExpr)
609 name (SimpleName)
610 identifier='entity2'
611 name (SimpleName)
612 identifier='d'
613 type (ClassOrInterfaceType)
614 name (SimpleName)
615 identifier='IDevice'
616 statement (ExpressionStmt)
617 expression (MethodCallExpr)
618 name (SimpleName)
619 identifier='assertArrayEquals'
620 arguments
621 argument (ArrayCreationExpr)
622 elementType (ClassOrInterfaceType)
623 name (SimpleName)
624 identifier='IPv4Address'
625 initializer (ArrayInitializerExpr)
626 values
627 value (MethodCallExpr)
628 name (SimpleName)
629 identifier='of'
630 scope (NameExpr)
631 name (SimpleName)
632 identifier='IPv4Address'
633 arguments
634 argument (IntegerLiteralExpr)
635 value='1'
636 value (MethodCallExpr)
637 name (SimpleName)
638 identifier='of'
639 scope (NameExpr)
640 name (SimpleName)
641 identifier='IPv4Address'
642 arguments
643 argument (IntegerLiteralExpr)
644 value='2'
645 levels
646 level (ArrayCreationLevel)
647 argument (MethodCallExpr)
648 name (SimpleName)
649 identifier='getIPv4Addresses'
650 scope (NameExpr)
651 name (SimpleName)
652 identifier='d'
653 statement (ExpressionStmt)
654 expression (MethodCallExpr)
655 name (SimpleName)
656 identifier='assertArrayEquals'
657 arguments
658 argument (ArrayCreationExpr)
659 elementType (ClassOrInterfaceType)
660 name (SimpleName)
661 identifier='SwitchPort'
662 initializer (ArrayInitializerExpr)
663 values
664 value (ObjectCreationExpr)
665 type (ClassOrInterfaceType)
666 name (SimpleName)
667 identifier='SwitchPort'
668 arguments
669 argument (MethodCallExpr)
670 name (SimpleName)
671 identifier='of'
672 scope (NameExpr)
673 name (SimpleName)
674 identifier='DatapathId'
675 arguments
676 argument (LongLiteralExpr)
677 value='1L'
678 argument (MethodCallExpr)
679 name (SimpleName)
680 identifier='of'
681 scope (NameExpr)
682 name (SimpleName)
683 identifier='OFPort'
684 arguments
685 argument (IntegerLiteralExpr)
686 value='1'
687 value (ObjectCreationExpr)
688 type (ClassOrInterfaceType)
689 name (SimpleName)
690 identifier='SwitchPort'
691 arguments
692 argument (MethodCallExpr)
693 name (SimpleName)
694 identifier='of'
695 scope (NameExpr)
696 name (SimpleName)
697 identifier='DatapathId'
698 arguments
699 argument (LongLiteralExpr)
700 value='5L'
701 argument (MethodCallExpr)
702 name (SimpleName)
703 identifier='of'
704 scope (NameExpr)
705 name (SimpleName)
706 identifier='OFPort'
707 arguments
708 argument (IntegerLiteralExpr)
709 value='1'
710 levels
711 level (ArrayCreationLevel)
712 argument (MethodCallExpr)
713 name (SimpleName)
714 identifier='getAttachmentPoints'
715 scope (NameExpr)
716 name (SimpleName)
717 identifier='d'
718 statement (ExpressionStmt)
719 expression (VariableDeclarationExpr)
720 variables
721 variable (VariableDeclarator)
722 initializer (MethodCallExpr)
723 name (SimpleName)
724 identifier='queryClassDevices'
725 scope (NameExpr)
726 name (SimpleName)
727 identifier='deviceManager'
728 arguments
729 argument (MethodCallExpr)
730 name (SimpleName)
731 identifier='getEntityClass'
732 scope (NameExpr)
733 name (SimpleName)
734 identifier='d'
735 argument (NullLiteralExpr)
736 argument (NullLiteralExpr)
737 argument (MethodCallExpr)
738 name (SimpleName)
739 identifier='of'
740 scope (NameExpr)
741 name (SimpleName)
742 identifier='IPv4Address'
743 arguments
744 argument (IntegerLiteralExpr)
745 value='1'
746 argument (NullLiteralExpr)
747 argument (NullLiteralExpr)
748 name (SimpleName)
749 identifier='diter'
750 type (ClassOrInterfaceType)
751 name (SimpleName)
752 identifier='Iterator'
753 typeArguments
754 typeArgument (WildcardType)
755 extendedType (ClassOrInterfaceType)
756 name (SimpleName)
757 identifier='IDevice'
758 statement (ExpressionStmt)
759 expression (MethodCallExpr)
760 name (SimpleName)
761 identifier='assertTrue'
762 arguments
763 argument (MethodCallExpr)
764 name (SimpleName)
765 identifier='hasNext'
766 scope (NameExpr)
767 name (SimpleName)
768 identifier='diter'
769 statement (ExpressionStmt)
770 expression (MethodCallExpr)
771 name (SimpleName)
772 identifier='assertEquals'
773 arguments
774 argument (MethodCallExpr)
775 name (SimpleName)
776 identifier='getDeviceKey'
777 scope (NameExpr)
778 name (SimpleName)
779 identifier='d'
780 argument (MethodCallExpr)
781 name (SimpleName)
782 identifier='getDeviceKey'
783 scope (MethodCallExpr)
784 name (SimpleName)
785 identifier='next'
786 scope (NameExpr)
787 name (SimpleName)
788 identifier='diter'
789 statement (ExpressionStmt)
790 expression (AssignExpr)
791 operator='ASSIGN'
792 target (NameExpr)
793 name (SimpleName)
794 identifier='diter'
795 value (MethodCallExpr)
796 name (SimpleName)
797 identifier='queryClassDevices'
798 scope (NameExpr)
799 name (SimpleName)
800 identifier='deviceManager'
801 arguments
802 argument (MethodCallExpr)
803 name (SimpleName)
804 identifier='getEntityClass'
805 scope (NameExpr)
806 name (SimpleName)
807 identifier='d'
808 argument (NullLiteralExpr)
809 argument (NullLiteralExpr)
810 argument (MethodCallExpr)
811 name (SimpleName)
812 identifier='of'
813 scope (NameExpr)
814 name (SimpleName)
815 identifier='IPv4Address'
816 arguments
817 argument (IntegerLiteralExpr)
818 value='2'
819 argument (NullLiteralExpr)
820 argument (NullLiteralExpr)
821 statement (ExpressionStmt)
822 expression (MethodCallExpr)
823 name (SimpleName)
824 identifier='assertTrue'
825 arguments
826 argument (MethodCallExpr)
827 name (SimpleName)
828 identifier='hasNext'
829 scope (NameExpr)
830 name (SimpleName)
831 identifier='diter'
832 statement (ExpressionStmt)
833 expression (MethodCallExpr)
834 name (SimpleName)
835 identifier='assertEquals'
836 arguments
837 argument (MethodCallExpr)
838 name (SimpleName)
839 identifier='getDeviceKey'
840 scope (NameExpr)
841 name (SimpleName)
842 identifier='d'
843 argument (MethodCallExpr)
844 name (SimpleName)
845 identifier='getDeviceKey'
846 scope (MethodCallExpr)
847 name (SimpleName)
848 identifier='next'
849 scope (NameExpr)
850 name (SimpleName)
851 identifier='diter'
852 statement (ExpressionStmt)
853 expression (MethodCallExpr)
854 name (SimpleName)
855 identifier='replay'
856 arguments
857 argument (NameExpr)
858 name (SimpleName)
859 identifier='mockListener'
860 statement (ExpressionStmt)
861 expression (MethodCallExpr)
862 name (SimpleName)
863 identifier='addListener'
864 scope (NameExpr)
865 name (SimpleName)
866 identifier='deviceManager'
867 arguments
868 argument (NameExpr)
869 name (SimpleName)
870 identifier='mockListener'
871 statement (ExpressionStmt)
872 expression (MethodCallExpr)
873 name (SimpleName)
874 identifier='verify'
875 arguments
876 argument (NameExpr)
877 name (SimpleName)
878 identifier='mockListener'
879 statement (ExpressionStmt)
880 expression (MethodCallExpr)
881 name (SimpleName)
882 identifier='reset'
883 arguments
884 argument (NameExpr)
885 name (SimpleName)
886 identifier='mockListener'
887 statement (ExpressionStmt)
888 expression (MethodCallExpr)
889 name (SimpleName)
890 identifier='deviceIPV4AddrChanged'
891 scope (NameExpr)
892 name (SimpleName)
893 identifier='mockListener'
894 arguments
895 argument (MethodCallExpr)
896 name (SimpleName)
897 identifier='isA'
898 arguments
899 argument (ClassExpr)
900 type (ClassOrInterfaceType)
901 name (SimpleName)
902 identifier='IDevice'
903 statement (ExpressionStmt)
904 expression (MethodCallExpr)
905 name (SimpleName)
906 identifier='replay'
907 arguments
908 argument (NameExpr)
909 name (SimpleName)
910 identifier='mockListener'
911 statement (ExpressionStmt)
912 expression (MethodCallExpr)
913 name (SimpleName)
914 identifier='reschedule'
915 scope (FieldAccessExpr)
916 name (SimpleName)
917 identifier='entityCleanupTask'
918 scope (NameExpr)
919 name (SimpleName)
920 identifier='deviceManager'
921 arguments
922 argument (IntegerLiteralExpr)
923 value='0'
924 argument (NullLiteralExpr)
925 statement (ExpressionStmt)
926 expression (AssignExpr)
927 operator='ASSIGN'
928 target (NameExpr)
929 name (SimpleName)
930 identifier='d'
931 value (MethodCallExpr)
932 name (SimpleName)
933 identifier='getDevice'
934 scope (NameExpr)
935 name (SimpleName)
936 identifier='deviceManager'
937 arguments
938 argument (MethodCallExpr)
939 name (SimpleName)
940 identifier='getDeviceKey'
941 scope (NameExpr)
942 name (SimpleName)
943 identifier='d'
944 statement (ExpressionStmt)
945 expression (MethodCallExpr)
946 name (SimpleName)
947 identifier='assertArrayEquals'
948 arguments
949 argument (ArrayCreationExpr)
950 elementType (ClassOrInterfaceType)
951 name (SimpleName)
952 identifier='IPv4Address'
953 initializer (ArrayInitializerExpr)
954 values
955 value (MethodCallExpr)
956 name (SimpleName)
957 identifier='of'
958 scope (NameExpr)
959 name (SimpleName)
960 identifier='IPv4Address'
961 arguments
962 argument (IntegerLiteralExpr)
963 value='2'
964 levels
965 level (ArrayCreationLevel)
966 argument (MethodCallExpr)
967 name (SimpleName)
968 identifier='getIPv4Addresses'
969 scope (NameExpr)
970 name (SimpleName)
971 identifier='d'
972 statement (ExpressionStmt)
973 expression (MethodCallExpr)
974 name (SimpleName)
975 identifier='assertArrayEquals'
976 arguments
977 argument (ArrayCreationExpr)
978 elementType (ClassOrInterfaceType)
979 name (SimpleName)
980 identifier='SwitchPort'
981 initializer (ArrayInitializerExpr)
982 values
983 value (ObjectCreationExpr)
984 type (ClassOrInterfaceType)
985 name (SimpleName)
986 identifier='SwitchPort'
987 arguments
988 argument (MethodCallExpr)
989 name (SimpleName)
990 identifier='of'
991 scope (NameExpr)
992 name (SimpleName)
993 identifier='DatapathId'
994 arguments
995 argument (LongLiteralExpr)
996 value='1L'
997 argument (MethodCallExpr)
998 name (SimpleName)
999 identifier='of'
1000 scope (NameExpr)
1001 name (SimpleName)
1002 identifier='OFPort'
1003 arguments
1004 argument (IntegerLiteralExpr)
1005 value='1'
1006 value (ObjectCreationExpr)
1007 type (ClassOrInterfaceType)
1008 name (SimpleName)
1009 identifier='SwitchPort'
1010 arguments
1011 argument (MethodCallExpr)
1012 name (SimpleName)
1013 identifier='of'
1014 scope (NameExpr)
1015 name (SimpleName)
1016 identifier='DatapathId'
1017 arguments
1018 argument (LongLiteralExpr)
1019 value='5L'
1020 argument (MethodCallExpr)
1021 name (SimpleName)
1022 identifier='of'
1023 scope (NameExpr)
1024 name (SimpleName)
1025 identifier='OFPort'
1026 arguments
1027 argument (IntegerLiteralExpr)
1028 value='1'
1029 levels
1030 level (ArrayCreationLevel)
1031 argument (MethodCallExpr)
1032 name (SimpleName)
1033 identifier='getAttachmentPoints'
1034 scope (NameExpr)
1035 name (SimpleName)
1036 identifier='d'
1037 statement (ExpressionStmt)
1038 expression (AssignExpr)
1039 operator='ASSIGN'
1040 target (NameExpr)
1041 name (SimpleName)
1042 identifier='diter'
1043 value (MethodCallExpr)
1044 name (SimpleName)
1045 identifier='queryClassDevices'
1046 scope (NameExpr)
1047 name (SimpleName)
1048 identifier='deviceManager'
1049 arguments
1050 argument (MethodCallExpr)
1051 name (SimpleName)
1052 identifier='getEntityClass'
1053 scope (NameExpr)
1054 name (SimpleName)
1055 identifier='d'
1056 argument (NullLiteralExpr)
1057 argument (NullLiteralExpr)
1058 argument (MethodCallExpr)
1059 name (SimpleName)
1060 identifier='of'
1061 scope (NameExpr)
1062 name (SimpleName)
1063 identifier='IPv4Address'
1064 arguments
1065 argument (IntegerLiteralExpr)
1066 value='2'
1067 argument (NullLiteralExpr)
1068 argument (NullLiteralExpr)
1069 statement (ExpressionStmt)
1070 expression (MethodCallExpr)
1071 name (SimpleName)
1072 identifier='assertTrue'
1073 arguments
1074 argument (MethodCallExpr)
1075 name (SimpleName)
1076 identifier='hasNext'
1077 scope (NameExpr)
1078 name (SimpleName)
1079 identifier='diter'
1080 statement (ExpressionStmt)
1081 expression (MethodCallExpr)
1082 name (SimpleName)
1083 identifier='assertEquals'
1084 arguments
1085 argument (MethodCallExpr)
1086 name (SimpleName)
1087 identifier='getDeviceKey'
1088 scope (NameExpr)
1089 name (SimpleName)
1090 identifier='d'
1091 argument (MethodCallExpr)
1092 name (SimpleName)
1093 identifier='getDeviceKey'
1094 scope (MethodCallExpr)
1095 name (SimpleName)
1096 identifier='next'
1097 scope (NameExpr)
1098 name (SimpleName)
1099 identifier='diter'
1100 statement (ExpressionStmt)
1101 expression (AssignExpr)
1102 operator='ASSIGN'
1103 target (NameExpr)
1104 name (SimpleName)
1105 identifier='diter'
1106 value (MethodCallExpr)
1107 name (SimpleName)
1108 identifier='queryClassDevices'
1109 scope (NameExpr)
1110 name (SimpleName)
1111 identifier='deviceManager'
1112 arguments
1113 argument (MethodCallExpr)
1114 name (SimpleName)
1115 identifier='getEntityClass'
1116 scope (NameExpr)
1117 name (SimpleName)
1118 identifier='d'
1119 argument (NullLiteralExpr)
1120 argument (NullLiteralExpr)
1121 argument (MethodCallExpr)
1122 name (SimpleName)
1123 identifier='of'
1124 scope (NameExpr)
1125 name (SimpleName)
1126 identifier='IPv4Address'
1127 arguments
1128 argument (IntegerLiteralExpr)
1129 value='1'
1130 argument (NullLiteralExpr)
1131 argument (NullLiteralExpr)
1132 statement (ExpressionStmt)
1133 expression (MethodCallExpr)
1134 name (SimpleName)
1135 identifier='assertFalse'
1136 arguments
1137 argument (MethodCallExpr)
1138 name (SimpleName)
1139 identifier='hasNext'
1140 scope (NameExpr)
1141 name (SimpleName)
1142 identifier='diter'
1143 statement (ExpressionStmt)
1144 expression (AssignExpr)
1145 operator='ASSIGN'
1146 target (NameExpr)
1147 name (SimpleName)
1148 identifier='d'
1149 value (MethodCallExpr)
1150 name (SimpleName)
1151 identifier='findDevice'
1152 scope (NameExpr)
1153 name (SimpleName)
1154 identifier='deviceManager'
1155 arguments
1156 argument (MethodCallExpr)
1157 name (SimpleName)
1158 identifier='of'
1159 scope (NameExpr)
1160 name (SimpleName)
1161 identifier='MacAddress'
1162 arguments
1163 argument (LongLiteralExpr)
1164 value='1L'
1165 argument (NullLiteralExpr)
1166 argument (NullLiteralExpr)
1167 argument (NullLiteralExpr)
1168 argument (NullLiteralExpr)
1169 statement (ExpressionStmt)
1170 expression (MethodCallExpr)
1171 name (SimpleName)
1172 identifier='assertArrayEquals'
1173 arguments
1174 argument (ArrayCreationExpr)
1175 elementType (ClassOrInterfaceType)
1176 name (SimpleName)
1177 identifier='IPv4Address'
1178 initializer (ArrayInitializerExpr)
1179 values
1180 value (MethodCallExpr)
1181 name (SimpleName)
1182 identifier='of'
1183 scope (NameExpr)
1184 name (SimpleName)
1185 identifier='IPv4Address'
1186 arguments
1187 argument (IntegerLiteralExpr)
1188 value='2'
1189 levels
1190 level (ArrayCreationLevel)
1191 argument (MethodCallExpr)
1192 name (SimpleName)
1193 identifier='getIPv4Addresses'
1194 scope (NameExpr)
1195 name (SimpleName)
1196 identifier='d'
1197 statement (ExpressionStmt)
1198 expression (MethodCallExpr)
1199 name (SimpleName)
1200 identifier='assertArrayEquals'
1201 arguments
1202 argument (ArrayCreationExpr)
1203 elementType (ClassOrInterfaceType)
1204 name (SimpleName)
1205 identifier='SwitchPort'
1206 initializer (ArrayInitializerExpr)
1207 values
1208 value (ObjectCreationExpr)
1209 type (ClassOrInterfaceType)
1210 name (SimpleName)
1211 identifier='SwitchPort'
1212 arguments
1213 argument (MethodCallExpr)
1214 name (SimpleName)
1215 identifier='of'
1216 scope (NameExpr)
1217 name (SimpleName)
1218 identifier='DatapathId'
1219 arguments
1220 argument (LongLiteralExpr)
1221 value='1L'
1222 argument (MethodCallExpr)
1223 name (SimpleName)
1224 identifier='of'
1225 scope (NameExpr)
1226 name (SimpleName)
1227 identifier='OFPort'
1228 arguments
1229 argument (IntegerLiteralExpr)
1230 value='1'
1231 value (ObjectCreationExpr)
1232 type (ClassOrInterfaceType)
1233 name (SimpleName)
1234 identifier='SwitchPort'
1235 arguments
1236 argument (MethodCallExpr)
1237 name (SimpleName)
1238 identifier='of'
1239 scope (NameExpr)
1240 name (SimpleName)
1241 identifier='DatapathId'
1242 arguments
1243 argument (LongLiteralExpr)
1244 value='5L'
1245 argument (MethodCallExpr)
1246 name (SimpleName)
1247 identifier='of'
1248 scope (NameExpr)
1249 name (SimpleName)
1250 identifier='OFPort'
1251 arguments
1252 argument (IntegerLiteralExpr)
1253 value='1'
1254 levels
1255 level (ArrayCreationLevel)
1256 argument (MethodCallExpr)
1257 name (SimpleName)
1258 identifier='getAttachmentPoints'
1259 scope (NameExpr)
1260 name (SimpleName)
1261 identifier='d'
1262 statement (ExpressionStmt)
1263 expression (MethodCallExpr)
1264 name (SimpleName)
1265 identifier='verify'
1266 arguments
1267 argument (NameExpr)
1268 name (SimpleName)
1269 identifier='mockListener'
1270 type (VoidType)
1271 name (SimpleName)
1272 identifier='doTestEntityExpiration'
1273 thrownExceptions
1274 thrownException (ClassOrInterfaceType)
1275 name (SimpleName)
1276 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
13 14
6 15
15 16
6 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32
32 33
31 34
34 35
35 36
24 37
37 38
38 39
2 40
40 41
41 42
42 43
41 44
44 45
45 46
44 47
47 48
48 49
47 50
50 51
51 52
52 53
51 54
54 55
55 56
51 57
57 58
58 59
59 60
60 61
58 62
62 63
63 64
57 65
65 66
66 67
67 68
65 69
69 70
70 71
44 72
72 73
73 74
2 75
75 76
76 77
77 78
76 79
79 80
80 81
79 82
82 83
83 84
82 85
85 86
86 87
87 88
86 89
89 90
90 91
86 92
92 93
93 94
94 95
95 96
93 97
97 98
98 99
92 100
100 101
101 102
102 103
100 104
104 105
105 106
79 107
107 108
108 109
2 110
110 111
111 112
112 113
113 114
114 115
115 116
114 117
117 118
118 119
119 120
120 121
113 122
122 123
113 124
124 125
125 126
2 127
127 128
128 129
129 130
128 131
131 132
132 133
131 134
134 135
135 136
134 137
137 138
138 139
139 140
138 141
141 142
142 143
138 144
144 145
145 146
146 147
145 148
148 149
149 150
145 151
151 152
152 153
153 154
144 155
155 156
156 157
155 158
158 159
159 160
155 161
161 162
162 163
163 164
131 165
165 166
166 167
2 168
168 169
169 170
170 171
169 172
172 173
173 174
172 175
175 176
176 177
175 178
178 179
179 180
180 181
179 182
182 183
183 184
179 185
185 186
186 187
187 188
186 189
189 190
190 191
186 192
192 193
193 194
185 195
195 196
196 197
195 198
198 199
199 200
195 201
201 202
202 203
172 204
204 205
205 206
2 207
207 208
208 209
209 210
208 211
211 212
212 213
211 214
214 215
215 216
214 217
217 218
218 219
219 220
218 221
221 222
222 223
218 224
224 225
225 226
226 227
225 228
228 229
229 230
225 231
231 232
232 233
224 234
234 235
235 236
234 237
237 238
238 239
234 240
240 241
241 242
211 243
243 244
244 245
2 246
246 247
247 248
248 249
247 250
250 251
251 252
250 253
253 254
254 255
253 256
256 257
257 258
258 259
257 260
260 261
261 262
257 263
263 264
264 265
265 266
264 267
267 268
268 269
264 270
270 271
271 272
250 273
273 274
274 275
275 276
274 277
277 278
278 279
274 280
280 281
281 282
2 283
283 284
284 285
285 286
284 287
287 288
288 289
287 290
290 291
291 292
290 293
293 294
294 295
295 296
294 297
297 298
298 299
294 300
300 301
301 302
302 303
301 304
304 305
305 306
301 307
307 308
308 309
287 310
310 311
311 312
312 313
311 314
314 315
315 316
311 317
317 318
318 319
2 320
320 321
321 322
322 323
321 324
324 325
325 326
324 327
327 328
328 329
327 330
330 331
331 332
332 333
331 334
334 335
335 336
331 337
337 338
338 339
339 340
338 341
341 342
342 343
338 344
344 345
345 346
337 347
347 348
348 349
347 350
350 351
351 352
347 353
353 354
354 355
337 356
356 357
357 358
356 359
359 360
360 361
356 362
362 363
363 364
337 365
365 366
366 367
365 368
368 369
369 370
365 371
371 372
372 373
324 374
374 375
375 376
2 377
377 378
378 379
379 380
380 381
381 382
382 383
383 384
380 385
385 386
380 387
387 388
388 389
2 390
390 391
391 392
392 393
391 394
394 395
395 396
394 397
397 398
398 399
397 400
400 401
401 402
402 403
401 404
404 405
405 406
394 407
407 408
408 409
409 410
2 411
411 412
412 413
413 414
412 415
415 416
416 417
417 418
2 419
419 420
420 421
420 422
422 423
423 424
422 425
425 426
426 427
420 428
428 429
429 430
2 431
431 432
432 433
433 434
434 435
435 436
436 437
435 438
438 439
439 440
434 441
441 442
434 443
443 444
444 445
2 446
446 447
447 448
448 449
449 450
450 451
451 452
452 453
450 454
454 455
455 456
456 457
455 458
458 459
459 460
455 461
461 462
462 463
454 464
454 465
465 466
466 467
465 468
468 469
469 470
465 471
471 472
472 473
454 474
474 475
475 476
474 477
477 478
478 479
474 480
480 481
481 482
454 483
483 484
484 485
483 486
486 487
487 488
483 489
489 490
490 491
454 492
492 493
493 494
492 495
495 496
496 497
449 498
498 499
449 500
500 501
501 502
2 503
503 504
504 505
505 506
504 507
507 508
508 509
504 510
510 511
511 512
512 513
511 514
514 515
515 516
510 517
517 518
517 519
519 520
519 521
521 522
522 523
521 524
524 525
525 526
517 527
527 528
2 529
529 530
530 531
531 532
532 533
533 534
534 535
535 536
533 537
537 538
538 539
539 540
538 541
541 542
542 543
538 544
544 545
545 546
537 547
537 548
548 549
549 550
548 551
551 552
552 553
548 554
554 555
555 556
537 557
557 558
558 559
557 560
560 561
561 562
557 563
563 564
564 565
537 566
566 567
567 568
566 569
569 570
570 571
566 572
572 573
573 574
537 575
575 576
576 577
575 578
578 579
579 580
532 581
581 582
532 583
583 584
584 585
2 586
586 587
587 588
588 589
587 590
590 591
591 592
587 593
593 594
594 595
595 596
2 597
597 598
598 599
599 600
600 601
601 602
602 603
601 604
604 605
605 606
601 607
607 608
608 609
609 610
600 611
611 612
600 613
613 614
614 615
2 616
616 617
617 618
618 619
617 620
620 621
621 622
622 623
623 624
621 625
625 626
626 627
627 628
628 629
627 630
630 631
631 632
627 633
633 634
634 635
626 636
636 637
637 638
636 639
639 640
640 641
636 642
642 643
643 644
621 645
645 646
620 647
647 648
648 649
647 650
650 651
651 652
2 653
653 654
654 655
655 656
654 657
657 658
658 659
659 660
660 661
658 662
662 663
663 664
664 665
665 666
666 667
664 668
668 669
669 670
670 671
669 672
672 673
673 674
669 675
675 676
676 677
668 678
678 679
679 680
678 681
681 682
682 683
678 684
684 685
685 686
663 687
687 688
688 689
689 690
687 691
691 692
692 693
693 694
692 695
695 696
696 697
692 698
698 699
699 700
691 701
701 702
702 703
701 704
704 705
705 706
701 707
707 708
708 709
658 710
710 711
657 712
712 713
713 714
712 715
715 716
716 717
2 718
718 719
719 720
720 721
721 722
722 723
723 724
722 725
725 726
726 727
722 728
728 729
729 730
730 731
729 732
732 733
733 734
728 735
728 736
728 737
737 738
738 739
737 740
740 741
741 742
737 743
743 744
744 745
728 746
728 747
721 748
748 749
721 750
750 751
751 752
750 753
753 754
754 755
755 756
756 757
2 758
758 759
759 760
760 761
759 762
762 763
763 764
764 765
763 766
766 767
767 768
2 769
769 770
770 771
771 772
770 773
773 774
774 775
775 776
774 777
777 778
778 779
773 780
780 781
781 782
780 783
783 784
784 785
783 786
786 787
787 788
2 789
789 790
790 791
790 792
792 793
793 794
790 795
795 796
796 797
795 798
798 799
799 800
795 801
801 802
802 803
803 804
802 805
805 806
806 807
801 808
801 809
801 810
810 811
811 812
810 813
813 814
814 815
810 816
816 817
817 818
801 819
801 820
2 821
821 822
822 823
823 824
822 825
825 826
826 827
827 828
826 829
829 830
830 831
2 832
832 833
833 834
834 835
833 836
836 837
837 838
838 839
837 840
840 841
841 842
836 843
843 844
844 845
843 846
846 847
847 848
846 849
849 850
850 851
2 852
852 853
853 854
854 855
853 856
856 857
857 858
858 859
2 860
860 861
861 862
862 863
861 864
864 865
865 866
861 867
867 868
868 869
869 870
2 871
871 872
872 873
873 874
872 875
875 876
876 877
877 878
2 879
879 880
880 881
881 882
880 883
883 884
884 885
885 886
2 887
887 888
888 889
889 890
888 891
891 892
892 893
888 894
894 895
895 896
896 897
895 898
898 899
899 900
900 901
901 902
2 903
903 904
904 905
905 906
904 907
907 908
908 909
909 910
2 911
911 912
912 913
913 914
912 915
915 916
916 917
915 918
918 919
919 920
912 921
921 922
922 923
921 924
2 925
925 926
926 927
926 928
928 929
929 930
926 931
931 932
932 933
931 934
934 935
935 936
931 937
937 938
938 939
939 940
938 941
941 942
942 943
2 944
944 945
945 946
946 947
945 948
948 949
949 950
950 951
951 952
949 953
953 954
954 955
955 956
956 957
955 958
958 959
959 960
955 961
961 962
962 963
949 964
964 965
948 966
966 967
967 968
966 969
969 970
970 971
2 972
972 973
973 974
974 975
973 976
976 977
977 978
978 979
979 980
977 981
981 982
982 983
983 984
984 985
985 986
983 987
987 988
988 989
989 990
988 991
991 992
992 993
988 994
994 995
995 996
987 997
997 998
998 999
997 1000
1000 1001
1001 1002
997 1003
1003 1004
1004 1005
982 1006
1006 1007
1007 1008
1008 1009
1006 1010
1010 1011
1011 1012
1012 1013
1011 1014
1014 1015
1015 1016
1011 1017
1017 1018
1018 1019
1010 1020
1020 1021
1021 1022
1020 1023
1023 1024
1024 1025
1020 1026
1026 1027
1027 1028
977 1029
1029 1030
976 1031
1031 1032
1032 1033
1031 1034
1034 1035
1035 1036
2 1037
1037 1038
1038 1039
1038 1040
1040 1041
1041 1042
1038 1043
1043 1044
1044 1045
1043 1046
1046 1047
1047 1048
1043 1049
1049 1050
1050 1051
1051 1052
1050 1053
1053 1054
1054 1055
1049 1056
1049 1057
1049 1058
1058 1059
1059 1060
1058 1061
1061 1062
1062 1063
1058 1064
1064 1065
1065 1066
1049 1067
1049 1068
2 1069
1069 1070
1070 1071
1071 1072
1070 1073
1073 1074
1074 1075
1075 1076
1074 1077
1077 1078
1078 1079
2 1080
1080 1081
1081 1082
1082 1083
1081 1084
1084 1085
1085 1086
1086 1087
1085 1088
1088 1089
1089 1090
1084 1091
1091 1092
1092 1093
1091 1094
1094 1095
1095 1096
1094 1097
1097 1098
1098 1099
2 1100
1100 1101
1101 1102
1101 1103
1103 1104
1104 1105
1101 1106
1106 1107
1107 1108
1106 1109
1109 1110
1110 1111
1106 1112
1112 1113
1113 1114
1114 1115
1113 1116
1116 1117
1117 1118
1112 1119
1112 1120
1112 1121
1121 1122
1122 1123
1121 1124
1124 1125
1125 1126
1121 1127
1127 1128
1128 1129
1112 1130
1112 1131
2 1132
1132 1133
1133 1134
1134 1135
1133 1136
1136 1137
1137 1138
1138 1139
1137 1140
1140 1141
1141 1142
2 1143
1143 1144
1144 1145
1144 1146
1146 1147
1147 1148
1144 1149
1149 1150
1150 1151
1149 1152
1152 1153
1153 1154
1149 1155
1155 1156
1156 1157
1157 1158
1156 1159
1159 1160
1160 1161
1156 1162
1162 1163
1163 1164
1155 1165
1155 1166
1155 1167
1155 1168
2 1169
1169 1170
1170 1171
1171 1172
1170 1173
1173 1174
1174 1175
1175 1176
1176 1177
1174 1178
1178 1179
1179 1180
1180 1181
1181 1182
1180 1183
1183 1184
1184 1185
1180 1186
1186 1187
1187 1188
1174 1189
1189 1190
1173 1191
1191 1192
1192 1193
1191 1194
1194 1195
1195 1196
2 1197
1197 1198
1198 1199
1199 1200
1198 1201
1201 1202
1202 1203
1203 1204
1204 1205
1202 1206
1206 1207
1207 1208
1208 1209
1209 1210
1210 1211
1208 1212
1212 1213
1213 1214
1214 1215
1213 1216
1216 1217
1217 1218
1213 1219
1219 1220
1220 1221
1212 1222
1222 1223
1223 1224
1222 1225
1225 1226
1226 1227
1222 1228
1228 1229
1229 1230
1207 1231
1231 1232
1232 1233
1233 1234
1231 1235
1235 1236
1236 1237
1237 1238
1236 1239
1239 1240
1240 1241
1236 1242
1242 1243
1243 1244
1235 1245
1245 1246
1246 1247
1245 1248
1248 1249
1249 1250
1245 1251
1251 1252
1252 1253
1202 1254
1254 1255
1201 1256
1256 1257
1257 1258
1256 1259
1259 1260
1260 1261
2 1262
1262 1263
1263 1264
1264 1265
1263 1266
1266 1267
1267 1268
1268 1269
0 1270
0 1271
1271 1272
0 1273
1273 1274
1274 1275
1275 1276

Note: Entity expiration does not result in device moved notification.
