486
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='get'
10 scope (MethodCallExpr)
11 name (SimpleName)
12 identifier='getTradelogDetail'
13 scope (MethodCallExpr)
14 name (SimpleName)
15 identifier='getData'
16 arguments
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='row'
20 name (SimpleName)
21 identifier='element'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='TradelogDetail'
25 statement (SwitchStmt)
26 selector (NameExpr)
27 name (SimpleName)
28 identifier='column'
29 entries
30 entrie (SwitchEntryStmt)
31 label (IntegerLiteralExpr)
32 value='1'
33 statements
34 statement (BlockStmt)
35 statements
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='setOpen'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='element'
43 arguments
44 argument (CastExpr)
45 expression (NameExpr)
46 name (SimpleName)
47 identifier='value'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='String'
51 statement (BreakStmt)
52 entrie (SwitchEntryStmt)
53 label (IntegerLiteralExpr)
54 value='2'
55 statements
56 statement (BlockStmt)
57 statements
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='setSymbol'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='element'
65 arguments
66 argument (CastExpr)
67 expression (NameExpr)
68 name (SimpleName)
69 identifier='value'
70 type (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='String'
73 statement (BreakStmt)
74 entrie (SwitchEntryStmt)
75 label (IntegerLiteralExpr)
76 value='3'
77 statements
78 statement (BlockStmt)
79 statements
80 statement (ExpressionStmt)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='setLongShort'
84 scope (NameExpr)
85 name (SimpleName)
86 identifier='element'
87 arguments
88 argument (MethodCallExpr)
89 name (SimpleName)
90 identifier='getCode'
91 scope (EnclosedExpr)
92 inner (CastExpr)
93 expression (NameExpr)
94 name (SimpleName)
95 identifier='value'
96 type (ClassOrInterfaceType)
97 name (SimpleName)
98 identifier='Side'
99 statement (BreakStmt)
100 entrie (SwitchEntryStmt)
101 label (IntegerLiteralExpr)
102 value='4'
103 statements
104 statement (BlockStmt)
105 statements
106 statement (ExpressionStmt)
107 expression (MethodCallExpr)
108 name (SimpleName)
109 identifier='setTier'
110 scope (NameExpr)
111 name (SimpleName)
112 identifier='element'
113 arguments
114 argument (MethodCallExpr)
115 name (SimpleName)
116 identifier='getCode'
117 scope (EnclosedExpr)
118 inner (CastExpr)
119 expression (NameExpr)
120 name (SimpleName)
121 identifier='value'
122 type (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='Tier'
125 statement (BreakStmt)
126 entrie (SwitchEntryStmt)
127 label (IntegerLiteralExpr)
128 value='5'
129 statements
130 statement (BlockStmt)
131 statements
132 statement (ExpressionStmt)
133 expression (MethodCallExpr)
134 name (SimpleName)
135 identifier='setMarketBias'
136 scope (NameExpr)
137 name (SimpleName)
138 identifier='element'
139 arguments
140 argument (MethodCallExpr)
141 name (SimpleName)
142 identifier='getCode'
143 scope (EnclosedExpr)
144 inner (CastExpr)
145 expression (NameExpr)
146 name (SimpleName)
147 identifier='value'
148 type (ClassOrInterfaceType)
149 name (SimpleName)
150 identifier='MarketBar'
151 statement (BreakStmt)
152 entrie (SwitchEntryStmt)
153 label (IntegerLiteralExpr)
154 value='6'
155 statements
156 statement (BlockStmt)
157 statements
158 statement (ExpressionStmt)
159 expression (MethodCallExpr)
160 name (SimpleName)
161 identifier='setMarketBar'
162 scope (NameExpr)
163 name (SimpleName)
164 identifier='element'
165 arguments
166 argument (MethodCallExpr)
167 name (SimpleName)
168 identifier='getCode'
169 scope (EnclosedExpr)
170 inner (CastExpr)
171 expression (NameExpr)
172 name (SimpleName)
173 identifier='value'
174 type (ClassOrInterfaceType)
175 name (SimpleName)
176 identifier='MarketBar'
177 statement (BreakStmt)
178 entrie (SwitchEntryStmt)
179 label (IntegerLiteralExpr)
180 value='7'
181 statements
182 statement (BlockStmt)
183 statements
184 statement (ExpressionStmt)
185 expression (MethodCallExpr)
186 name (SimpleName)
187 identifier='setName'
188 scope (NameExpr)
189 name (SimpleName)
190 identifier='element'
191 arguments
192 argument (CastExpr)
193 expression (NameExpr)
194 name (SimpleName)
195 identifier='value'
196 type (ClassOrInterfaceType)
197 name (SimpleName)
198 identifier='String'
199 statement (BreakStmt)
200 entrie (SwitchEntryStmt)
201 label (IntegerLiteralExpr)
202 value='8'
203 statements
204 statement (BlockStmt)
205 statements
206 statement (ExpressionStmt)
207 expression (MethodCallExpr)
208 name (SimpleName)
209 identifier='setStatus'
210 scope (NameExpr)
211 name (SimpleName)
212 identifier='element'
213 arguments
214 argument (MethodCallExpr)
215 name (SimpleName)
216 identifier='getCode'
217 scope (EnclosedExpr)
218 inner (CastExpr)
219 expression (NameExpr)
220 name (SimpleName)
221 identifier='value'
222 type (ClassOrInterfaceType)
223 name (SimpleName)
224 identifier='TradestrategyStatus'
225 statement (BreakStmt)
226 entrie (SwitchEntryStmt)
227 label (IntegerLiteralExpr)
228 value='9'
229 statements
230 statement (BlockStmt)
231 statements
232 statement (ExpressionStmt)
233 expression (MethodCallExpr)
234 name (SimpleName)
235 identifier='setSide'
236 scope (NameExpr)
237 name (SimpleName)
238 identifier='element'
239 arguments
240 argument (MethodCallExpr)
241 name (SimpleName)
242 identifier='getCode'
243 scope (EnclosedExpr)
244 inner (CastExpr)
245 expression (NameExpr)
246 name (SimpleName)
247 identifier='value'
248 type (ClassOrInterfaceType)
249 name (SimpleName)
250 identifier='Side'
251 statement (BreakStmt)
252 entrie (SwitchEntryStmt)
253 label (IntegerLiteralExpr)
254 value='10'
255 statements
256 statement (BlockStmt)
257 statements
258 statement (ExpressionStmt)
259 expression (MethodCallExpr)
260 name (SimpleName)
261 identifier='setAction'
262 scope (NameExpr)
263 name (SimpleName)
264 identifier='element'
265 arguments
266 argument (MethodCallExpr)
267 name (SimpleName)
268 identifier='getCode'
269 scope (EnclosedExpr)
270 inner (CastExpr)
271 expression (NameExpr)
272 name (SimpleName)
273 identifier='value'
274 type (ClassOrInterfaceType)
275 name (SimpleName)
276 identifier='Action'
277 statement (BreakStmt)
278 entrie (SwitchEntryStmt)
279 label (IntegerLiteralExpr)
280 value='11'
281 statements
282 statement (BlockStmt)
283 statements
284 statement (ExpressionStmt)
285 expression (MethodCallExpr)
286 name (SimpleName)
287 identifier='setStopPrice'
288 scope (NameExpr)
289 name (SimpleName)
290 identifier='element'
291 arguments
292 argument (MethodCallExpr)
293 name (SimpleName)
294 identifier='getBigDecimalValue'
295 scope (EnclosedExpr)
296 inner (CastExpr)
297 expression (NameExpr)
298 name (SimpleName)
299 identifier='value'
300 type (ClassOrInterfaceType)
301 name (SimpleName)
302 identifier='Money'
303 statement (BreakStmt)
304 entrie (SwitchEntryStmt)
305 label (IntegerLiteralExpr)
306 value='12'
307 statements
308 statement (BlockStmt)
309 statements
310 statement (ExpressionStmt)
311 expression (MethodCallExpr)
312 name (SimpleName)
313 identifier='setOrderStatus'
314 scope (NameExpr)
315 name (SimpleName)
316 identifier='element'
317 arguments
318 argument (MethodCallExpr)
319 name (SimpleName)
320 identifier='getCode'
321 scope (EnclosedExpr)
322 inner (CastExpr)
323 expression (NameExpr)
324 name (SimpleName)
325 identifier='value'
326 type (ClassOrInterfaceType)
327 name (SimpleName)
328 identifier='OrderStatus'
329 statement (BreakStmt)
330 entrie (SwitchEntryStmt)
331 label (IntegerLiteralExpr)
332 value='13'
333 statements
334 statement (BlockStmt)
335 statements
336 statement (ExpressionStmt)
337 expression (MethodCallExpr)
338 name (SimpleName)
339 identifier='setFilledDate'
340 scope (NameExpr)
341 name (SimpleName)
342 identifier='element'
343 arguments
344 argument (MethodCallExpr)
345 name (SimpleName)
346 identifier='getZonedDateTime'
347 scope (EnclosedExpr)
348 inner (CastExpr)
349 expression (NameExpr)
350 name (SimpleName)
351 identifier='value'
352 type (ClassOrInterfaceType)
353 name (SimpleName)
354 identifier='Date'
355 statement (BreakStmt)
356 entrie (SwitchEntryStmt)
357 label (IntegerLiteralExpr)
358 value='14'
359 statements
360 statement (BlockStmt)
361 statements
362 statement (ExpressionStmt)
363 expression (MethodCallExpr)
364 name (SimpleName)
365 identifier='setQuantity'
366 scope (NameExpr)
367 name (SimpleName)
368 identifier='element'
369 arguments
370 argument (MethodCallExpr)
371 name (SimpleName)
372 identifier='getIntegerValue'
373 scope (EnclosedExpr)
374 inner (CastExpr)
375 expression (NameExpr)
376 name (SimpleName)
377 identifier='value'
378 type (ClassOrInterfaceType)
379 name (SimpleName)
380 identifier='Quantity'
381 statement (BreakStmt)
382 entrie (SwitchEntryStmt)
383 label (IntegerLiteralExpr)
384 value='15'
385 statements
386 statement (BlockStmt)
387 statements
388 statement (ExpressionStmt)
389 expression (MethodCallExpr)
390 name (SimpleName)
391 identifier='setAverageFilledPrice'
392 scope (NameExpr)
393 name (SimpleName)
394 identifier='element'
395 arguments
396 argument (MethodCallExpr)
397 name (SimpleName)
398 identifier='getBigDecimalValue'
399 scope (EnclosedExpr)
400 inner (CastExpr)
401 expression (NameExpr)
402 name (SimpleName)
403 identifier='value'
404 type (ClassOrInterfaceType)
405 name (SimpleName)
406 identifier='Decimal'
407 statement (BreakStmt)
408 entrie (SwitchEntryStmt)
409 label (IntegerLiteralExpr)
410 value='16'
411 statements
412 statement (BlockStmt)
413 statements
414 statement (ExpressionStmt)
415 expression (MethodCallExpr)
416 name (SimpleName)
417 identifier='setCommission'
418 scope (NameExpr)
419 name (SimpleName)
420 identifier='element'
421 arguments
422 argument (MethodCallExpr)
423 name (SimpleName)
424 identifier='getBigDecimalValue'
425 scope (EnclosedExpr)
426 inner (CastExpr)
427 expression (NameExpr)
428 name (SimpleName)
429 identifier='value'
430 type (ClassOrInterfaceType)
431 name (SimpleName)
432 identifier='Money'
433 statement (BreakStmt)
434 entrie (SwitchEntryStmt)
435 label (IntegerLiteralExpr)
436 value='17'
437 statements
438 statement (BlockStmt)
439 statements
440 statement (ExpressionStmt)
441 expression (MethodCallExpr)
442 name (SimpleName)
443 identifier='setProfitLoss'
444 scope (NameExpr)
445 name (SimpleName)
446 identifier='element'
447 arguments
448 argument (MethodCallExpr)
449 name (SimpleName)
450 identifier='getBigDecimalValue'
451 scope (EnclosedExpr)
452 inner (CastExpr)
453 expression (NameExpr)
454 name (SimpleName)
455 identifier='value'
456 type (ClassOrInterfaceType)
457 name (SimpleName)
458 identifier='Money'
459 statement (BreakStmt)
460 entrie (SwitchEntryStmt)
461 statements
462 statement (BlockStmt)
463 type (VoidType)
464 name (SimpleName)
465 identifier='populateDAO'
466 parameters
467 parameter (Parameter)
468 isVarArgs='false'
469 name (SimpleName)
470 identifier='value'
471 type (ClassOrInterfaceType)
472 name (SimpleName)
473 identifier='Object'
474 parameter (Parameter)
475 isVarArgs='false'
476 name (SimpleName)
477 identifier='row'
478 type (PrimitiveType)
479 type='INT'
480 parameter (Parameter)
481 isVarArgs='false'
482 name (SimpleName)
483 identifier='column'
484 type (PrimitiveType)
485 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
7 16
16 17
17 18
18 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
25 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
36 37
37 38
38 39
37 40
40 41
41 42
37 43
43 44
44 45
45 46
46 47
44 48
48 49
49 50
35 51
29 52
52 53
53 54
52 55
55 56
56 57
57 58
58 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
68 69
66 70
70 71
71 72
57 73
29 74
74 75
75 76
74 77
77 78
78 79
79 80
80 81
81 82
82 83
81 84
84 85
85 86
81 87
87 88
88 89
89 90
88 91
91 92
92 93
93 94
94 95
92 96
96 97
97 98
79 99
29 100
100 101
101 102
100 103
103 104
104 105
105 106
106 107
107 108
108 109
107 110
110 111
111 112
107 113
113 114
114 115
115 116
114 117
117 118
118 119
119 120
120 121
118 122
122 123
123 124
105 125
29 126
126 127
127 128
126 129
129 130
130 131
131 132
132 133
133 134
134 135
133 136
136 137
137 138
133 139
139 140
140 141
141 142
140 143
143 144
144 145
145 146
146 147
144 148
148 149
149 150
131 151
29 152
152 153
153 154
152 155
155 156
156 157
157 158
158 159
159 160
160 161
159 162
162 163
163 164
159 165
165 166
166 167
167 168
166 169
169 170
170 171
171 172
172 173
170 174
174 175
175 176
157 177
29 178
178 179
179 180
178 181
181 182
182 183
183 184
184 185
185 186
186 187
185 188
188 189
189 190
185 191
191 192
192 193
193 194
194 195
192 196
196 197
197 198
183 199
29 200
200 201
201 202
200 203
203 204
204 205
205 206
206 207
207 208
208 209
207 210
210 211
211 212
207 213
213 214
214 215
215 216
214 217
217 218
218 219
219 220
220 221
218 222
222 223
223 224
205 225
29 226
226 227
227 228
226 229
229 230
230 231
231 232
232 233
233 234
234 235
233 236
236 237
237 238
233 239
239 240
240 241
241 242
240 243
243 244
244 245
245 246
246 247
244 248
248 249
249 250
231 251
29 252
252 253
253 254
252 255
255 256
256 257
257 258
258 259
259 260
260 261
259 262
262 263
263 264
259 265
265 266
266 267
267 268
266 269
269 270
270 271
271 272
272 273
270 274
274 275
275 276
257 277
29 278
278 279
279 280
278 281
281 282
282 283
283 284
284 285
285 286
286 287
285 288
288 289
289 290
285 291
291 292
292 293
293 294
292 295
295 296
296 297
297 298
298 299
296 300
300 301
301 302
283 303
29 304
304 305
305 306
304 307
307 308
308 309
309 310
310 311
311 312
312 313
311 314
314 315
315 316
311 317
317 318
318 319
319 320
318 321
321 322
322 323
323 324
324 325
322 326
326 327
327 328
309 329
29 330
330 331
331 332
330 333
333 334
334 335
335 336
336 337
337 338
338 339
337 340
340 341
341 342
337 343
343 344
344 345
345 346
344 347
347 348
348 349
349 350
350 351
348 352
352 353
353 354
335 355
29 356
356 357
357 358
356 359
359 360
360 361
361 362
362 363
363 364
364 365
363 366
366 367
367 368
363 369
369 370
370 371
371 372
370 373
373 374
374 375
375 376
376 377
374 378
378 379
379 380
361 381
29 382
382 383
383 384
382 385
385 386
386 387
387 388
388 389
389 390
390 391
389 392
392 393
393 394
389 395
395 396
396 397
397 398
396 399
399 400
400 401
401 402
402 403
400 404
404 405
405 406
387 407
29 408
408 409
409 410
408 411
411 412
412 413
413 414
414 415
415 416
416 417
415 418
418 419
419 420
415 421
421 422
422 423
423 424
422 425
425 426
426 427
427 428
428 429
426 430
430 431
431 432
413 433
29 434
434 435
435 436
434 437
437 438
438 439
439 440
440 441
441 442
442 443
441 444
444 445
445 446
441 447
447 448
448 449
449 450
448 451
451 452
452 453
453 454
454 455
452 456
456 457
457 458
439 459
29 460
460 461
461 462
0 463
0 464
464 465
0 466
466 467
467 468
467 469
469 470
467 471
471 472
472 473
466 474
474 475
474 476
476 477
474 478
478 479
466 480
480 481
480 482
482 483
480 484
484 485

getData() -
