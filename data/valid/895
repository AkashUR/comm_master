103
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getStream'
10 scope (ThisExpr)
11 arguments
12 argument (FieldAccessExpr)
13 name (SimpleName)
14 identifier='two_statements'
15 scope (FieldAccessExpr)
16 name (SimpleName)
17 identifier='raw'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='R'
21 name (SimpleName)
22 identifier='stream'
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='InputStream'
26 statement (ExpressionStmt)
27 expression (VariableDeclarationExpr)
28 variables
29 variable (VariableDeclarator)
30 initializer (MethodCallExpr)
31 name (SimpleName)
32 identifier='parse'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='SqlParser'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='stream'
40 name (SimpleName)
41 identifier='commands'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='List'
45 typeArguments
46 typeArgument (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='String'
49 statement (ExpressionStmt)
50 expression (MethodCallExpr)
51 name (SimpleName)
52 identifier='assertEquals'
53 arguments
54 argument (IntegerLiteralExpr)
55 value='2'
56 argument (MethodCallExpr)
57 name (SimpleName)
58 identifier='size'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='commands'
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='assertEquals'
66 arguments
67 argument (NameExpr)
68 name (SimpleName)
69 identifier='sql1'
70 argument (MethodCallExpr)
71 name (SimpleName)
72 identifier='get'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='commands'
76 arguments
77 argument (IntegerLiteralExpr)
78 value='0'
79 statement (ExpressionStmt)
80 expression (MethodCallExpr)
81 name (SimpleName)
82 identifier='assertEquals'
83 arguments
84 argument (NameExpr)
85 name (SimpleName)
86 identifier='sql2'
87 argument (MethodCallExpr)
88 name (SimpleName)
89 identifier='get'
90 scope (NameExpr)
91 name (SimpleName)
92 identifier='commands'
93 arguments
94 argument (IntegerLiteralExpr)
95 value='1'
96 type (VoidType)
97 name (SimpleName)
98 identifier='testTwoStatements'
99 thrownExceptions
100 thrownException (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
7 11
11 12
12 13
13 14
12 15
15 16
16 17
15 18
18 19
19 20
6 21
21 22
6 23
23 24
24 25
2 26
26 27
27 28
28 29
29 30
30 31
31 32
30 33
33 34
34 35
30 36
36 37
37 38
38 39
29 40
40 41
29 42
42 43
43 44
42 45
45 46
46 47
47 48
2 49
49 50
50 51
51 52
50 53
53 54
54 55
53 56
56 57
57 58
56 59
59 60
60 61
2 62
62 63
63 64
64 65
63 66
66 67
67 68
68 69
66 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
2 79
79 80
80 81
81 82
80 83
83 84
84 85
85 86
83 87
87 88
88 89
87 90
90 91
91 92
87 93
93 94
94 95
0 96
0 97
97 98
0 99
99 100
100 101
101 102

Should be able to parse a script with two multi-line statments, even if the last statement is not terminated by a semicolon.
