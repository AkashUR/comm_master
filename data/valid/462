52
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='include'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='getTemplateForInclusion'
11 arguments
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='name'
15 argument (NameExpr)
16 name (SimpleName)
17 identifier='encoding'
18 argument (NameExpr)
19 name (SimpleName)
20 identifier='parse'
21 type (VoidType)
22 name (SimpleName)
23 identifier='include'
24 parameters
25 parameter (Parameter)
26 isVarArgs='false'
27 name (SimpleName)
28 identifier='name'
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='String'
32 parameter (Parameter)
33 isVarArgs='false'
34 name (SimpleName)
35 identifier='encoding'
36 type (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='String'
39 parameter (Parameter)
40 isVarArgs='false'
41 name (SimpleName)
42 identifier='parse'
43 type (PrimitiveType)
44 type='BOOLEAN'
45 thrownExceptions
46 thrownException (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='IOException'
49 thrownException (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='TemplateException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
13 14
11 15
15 16
16 17
11 18
18 19
19 20
0 21
0 22
22 23
0 24
24 25
25 26
25 27
27 28
25 29
29 30
30 31
24 32
32 33
32 34
34 35
32 36
36 37
37 38
24 39
39 40
39 41
41 42
39 43
43 44
0 45
45 46
46 47
47 48
45 49
49 50
50 51

Emulates <code>include</code> directive, except that <code>name</code> must be tempate root relative. <p> It's the same as <code>include(getTemplateForInclusion(name, encoding, parse))</code>. But, you may want to separately call these two methods, so you can determine the source of exceptions more precisely, and thus achieve more intelligent error handling.
