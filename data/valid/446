74
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='createSPIncrement'
7 arguments
8 argument (UnaryExpr)
9 operator='MINUS'
10 expression (EnclosedExpr)
11 inner (BinaryExpr)
12 operator='DIVIDE'
13 left (MethodCallExpr)
14 name (SimpleName)
15 identifier='getBitWidth'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='value'
19 right (IntegerLiteralExpr)
20 value='8'
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='seq'
24 statement (ExpressionStmt)
25 expression (MethodCallExpr)
26 name (SimpleName)
27 identifier='addLast'
28 scope (NameExpr)
29 name (SimpleName)
30 identifier='seq'
31 arguments
32 argument (ObjectCreationExpr)
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='RTLMemoryAssignment'
36 arguments
37 argument (MethodCallExpr)
38 name (SimpleName)
39 identifier='createMemoryLocation'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='ExpressionFactory'
43 arguments
44 argument (NameExpr)
45 name (SimpleName)
46 identifier='sp'
47 argument (MethodCallExpr)
48 name (SimpleName)
49 identifier='getAddressBitWidth'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='arch'
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='value'
56 type (VoidType)
57 name (SimpleName)
58 identifier='createPush'
59 parameters
60 parameter (Parameter)
61 isVarArgs='false'
62 name (SimpleName)
63 identifier='value'
64 type (ClassOrInterfaceType)
65 name (SimpleName)
66 identifier='RTLExpression'
67 parameter (Parameter)
68 isVarArgs='false'
69 name (SimpleName)
70 identifier='seq'
71 type (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='StatementSequence'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
8 10
10 11
11 12
11 13
13 14
14 15
13 16
16 17
17 18
11 19
19 20
7 21
21 22
22 23
2 24
24 25
25 26
26 27
25 28
28 29
29 30
25 31
31 32
32 33
33 34
34 35
32 36
36 37
37 38
38 39
37 40
40 41
41 42
37 43
43 44
44 45
45 46
43 47
47 48
48 49
47 50
50 51
51 52
36 53
53 54
54 55
0 56
0 57
57 58
0 59
59 60
60 61
60 62
62 63
60 64
64 65
65 66
59 67
67 68
67 69
69 70
67 71
71 72
72 73

Add a the statements equivalent to a push instruction to the end of a sequence.
