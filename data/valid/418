63
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='rangeCheck'
7 arguments
8 argument (FieldAccessExpr)
9 name (SimpleName)
10 identifier='length'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='a'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='fromIndex'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='toIndex'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='sort1'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='a'
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='fromIndex'
31 argument (BinaryExpr)
32 operator='MINUS'
33 left (NameExpr)
34 name (SimpleName)
35 identifier='toIndex'
36 right (NameExpr)
37 name (SimpleName)
38 identifier='fromIndex'
39 type (VoidType)
40 name (SimpleName)
41 identifier='sort'
42 parameters
43 parameter (Parameter)
44 isVarArgs='false'
45 name (SimpleName)
46 identifier='a'
47 type (ArrayType)
48 origin='TYPE'
49 componentType (PrimitiveType)
50 type='SHORT'
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='fromIndex'
55 type (PrimitiveType)
56 type='INT'
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='toIndex'
61 type (PrimitiveType)
62 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
7 14
14 15
15 16
7 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
26 27
24 28
28 29
29 30
24 31
31 32
31 33
33 34
34 35
31 36
36 37
37 38
0 39
0 40
40 41
0 42
42 43
43 44
43 45
45 46
43 47
47 48
47 49
49 50
42 51
51 52
51 53
53 54
51 55
55 56
42 57
57 58
57 59
59 60
57 61
61 62

Sorts the specified range of the specified array of shorts into ascending numerical order.  The range to be sorted extends from index <tt>fromIndex</tt>, inclusive, to index <tt>toIndex</tt>, exclusive. (If <tt>fromIndex==toIndex</tt>, the range to be sorted is empty.)<p> The sorting algorithm is a tuned quicksort, adapted from Jon L. Bentley and M. Douglas McIlroy's "Engineering a Sort Function", Software-Practice and Experience, Vol. 23(11) P. 1249-1265 (November 1993).  This algorithm offers n*log(n) performance on many data sets that cause other quicksorts to degrade to quadratic performance.
