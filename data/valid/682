58
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='slices'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='rows'
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='columns'
15 argument (BinaryExpr)
16 operator='MULTIPLY'
17 left (BinaryExpr)
18 operator='MULTIPLY'
19 left (NameExpr)
20 name (SimpleName)
21 identifier='slices'
22 right (NameExpr)
23 name (SimpleName)
24 identifier='rows'
25 right (EnclosedExpr)
26 inner (BinaryExpr)
27 operator='DIVIDE'
28 left (NameExpr)
29 name (SimpleName)
30 identifier='columns'
31 right (IntegerLiteralExpr)
32 value='1000'
33 argument (DoubleLiteralExpr)
34 value='0.2'
35 argument (DoubleLiteralExpr)
36 value='0.5'
37 name (SimpleName)
38 identifier='SparseDoubleMatrix3D'
39 parameters
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='slices'
44 type (PrimitiveType)
45 type='INT'
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='rows'
50 type (PrimitiveType)
51 type='INT'
52 parameter (Parameter)
53 isVarArgs='false'
54 name (SimpleName)
55 identifier='columns'
56 type (PrimitiveType)
57 type='INT'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
13 14
5 15
15 16
15 17
17 18
17 19
19 20
20 21
17 22
22 23
23 24
15 25
25 26
26 27
26 28
28 29
29 30
26 31
31 32
5 33
33 34
5 35
35 36
0 37
37 38
0 39
39 40
40 41
40 42
42 43
40 44
44 45
39 46
46 47
46 48
48 49
46 50
50 51
39 52
52 53
52 54
54 55
52 56
56 57

Constructs a matrix with a given number of slices, rows and columns and default memory usage. All entries are initially <tt>0</tt>.
