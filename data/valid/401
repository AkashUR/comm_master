132
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='thenReturn'
7 scope (MethodCallExpr)
8 name (SimpleName)
9 identifier='when'
10 arguments
11 argument (MethodCallExpr)
12 name (SimpleName)
13 identifier='isServerHealthy'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='mTroubleshooter'
17 arguments
18 argument (BooleanLiteralExpr)
19 value='false'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='init'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='mController'
27 statement (ExpressionStmt)
28 expression (VariableDeclarationExpr)
29 variables
30 variable (VariableDeclarator)
31 initializer (ObjectCreationExpr)
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='JsonUser'
35 arguments
36 argument (StringLiteralExpr)
37 value='idA'
38 argument (StringLiteralExpr)
39 value='nameA'
40 name (SimpleName)
41 identifier='user'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='JsonUser'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='post'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='mFakeEventBus'
52 arguments
53 argument (ObjectCreationExpr)
54 type (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='KnownUsersLoadedEvent'
57 arguments
58 argument (MethodCallExpr)
59 name (SimpleName)
60 identifier='of'
61 scope (NameExpr)
62 name (SimpleName)
63 identifier='ImmutableSet'
64 arguments
65 argument (NameExpr)
66 name (SimpleName)
67 identifier='user'
68 statement (ExpressionStmt)
69 expression (MethodCallExpr)
70 name (SimpleName)
71 identifier='thenReturn'
72 scope (MethodCallExpr)
73 name (SimpleName)
74 identifier='when'
75 arguments
76 argument (MethodCallExpr)
77 name (SimpleName)
78 identifier='isServerHealthy'
79 scope (NameExpr)
80 name (SimpleName)
81 identifier='mTroubleshooter'
82 arguments
83 argument (BooleanLiteralExpr)
84 value='true'
85 statement (ExpressionStmt)
86 expression (MethodCallExpr)
87 name (SimpleName)
88 identifier='post'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='mFakeEventBus'
92 arguments
93 argument (ObjectCreationExpr)
94 type (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='TroubleshootingActionsChangedEvent'
97 arguments
98 argument (MethodCallExpr)
99 name (SimpleName)
100 identifier='of'
101 scope (NameExpr)
102 name (SimpleName)
103 identifier='ImmutableSet'
104 arguments
105 argument (FieldAccessExpr)
106 name (SimpleName)
107 identifier='CHECK_PACKAGE_SERVER_CONFIGURATION'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='TroubleshootingAction'
111 argument (NullLiteralExpr)
112 statement (ExpressionStmt)
113 expression (MethodCallExpr)
114 name (SimpleName)
115 identifier='loadKnownUsers'
116 scope (MethodCallExpr)
117 name (SimpleName)
118 identifier='verify'
119 arguments
120 argument (NameExpr)
121 name (SimpleName)
122 identifier='mMockUserManager'
123 argument (MethodCallExpr)
124 name (SimpleName)
125 identifier='times'
126 arguments
127 argument (IntegerLiteralExpr)
128 value='1'
129 type (VoidType)
130 name (SimpleName)
131 identifier='testOnServerHealthy_doesNothingIfUsersAvailable'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
12 13
11 14
14 15
15 16
4 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
2 27
27 28
28 29
29 30
30 31
31 32
32 33
33 34
31 35
35 36
36 37
35 38
38 39
30 40
40 41
30 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
46 52
52 53
53 54
54 55
55 56
53 57
57 58
58 59
59 60
58 61
61 62
62 63
58 64
64 65
65 66
66 67
2 68
68 69
69 70
70 71
69 72
72 73
73 74
72 75
75 76
76 77
77 78
76 79
79 80
80 81
69 82
82 83
83 84
2 85
85 86
86 87
87 88
86 89
89 90
90 91
86 92
92 93
93 94
94 95
95 96
93 97
97 98
98 99
99 100
98 101
101 102
102 103
98 104
104 105
105 106
106 107
105 108
108 109
109 110
97 111
2 112
112 113
113 114
114 115
113 116
116 117
117 118
116 119
119 120
120 121
121 122
119 123
123 124
124 125
123 126
126 127
127 128
0 129
0 130
130 131

Tests that users are not reloaded if the server becomes healthy and users are available.
