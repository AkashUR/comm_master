139
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Date'
11 arguments
12 argument (IntegerLiteralExpr)
13 value='70'
14 argument (IntegerLiteralExpr)
15 value='0'
16 argument (IntegerLiteralExpr)
17 value='1'
18 name (SimpleName)
19 identifier='d1'
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='Date'
23 statement (ExpressionStmt)
24 expression (VariableDeclarationExpr)
25 variables
26 variable (VariableDeclarator)
27 initializer (ObjectCreationExpr)
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='Date'
31 arguments
32 argument (BinaryExpr)
33 operator='PLUS'
34 left (IntegerLiteralExpr)
35 value='0'
36 right (BinaryExpr)
37 operator='MULTIPLY'
38 left (BinaryExpr)
39 operator='MULTIPLY'
40 left (MethodCallExpr)
41 name (SimpleName)
42 identifier='getTimezoneOffset'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='d1'
46 right (IntegerLiteralExpr)
47 value='60'
48 right (IntegerLiteralExpr)
49 value='1000'
50 name (SimpleName)
51 identifier='d2'
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='Date'
55 statement (ExpressionStmt)
56 expression (MethodCallExpr)
57 name (SimpleName)
58 identifier='assertTrue'
59 arguments
60 argument (StringLiteralExpr)
61 value='Created incorrect date'
62 argument (MethodCallExpr)
63 name (SimpleName)
64 identifier='equals'
65 scope (NameExpr)
66 name (SimpleName)
67 identifier='d1'
68 arguments
69 argument (NameExpr)
70 name (SimpleName)
71 identifier='d2'
72 statement (ExpressionStmt)
73 expression (VariableDeclarationExpr)
74 variables
75 variable (VariableDeclarator)
76 initializer (ObjectCreationExpr)
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='Date'
80 arguments
81 argument (IntegerLiteralExpr)
82 value='99'
83 argument (IntegerLiteralExpr)
84 value='5'
85 argument (IntegerLiteralExpr)
86 value='22'
87 name (SimpleName)
88 identifier='date'
89 type (ClassOrInterfaceType)
90 name (SimpleName)
91 identifier='Date'
92 statement (ExpressionStmt)
93 expression (VariableDeclarationExpr)
94 variables
95 variable (VariableDeclarator)
96 initializer (ObjectCreationExpr)
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='GregorianCalendar'
100 arguments
101 argument (IntegerLiteralExpr)
102 value='1999'
103 argument (FieldAccessExpr)
104 name (SimpleName)
105 identifier='JUNE'
106 scope (NameExpr)
107 name (SimpleName)
108 identifier='Calendar'
109 argument (IntegerLiteralExpr)
110 value='22'
111 name (SimpleName)
112 identifier='cal'
113 type (ClassOrInterfaceType)
114 name (SimpleName)
115 identifier='Calendar'
116 statement (ExpressionStmt)
117 expression (MethodCallExpr)
118 name (SimpleName)
119 identifier='assertTrue'
120 arguments
121 argument (StringLiteralExpr)
122 value='Wrong time zone'
123 argument (MethodCallExpr)
124 name (SimpleName)
125 identifier='equals'
126 scope (NameExpr)
127 name (SimpleName)
128 identifier='date'
129 arguments
130 argument (MethodCallExpr)
131 name (SimpleName)
132 identifier='getTime'
133 scope (NameExpr)
134 name (SimpleName)
135 identifier='cal'
136 type (VoidType)
137 name (SimpleName)
138 identifier='test_ConstructorIII'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
11 16
16 17
6 18
18 19
6 20
20 21
21 22
2 23
23 24
24 25
25 26
26 27
27 28
28 29
29 30
27 31
31 32
32 33
32 34
34 35
32 36
36 37
36 38
38 39
38 40
40 41
41 42
40 43
43 44
44 45
38 46
46 47
36 48
48 49
26 50
50 51
26 52
52 53
53 54
2 55
55 56
56 57
57 58
56 59
59 60
60 61
59 62
62 63
63 64
62 65
65 66
66 67
62 68
68 69
69 70
70 71
2 72
72 73
73 74
74 75
75 76
76 77
77 78
78 79
76 80
80 81
81 82
80 83
83 84
80 85
85 86
75 87
87 88
75 89
89 90
90 91
2 92
92 93
93 94
94 95
95 96
96 97
97 98
98 99
96 100
100 101
101 102
100 103
103 104
104 105
103 106
106 107
107 108
100 109
109 110
95 111
111 112
95 113
113 114
114 115
2 116
116 117
117 118
118 119
117 120
120 121
121 122
120 123
123 124
124 125
123 126
126 127
127 128
123 129
129 130
130 131
131 132
130 133
133 134
134 135
0 136
0 137
137 138

java.util.Date#Date(int, int, int)
