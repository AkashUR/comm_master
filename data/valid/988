45
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='openClient'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='endpoint'
10 statement (ExpressionStmt)
11 expression (AssignExpr)
12 operator='ASSIGN'
13 target (NameExpr)
14 name (SimpleName)
15 identifier='started'
16 value (BooleanLiteralExpr)
17 value='true'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (ObjectCreationExpr)
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='DiscoveryRunnable'
26 name (SimpleName)
27 identifier='runnable'
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='DiscoveryRunnable'
31 statement (ExpressionStmt)
32 expression (MethodCallExpr)
33 name (SimpleName)
34 identifier='run'
35 scope (NameExpr)
36 name (SimpleName)
37 identifier='runnable'
38 type (VoidType)
39 name (SimpleName)
40 identifier='internalRunning'
41 thrownExceptions
42 thrownException (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
11 13
13 14
14 15
11 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
24 25
21 26
26 27
21 28
28 29
29 30
2 31
31 32
32 33
33 34
32 35
35 36
36 37
0 38
0 39
39 40
0 41
41 42
42 43
43 44

This will start the DiscoveryRunnable and run it directly. This is useful for a test process where we need this execution blocking a thread.
