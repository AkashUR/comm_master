39
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='checkUpdatable'
7 statement (ExpressionStmt)
8 expression (MethodCallExpr)
9 name (SimpleName)
10 identifier='refreshRow'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='rowUpdater'
14 statement (ExpressionStmt)
15 expression (MethodCallExpr)
16 name (SimpleName)
17 identifier='updateRow'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='fbFetcher'
21 arguments
22 argument (MethodCallExpr)
23 name (SimpleName)
24 identifier='getOldRow'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='rowUpdater'
28 statement (ExpressionStmt)
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='notifyRowUpdater'
32 type (VoidType)
33 name (SimpleName)
34 identifier='refreshRow'
35 thrownExceptions
36 thrownException (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='SQLException'
0 1
1 2
2 3
3 4
4 5
5 6
2 7
7 8
8 9
9 10
8 11
11 12
12 13
2 14
14 15
15 16
16 17
15 18
18 19
19 20
15 21
21 22
22 23
23 24
22 25
25 26
26 27
2 28
28 29
29 30
30 31
0 32
0 33
33 34
0 35
35 36
36 37
37 38

Refreshes the current row with its most recent value in the database.  This method cannot be called when the cursor is on the insert row. <P>The <code>refreshRow</code> method provides a way for an application to explicitly tell the JDBC driver to refetch a row(s) from the database.  An application may want to call <code>refreshRow</code> when caching or prefetching is being done by the JDBC driver to fetch the latest value of a row from the database.  The JDBC driver may actually refresh multiple rows at once if the fetch size is greater than one. <P> All values are refetched subject to the transaction isolation level and cursor sensitivity.  If <code>refreshRow</code> is called after calling an <code>updateXXX</code> method, but before calling the method <code>updateRow</code>, then the updates made to the row are lost.  Calling the method <code>refreshRow</code> frequently will likely slow performance.
