65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='connect'
7 statement (ExpressionStmt)
8 expression (MethodCallExpr)
9 name (SimpleName)
10 identifier='waitForState'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='zkStateReader'
14 arguments
15 argument (NameExpr)
16 name (SimpleName)
17 identifier='collection'
18 argument (NameExpr)
19 name (SimpleName)
20 identifier='wait'
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='unit'
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='predicate'
27 type (VoidType)
28 name (SimpleName)
29 identifier='waitForState'
30 parameters
31 parameter (Parameter)
32 isVarArgs='false'
33 name (SimpleName)
34 identifier='collection'
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='String'
38 parameter (Parameter)
39 isVarArgs='false'
40 name (SimpleName)
41 identifier='wait'
42 type (PrimitiveType)
43 type='LONG'
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='unit'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='TimeUnit'
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='predicate'
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='CollectionStatePredicate'
58 thrownExceptions
59 thrownException (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='InterruptedException'
62 thrownException (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='TimeoutException'
0 1
1 2
2 3
3 4
4 5
5 6
2 7
7 8
8 9
9 10
8 11
11 12
12 13
8 14
14 15
15 16
16 17
14 18
18 19
19 20
14 21
21 22
22 23
14 24
24 25
25 26
0 27
0 28
28 29
0 30
30 31
31 32
31 33
33 34
31 35
35 36
36 37
30 38
38 39
38 40
40 41
38 42
42 43
30 44
44 45
44 46
46 47
44 48
48 49
49 50
30 51
51 52
51 53
53 54
51 55
55 56
56 57
0 58
58 59
59 60
60 61
58 62
62 63
63 64

Block until a collection state matches a predicate, or a timeout Note that the predicate may be called again even after it has returned true, so implementors should avoid changing state within the predicate call itself.
