66
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (LongLiteralExpr)
8 value='98374823947823578L'
9 name (SimpleName)
10 identifier='a'
11 type (PrimitiveType)
12 type='LONG'
13 statement (ExpressionStmt)
14 expression (VariableDeclarationExpr)
15 variables
16 variable (VariableDeclarator)
17 initializer (MethodCallExpr)
18 name (SimpleName)
19 identifier='valueOf'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='BigDecimal'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='a'
27 name (SimpleName)
28 identifier='aNumber'
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='BigDecimal'
32 statement (ExpressionStmt)
33 expression (VariableDeclarationExpr)
34 variables
35 variable (VariableDeclarator)
36 initializer (StringLiteralExpr)
37 value='98374823947823578'
38 name (SimpleName)
39 identifier='result'
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='String'
43 statement (ExpressionStmt)
44 expression (MethodCallExpr)
45 name (SimpleName)
46 identifier='assertTrue'
47 arguments
48 argument (StringLiteralExpr)
49 value='incorrect value'
50 argument (MethodCallExpr)
51 name (SimpleName)
52 identifier='equals'
53 scope (MethodCallExpr)
54 name (SimpleName)
55 identifier='toString'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='aNumber'
59 arguments
60 argument (NameExpr)
61 name (SimpleName)
62 identifier='result'
63 type (VoidType)
64 name (SimpleName)
65 identifier='testValueOfPosZeroScale'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
6 11
11 12
2 13
13 14
14 15
15 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
16 27
27 28
16 29
29 30
30 31
2 32
32 33
33 34
34 35
35 36
36 37
35 38
38 39
35 40
40 41
41 42
2 43
43 44
44 45
45 46
44 47
47 48
48 49
47 50
50 51
51 52
50 53
53 54
54 55
53 56
56 57
57 58
50 59
59 60
60 61
61 62
0 63
0 64
64 65

Create a BigDecimal from a positive long value; scale == 0
