40
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='revalidate'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='host'
10 statement (ExpressionStmt)
11 expression (MethodCallExpr)
12 name (SimpleName)
13 identifier='repaint'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='host'
17 type (VoidType)
18 name (SimpleName)
19 identifier='preferenceChanged'
20 parameters
21 parameter (Parameter)
22 isVarArgs='false'
23 name (SimpleName)
24 identifier='child'
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='View'
28 parameter (Parameter)
29 isVarArgs='false'
30 name (SimpleName)
31 identifier='width'
32 type (PrimitiveType)
33 type='BOOLEAN'
34 parameter (Parameter)
35 isVarArgs='false'
36 name (SimpleName)
37 identifier='height'
38 type (PrimitiveType)
39 type='BOOLEAN'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
12 13
11 14
14 15
15 16
0 17
0 18
18 19
0 20
20 21
21 22
21 23
23 24
21 25
25 26
26 27
20 28
28 29
28 30
30 31
28 32
32 33
20 34
34 35
34 36
36 37
34 38
38 39

Specifies that a preference has changed. Child views can call this on the parent to indicate that the preference has changed.  The root view routes this to invalidate on the hosting component. <p> This can be called on a different thread from the event dispatching thread and is basically unsafe to propagate into the component.  To make this safe, the operation is transferred over to the event dispatching thread for completion.  It is a design goal that all view methods be safe to call without concern for concurrency, and this behavior helps make that true.
