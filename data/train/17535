140
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='newWakeLock'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='mPm'
13 arguments
14 argument (FieldAccessExpr)
15 name (SimpleName)
16 identifier='FULL_WAKE_LOCK'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='PowerManager'
20 argument (StringLiteralExpr)
21 value='FULL_WAKE_LOCK'
22 name (SimpleName)
23 identifier='wl'
24 type (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='WakeLock'
27 scope (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='PowerManager'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='doTestWakeLock'
34 arguments
35 argument (NameExpr)
36 name (SimpleName)
37 identifier='wl'
38 statement (ExpressionStmt)
39 expression (AssignExpr)
40 operator='ASSIGN'
41 target (NameExpr)
42 name (SimpleName)
43 identifier='wl'
44 value (MethodCallExpr)
45 name (SimpleName)
46 identifier='newWakeLock'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='mPm'
50 arguments
51 argument (FieldAccessExpr)
52 name (SimpleName)
53 identifier='SCREEN_BRIGHT_WAKE_LOCK'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='PowerManager'
57 argument (StringLiteralExpr)
58 value='SCREEN_BRIGHT_WAKE_LOCK'
59 statement (ExpressionStmt)
60 expression (MethodCallExpr)
61 name (SimpleName)
62 identifier='doTestWakeLock'
63 arguments
64 argument (NameExpr)
65 name (SimpleName)
66 identifier='wl'
67 statement (ExpressionStmt)
68 expression (AssignExpr)
69 operator='ASSIGN'
70 target (NameExpr)
71 name (SimpleName)
72 identifier='wl'
73 value (MethodCallExpr)
74 name (SimpleName)
75 identifier='newWakeLock'
76 scope (NameExpr)
77 name (SimpleName)
78 identifier='mPm'
79 arguments
80 argument (FieldAccessExpr)
81 name (SimpleName)
82 identifier='SCREEN_DIM_WAKE_LOCK'
83 scope (NameExpr)
84 name (SimpleName)
85 identifier='PowerManager'
86 argument (StringLiteralExpr)
87 value='SCREEN_DIM_WAKE_LOCK'
88 statement (ExpressionStmt)
89 expression (MethodCallExpr)
90 name (SimpleName)
91 identifier='doTestWakeLock'
92 arguments
93 argument (NameExpr)
94 name (SimpleName)
95 identifier='wl'
96 statement (ExpressionStmt)
97 expression (AssignExpr)
98 operator='ASSIGN'
99 target (NameExpr)
100 name (SimpleName)
101 identifier='wl'
102 value (MethodCallExpr)
103 name (SimpleName)
104 identifier='newWakeLock'
105 scope (NameExpr)
106 name (SimpleName)
107 identifier='mPm'
108 arguments
109 argument (FieldAccessExpr)
110 name (SimpleName)
111 identifier='PARTIAL_WAKE_LOCK'
112 scope (NameExpr)
113 name (SimpleName)
114 identifier='PowerManager'
115 argument (StringLiteralExpr)
116 value='PARTIAL_WAKE_LOCK'
117 statement (ExpressionStmt)
118 expression (MethodCallExpr)
119 name (SimpleName)
120 identifier='doTestWakeLock'
121 arguments
122 argument (NameExpr)
123 name (SimpleName)
124 identifier='wl'
125 statement (ExpressionStmt)
126 expression (MethodCallExpr)
127 name (SimpleName)
128 identifier='doTestSetBacklightBrightness'
129 type (VoidType)
130 name (SimpleName)
131 identifier='testNewWakeLock'
132 thrownExceptions
133 thrownException (ClassOrInterfaceType)
134 name (SimpleName)
135 identifier='Exception'
136 annotations
137 annotation (MarkerAnnotationExpr)
138 name (Name)
139 identifier='SmallTest'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
14 17
17 18
18 19
13 20
20 21
6 22
22 23
6 24
24 25
25 26
24 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
36 37
2 38
38 39
39 40
39 41
41 42
42 43
39 44
44 45
45 46
44 47
47 48
48 49
44 50
50 51
51 52
52 53
51 54
54 55
55 56
50 57
57 58
2 59
59 60
60 61
61 62
60 63
63 64
64 65
65 66
2 67
67 68
68 69
68 70
70 71
71 72
68 73
73 74
74 75
73 76
76 77
77 78
73 79
79 80
80 81
81 82
80 83
83 84
84 85
79 86
86 87
2 88
88 89
89 90
90 91
89 92
92 93
93 94
94 95
2 96
96 97
97 98
97 99
99 100
100 101
97 102
102 103
103 104
102 105
105 106
106 107
102 108
108 109
109 110
110 111
109 112
112 113
113 114
108 115
115 116
2 117
117 118
118 119
119 120
118 121
121 122
122 123
123 124
2 125
125 126
126 127
127 128
0 129
0 130
130 131
0 132
132 133
133 134
134 135
0 136
136 137
137 138
138 139

Confirm that we can create functional wakelocks.
