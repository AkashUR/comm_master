130
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SynchronizedStmt)
4 body (BlockStmt)
5 statements
6 statement (ExpressionStmt)
7 expression (VariableDeclarationExpr)
8 variables
9 variable (VariableDeclarator)
10 initializer (MethodCallExpr)
11 name (SimpleName)
12 identifier='getCurrent'
13 scope (NameExpr)
14 name (SimpleName)
15 identifier='reader'
16 name (SimpleName)
17 identifier='item'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='OutputT'
21 statement (ExpressionStmt)
22 expression (VariableDeclarationExpr)
23 variables
24 variable (VariableDeclarator)
25 initializer (MethodCallExpr)
26 name (SimpleName)
27 identifier='getCurrentTimestamp'
28 scope (NameExpr)
29 name (SimpleName)
30 identifier='reader'
31 name (SimpleName)
32 identifier='timestamp'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='Instant'
36 statement (ExpressionStmt)
37 expression (VariableDeclarationExpr)
38 variables
39 variable (VariableDeclarator)
40 initializer (MethodCallExpr)
41 name (SimpleName)
42 identifier='of'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='WindowedValue'
46 arguments
47 argument (NameExpr)
48 name (SimpleName)
49 identifier='item'
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='timestamp'
53 argument (FieldAccessExpr)
54 name (SimpleName)
55 identifier='INSTANCE'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='GlobalWindow'
59 argument (FieldAccessExpr)
60 name (SimpleName)
61 identifier='NO_FIRING'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='PaneInfo'
65 name (SimpleName)
66 identifier='windowedValue'
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='WindowedValue'
70 typeArguments
71 typeArgument (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='OutputT'
74 statement (ExpressionStmt)
75 expression (MethodCallExpr)
76 name (SimpleName)
77 identifier='collectWithTimestamp'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='ctx'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='windowedValue'
85 argument (MethodCallExpr)
86 name (SimpleName)
87 identifier='getMillis'
88 scope (NameExpr)
89 name (SimpleName)
90 identifier='timestamp'
91 expression (MethodCallExpr)
92 name (SimpleName)
93 identifier='getCheckpointLock'
94 scope (NameExpr)
95 name (SimpleName)
96 identifier='ctx'
97 type (VoidType)
98 name (SimpleName)
99 identifier='emitElement'
100 parameters
101 parameter (Parameter)
102 isVarArgs='false'
103 name (SimpleName)
104 identifier='ctx'
105 type (ClassOrInterfaceType)
106 name (SimpleName)
107 identifier='SourceContext'
108 typeArguments
109 typeArgument (ClassOrInterfaceType)
110 name (SimpleName)
111 identifier='WindowedValue'
112 typeArguments
113 typeArgument (ClassOrInterfaceType)
114 name (SimpleName)
115 identifier='OutputT'
116 parameter (Parameter)
117 isVarArgs='false'
118 name (SimpleName)
119 identifier='reader'
120 type (ClassOrInterfaceType)
121 name (SimpleName)
122 identifier='UnboundedReader'
123 scope (ClassOrInterfaceType)
124 name (SimpleName)
125 identifier='UnboundedSource'
126 typeArguments
127 typeArgument (ClassOrInterfaceType)
128 name (SimpleName)
129 identifier='OutputT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
10 11
11 12
10 13
13 14
14 15
9 16
16 17
9 18
18 19
19 20
5 21
21 22
22 23
23 24
24 25
25 26
26 27
25 28
28 29
29 30
24 31
31 32
24 33
33 34
34 35
5 36
36 37
37 38
38 39
39 40
40 41
41 42
40 43
43 44
44 45
40 46
46 47
47 48
48 49
46 50
50 51
51 52
46 53
53 54
54 55
53 56
56 57
57 58
46 59
59 60
60 61
59 62
62 63
63 64
39 65
65 66
39 67
67 68
68 69
67 70
70 71
71 72
72 73
5 74
74 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
82 83
83 84
81 85
85 86
86 87
85 88
88 89
89 90
3 91
91 92
92 93
91 94
94 95
95 96
0 97
0 98
98 99
0 100
100 101
101 102
101 103
103 104
101 105
105 106
106 107
105 108
108 109
109 110
110 111
109 112
112 113
113 114
114 115
100 116
116 117
116 118
118 119
116 120
120 121
121 122
120 123
123 124
124 125
120 126
126 127
127 128
128 129

Emit the current element from the given Reader. The reader is guaranteed to have data.
