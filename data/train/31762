78
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (ArrayAccessExpr)
7 index (IntegerLiteralExpr)
8 value='0'
9 name (FieldAccessExpr)
10 name (SimpleName)
11 identifier='temp'
12 scope (ThisExpr)
13 value (CastExpr)
14 expression (EnclosedExpr)
15 inner (BinaryExpr)
16 operator='BINARY_AND'
17 left (EnclosedExpr)
18 inner (BinaryExpr)
19 operator='UNSIGNED_RIGHT_SHIFT'
20 left (NameExpr)
21 name (SimpleName)
22 identifier='s'
23 right (IntegerLiteralExpr)
24 value='8'
25 right (IntegerLiteralExpr)
26 value='0xff'
27 type (PrimitiveType)
28 type='BYTE'
29 statement (ExpressionStmt)
30 expression (AssignExpr)
31 operator='ASSIGN'
32 target (ArrayAccessExpr)
33 index (IntegerLiteralExpr)
34 value='1'
35 name (FieldAccessExpr)
36 name (SimpleName)
37 identifier='temp'
38 scope (ThisExpr)
39 value (CastExpr)
40 expression (EnclosedExpr)
41 inner (BinaryExpr)
42 operator='BINARY_AND'
43 left (NameExpr)
44 name (SimpleName)
45 identifier='s'
46 right (IntegerLiteralExpr)
47 value='0xff'
48 type (PrimitiveType)
49 type='BYTE'
50 statement (ExpressionStmt)
51 expression (MethodCallExpr)
52 name (SimpleName)
53 identifier='write'
54 scope (ThisExpr)
55 arguments
56 argument (FieldAccessExpr)
57 name (SimpleName)
58 identifier='temp'
59 scope (ThisExpr)
60 argument (IntegerLiteralExpr)
61 value='0'
62 argument (IntegerLiteralExpr)
63 value='2'
64 type (VoidType)
65 name (SimpleName)
66 identifier='writeShort'
67 parameters
68 parameter (Parameter)
69 isVarArgs='false'
70 name (SimpleName)
71 identifier='s'
72 type (PrimitiveType)
73 type='SHORT'
74 thrownExceptions
75 thrownException (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
9 10
10 11
9 12
4 13
13 14
14 15
15 16
15 17
17 18
18 19
18 20
20 21
21 22
18 23
23 24
15 25
25 26
13 27
27 28
2 29
29 30
30 31
30 32
32 33
33 34
32 35
35 36
36 37
35 38
30 39
39 40
40 41
41 42
41 43
43 44
44 45
41 46
46 47
39 48
48 49
2 50
50 51
51 52
52 53
51 54
51 55
55 56
56 57
57 58
56 59
55 60
60 61
55 62
62 63
0 64
0 65
65 66
0 67
67 68
68 69
68 70
70 71
68 72
72 73
0 74
74 75
75 76
76 77

Write the short value <code>s</code> to this stream as two bytes.
