63
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='params'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='payloadBytes'
12 argument (IntegerLiteralExpr)
13 value='0'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='parseLazy'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='parseRetain'
20 argument (NameExpr)
21 name (SimpleName)
22 identifier='length'
23 name (SimpleName)
24 identifier='Block'
25 parameters
26 parameter (Parameter)
27 isVarArgs='false'
28 name (SimpleName)
29 identifier='params'
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='NetworkParameters'
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='payloadBytes'
37 type (ArrayType)
38 origin='TYPE'
39 componentType (PrimitiveType)
40 type='BYTE'
41 parameter (Parameter)
42 isVarArgs='false'
43 name (SimpleName)
44 identifier='parseLazy'
45 type (PrimitiveType)
46 type='BOOLEAN'
47 parameter (Parameter)
48 isVarArgs='false'
49 name (SimpleName)
50 identifier='parseRetain'
51 type (PrimitiveType)
52 type='BOOLEAN'
53 parameter (Parameter)
54 isVarArgs='false'
55 name (SimpleName)
56 identifier='length'
57 type (PrimitiveType)
58 type='INT'
59 thrownExceptions
60 thrownException (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='ProtocolException'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
5 14
14 15
15 16
5 17
17 18
18 19
5 20
20 21
21 22
0 23
23 24
0 25
25 26
26 27
26 28
28 29
26 30
30 31
31 32
25 33
33 34
33 35
35 36
33 37
37 38
37 39
39 40
25 41
41 42
41 43
43 44
41 45
45 46
25 47
47 48
47 49
49 50
47 51
51 52
25 53
53 54
53 55
55 56
53 57
57 58
0 59
59 60
60 61
61 62

Contruct a block object from the Bitcoin wire format.
