52
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (StringLiteralExpr)
8 value='2746723894572364578265426346273456972283746872364768676747462342342342342342342342323423423423423423426767456345745293762384756238475634563456845634568934568347586346578648576478568456457634875673845678456786587345873645767456834756745763457863485768475678465783456702897830296720476846578634576384567845678346573465786457863'
9 name (SimpleName)
10 identifier='a'
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='String'
14 statement (ExpressionStmt)
15 expression (VariableDeclarationExpr)
16 variables
17 variable (VariableDeclarator)
18 initializer (MethodCallExpr)
19 name (SimpleName)
20 identifier='doubleValue'
21 scope (ObjectCreationExpr)
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='BigInteger'
25 arguments
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='a'
29 name (SimpleName)
30 identifier='aNumber'
31 type (PrimitiveType)
32 type='DOUBLE'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='assertTrue'
37 arguments
38 argument (BinaryExpr)
39 operator='EQUALS'
40 left (NameExpr)
41 name (SimpleName)
42 identifier='aNumber'
43 right (FieldAccessExpr)
44 name (SimpleName)
45 identifier='POSITIVE_INFINITY'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='Double'
49 type (VoidType)
50 name (SimpleName)
51 identifier='testDoubleValuePositiveInfinity2'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
6 11
11 12
12 13
2 14
14 15
15 16
16 17
17 18
18 19
19 20
18 21
21 22
22 23
23 24
21 25
25 26
26 27
27 28
17 29
29 30
17 31
31 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
38 40
40 41
41 42
38 43
43 44
44 45
43 46
46 47
47 48
0 49
0 50
50 51

Convert a positive number to a double value.  The number's bit length is greater than 1024.
