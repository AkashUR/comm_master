56
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='addPredicateField'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='LuceneIndex'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='name'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='text'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='doc'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='addTextField'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='LuceneIndex'
27 arguments
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='text'
31 argument (NameExpr)
32 name (SimpleName)
33 identifier='doc'
34 type (VoidType)
35 name (SimpleName)
36 identifier='addProperty'
37 parameters
38 parameter (Parameter)
39 isVarArgs='false'
40 name (SimpleName)
41 identifier='name'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='String'
45 parameter (Parameter)
46 isVarArgs='false'
47 name (SimpleName)
48 identifier='text'
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='String'
52 annotations
53 annotation (MarkerAnnotationExpr)
54 name (Name)
55 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
10 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
21 27
27 28
28 29
29 30
27 31
31 32
32 33
0 34
0 35
35 36
0 37
37 38
38 39
38 40
40 41
38 42
42 43
43 44
37 45
45 46
45 47
47 48
45 49
49 50
50 51
0 52
52 53
53 54
54 55

Stores and indexes a property in a Document. We don't have to recalculate the concatenated text: just add another TEXT field and Lucene will take care of this. Additional advantage: Lucene may be able to handle the invididual strings in a way that may affect e.g. phrase and proximity searches (concatenation basically means loss of information). NOTE: The TEXT_FIELD_NAME has to be stored, see in LuceneSail
