125
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (EnclosedExpr)
7 inner (ConditionalExpr)
8 condition (BinaryExpr)
9 operator='EQUALS'
10 left (NameExpr)
11 name (SimpleName)
12 identifier='signed'
13 right (BooleanLiteralExpr)
14 value='true'
15 elseExpr (FieldAccessExpr)
16 name (SimpleName)
17 identifier='PCM_UNSIGNED'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='Encoding'
21 thenExpr (FieldAccessExpr)
22 name (SimpleName)
23 identifier='PCM_SIGNED'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='Encoding'
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='sampleRate'
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='sampleSizeInBits'
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='channels'
36 argument (ConditionalExpr)
37 condition (EnclosedExpr)
38 inner (BinaryExpr)
39 operator='OR'
40 left (BinaryExpr)
41 operator='EQUALS'
42 left (NameExpr)
43 name (SimpleName)
44 identifier='channels'
45 right (FieldAccessExpr)
46 name (SimpleName)
47 identifier='NOT_SPECIFIED'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='AudioSystem'
51 right (BinaryExpr)
52 operator='EQUALS'
53 left (NameExpr)
54 name (SimpleName)
55 identifier='sampleSizeInBits'
56 right (FieldAccessExpr)
57 name (SimpleName)
58 identifier='NOT_SPECIFIED'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='AudioSystem'
62 elseExpr (BinaryExpr)
63 operator='MULTIPLY'
64 left (EnclosedExpr)
65 inner (BinaryExpr)
66 operator='DIVIDE'
67 left (EnclosedExpr)
68 inner (BinaryExpr)
69 operator='PLUS'
70 left (NameExpr)
71 name (SimpleName)
72 identifier='sampleSizeInBits'
73 right (IntegerLiteralExpr)
74 value='7'
75 right (IntegerLiteralExpr)
76 value='8'
77 right (NameExpr)
78 name (SimpleName)
79 identifier='channels'
80 thenExpr (FieldAccessExpr)
81 name (SimpleName)
82 identifier='NOT_SPECIFIED'
83 scope (NameExpr)
84 name (SimpleName)
85 identifier='AudioSystem'
86 argument (NameExpr)
87 name (SimpleName)
88 identifier='sampleRate'
89 argument (NameExpr)
90 name (SimpleName)
91 identifier='bigEndian'
92 name (SimpleName)
93 identifier='AudioFormat'
94 parameters
95 parameter (Parameter)
96 isVarArgs='false'
97 name (SimpleName)
98 identifier='sampleRate'
99 type (PrimitiveType)
100 type='FLOAT'
101 parameter (Parameter)
102 isVarArgs='false'
103 name (SimpleName)
104 identifier='sampleSizeInBits'
105 type (PrimitiveType)
106 type='INT'
107 parameter (Parameter)
108 isVarArgs='false'
109 name (SimpleName)
110 identifier='channels'
111 type (PrimitiveType)
112 type='INT'
113 parameter (Parameter)
114 isVarArgs='false'
115 name (SimpleName)
116 identifier='signed'
117 type (PrimitiveType)
118 type='BOOLEAN'
119 parameter (Parameter)
120 isVarArgs='false'
121 name (SimpleName)
122 identifier='bigEndian'
123 type (PrimitiveType)
124 type='BOOLEAN'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
8 9
8 10
10 11
11 12
8 13
13 14
7 15
15 16
16 17
15 18
18 19
19 20
7 21
21 22
22 23
21 24
24 25
25 26
5 27
27 28
28 29
5 30
30 31
31 32
5 33
33 34
34 35
5 36
36 37
37 38
38 39
38 40
40 41
40 42
42 43
43 44
40 45
45 46
46 47
45 48
48 49
49 50
38 51
51 52
51 53
53 54
54 55
51 56
56 57
57 58
56 59
59 60
60 61
36 62
62 63
62 64
64 65
65 66
65 67
67 68
68 69
68 70
70 71
71 72
68 73
73 74
65 75
75 76
62 77
77 78
78 79
36 80
80 81
81 82
80 83
83 84
84 85
5 86
86 87
87 88
5 89
89 90
90 91
0 92
92 93
0 94
94 95
95 96
95 97
97 98
95 99
99 100
94 101
101 102
101 103
103 104
101 105
105 106
94 107
107 108
107 109
109 110
107 111
111 112
94 113
113 114
113 115
115 116
113 117
117 118
94 119
119 120
119 121
121 122
119 123
123 124

Constructs an <code>AudioFormat</code> with a linear PCM encoding and the given parameters.  The frame size is set to the number of bytes required to contain one sample from each channel, and the frame rate is set to the sample rate.
