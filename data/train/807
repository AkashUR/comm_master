164
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Configuration'
11 name (SimpleName)
12 identifier='configurationElement'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='Configuration'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setImplementation'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='configurationElement'
23 arguments
24 argument (MethodCallExpr)
25 name (SimpleName)
26 identifier='getName'
27 scope (ClassExpr)
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='StandaloneLocalConfigurationStub'
31 statement (ExpressionStmt)
32 expression (VariableDeclarationExpr)
33 variables
34 variable (VariableDeclarator)
35 initializer (ObjectCreationExpr)
36 type (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='HashMap'
39 typeArguments
40 typeArgument (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='String'
43 typeArgument (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='String'
46 name (SimpleName)
47 identifier='properties'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='Map'
51 typeArguments
52 typeArgument (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='String'
55 typeArgument (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='String'
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='put'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='properties'
65 arguments
66 argument (StringLiteralExpr)
67 value='someName'
68 argument (NullLiteralExpr)
69 statement (ExpressionStmt)
70 expression (MethodCallExpr)
71 name (SimpleName)
72 identifier='setProperties'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='configurationElement'
76 arguments
77 argument (NameExpr)
78 name (SimpleName)
79 identifier='properties'
80 statement (ExpressionStmt)
81 expression (VariableDeclarationExpr)
82 variables
83 variable (VariableDeclarator)
84 initializer (MethodCallExpr)
85 name (SimpleName)
86 identifier='createConfiguration'
87 scope (NameExpr)
88 name (SimpleName)
89 identifier='configurationElement'
90 arguments
91 argument (StringLiteralExpr)
92 value='testcontainer'
93 argument (FieldAccessExpr)
94 name (SimpleName)
95 identifier='INSTALLED'
96 scope (NameExpr)
97 name (SimpleName)
98 identifier='ContainerType'
99 argument (NullLiteralExpr)
100 argument (ObjectCreationExpr)
101 type (ClassOrInterfaceType)
102 name (SimpleName)
103 identifier='CargoProject'
104 arguments
105 argument (NullLiteralExpr)
106 argument (NullLiteralExpr)
107 argument (NullLiteralExpr)
108 argument (NullLiteralExpr)
109 argument (NullLiteralExpr)
110 argument (MethodCallExpr)
111 name (SimpleName)
112 identifier='emptySet'
113 scope (NameExpr)
114 name (SimpleName)
115 identifier='Collections'
116 typeArguments
117 typeArgument (ClassOrInterfaceType)
118 name (SimpleName)
119 identifier='Artifact'
120 argument (NullLiteralExpr)
121 name (SimpleName)
122 identifier='configuration'
123 type (ClassOrInterfaceType)
124 name (SimpleName)
125 identifier='Configuration'
126 scope (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='configuration'
129 scope (ClassOrInterfaceType)
130 name (SimpleName)
131 identifier='container'
132 scope (ClassOrInterfaceType)
133 name (SimpleName)
134 identifier='cargo'
135 scope (ClassOrInterfaceType)
136 name (SimpleName)
137 identifier='codehaus'
138 scope (ClassOrInterfaceType)
139 name (SimpleName)
140 identifier='org'
141 statement (ExpressionStmt)
142 expression (MethodCallExpr)
143 name (SimpleName)
144 identifier='assertEquals'
145 arguments
146 argument (StringLiteralExpr)
147 value=''
148 argument (MethodCallExpr)
149 name (SimpleName)
150 identifier='getPropertyValue'
151 scope (NameExpr)
152 name (SimpleName)
153 identifier='configuration'
154 arguments
155 argument (StringLiteralExpr)
156 value='someName'
157 type (VoidType)
158 name (SimpleName)
159 identifier='testCreateConfigurationWithAPropertyWithNullValue'
160 thrownExceptions
161 thrownException (ClassOrInterfaceType)
162 name (SimpleName)
163 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
24 27
27 28
28 29
29 30
2 31
31 32
32 33
33 34
34 35
35 36
36 37
37 38
36 39
39 40
40 41
41 42
39 43
43 44
44 45
34 46
46 47
34 48
48 49
49 50
48 51
51 52
52 53
53 54
51 55
55 56
56 57
2 58
58 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
65 68
2 69
69 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
78 79
2 80
80 81
81 82
82 83
83 84
84 85
85 86
84 87
87 88
88 89
84 90
90 91
91 92
90 93
93 94
94 95
93 96
96 97
97 98
90 99
90 100
100 101
101 102
102 103
100 104
104 105
104 106
104 107
104 108
104 109
104 110
110 111
111 112
110 113
113 114
114 115
110 116
116 117
117 118
118 119
104 120
83 121
121 122
83 123
123 124
124 125
123 126
126 127
127 128
126 129
129 130
130 131
129 132
132 133
133 134
132 135
135 136
136 137
135 138
138 139
139 140
2 141
141 142
142 143
143 144
142 145
145 146
146 147
145 148
148 149
149 150
148 151
151 152
152 153
148 154
154 155
155 156
0 157
0 158
158 159
0 160
160 161
161 162
162 163

Setting a Null property is the way Maven2 operates when the user specifies an empty element. We need to verify that the Cargo plugin intercepts that and replaces the Null with an empty String.
