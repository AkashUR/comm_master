143
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getTableKelp'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='_table'
13 name (SimpleName)
14 identifier='tableKelp'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='TableKelp'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (MethodCallExpr)
23 name (SimpleName)
24 identifier='cursor'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='tableKelp'
28 name (SimpleName)
29 identifier='minCursor'
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='RowCursor'
33 statement (ExpressionStmt)
34 expression (VariableDeclarationExpr)
35 variables
36 variable (VariableDeclarator)
37 initializer (MethodCallExpr)
38 name (SimpleName)
39 identifier='cursor'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='tableKelp'
43 name (SimpleName)
44 identifier='maxCursor'
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='RowCursor'
48 statement (ExpressionStmt)
49 expression (MethodCallExpr)
50 name (SimpleName)
51 identifier='clear'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='minCursor'
55 statement (ExpressionStmt)
56 expression (MethodCallExpr)
57 name (SimpleName)
58 identifier='setKeyMax'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='maxCursor'
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='fillMinCursor'
66 scope (NameExpr)
67 name (SimpleName)
68 identifier='_whereKraken'
69 arguments
70 argument (NameExpr)
71 name (SimpleName)
72 identifier='minCursor'
73 argument (NameExpr)
74 name (SimpleName)
75 identifier='args'
76 statement (ExpressionStmt)
77 expression (MethodCallExpr)
78 name (SimpleName)
79 identifier='fillMaxCursor'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='_whereKraken'
83 arguments
84 argument (NameExpr)
85 name (SimpleName)
86 identifier='minCursor'
87 argument (NameExpr)
88 name (SimpleName)
89 identifier='args'
90 statement (ExpressionStmt)
91 expression (MethodCallExpr)
92 name (SimpleName)
93 identifier='addWatch'
94 scope (NameExpr)
95 name (SimpleName)
96 identifier='_table'
97 arguments
98 argument (NameExpr)
99 name (SimpleName)
100 identifier='watch'
101 argument (MethodCallExpr)
102 name (SimpleName)
103 identifier='getKey'
104 scope (NameExpr)
105 name (SimpleName)
106 identifier='minCursor'
107 argument (NameExpr)
108 name (SimpleName)
109 identifier='result'
110 type (VoidType)
111 name (SimpleName)
112 identifier='watch'
113 parameters
114 parameter (Parameter)
115 isVarArgs='false'
116 name (SimpleName)
117 identifier='watch'
118 type (ClassOrInterfaceType)
119 name (SimpleName)
120 identifier='DatabaseWatch'
121 parameter (Parameter)
122 isVarArgs='false'
123 name (SimpleName)
124 identifier='result'
125 type (ClassOrInterfaceType)
126 name (SimpleName)
127 identifier='Result'
128 typeArguments
129 typeArgument (ClassOrInterfaceType)
130 name (SimpleName)
131 identifier='Cancel'
132 parameter (Parameter)
133 isVarArgs='true'
134 name (SimpleName)
135 identifier='args'
136 type (ClassOrInterfaceType)
137 name (SimpleName)
138 identifier='Object'
139 annotations
140 annotation (MarkerAnnotationExpr)
141 name (Name)
142 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
21 28
28 29
21 30
30 31
31 32
2 33
33 34
34 35
35 36
36 37
37 38
38 39
37 40
40 41
41 42
36 43
43 44
36 45
45 46
46 47
2 48
48 49
49 50
50 51
49 52
52 53
53 54
2 55
55 56
56 57
57 58
56 59
59 60
60 61
2 62
62 63
63 64
64 65
63 66
66 67
67 68
63 69
69 70
70 71
71 72
69 73
73 74
74 75
2 76
76 77
77 78
78 79
77 80
80 81
81 82
77 83
83 84
84 85
85 86
83 87
87 88
88 89
2 90
90 91
91 92
92 93
91 94
94 95
95 96
91 97
97 98
98 99
99 100
97 101
101 102
102 103
101 104
104 105
105 106
97 107
107 108
108 109
0 110
0 111
111 112
0 113
113 114
114 115
114 116
116 117
114 118
118 119
119 120
113 121
121 122
121 123
123 124
121 125
125 126
126 127
125 128
128 129
129 130
130 131
113 132
132 133
132 134
134 135
132 136
136 137
137 138
0 139
139 140
140 141
141 142

Returns the hash code for the owning partition. If the hash is negative, the query does not have an owning partition.
