228
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='glClearColor'
7 scope (FieldAccessExpr)
8 name (SimpleName)
9 identifier='gl'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Gdx'
13 arguments
14 argument (IntegerLiteralExpr)
15 value='0'
16 argument (IntegerLiteralExpr)
17 value='0'
18 argument (IntegerLiteralExpr)
19 value='0'
20 argument (IntegerLiteralExpr)
21 value='1'
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='glClear'
26 scope (FieldAccessExpr)
27 name (SimpleName)
28 identifier='gl'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='Gdx'
32 arguments
33 argument (FieldAccessExpr)
34 name (SimpleName)
35 identifier='GL_COLOR_BUFFER_BIT'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='GL20'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='update'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='camera'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='setProjectionMatrix'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='renderer'
53 arguments
54 argument (FieldAccessExpr)
55 name (SimpleName)
56 identifier='combined'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='camera'
60 statement (ExpressionStmt)
61 expression (MethodCallExpr)
62 name (SimpleName)
63 identifier='begin'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='renderer'
67 arguments
68 argument (FieldAccessExpr)
69 name (SimpleName)
70 identifier='Filled'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='ShapeType'
74 statement (ExpressionStmt)
75 expression (MethodCallExpr)
76 name (SimpleName)
77 identifier='setColor'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='renderer'
81 arguments
82 argument (FieldAccessExpr)
83 name (SimpleName)
84 identifier='YELLOW'
85 scope (NameExpr)
86 name (SimpleName)
87 identifier='Color'
88 statement (ExpressionStmt)
89 expression (MethodCallExpr)
90 name (SimpleName)
91 identifier='circle'
92 scope (NameExpr)
93 name (SimpleName)
94 identifier='renderer'
95 arguments
96 argument (NameExpr)
97 name (SimpleName)
98 identifier='STAR_CENTER_X'
99 argument (NameExpr)
100 name (SimpleName)
101 identifier='STAR_CENTER_Y'
102 argument (NameExpr)
103 name (SimpleName)
104 identifier='STAR_RADIUS'
105 argument (NameExpr)
106 name (SimpleName)
107 identifier='SEGMENTS'
108 statement (ExpressionStmt)
109 expression (MethodCallExpr)
110 name (SimpleName)
111 identifier='setColor'
112 scope (NameExpr)
113 name (SimpleName)
114 identifier='renderer'
115 arguments
116 argument (FieldAccessExpr)
117 name (SimpleName)
118 identifier='GREEN'
119 scope (NameExpr)
120 name (SimpleName)
121 identifier='Color'
122 statement (ExpressionStmt)
123 expression (MethodCallExpr)
124 name (SimpleName)
125 identifier='circle'
126 scope (NameExpr)
127 name (SimpleName)
128 identifier='renderer'
129 arguments
130 argument (NameExpr)
131 name (SimpleName)
132 identifier='PLANET_CENTER_X'
133 argument (NameExpr)
134 name (SimpleName)
135 identifier='PLANET_CENTER_Y'
136 argument (NameExpr)
137 name (SimpleName)
138 identifier='PLANET_RADIUS'
139 argument (NameExpr)
140 name (SimpleName)
141 identifier='SEGMENTS'
142 statement (ExpressionStmt)
143 expression (MethodCallExpr)
144 name (SimpleName)
145 identifier='setColor'
146 scope (NameExpr)
147 name (SimpleName)
148 identifier='renderer'
149 arguments
150 argument (FieldAccessExpr)
151 name (SimpleName)
152 identifier='RED'
153 scope (NameExpr)
154 name (SimpleName)
155 identifier='Color'
156 statement (ExpressionStmt)
157 expression (VariableDeclarationExpr)
158 variables
159 variable (VariableDeclarator)
160 initializer (BinaryExpr)
161 operator='DIVIDE'
162 left (NameExpr)
163 name (SimpleName)
164 identifier='SATELLITE_SIZE'
165 right (IntegerLiteralExpr)
166 value='2'
167 name (SimpleName)
168 identifier='halfSize'
169 type (PrimitiveType)
170 type='FLOAT'
171 statement (ExpressionStmt)
172 expression (MethodCallExpr)
173 name (SimpleName)
174 identifier='rect'
175 scope (NameExpr)
176 name (SimpleName)
177 identifier='renderer'
178 arguments
179 argument (BinaryExpr)
180 operator='MINUS'
181 left (NameExpr)
182 name (SimpleName)
183 identifier='SATELLITE_POSITION_X'
184 right (NameExpr)
185 name (SimpleName)
186 identifier='halfSize'
187 argument (BinaryExpr)
188 operator='MINUS'
189 left (NameExpr)
190 name (SimpleName)
191 identifier='SATELLITE_POSITION_Y'
192 right (NameExpr)
193 name (SimpleName)
194 identifier='halfSize'
195 argument (NameExpr)
196 name (SimpleName)
197 identifier='halfSize'
198 argument (NameExpr)
199 name (SimpleName)
200 identifier='halfSize'
201 argument (NameExpr)
202 name (SimpleName)
203 identifier='SATELLITE_SIZE'
204 argument (NameExpr)
205 name (SimpleName)
206 identifier='SATELLITE_SIZE'
207 argument (IntegerLiteralExpr)
208 value='1'
209 argument (IntegerLiteralExpr)
210 value='1'
211 argument (NameExpr)
212 name (SimpleName)
213 identifier='SATELLITE_ROTATION'
214 statement (ExpressionStmt)
215 expression (MethodCallExpr)
216 name (SimpleName)
217 identifier='end'
218 scope (NameExpr)
219 name (SimpleName)
220 identifier='renderer'
221 type (VoidType)
222 name (SimpleName)
223 identifier='render'
224 annotations
225 annotation (MarkerAnnotationExpr)
226 name (Name)
227 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
4 13
13 14
14 15
13 16
16 17
13 18
18 19
13 20
20 21
2 22
22 23
23 24
24 25
23 26
26 27
27 28
26 29
29 30
30 31
23 32
32 33
33 34
34 35
33 36
36 37
37 38
2 39
39 40
40 41
41 42
40 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
55 56
54 57
57 58
58 59
2 60
60 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
69 70
68 71
71 72
72 73
2 74
74 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
82 83
83 84
82 85
85 86
86 87
2 88
88 89
89 90
90 91
89 92
92 93
93 94
89 95
95 96
96 97
97 98
95 99
99 100
100 101
95 102
102 103
103 104
95 105
105 106
106 107
2 108
108 109
109 110
110 111
109 112
112 113
113 114
109 115
115 116
116 117
117 118
116 119
119 120
120 121
2 122
122 123
123 124
124 125
123 126
126 127
127 128
123 129
129 130
130 131
131 132
129 133
133 134
134 135
129 136
136 137
137 138
129 139
139 140
140 141
2 142
142 143
143 144
144 145
143 146
146 147
147 148
143 149
149 150
150 151
151 152
150 153
153 154
154 155
2 156
156 157
157 158
158 159
159 160
160 161
160 162
162 163
163 164
160 165
165 166
159 167
167 168
159 169
169 170
2 171
171 172
172 173
173 174
172 175
175 176
176 177
172 178
178 179
179 180
179 181
181 182
182 183
179 184
184 185
185 186
178 187
187 188
187 189
189 190
190 191
187 192
192 193
193 194
178 195
195 196
196 197
178 198
198 199
199 200
178 201
201 202
202 203
178 204
204 205
205 206
178 207
207 208
178 209
209 210
178 211
211 212
212 213
2 214
214 215
215 216
216 217
215 218
218 219
219 220
0 221
0 222
222 223
0 224
224 225
225 226
226 227

There are two new things we need to do when using a camera. The first is calling camera.update(). Whenever we adjust the properties of a camera (like its position), it needs to fold those changes into the matrices that define how it looks at the world. The easiest way to make sure that happens is just to call update every frame. It's a fast operation, so no worries. The second thing we need to do is to tell our ShapeRenderer that we want to use our camera. We do this by setting the ShapeRenderer's projection matrix to the camera's combined matrix. The combined matrix is the combination of the camera's view and projection matrices. Yeah, there's a lot of matrices flying around. Basically ShapeRenderer doesn't have a notion of position in some larger world, so all it's got is a projection matrix.
