99
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='glClearColor'
7 scope (FieldAccessExpr)
8 name (SimpleName)
9 identifier='gl'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Gdx'
13 arguments
14 argument (IntegerLiteralExpr)
15 value='0'
16 argument (IntegerLiteralExpr)
17 value='0'
18 argument (IntegerLiteralExpr)
19 value='0'
20 argument (IntegerLiteralExpr)
21 value='1'
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='glClear'
26 scope (FieldAccessExpr)
27 name (SimpleName)
28 identifier='gl'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='Gdx'
32 arguments
33 argument (FieldAccessExpr)
34 name (SimpleName)
35 identifier='GL_COLOR_BUFFER_BIT'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='GL20'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='apply'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='viewport'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='setProjectionMatrix'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='renderer'
53 arguments
54 argument (FieldAccessExpr)
55 name (SimpleName)
56 identifier='combined'
57 scope (MethodCallExpr)
58 name (SimpleName)
59 identifier='getCamera'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='viewport'
63 statement (ExpressionStmt)
64 expression (MethodCallExpr)
65 name (SimpleName)
66 identifier='begin'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='renderer'
70 arguments
71 argument (FieldAccessExpr)
72 name (SimpleName)
73 identifier='Filled'
74 scope (NameExpr)
75 name (SimpleName)
76 identifier='ShapeType'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='drawSmileyFace'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='renderer'
85 statement (ExpressionStmt)
86 expression (MethodCallExpr)
87 name (SimpleName)
88 identifier='end'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='renderer'
92 type (VoidType)
93 name (SimpleName)
94 identifier='render'
95 annotations
96 annotation (MarkerAnnotationExpr)
97 name (Name)
98 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
4 13
13 14
14 15
13 16
16 17
13 18
18 19
13 20
20 21
2 22
22 23
23 24
24 25
23 26
26 27
27 28
26 29
29 30
30 31
23 32
32 33
33 34
34 35
33 36
36 37
37 38
2 39
39 40
40 41
41 42
40 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
55 56
54 57
57 58
58 59
57 60
60 61
61 62
2 63
63 64
64 65
65 66
64 67
67 68
68 69
64 70
70 71
71 72
72 73
71 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
83 84
2 85
85 86
86 87
87 88
86 89
89 90
90 91
0 92
0 93
93 94
0 95
95 96
96 97
97 98

We'll often want to break up our drawing into separate functions, or different objects entirely. This is easy to do, all we need to do is pass in our ShapeRenderer.
