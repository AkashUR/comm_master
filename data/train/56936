87
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (ArrayAccessExpr)
7 index (BinaryExpr)
8 operator='PLUS'
9 left (NameExpr)
10 name (SimpleName)
11 identifier='index'
12 right (IntegerLiteralExpr)
13 value='0'
14 name (NameExpr)
15 name (SimpleName)
16 identifier='memory'
17 value (CastExpr)
18 expression (EnclosedExpr)
19 inner (BinaryExpr)
20 operator='BINARY_AND'
21 left (EnclosedExpr)
22 inner (BinaryExpr)
23 operator='SIGNED_RIGHT_SHIFT'
24 left (NameExpr)
25 name (SimpleName)
26 identifier='value'
27 right (EnclosedExpr)
28 inner (BinaryExpr)
29 operator='MULTIPLY'
30 left (IntegerLiteralExpr)
31 value='8'
32 right (IntegerLiteralExpr)
33 value='1'
34 right (IntegerLiteralExpr)
35 value='0xFF'
36 type (PrimitiveType)
37 type='BYTE'
38 statement (ExpressionStmt)
39 expression (AssignExpr)
40 operator='ASSIGN'
41 target (ArrayAccessExpr)
42 index (BinaryExpr)
43 operator='PLUS'
44 left (NameExpr)
45 name (SimpleName)
46 identifier='index'
47 right (IntegerLiteralExpr)
48 value='1'
49 name (NameExpr)
50 name (SimpleName)
51 identifier='memory'
52 value (CastExpr)
53 expression (EnclosedExpr)
54 inner (BinaryExpr)
55 operator='BINARY_AND'
56 left (NameExpr)
57 name (SimpleName)
58 identifier='value'
59 right (IntegerLiteralExpr)
60 value='0xFF'
61 type (PrimitiveType)
62 type='BYTE'
63 type (VoidType)
64 name (SimpleName)
65 identifier='writeShort'
66 parameters
67 parameter (Parameter)
68 isVarArgs='false'
69 name (SimpleName)
70 identifier='memory'
71 type (ArrayType)
72 origin='TYPE'
73 componentType (PrimitiveType)
74 type='BYTE'
75 parameter (Parameter)
76 isVarArgs='false'
77 name (SimpleName)
78 identifier='index'
79 type (PrimitiveType)
80 type='INT'
81 parameter (Parameter)
82 isVarArgs='false'
83 name (SimpleName)
84 identifier='value'
85 type (PrimitiveType)
86 type='SHORT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
7 9
9 10
10 11
7 12
12 13
6 14
14 15
15 16
4 17
17 18
18 19
19 20
19 21
21 22
22 23
22 24
24 25
25 26
22 27
27 28
28 29
28 30
30 31
28 32
32 33
19 34
34 35
17 36
36 37
2 38
38 39
39 40
39 41
41 42
42 43
42 44
44 45
45 46
42 47
47 48
41 49
49 50
50 51
39 52
52 53
53 54
54 55
54 56
56 57
57 58
54 59
59 60
52 61
61 62
0 63
0 64
64 65
0 66
66 67
67 68
67 69
69 70
67 71
71 72
71 73
73 74
66 75
75 76
75 77
77 78
75 79
79 80
66 81
81 82
81 83
83 84
81 85
85 86

Write value at index into a byte array highest to lowest byte, left to right.
