135
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='addOperator'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='dag'
13 arguments
14 argument (StringLiteralExpr)
15 value='intInput'
16 argument (ObjectCreationExpr)
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='IntegerOperator'
20 name (SimpleName)
21 identifier='intInput'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='IntegerOperator'
25 statement (ExpressionStmt)
26 expression (VariableDeclarationExpr)
27 variables
28 variable (VariableDeclarator)
29 initializer (MethodCallExpr)
30 name (SimpleName)
31 identifier='addOperator'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='dag'
35 arguments
36 argument (StringLiteralExpr)
37 value='oper'
38 argument (ObjectCreationExpr)
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='DevNullCounter'
42 name (SimpleName)
43 identifier='oper'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='DevNullCounter'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='put'
51 scope (MethodCallExpr)
52 name (SimpleName)
53 identifier='getAttributes'
54 scope (MethodCallExpr)
55 name (SimpleName)
56 identifier='getMeta'
57 scope (MethodCallExpr)
58 name (SimpleName)
59 identifier='getMeta'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='dag'
63 arguments
64 argument (NameExpr)
65 name (SimpleName)
66 identifier='oper'
67 arguments
68 argument (FieldAccessExpr)
69 name (SimpleName)
70 identifier='data'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='oper'
74 arguments
75 argument (FieldAccessExpr)
76 name (SimpleName)
77 identifier='QUEUE_CAPACITY'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='PortContext'
81 argument (NameExpr)
82 name (SimpleName)
83 identifier='QUEUE_CAPACITY'
84 statement (ExpressionStmt)
85 expression (MethodCallExpr)
86 name (SimpleName)
87 identifier='setLocality'
88 scope (MethodCallExpr)
89 name (SimpleName)
90 identifier='addStream'
91 scope (NameExpr)
92 name (SimpleName)
93 identifier='dag'
94 arguments
95 argument (StringLiteralExpr)
96 value='dev'
97 argument (FieldAccessExpr)
98 name (SimpleName)
99 identifier='integer_data'
100 scope (NameExpr)
101 name (SimpleName)
102 identifier='intInput'
103 argument (FieldAccessExpr)
104 name (SimpleName)
105 identifier='data'
106 scope (NameExpr)
107 name (SimpleName)
108 identifier='oper'
109 arguments
110 argument (NameExpr)
111 name (SimpleName)
112 identifier='locality'
113 type (VoidType)
114 name (SimpleName)
115 identifier='populateDAG'
116 parameters
117 parameter (Parameter)
118 isVarArgs='false'
119 name (SimpleName)
120 identifier='dag'
121 type (ClassOrInterfaceType)
122 name (SimpleName)
123 identifier='DAG'
124 parameter (Parameter)
125 isVarArgs='false'
126 name (SimpleName)
127 identifier='conf'
128 type (ClassOrInterfaceType)
129 name (SimpleName)
130 identifier='Configuration'
131 annotations
132 annotation (MarkerAnnotationExpr)
133 name (Name)
134 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
13 16
16 17
17 18
18 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
28 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
35 38
38 39
39 40
40 41
28 42
42 43
28 44
44 45
45 46
2 47
47 48
48 49
49 50
48 51
51 52
52 53
51 54
54 55
55 56
54 57
57 58
58 59
57 60
60 61
61 62
57 63
63 64
64 65
65 66
54 67
67 68
68 69
69 70
68 71
71 72
72 73
48 74
74 75
75 76
76 77
75 78
78 79
79 80
74 81
81 82
82 83
2 84
84 85
85 86
86 87
85 88
88 89
89 90
88 91
91 92
92 93
88 94
94 95
95 96
94 97
97 98
98 99
97 100
100 101
101 102
94 103
103 104
104 105
103 106
106 107
107 108
85 109
109 110
110 111
111 112
0 113
0 114
114 115
0 116
116 117
117 118
117 119
119 120
117 121
121 122
122 123
116 124
124 125
124 126
126 127
124 128
128 129
129 130
0 131
131 132
132 133
133 134

Tests both string and non string schema
