48
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='addALoad'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='cfw'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='contextLocal'
14 statement (ExpressionStmt)
15 expression (MethodCallExpr)
16 name (SimpleName)
17 identifier='addPush'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='cfw'
21 arguments
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='count'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='addScriptRuntimeInvoke'
29 arguments
30 argument (StringLiteralExpr)
31 value='addInstructionCount'
32 argument (BinaryExpr)
33 operator='PLUS'
34 left (StringLiteralExpr)
35 value='(Lorg/mozilla/javascript/Context;'
36 right (StringLiteralExpr)
37 value='I)V'
38 type (VoidType)
39 name (SimpleName)
40 identifier='addInstructionCount'
41 parameters
42 parameter (Parameter)
43 isVarArgs='false'
44 name (SimpleName)
45 identifier='count'
46 type (PrimitiveType)
47 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
2 14
14 15
15 16
16 17
15 18
18 19
19 20
15 21
21 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
29 32
32 33
32 34
34 35
32 36
36 37
0 38
0 39
39 40
0 41
41 42
42 43
42 44
44 45
42 46
46 47

Generate calls to ScriptRuntime.addInstructionCount to keep track of executed instructions and call <code>observeInstructionCount()</code> if a threshold is exceeded.<br> Takes the count as a parameter - used to add monitoring to loops and  other blocks that don't have any ops - this allows for monitoring/killing of while(true) loops and such.
