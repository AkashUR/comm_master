166
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='asList'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Arrays'
13 arguments
14 argument (MethodCallExpr)
15 name (SimpleName)
16 identifier='cook'
17 arguments
18 argument (StringLiteralExpr)
19 value='salmon'
20 argument (MethodCallExpr)
21 name (SimpleName)
22 identifier='cook'
23 arguments
24 argument (StringLiteralExpr)
25 value='asparagus'
26 argument (MethodCallExpr)
27 name (SimpleName)
28 identifier='cook'
29 arguments
30 argument (StringLiteralExpr)
31 value='enterotoxin'
32 name (SimpleName)
33 identifier='foodOnPlate'
34 type (ClassOrInterfaceType)
35 name (SimpleName)
36 identifier='List'
37 typeArguments
38 typeArgument (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='Food'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='forEach'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='foodOnPlate'
48 arguments
49 argument (NullLiteralExpr)
50 statement (ExpressionStmt)
51 expression (MethodCallExpr)
52 name (SimpleName)
53 identifier='forEach'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='foodOnPlate'
57 arguments
58 argument (MethodCallExpr)
59 name (SimpleName)
60 identifier='wrap'
61 scope (MethodCallExpr)
62 name (SimpleName)
63 identifier='suppress'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='Errors'
67 arguments
68 argument (NullLiteralExpr)
69 statement (ExpressionStmt)
70 expression (MethodCallExpr)
71 name (SimpleName)
72 identifier='forEach'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='foodOnPlate'
76 arguments
77 argument (MethodCallExpr)
78 name (SimpleName)
79 identifier='wrap'
80 scope (MethodCallExpr)
81 name (SimpleName)
82 identifier='log'
83 scope (NameExpr)
84 name (SimpleName)
85 identifier='Errors'
86 arguments
87 argument (NullLiteralExpr)
88 statement (ExpressionStmt)
89 expression (MethodCallExpr)
90 name (SimpleName)
91 identifier='forEach'
92 scope (NameExpr)
93 name (SimpleName)
94 identifier='foodOnPlate'
95 arguments
96 argument (MethodCallExpr)
97 name (SimpleName)
98 identifier='wrap'
99 scope (MethodCallExpr)
100 name (SimpleName)
101 identifier='rethrow'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='Errors'
105 arguments
106 argument (NullLiteralExpr)
107 statement (ExpressionStmt)
108 expression (MethodCallExpr)
109 name (SimpleName)
110 identifier='forEach'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='foodOnPlate'
114 arguments
115 argument (MethodCallExpr)
116 name (SimpleName)
117 identifier='wrap'
118 scope (MethodCallExpr)
119 name (SimpleName)
120 identifier='dialog'
121 scope (NameExpr)
122 name (SimpleName)
123 identifier='Errors'
124 arguments
125 argument (NullLiteralExpr)
126 statement (ExpressionStmt)
127 expression (VariableDeclarationExpr)
128 variables
129 variable (VariableDeclarator)
130 initializer (MethodCallExpr)
131 name (SimpleName)
132 identifier='createHandling'
133 scope (NameExpr)
134 name (SimpleName)
135 identifier='Errors'
136 arguments
137 argument (NullLiteralExpr)
138 name (SimpleName)
139 identifier='retryHandler'
140 type (ClassOrInterfaceType)
141 name (SimpleName)
142 identifier='Errors'
143 statement (ExpressionStmt)
144 expression (MethodCallExpr)
145 name (SimpleName)
146 identifier='forEach'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='foodOnPlate'
150 arguments
151 argument (MethodCallExpr)
152 name (SimpleName)
153 identifier='wrap'
154 scope (NameExpr)
155 name (SimpleName)
156 identifier='retryHandler'
157 arguments
158 argument (NullLiteralExpr)
159 type (VoidType)
160 name (SimpleName)
161 identifier='whyItsGreat'
162 thrownExceptions
163 thrownException (ClassOrInterfaceType)
164 name (SimpleName)
165 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
14 17
17 18
18 19
13 20
20 21
21 22
20 23
23 24
24 25
13 26
26 27
27 28
26 29
29 30
30 31
6 32
32 33
6 34
34 35
35 36
34 37
37 38
38 39
39 40
2 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
2 50
50 51
51 52
52 53
51 54
54 55
55 56
51 57
57 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
58 67
67 68
2 69
69 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
78 79
77 80
80 81
81 82
80 83
83 84
84 85
77 86
86 87
2 88
88 89
89 90
90 91
89 92
92 93
93 94
89 95
95 96
96 97
97 98
96 99
99 100
100 101
99 102
102 103
103 104
96 105
105 106
2 107
107 108
108 109
109 110
108 111
111 112
112 113
108 114
114 115
115 116
116 117
115 118
118 119
119 120
118 121
121 122
122 123
115 124
124 125
2 126
126 127
127 128
128 129
129 130
130 131
131 132
130 133
133 134
134 135
130 136
136 137
129 138
138 139
129 140
140 141
141 142
2 143
143 144
144 145
145 146
144 147
147 148
148 149
144 150
150 151
151 152
152 153
151 154
154 155
155 156
151 157
157 158
0 159
0 160
160 161
0 162
162 163
163 164
164 165

Errors is a simple little class that makes ErrorHandling a lot easier.
