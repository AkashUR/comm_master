110
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (MethodCallExpr)
5 name (SimpleName)
6 identifier='getEventType'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='event'
10 entries
11 entrie (SwitchEntryStmt)
12 label (FieldAccessExpr)
13 name (SimpleName)
14 identifier='BI'
15 scope (NameExpr)
16 name (SimpleName)
17 identifier='SerialPortEvent'
18 entrie (SwitchEntryStmt)
19 label (FieldAccessExpr)
20 name (SimpleName)
21 identifier='OE'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='SerialPortEvent'
25 entrie (SwitchEntryStmt)
26 label (FieldAccessExpr)
27 name (SimpleName)
28 identifier='FE'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='SerialPortEvent'
32 entrie (SwitchEntryStmt)
33 label (FieldAccessExpr)
34 name (SimpleName)
35 identifier='PE'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='SerialPortEvent'
39 entrie (SwitchEntryStmt)
40 label (FieldAccessExpr)
41 name (SimpleName)
42 identifier='CD'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='SerialPortEvent'
46 entrie (SwitchEntryStmt)
47 label (FieldAccessExpr)
48 name (SimpleName)
49 identifier='CTS'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='SerialPortEvent'
53 entrie (SwitchEntryStmt)
54 label (FieldAccessExpr)
55 name (SimpleName)
56 identifier='DSR'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='SerialPortEvent'
60 entrie (SwitchEntryStmt)
61 label (FieldAccessExpr)
62 name (SimpleName)
63 identifier='RI'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='SerialPortEvent'
67 entrie (SwitchEntryStmt)
68 label (FieldAccessExpr)
69 name (SimpleName)
70 identifier='OUTPUT_BUFFER_EMPTY'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='SerialPortEvent'
74 statements
75 statement (BreakStmt)
76 entrie (SwitchEntryStmt)
77 label (FieldAccessExpr)
78 name (SimpleName)
79 identifier='DATA_AVAILABLE'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='SerialPortEvent'
83 statements
84 statement (ExpressionStmt)
85 expression (MethodCallExpr)
86 name (SimpleName)
87 identifier='debug'
88 scope (NameExpr)
89 name (SimpleName)
90 identifier='log'
91 arguments
92 argument (StringLiteralExpr)
93 value='Data Available'
94 statement (ExpressionStmt)
95 expression (MethodCallExpr)
96 name (SimpleName)
97 identifier='handleOneIncomingReply'
98 statement (BreakStmt)
99 type (VoidType)
100 name (SimpleName)
101 identifier='serialEvent'
102 parameters
103 parameter (Parameter)
104 isVarArgs='false'
105 name (SimpleName)
106 identifier='event'
107 type (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='SerialPortEvent'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
3 10
10 11
11 12
12 13
13 14
12 15
15 16
16 17
10 18
18 19
19 20
20 21
19 22
22 23
23 24
10 25
25 26
26 27
27 28
26 29
29 30
30 31
10 32
32 33
33 34
34 35
33 36
36 37
37 38
10 39
39 40
40 41
41 42
40 43
43 44
44 45
10 46
46 47
47 48
48 49
47 50
50 51
51 52
10 53
53 54
54 55
55 56
54 57
57 58
58 59
10 60
60 61
61 62
62 63
61 64
64 65
65 66
10 67
67 68
68 69
69 70
68 71
71 72
72 73
67 74
74 75
10 76
76 77
77 78
78 79
77 80
80 81
81 82
76 83
83 84
84 85
85 86
86 87
85 88
88 89
89 90
85 91
91 92
92 93
83 94
94 95
95 96
96 97
83 98
0 99
0 100
100 101
0 102
102 103
103 104
103 105
105 106
103 107
107 108
108 109

serialEvent - respond to an event triggered by RXTX. In this case we are only dealing with DATA_AVAILABLE but the other events are left here for reference. AJB Jan 2010
