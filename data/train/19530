198
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='MockModel'
11 name (SimpleName)
12 identifier='mockModel'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='MockModel'
16 statement (ExpressionStmt)
17 expression (AssignExpr)
18 operator='ASSIGN'
19 target (FieldAccessExpr)
20 name (SimpleName)
21 identifier='booleanField'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='mockModel'
25 value (BooleanLiteralExpr)
26 value='false'
27 statement (ExpressionStmt)
28 expression (VariableDeclarationExpr)
29 variables
30 variable (VariableDeclarator)
31 initializer (MethodCallExpr)
32 name (SimpleName)
33 identifier='save'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='mockModel'
37 name (SimpleName)
38 identifier='id'
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='Long'
42 statement (ExpressionStmt)
43 expression (VariableDeclarationExpr)
44 variables
45 variable (VariableDeclarator)
46 initializer (FieldAccessExpr)
47 name (SimpleName)
48 identifier='booleanField'
49 scope (MethodCallExpr)
50 name (SimpleName)
51 identifier='load'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='MockModel'
55 arguments
56 argument (ClassExpr)
57 type (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='MockModel'
60 argument (NameExpr)
61 name (SimpleName)
62 identifier='id'
63 name (SimpleName)
64 identifier='databaseBooleanValue'
65 type (PrimitiveType)
66 type='BOOLEAN'
67 statement (ExpressionStmt)
68 expression (MethodCallExpr)
69 name (SimpleName)
70 identifier='assertEquals'
71 arguments
72 argument (BooleanLiteralExpr)
73 value='false'
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='databaseBooleanValue'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='assertEquals'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='mockModel'
85 argument (MethodCallExpr)
86 name (SimpleName)
87 identifier='executeSingle'
88 scope (MethodCallExpr)
89 name (SimpleName)
90 identifier='where'
91 scope (MethodCallExpr)
92 name (SimpleName)
93 identifier='from'
94 scope (ObjectCreationExpr)
95 type (ClassOrInterfaceType)
96 name (SimpleName)
97 identifier='Select'
98 arguments
99 argument (ClassExpr)
100 type (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='MockModel'
103 arguments
104 argument (StringLiteralExpr)
105 value='booleanField = ?'
106 argument (IntegerLiteralExpr)
107 value='0'
108 statement (ExpressionStmt)
109 expression (MethodCallExpr)
110 name (SimpleName)
111 identifier='assertEquals'
112 arguments
113 argument (NameExpr)
114 name (SimpleName)
115 identifier='mockModel'
116 argument (MethodCallExpr)
117 name (SimpleName)
118 identifier='executeSingle'
119 scope (MethodCallExpr)
120 name (SimpleName)
121 identifier='where'
122 scope (MethodCallExpr)
123 name (SimpleName)
124 identifier='from'
125 scope (ObjectCreationExpr)
126 type (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='Select'
129 arguments
130 argument (ClassExpr)
131 type (ClassOrInterfaceType)
132 name (SimpleName)
133 identifier='MockModel'
134 arguments
135 argument (StringLiteralExpr)
136 value='booleanField = ?'
137 argument (BooleanLiteralExpr)
138 value='false'
139 statement (ExpressionStmt)
140 expression (MethodCallExpr)
141 name (SimpleName)
142 identifier='assertNull'
143 arguments
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='executeSingle'
147 scope (MethodCallExpr)
148 name (SimpleName)
149 identifier='where'
150 scope (MethodCallExpr)
151 name (SimpleName)
152 identifier='from'
153 scope (ObjectCreationExpr)
154 type (ClassOrInterfaceType)
155 name (SimpleName)
156 identifier='Select'
157 arguments
158 argument (ClassExpr)
159 type (ClassOrInterfaceType)
160 name (SimpleName)
161 identifier='MockModel'
162 arguments
163 argument (StringLiteralExpr)
164 value='booleanField = ?'
165 argument (IntegerLiteralExpr)
166 value='1'
167 statement (ExpressionStmt)
168 expression (MethodCallExpr)
169 name (SimpleName)
170 identifier='assertNull'
171 arguments
172 argument (MethodCallExpr)
173 name (SimpleName)
174 identifier='executeSingle'
175 scope (MethodCallExpr)
176 name (SimpleName)
177 identifier='where'
178 scope (MethodCallExpr)
179 name (SimpleName)
180 identifier='from'
181 scope (ObjectCreationExpr)
182 type (ClassOrInterfaceType)
183 name (SimpleName)
184 identifier='Select'
185 arguments
186 argument (ClassExpr)
187 type (ClassOrInterfaceType)
188 name (SimpleName)
189 identifier='MockModel'
190 arguments
191 argument (StringLiteralExpr)
192 value='booleanField = ?'
193 argument (BooleanLiteralExpr)
194 value='true'
195 type (VoidType)
196 name (SimpleName)
197 identifier='testBooleanColumnType'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
17 19
19 20
20 21
19 22
22 23
23 24
17 25
25 26
2 27
27 28
28 29
29 30
30 31
31 32
32 33
31 34
34 35
35 36
30 37
37 38
30 39
39 40
40 41
2 42
42 43
43 44
44 45
45 46
46 47
47 48
46 49
49 50
50 51
49 52
52 53
53 54
49 55
55 56
56 57
57 58
58 59
55 60
60 61
61 62
45 63
63 64
45 65
65 66
2 67
67 68
68 69
69 70
68 71
71 72
72 73
71 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
83 84
81 85
85 86
86 87
85 88
88 89
89 90
88 91
91 92
92 93
91 94
94 95
95 96
96 97
91 98
98 99
99 100
100 101
101 102
88 103
103 104
104 105
103 106
106 107
2 108
108 109
109 110
110 111
109 112
112 113
113 114
114 115
112 116
116 117
117 118
116 119
119 120
120 121
119 122
122 123
123 124
122 125
125 126
126 127
127 128
122 129
129 130
130 131
131 132
132 133
119 134
134 135
135 136
134 137
137 138
2 139
139 140
140 141
141 142
140 143
143 144
144 145
145 146
144 147
147 148
148 149
147 150
150 151
151 152
150 153
153 154
154 155
155 156
150 157
157 158
158 159
159 160
160 161
147 162
162 163
163 164
162 165
165 166
2 167
167 168
168 169
169 170
168 171
171 172
172 173
173 174
172 175
175 176
176 177
175 178
178 179
179 180
178 181
181 182
182 183
183 184
178 185
185 186
186 187
187 188
188 189
175 190
190 191
191 192
190 193
193 194
0 195
0 196
196 197

Boolean should handle integer (0/1) and boolean (false/true) values.
