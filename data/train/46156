69
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='is'
9 statement (ExpressionStmt)
10 expression (MethodCallExpr)
11 name (SimpleName)
12 identifier='initFields'
13 scope (ThisExpr)
14 statement (ExpressionStmt)
15 expression (AssignExpr)
16 operator='ASSIGN'
17 target (FieldAccessExpr)
18 name (SimpleName)
19 identifier='len'
20 scope (ThisExpr)
21 value (MethodCallExpr)
22 name (SimpleName)
23 identifier='read'
24 scope (FieldAccessExpr)
25 name (SimpleName)
26 identifier='in'
27 scope (ThisExpr)
28 arguments
29 argument (FieldAccessExpr)
30 name (SimpleName)
31 identifier='buff'
32 scope (ThisExpr)
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='check'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='Assert'
40 arguments
41 argument (BinaryExpr)
42 operator='NOT_EQUALS'
43 left (FieldAccessExpr)
44 name (SimpleName)
45 identifier='len'
46 scope (ThisExpr)
47 right (IntegerLiteralExpr)
48 value='0'
49 argument (FieldAccessExpr)
50 name (SimpleName)
51 identifier='SYSTEM_STREAM_EMPTY'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='EC'
55 name (SimpleName)
56 identifier='BufferedDataInputStream'
57 parameters
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='is'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='InputStream'
65 thrownExceptions
66 thrownException (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='IOException'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
2 9
9 10
10 11
11 12
10 13
2 14
14 15
15 16
15 17
17 18
18 19
17 20
15 21
21 22
22 23
21 24
24 25
25 26
24 27
21 28
28 29
29 30
30 31
29 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
34 40
40 41
41 42
41 43
43 44
44 45
43 46
41 47
47 48
40 49
49 50
50 51
49 52
52 53
53 54
0 55
55 56
0 57
57 58
58 59
58 60
60 61
58 62
62 63
63 64
0 65
65 66
66 67
67 68

Open this input stream on the underlying stream <code>is</code>.
