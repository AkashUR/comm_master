104
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (NameExpr)
5 name (SimpleName)
6 identifier='featureID'
7 entries
8 entrie (SwitchEntryStmt)
9 label (FieldAccessExpr)
10 name (SimpleName)
11 identifier='EXECUTION_REGION__DEEP_ENTER_SEQUENCE'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='SexecPackage'
15 statements
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setDeepEnterSequence'
20 arguments
21 argument (CastExpr)
22 expression (NullLiteralExpr)
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='Sequence'
26 statement (ReturnStmt)
27 entrie (SwitchEntryStmt)
28 label (FieldAccessExpr)
29 name (SimpleName)
30 identifier='EXECUTION_REGION__SHALLOW_ENTER_SEQUENCE'
31 scope (NameExpr)
32 name (SimpleName)
33 identifier='SexecPackage'
34 statements
35 statement (ExpressionStmt)
36 expression (MethodCallExpr)
37 name (SimpleName)
38 identifier='setShallowEnterSequence'
39 arguments
40 argument (CastExpr)
41 expression (NullLiteralExpr)
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='Sequence'
45 statement (ReturnStmt)
46 entrie (SwitchEntryStmt)
47 label (FieldAccessExpr)
48 name (SimpleName)
49 identifier='EXECUTION_REGION__HISTORY_VECTOR'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='SexecPackage'
53 statements
54 statement (ExpressionStmt)
55 expression (MethodCallExpr)
56 name (SimpleName)
57 identifier='setHistoryVector'
58 arguments
59 argument (CastExpr)
60 expression (NullLiteralExpr)
61 type (ClassOrInterfaceType)
62 name (SimpleName)
63 identifier='StateVector'
64 statement (ReturnStmt)
65 entrie (SwitchEntryStmt)
66 label (FieldAccessExpr)
67 name (SimpleName)
68 identifier='EXECUTION_REGION__NODES'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='SexecPackage'
72 statements
73 statement (ExpressionStmt)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='clear'
77 scope (MethodCallExpr)
78 name (SimpleName)
79 identifier='getNodes'
80 statement (ReturnStmt)
81 statement (ExpressionStmt)
82 expression (MethodCallExpr)
83 name (SimpleName)
84 identifier='eUnset'
85 scope (SuperExpr)
86 arguments
87 argument (NameExpr)
88 name (SimpleName)
89 identifier='featureID'
90 type (VoidType)
91 name (SimpleName)
92 identifier='eUnset'
93 parameters
94 parameter (Parameter)
95 isVarArgs='false'
96 name (SimpleName)
97 identifier='featureID'
98 type (PrimitiveType)
99 type='INT'
100 annotations
101 annotation (MarkerAnnotationExpr)
102 name (Name)
103 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
3 7
7 8
8 9
9 10
10 11
9 12
12 13
13 14
8 15
15 16
16 17
17 18
18 19
17 20
20 21
21 22
21 23
23 24
24 25
15 26
7 27
27 28
28 29
29 30
28 31
31 32
32 33
27 34
34 35
35 36
36 37
37 38
36 39
39 40
40 41
40 42
42 43
43 44
34 45
7 46
46 47
47 48
48 49
47 50
50 51
51 52
46 53
53 54
54 55
55 56
56 57
55 58
58 59
59 60
59 61
61 62
62 63
53 64
7 65
65 66
66 67
67 68
66 69
69 70
70 71
65 72
72 73
73 74
74 75
75 76
74 77
77 78
78 79
72 80
2 81
81 82
82 83
83 84
82 85
82 86
86 87
87 88
88 89
0 90
0 91
91 92
0 93
93 94
94 95
94 96
96 97
94 98
98 99
0 100
100 101
101 102
102 103

<!-- begin-user-doc --> <!-- end-user-doc -->
