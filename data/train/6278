200
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (BinaryExpr)
8 operator='PLUS'
9 left (BinaryExpr)
10 operator='PLUS'
11 left (BinaryExpr)
12 operator='PLUS'
13 left (MethodCallExpr)
14 name (SimpleName)
15 identifier='getName'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='controller'
19 right (StringLiteralExpr)
20 value=' ['
21 right (MethodCallExpr)
22 name (SimpleName)
23 identifier='toString'
24 scope (MethodCallExpr)
25 name (SimpleName)
26 identifier='getType'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='controller'
30 right (StringLiteralExpr)
31 value=']'
32 name (SimpleName)
33 identifier='cname'
34 type (ClassOrInterfaceType)
35 name (SimpleName)
36 identifier='String'
37 statement (ExpressionStmt)
38 expression (VariableDeclarationExpr)
39 variables
40 variable (VariableDeclarator)
41 initializer (MethodCallExpr)
42 name (SimpleName)
43 identifier='getNode'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='UsbNode'
47 arguments
48 argument (NameExpr)
49 name (SimpleName)
50 identifier='cname'
51 argument (NameExpr)
52 name (SimpleName)
53 identifier='controller'
54 argument (NullLiteralExpr)
55 name (SimpleName)
56 identifier='cNode'
57 type (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='UsbNode'
60 statement (ExpressionStmt)
61 expression (AssignExpr)
62 operator='ASSIGN'
63 target (NameExpr)
64 name (SimpleName)
65 identifier='cNode'
66 value (CastExpr)
67 expression (MethodCallExpr)
68 name (SimpleName)
69 identifier='insertNode'
70 arguments
71 argument (NameExpr)
72 name (SimpleName)
73 identifier='cNode'
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='dRoot'
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='UsbNode'
80 statement (ExpressionStmt)
81 expression (VariableDeclarationExpr)
82 variables
83 variable (VariableDeclarator)
84 initializer (BinaryExpr)
85 operator='PLUS'
86 left (BinaryExpr)
87 operator='PLUS'
88 left (BinaryExpr)
89 operator='PLUS'
90 left (MethodCallExpr)
91 name (SimpleName)
92 identifier='getName'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='component'
96 right (StringLiteralExpr)
97 value=' ['
98 right (MethodCallExpr)
99 name (SimpleName)
100 identifier='toString'
101 scope (MethodCallExpr)
102 name (SimpleName)
103 identifier='getIdentifier'
104 scope (NameExpr)
105 name (SimpleName)
106 identifier='component'
107 right (StringLiteralExpr)
108 value=']'
109 name (SimpleName)
110 identifier='dname'
111 type (ClassOrInterfaceType)
112 name (SimpleName)
113 identifier='String'
114 statement (ExpressionStmt)
115 expression (VariableDeclarationExpr)
116 variables
117 variable (VariableDeclarator)
118 initializer (MethodCallExpr)
119 name (SimpleName)
120 identifier='getNode'
121 scope (NameExpr)
122 name (SimpleName)
123 identifier='UsbNode'
124 arguments
125 argument (NameExpr)
126 name (SimpleName)
127 identifier='dname'
128 argument (NameExpr)
129 name (SimpleName)
130 identifier='controller'
131 argument (NameExpr)
132 name (SimpleName)
133 identifier='component'
134 name (SimpleName)
135 identifier='dNode'
136 type (ClassOrInterfaceType)
137 name (SimpleName)
138 identifier='UsbNode'
139 statement (ExpressionStmt)
140 expression (AssignExpr)
141 operator='ASSIGN'
142 target (NameExpr)
143 name (SimpleName)
144 identifier='dNode'
145 value (CastExpr)
146 expression (MethodCallExpr)
147 name (SimpleName)
148 identifier='insertNode'
149 arguments
150 argument (NameExpr)
151 name (SimpleName)
152 identifier='dNode'
153 argument (NameExpr)
154 name (SimpleName)
155 identifier='cNode'
156 type (ClassOrInterfaceType)
157 name (SimpleName)
158 identifier='UsbNode'
159 statement (ExpressionStmt)
160 expression (MethodCallExpr)
161 name (SimpleName)
162 identifier='setValue'
163 scope (NameExpr)
164 name (SimpleName)
165 identifier='dNode'
166 arguments
167 argument (NameExpr)
168 name (SimpleName)
169 identifier='value'
170 statement (ExpressionStmt)
171 expression (MethodCallExpr)
172 name (SimpleName)
173 identifier='firePropertyChange'
174 scope (NameExpr)
175 name (SimpleName)
176 identifier='pcs'
177 arguments
178 argument (StringLiteralExpr)
179 value='Value'
180 argument (NameExpr)
181 name (SimpleName)
182 identifier='dNode'
183 argument (MethodCallExpr)
184 name (SimpleName)
185 identifier='valueOf'
186 scope (NameExpr)
187 name (SimpleName)
188 identifier='Float'
189 arguments
190 argument (NameExpr)
191 name (SimpleName)
192 identifier='value'
193 type (VoidType)
194 name (SimpleName)
195 identifier='run'
196 annotations
197 annotation (MarkerAnnotationExpr)
198 name (Name)
199 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
7 9
9 10
9 11
11 12
11 13
13 14
14 15
13 16
16 17
17 18
11 19
19 20
9 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
7 30
30 31
6 32
32 33
6 34
34 35
35 36
2 37
37 38
38 39
39 40
40 41
41 42
42 43
41 44
44 45
45 46
41 47
47 48
48 49
49 50
47 51
51 52
52 53
47 54
40 55
55 56
40 57
57 58
58 59
2 60
60 61
61 62
61 63
63 64
64 65
61 66
66 67
67 68
68 69
67 70
70 71
71 72
72 73
70 74
74 75
75 76
66 77
77 78
78 79
2 80
80 81
81 82
82 83
83 84
84 85
84 86
86 87
86 88
88 89
88 90
90 91
91 92
90 93
93 94
94 95
88 96
96 97
86 98
98 99
99 100
98 101
101 102
102 103
101 104
104 105
105 106
84 107
107 108
83 109
109 110
83 111
111 112
112 113
2 114
114 115
115 116
116 117
117 118
118 119
119 120
118 121
121 122
122 123
118 124
124 125
125 126
126 127
124 128
128 129
129 130
124 131
131 132
132 133
117 134
134 135
117 136
136 137
137 138
2 139
139 140
140 141
140 142
142 143
143 144
140 145
145 146
146 147
147 148
146 149
149 150
150 151
151 152
149 153
153 154
154 155
145 156
156 157
157 158
2 159
159 160
160 161
161 162
160 163
163 164
164 165
160 166
166 167
167 168
168 169
2 170
170 171
171 172
172 173
171 174
174 175
175 176
171 177
177 178
178 179
177 180
180 181
181 182
177 183
183 184
184 185
183 186
186 187
187 188
183 189
189 190
190 191
191 192
0 193
0 194
194 195
0 196
196 197
197 198
198 199

Handle report on Swing thread to ensure tree node exists and is updated
