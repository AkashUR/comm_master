134
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='r'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='g'
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='b'
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (NameExpr)
19 name (SimpleName)
20 identifier='argb'
21 value (BinaryExpr)
22 operator='BINARY_OR'
23 left (BinaryExpr)
24 operator='BINARY_OR'
25 left (BinaryExpr)
26 operator='BINARY_OR'
27 left (EnclosedExpr)
28 inner (BinaryExpr)
29 operator='LEFT_SHIFT'
30 left (EnclosedExpr)
31 inner (CastExpr)
32 expression (EnclosedExpr)
33 inner (BinaryExpr)
34 operator='MULTIPLY'
35 left (NameExpr)
36 name (SimpleName)
37 identifier='a'
38 right (IntegerLiteralExpr)
39 value='255'
40 type (PrimitiveType)
41 type='INT'
42 right (IntegerLiteralExpr)
43 value='24'
44 right (EnclosedExpr)
45 inner (BinaryExpr)
46 operator='LEFT_SHIFT'
47 left (EnclosedExpr)
48 inner (BinaryExpr)
49 operator='BINARY_AND'
50 left (CastExpr)
51 expression (EnclosedExpr)
52 inner (BinaryExpr)
53 operator='MULTIPLY'
54 left (NameExpr)
55 name (SimpleName)
56 identifier='r'
57 right (IntegerLiteralExpr)
58 value='255'
59 type (PrimitiveType)
60 type='INT'
61 right (IntegerLiteralExpr)
62 value='0xFF'
63 right (IntegerLiteralExpr)
64 value='16'
65 right (EnclosedExpr)
66 inner (BinaryExpr)
67 operator='LEFT_SHIFT'
68 left (EnclosedExpr)
69 inner (BinaryExpr)
70 operator='BINARY_AND'
71 left (CastExpr)
72 expression (EnclosedExpr)
73 inner (BinaryExpr)
74 operator='MULTIPLY'
75 left (NameExpr)
76 name (SimpleName)
77 identifier='g'
78 right (IntegerLiteralExpr)
79 value='255'
80 type (PrimitiveType)
81 type='INT'
82 right (IntegerLiteralExpr)
83 value='0xFF'
84 right (IntegerLiteralExpr)
85 value='8'
86 right (EnclosedExpr)
87 inner (BinaryExpr)
88 operator='LEFT_SHIFT'
89 left (EnclosedExpr)
90 inner (BinaryExpr)
91 operator='BINARY_AND'
92 left (CastExpr)
93 expression (EnclosedExpr)
94 inner (BinaryExpr)
95 operator='MULTIPLY'
96 left (NameExpr)
97 name (SimpleName)
98 identifier='b'
99 right (IntegerLiteralExpr)
100 value='255'
101 type (PrimitiveType)
102 type='INT'
103 right (IntegerLiteralExpr)
104 value='0xFF'
105 right (IntegerLiteralExpr)
106 value='0'
107 name (SimpleName)
108 identifier='OMColor'
109 parameters
110 parameter (Parameter)
111 isVarArgs='false'
112 name (SimpleName)
113 identifier='a'
114 type (PrimitiveType)
115 type='FLOAT'
116 parameter (Parameter)
117 isVarArgs='false'
118 name (SimpleName)
119 identifier='r'
120 type (PrimitiveType)
121 type='FLOAT'
122 parameter (Parameter)
123 isVarArgs='false'
124 name (SimpleName)
125 identifier='g'
126 type (PrimitiveType)
127 type='FLOAT'
128 parameter (Parameter)
129 isVarArgs='false'
130 name (SimpleName)
131 identifier='b'
132 type (PrimitiveType)
133 type='FLOAT'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
13 14
2 15
15 16
16 17
16 18
18 19
19 20
16 21
21 22
21 23
23 24
23 25
25 26
25 27
27 28
28 29
28 30
30 31
31 32
32 33
33 34
33 35
35 36
36 37
33 38
38 39
31 40
40 41
28 42
42 43
25 44
44 45
45 46
45 47
47 48
48 49
48 50
50 51
51 52
52 53
52 54
54 55
55 56
52 57
57 58
50 59
59 60
48 61
61 62
45 63
63 64
23 65
65 66
66 67
66 68
68 69
69 70
69 71
71 72
72 73
73 74
73 75
75 76
76 77
73 78
78 79
71 80
80 81
69 82
82 83
66 84
84 85
21 86
86 87
87 88
87 89
89 90
90 91
90 92
92 93
93 94
94 95
94 96
96 97
97 98
94 99
99 100
92 101
101 102
90 103
103 104
87 105
105 106
0 107
107 108
0 109
109 110
110 111
110 112
112 113
110 114
114 115
109 116
116 117
116 118
118 119
116 120
120 121
109 122
122 123
122 124
124 125
122 126
126 127
109 128
128 129
128 130
130 131
128 132
132 133

Create a color with the specified red, green, and blue values, where each of the values is in the range 0.0-1.0. The value 0.0 indicates no contribution from the primary color component. The value 1.0 indicates the maximum intensity of the primary color component. //
