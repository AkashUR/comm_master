87
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='keyFunc'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='keyFunc'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='mapType'
19 scope (ThisExpr)
20 value (FieldAccessExpr)
21 name (SimpleName)
22 identifier='HASH_TABLE'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='MapType'
26 statement (ExpressionStmt)
27 expression (AssignExpr)
28 operator='ASSIGN'
29 target (FieldAccessExpr)
30 name (SimpleName)
31 identifier='locked'
32 scope (ThisExpr)
33 value (BooleanLiteralExpr)
34 value='false'
35 statement (ExpressionStmt)
36 expression (AssignExpr)
37 operator='ASSIGN'
38 target (FieldAccessExpr)
39 name (SimpleName)
40 identifier='num'
41 scope (ThisExpr)
42 value (IntegerLiteralExpr)
43 value='0'
44 statement (ExpressionStmt)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='allocate'
48 arguments
49 argument (MethodCallExpr)
50 name (SimpleName)
51 identifier='getCapacity'
52 arguments
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='expectedSize'
56 argument (BooleanLiteralExpr)
57 value='false'
58 statement (ExpressionStmt)
59 expression (AssignExpr)
60 operator='ASSIGN'
61 target (FieldAccessExpr)
62 name (SimpleName)
63 identifier='numCollisions'
64 scope (ThisExpr)
65 value (IntegerLiteralExpr)
66 value='0'
67 name (SimpleName)
68 identifier='TIntMap'
69 parameters
70 parameter (Parameter)
71 isVarArgs='false'
72 name (SimpleName)
73 identifier='keyFunc'
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='Functionality'
77 typeArguments
78 typeArgument (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='T'
81 parameter (Parameter)
82 isVarArgs='false'
83 name (SimpleName)
84 identifier='expectedSize'
85 type (PrimitiveType)
86 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
20 23
23 24
24 25
2 26
26 27
27 28
27 29
29 30
30 31
29 32
27 33
33 34
2 35
35 36
36 37
36 38
38 39
39 40
38 41
36 42
42 43
2 44
44 45
45 46
46 47
45 48
48 49
49 50
50 51
49 52
52 53
53 54
54 55
52 56
56 57
2 58
58 59
59 60
59 61
61 62
62 63
61 64
59 65
65 66
0 67
67 68
0 69
69 70
70 71
70 72
72 73
70 74
74 75
75 76
74 77
77 78
78 79
79 80
69 81
81 82
81 83
83 84
81 85
85 86

expectedSize: expected number of entries we're going to have in the map.
