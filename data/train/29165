173
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='CharacterRunAutomaton'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='toAutomaton'
15 scope (ObjectCreationExpr)
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='RegExp'
19 arguments
20 argument (StringLiteralExpr)
21 value='...'
22 name (SimpleName)
23 identifier='single'
24 type (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='CharacterRunAutomaton'
27 statement (ExpressionStmt)
28 expression (VariableDeclarationExpr)
29 variables
30 variable (VariableDeclarator)
31 initializer (ObjectCreationExpr)
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='MockAnalyzer'
35 arguments
36 argument (MethodCallExpr)
37 name (SimpleName)
38 identifier='random'
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='single'
42 argument (BooleanLiteralExpr)
43 value='false'
44 name (SimpleName)
45 identifier='a'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='Analyzer'
49 statement (ExpressionStmt)
50 expression (MethodCallExpr)
51 name (SimpleName)
52 identifier='assertAnalyzesTo'
53 arguments
54 argument (NameExpr)
55 name (SimpleName)
56 identifier='a'
57 argument (StringLiteralExpr)
58 value='foobar'
59 argument (ArrayCreationExpr)
60 elementType (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='String'
63 initializer (ArrayInitializerExpr)
64 values
65 value (StringLiteralExpr)
66 value='foo'
67 value (StringLiteralExpr)
68 value='bar'
69 levels
70 level (ArrayCreationLevel)
71 argument (ArrayCreationExpr)
72 elementType (PrimitiveType)
73 type='INT'
74 initializer (ArrayInitializerExpr)
75 values
76 value (IntegerLiteralExpr)
77 value='0'
78 value (IntegerLiteralExpr)
79 value='3'
80 levels
81 level (ArrayCreationLevel)
82 argument (ArrayCreationExpr)
83 elementType (PrimitiveType)
84 type='INT'
85 initializer (ArrayInitializerExpr)
86 values
87 value (IntegerLiteralExpr)
88 value='3'
89 value (IntegerLiteralExpr)
90 value='6'
91 levels
92 level (ArrayCreationLevel)
93 statement (ExpressionStmt)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='assertTokenStreamContents'
97 arguments
98 argument (MethodCallExpr)
99 name (SimpleName)
100 identifier='tokenStream'
101 scope (NameExpr)
102 name (SimpleName)
103 identifier='a'
104 arguments
105 argument (StringLiteralExpr)
106 value='bogus'
107 argument (StringLiteralExpr)
108 value='fooba'
109 argument (ArrayCreationExpr)
110 elementType (ClassOrInterfaceType)
111 name (SimpleName)
112 identifier='String'
113 initializer (ArrayInitializerExpr)
114 values
115 value (StringLiteralExpr)
116 value='foo'
117 levels
118 level (ArrayCreationLevel)
119 argument (ArrayCreationExpr)
120 elementType (PrimitiveType)
121 type='INT'
122 initializer (ArrayInitializerExpr)
123 values
124 value (IntegerLiteralExpr)
125 value='0'
126 levels
127 level (ArrayCreationLevel)
128 argument (ArrayCreationExpr)
129 elementType (PrimitiveType)
130 type='INT'
131 initializer (ArrayInitializerExpr)
132 values
133 value (IntegerLiteralExpr)
134 value='3'
135 levels
136 level (ArrayCreationLevel)
137 argument (ArrayCreationExpr)
138 elementType (PrimitiveType)
139 type='INT'
140 initializer (ArrayInitializerExpr)
141 values
142 value (IntegerLiteralExpr)
143 value='1'
144 levels
145 level (ArrayCreationLevel)
146 argument (ObjectCreationExpr)
147 type (ClassOrInterfaceType)
148 name (SimpleName)
149 identifier='Integer'
150 arguments
151 argument (IntegerLiteralExpr)
152 value='5'
153 statement (ExpressionStmt)
154 expression (MethodCallExpr)
155 name (SimpleName)
156 identifier='checkRandomData'
157 arguments
158 argument (MethodCallExpr)
159 name (SimpleName)
160 identifier='random'
161 argument (NameExpr)
162 name (SimpleName)
163 identifier='a'
164 argument (IntegerLiteralExpr)
165 value='100'
166 type (VoidType)
167 name (SimpleName)
168 identifier='testThreeChars'
169 thrownExceptions
170 thrownException (ClassOrInterfaceType)
171 name (SimpleName)
172 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
12 15
15 16
16 17
17 18
15 19
19 20
20 21
6 22
22 23
6 24
24 25
25 26
2 27
27 28
28 29
29 30
30 31
31 32
32 33
33 34
31 35
35 36
36 37
37 38
35 39
39 40
40 41
35 42
42 43
30 44
44 45
30 46
46 47
47 48
2 49
49 50
50 51
51 52
50 53
53 54
54 55
55 56
53 57
57 58
53 59
59 60
60 61
61 62
59 63
63 64
64 65
65 66
64 67
67 68
59 69
69 70
53 71
71 72
72 73
71 74
74 75
75 76
76 77
75 78
78 79
71 80
80 81
53 82
82 83
83 84
82 85
85 86
86 87
87 88
86 89
89 90
82 91
91 92
2 93
93 94
94 95
95 96
94 97
97 98
98 99
99 100
98 101
101 102
102 103
98 104
104 105
105 106
104 107
107 108
97 109
109 110
110 111
111 112
109 113
113 114
114 115
115 116
109 117
117 118
97 119
119 120
120 121
119 122
122 123
123 124
124 125
119 126
126 127
97 128
128 129
129 130
128 131
131 132
132 133
133 134
128 135
135 136
97 137
137 138
138 139
137 140
140 141
141 142
142 143
137 144
144 145
97 146
146 147
147 148
148 149
146 150
150 151
151 152
2 153
153 154
154 155
155 156
154 157
157 158
158 159
159 160
157 161
161 162
162 163
157 164
164 165
0 166
0 167
167 168
0 169
169 170
170 171
171 172

Test a configuration where three characters makes a term
