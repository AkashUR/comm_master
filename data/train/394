46
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='majorTick'
9 value (IntegerLiteralExpr)
10 value='10'
11 statement (ExpressionStmt)
12 expression (AssignExpr)
13 operator='ASSIGN'
14 target (NameExpr)
15 name (SimpleName)
16 identifier='majorTickCount'
17 value (BinaryExpr)
18 operator='PLUS'
19 left (CastExpr)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='round'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='Math'
26 arguments
27 argument (MethodCallExpr)
28 name (SimpleName)
29 identifier='log10'
30 arguments
31 argument (BinaryExpr)
32 operator='DIVIDE'
33 left (NameExpr)
34 name (SimpleName)
35 identifier='maxTick'
36 right (NameExpr)
37 name (SimpleName)
38 identifier='minTick'
39 type (PrimitiveType)
40 type='INT'
41 right (IntegerLiteralExpr)
42 value='1'
43 type (VoidType)
44 name (SimpleName)
45 identifier='calcMajorTick'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
2 11
11 12
12 13
12 14
14 15
15 16
12 17
17 18
17 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
27 30
30 31
31 32
31 33
33 34
34 35
31 36
36 37
37 38
19 39
39 40
17 41
41 42
0 43
0 44
44 45

Calculate the optimum major tick distance.
