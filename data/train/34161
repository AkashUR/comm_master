41
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='startDrag'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='dragSource'
10 arguments
11 argument (ThisExpr)
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='dragCursor'
15 argument (NameExpr)
16 name (SimpleName)
17 identifier='transferable'
18 argument (NullLiteralExpr)
19 type (VoidType)
20 name (SimpleName)
21 identifier='startDrag'
22 parameters
23 parameter (Parameter)
24 isVarArgs='false'
25 name (SimpleName)
26 identifier='dragCursor'
27 type (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='Cursor'
30 parameter (Parameter)
31 isVarArgs='false'
32 name (SimpleName)
33 identifier='transferable'
34 type (ClassOrInterfaceType)
35 name (SimpleName)
36 identifier='Transferable'
37 thrownExceptions
38 thrownException (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='InvalidDnDOperationException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
10 12
12 13
13 14
10 15
15 16
16 17
10 18
0 19
0 20
20 21
0 22
22 23
23 24
23 25
25 26
23 27
27 28
28 29
22 30
30 31
30 32
32 33
30 34
34 35
35 36
0 37
37 38
38 39
39 40

Starts the drag operation given the <code>Cursor</code> for this drag operation and the <code>Transferable</code> representing the source data for this drag operation. <br> If a <code>null</code> <code>Cursor</code> is specified no exception will be thrown and default drag cursors will be used instead. <br> If a <code>null</code> <code>Transferable</code> is specified <code>NullPointerException</code> will be thrown.
