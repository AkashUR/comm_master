86
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setProgrammerManager'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='InstanceManager'
10 arguments
11 argument (ObjectCreationExpr)
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='DebugProgrammerManager'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (MethodCallExpr)
20 name (SimpleName)
21 identifier='getAddressedProgrammer'
22 scope (MethodCallExpr)
23 name (SimpleName)
24 identifier='getDefault'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='InstanceManager'
28 arguments
29 argument (ClassExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='ProgrammerManager'
33 scope (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='jmri'
36 arguments
37 argument (BooleanLiteralExpr)
38 value='true'
39 argument (IntegerLiteralExpr)
40 value='777'
41 name (SimpleName)
42 identifier='p'
43 type (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='Programmer'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='assertTrue'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='Assert'
53 arguments
54 argument (StringLiteralExpr)
55 value='same ops mode programmer'
56 argument (BinaryExpr)
57 operator='EQUALS'
58 left (MethodCallExpr)
59 name (SimpleName)
60 identifier='getAddressedProgrammer'
61 scope (MethodCallExpr)
62 name (SimpleName)
63 identifier='getDefault'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='InstanceManager'
67 arguments
68 argument (ClassExpr)
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='ProgrammerManager'
72 scope (ClassOrInterfaceType)
73 name (SimpleName)
74 identifier='jmri'
75 arguments
76 argument (BooleanLiteralExpr)
77 value='true'
78 argument (IntegerLiteralExpr)
79 value='777'
80 right (NameExpr)
81 name (SimpleName)
82 identifier='p'
83 type (VoidType)
84 name (SimpleName)
85 identifier='testOpsModeUnique'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
19 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
30 31
31 32
30 33
33 34
34 35
19 36
36 37
37 38
36 39
39 40
18 41
41 42
18 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
53 56
56 57
56 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
69 70
70 71
69 72
72 73
73 74
58 75
75 76
76 77
75 78
78 79
56 80
80 81
81 82
0 83
0 84
84 85

Any identical ops mode request gets the same object
