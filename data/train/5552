73
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (IntegerLiteralExpr)
7 value='1'
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='size'
11 argument (NullLiteralExpr)
12 statement (ExpressionStmt)
13 expression (AssignExpr)
14 operator='ASSIGN'
15 target (FieldAccessExpr)
16 name (SimpleName)
17 identifier='addr'
18 scope (ThisExpr)
19 value (ObjectCreationExpr)
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='DirectArrayRowAddress'
23 arguments
24 argument (FieldAccessExpr)
25 name (SimpleName)
26 identifier='$'
27 scope (ThisExpr)
28 argument (IntegerLiteralExpr)
29 value='0'
30 argument (NullLiteralExpr)
31 argument (IntegerLiteralExpr)
32 value='0'
33 argument (BinaryExpr)
34 operator='MINUS'
35 left (NameExpr)
36 name (SimpleName)
37 identifier='size'
38 right (IntegerLiteralExpr)
39 value='1'
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='flags'
43 argument (BooleanLiteralExpr)
44 value='true'
45 argument (IntegerLiteralExpr)
46 value='1'
47 argument (NameExpr)
48 name (SimpleName)
49 identifier='size'
50 name (SimpleName)
51 identifier='Array'
52 parameters
53 parameter (Parameter)
54 isVarArgs='false'
55 name (SimpleName)
56 identifier='size'
57 type (PrimitiveType)
58 type='INT'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='flags'
63 type (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='Set'
66 typeArguments
67 typeArgument (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='Flags'
70 scope (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='Address'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
5 8
8 9
9 10
5 11
2 12
12 13
13 14
13 15
15 16
16 17
15 18
13 19
19 20
20 21
21 22
19 23
23 24
24 25
25 26
24 27
23 28
28 29
23 30
23 31
31 32
23 33
33 34
33 35
35 36
36 37
33 38
38 39
23 40
40 41
41 42
23 43
43 44
23 45
45 46
23 47
47 48
48 49
0 50
50 51
0 52
52 53
53 54
53 55
55 56
53 57
57 58
52 59
59 60
59 61
61 62
59 63
63 64
64 65
63 66
66 67
67 68
68 69
67 70
70 71
71 72

Builds an Array of <code>size</code>
