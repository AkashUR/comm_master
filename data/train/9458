172
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (CastExpr)
8 expression (MethodCallExpr)
9 name (SimpleName)
10 identifier='getAttribute'
11 scope (MethodCallExpr)
12 name (SimpleName)
13 identifier='getContext'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='unit'
17 arguments
18 argument (NameExpr)
19 name (SimpleName)
20 identifier='DELEGATE_UNIT'
21 type (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='CompilationUnit'
24 name (SimpleName)
25 identifier='ascUnit'
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='CompilationUnit'
29 statement (ExpressionStmt)
30 expression (VariableDeclarationExpr)
31 variables
32 variable (VariableDeclarator)
33 initializer (MethodCallExpr)
34 name (SimpleName)
35 identifier='getLogger'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='ThreadLocalToolkit'
39 name (SimpleName)
40 identifier='original'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='Logger'
44 statement (ExpressionStmt)
45 expression (VariableDeclarationExpr)
46 variables
47 variable (VariableDeclarator)
48 initializer (CastExpr)
49 expression (MethodCallExpr)
50 name (SimpleName)
51 identifier='getAttribute'
52 scope (MethodCallExpr)
53 name (SimpleName)
54 identifier='getContext'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='unit'
58 arguments
59 argument (NameExpr)
60 name (SimpleName)
61 identifier='LINE_NUMBER_MAP'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='LineNumberMap'
65 name (SimpleName)
66 identifier='map'
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='LineNumberMap'
70 statement (ExpressionStmt)
71 expression (VariableDeclarationExpr)
72 variables
73 variable (VariableDeclarator)
74 initializer (ObjectCreationExpr)
75 type (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='MxmlLogAdapter'
78 arguments
79 argument (NameExpr)
80 name (SimpleName)
81 identifier='original'
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='map'
85 name (SimpleName)
86 identifier='adapter'
87 type (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='Logger'
90 statement (ExpressionStmt)
91 expression (MethodCallExpr)
92 name (SimpleName)
93 identifier='setLogger'
94 scope (NameExpr)
95 name (SimpleName)
96 identifier='ThreadLocalToolkit'
97 arguments
98 argument (NameExpr)
99 name (SimpleName)
100 identifier='adapter'
101 statement (ExpressionStmt)
102 expression (MethodCallExpr)
103 name (SimpleName)
104 identifier='analyze1'
105 scope (NameExpr)
106 name (SimpleName)
107 identifier='delegateSubCompiler'
108 arguments
109 argument (NameExpr)
110 name (SimpleName)
111 identifier='ascUnit'
112 argument (NameExpr)
113 name (SimpleName)
114 identifier='symbolTable'
115 statement (ExpressionStmt)
116 expression (MethodCallExpr)
117 name (SimpleName)
118 identifier='setLogger'
119 scope (NameExpr)
120 name (SimpleName)
121 identifier='ThreadLocalToolkit'
122 arguments
123 argument (NameExpr)
124 name (SimpleName)
125 identifier='original'
126 statement (ExpressionStmt)
127 expression (MethodCallExpr)
128 name (SimpleName)
129 identifier='transferTypeInfo'
130 scope (NameExpr)
131 name (SimpleName)
132 identifier='Source'
133 arguments
134 argument (NameExpr)
135 name (SimpleName)
136 identifier='ascUnit'
137 argument (NameExpr)
138 name (SimpleName)
139 identifier='unit'
140 statement (ExpressionStmt)
141 expression (MethodCallExpr)
142 name (SimpleName)
143 identifier='transferNamespaces'
144 scope (NameExpr)
145 name (SimpleName)
146 identifier='Source'
147 arguments
148 argument (NameExpr)
149 name (SimpleName)
150 identifier='ascUnit'
151 argument (NameExpr)
152 name (SimpleName)
153 identifier='unit'
154 type (VoidType)
155 name (SimpleName)
156 identifier='analyze1'
157 parameters
158 parameter (Parameter)
159 isVarArgs='false'
160 name (SimpleName)
161 identifier='unit'
162 type (ClassOrInterfaceType)
163 name (SimpleName)
164 identifier='CompilationUnit'
165 parameter (Parameter)
166 isVarArgs='false'
167 name (SimpleName)
168 identifier='symbolTable'
169 type (ClassOrInterfaceType)
170 name (SimpleName)
171 identifier='SymbolTable'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
8 11
11 12
12 13
11 14
14 15
15 16
8 17
17 18
18 19
19 20
7 21
21 22
22 23
6 24
24 25
6 26
26 27
27 28
2 29
29 30
30 31
31 32
32 33
33 34
34 35
33 36
36 37
37 38
32 39
39 40
32 41
41 42
42 43
2 44
44 45
45 46
46 47
47 48
48 49
49 50
50 51
49 52
52 53
53 54
52 55
55 56
56 57
49 58
58 59
59 60
60 61
48 62
62 63
63 64
47 65
65 66
47 67
67 68
68 69
2 70
70 71
71 72
72 73
73 74
74 75
75 76
76 77
74 78
78 79
79 80
80 81
78 82
82 83
83 84
73 85
85 86
73 87
87 88
88 89
2 90
90 91
91 92
92 93
91 94
94 95
95 96
91 97
97 98
98 99
99 100
2 101
101 102
102 103
103 104
102 105
105 106
106 107
102 108
108 109
109 110
110 111
108 112
112 113
113 114
2 115
115 116
116 117
117 118
116 119
119 120
120 121
116 122
122 123
123 124
124 125
2 126
126 127
127 128
128 129
127 130
130 131
131 132
127 133
133 134
134 135
135 136
133 137
137 138
138 139
2 140
140 141
141 142
142 143
141 144
144 145
145 146
141 147
147 148
148 149
149 150
147 151
151 152
152 153
0 154
0 155
155 156
0 157
157 158
158 159
158 160
160 161
158 162
162 163
163 164
157 165
165 166
165 167
167 168
165 169
169 170
170 171

Analyze... The implementation must: 1. register type info to SymbolTable
