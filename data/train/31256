55
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='w'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='Log'
10 arguments
11 argument (StringLiteralExpr)
12 value='OneSignalExample'
13 argument (StringLiteralExpr)
14 value='notificationReceived!!!!!!'
15 statement (ExpressionStmt)
16 expression (MethodCallExpr)
17 name (SimpleName)
18 identifier='printObject'
19 scope (NameExpr)
20 name (SimpleName)
21 identifier='DebuggingHelper'
22 arguments
23 argument (NameExpr)
24 name (SimpleName)
25 identifier='notification'
26 statement (ExpressionStmt)
27 expression (MethodCallExpr)
28 name (SimpleName)
29 identifier='printObject'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='DebuggingHelper'
33 arguments
34 argument (FieldAccessExpr)
35 name (SimpleName)
36 identifier='payload'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='notification'
40 type (VoidType)
41 name (SimpleName)
42 identifier='notificationReceived'
43 parameters
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='notification'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='OSNotification'
51 annotations
52 annotation (MarkerAnnotationExpr)
53 name (Name)
54 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
2 15
15 16
16 17
17 18
16 19
19 20
20 21
16 22
22 23
23 24
24 25
2 26
26 27
27 28
28 29
27 30
30 31
31 32
27 33
33 34
34 35
35 36
34 37
37 38
38 39
0 40
0 41
41 42
0 43
43 44
44 45
44 46
46 47
44 48
48 49
49 50
0 51
51 52
52 53
53 54

Callback to implement in your app to handle when a notification is received while your app running in the foreground or background. Use a NotificationExtenderService instead to receive an event even when your app is closed (not 'forced stopped') or to override notification properties.
