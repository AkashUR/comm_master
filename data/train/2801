110
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='id'
9 value (NameExpr)
10 name (SimpleName)
11 identifier='i'
12 statement (ExpressionStmt)
13 expression (AssignExpr)
14 operator='ASSIGN'
15 target (NameExpr)
16 name (SimpleName)
17 identifier='id1'
18 value (BinaryExpr)
19 operator='MULTIPLY'
20 left (UnaryExpr)
21 operator='MINUS'
22 expression (IntegerLiteralExpr)
23 value='1'
24 right (NameExpr)
25 name (SimpleName)
26 identifier='id'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (NameExpr)
31 name (SimpleName)
32 identifier='id2'
33 value (BinaryExpr)
34 operator='MINUS'
35 left (IntegerLiteralExpr)
36 value='1000'
37 right (NameExpr)
38 name (SimpleName)
39 identifier='id'
40 statement (ExpressionStmt)
41 expression (AssignExpr)
42 operator='ASSIGN'
43 target (NameExpr)
44 name (SimpleName)
45 identifier='avg1'
46 value (BinaryExpr)
47 operator='DIVIDE'
48 left (EnclosedExpr)
49 inner (BinaryExpr)
50 operator='PLUS'
51 left (BinaryExpr)
52 operator='PLUS'
53 left (NameExpr)
54 name (SimpleName)
55 identifier='id'
56 right (NameExpr)
57 name (SimpleName)
58 identifier='id1'
59 right (NameExpr)
60 name (SimpleName)
61 identifier='id2'
62 right (IntegerLiteralExpr)
63 value='3'
64 statement (ExpressionStmt)
65 expression (AssignExpr)
66 operator='ASSIGN'
67 target (NameExpr)
68 name (SimpleName)
69 identifier='max1'
70 value (NameExpr)
71 name (SimpleName)
72 identifier='id'
73 statement (ExpressionStmt)
74 expression (AssignExpr)
75 operator='ASSIGN'
76 target (NameExpr)
77 name (SimpleName)
78 identifier='range'
79 value (EnclosedExpr)
80 inner (BinaryExpr)
81 operator='MINUS'
82 left (NameExpr)
83 name (SimpleName)
84 identifier='id'
85 right (NameExpr)
86 name (SimpleName)
87 identifier='id1'
88 statement (ExpressionStmt)
89 expression (AssignExpr)
90 operator='ASSIGN'
91 target (NameExpr)
92 name (SimpleName)
93 identifier='l'
94 value (BinaryExpr)
95 operator='MULTIPLY'
96 left (NameExpr)
97 name (SimpleName)
98 identifier='id'
99 right (IntegerLiteralExpr)
100 value='100000000'
101 name (SimpleName)
102 identifier='Numbers'
103 parameters
104 parameter (Parameter)
105 isVarArgs='false'
106 name (SimpleName)
107 identifier='i'
108 type (PrimitiveType)
109 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
2 12
12 13
13 14
13 15
15 16
16 17
13 18
18 19
18 20
20 21
20 22
22 23
18 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
28 33
33 34
33 35
35 36
33 37
37 38
38 39
2 40
40 41
41 42
41 43
43 44
44 45
41 46
46 47
46 48
48 49
49 50
49 51
51 52
51 53
53 54
54 55
51 56
56 57
57 58
49 59
59 60
60 61
46 62
62 63
2 64
64 65
65 66
65 67
67 68
68 69
65 70
70 71
71 72
2 73
73 74
74 75
74 76
76 77
77 78
74 79
79 80
80 81
80 82
82 83
83 84
80 85
85 86
86 87
2 88
88 89
89 90
89 91
91 92
92 93
89 94
94 95
94 96
96 97
97 98
94 99
99 100
0 101
101 102
0 103
103 104
104 105
104 106
106 107
104 108
108 109

Creates a new instance of Numbers
