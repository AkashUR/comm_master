50
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setTopology'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='scope'
10 arguments
11 argument (MethodCallExpr)
12 name (SimpleName)
13 identifier='get'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='previous'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='set'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='previous'
24 arguments
25 argument (NullLiteralExpr)
26 statement (ExpressionStmt)
27 expression (MethodCallExpr)
28 name (SimpleName)
29 identifier='leaveScope'
30 scope (SuperExpr)
31 arguments
32 argument (NameExpr)
33 name (SimpleName)
34 identifier='scope'
35 type (VoidType)
36 name (SimpleName)
37 identifier='leaveScope'
38 parameters
39 parameter (Parameter)
40 isVarArgs='false'
41 name (SimpleName)
42 identifier='scope'
43 type (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='IScope'
46 annotations
47 annotation (MarkerAnnotationExpr)
48 name (Name)
49 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
11 14
14 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
2 26
26 27
27 28
28 29
27 30
27 31
31 32
32 33
33 34
0 35
0 36
36 37
0 38
38 39
39 40
39 41
41 42
39 43
43 44
44 45
0 46
46 47
47 48
48 49

When leaving the scope, the statement replaces its topology by the previous one.
