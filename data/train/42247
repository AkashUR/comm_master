109
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (FieldAccessExpr)
8 name (SimpleName)
9 identifier='PRINTS'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='SignatureLibrary'
13 name (SimpleName)
14 identifier='testLibrary'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='SignatureLibrary'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (StringLiteralExpr)
23 value='1.0'
24 name (SimpleName)
25 identifier='testVersion'
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='String'
29 statement (ExpressionStmt)
30 expression (MethodCallExpr)
31 name (SimpleName)
32 identifier='assertFalse'
33 arguments
34 argument (MethodCallExpr)
35 name (SimpleName)
36 identifier='isReleaseAlreadyPersisted'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='dao'
40 arguments
41 argument (NameExpr)
42 name (SimpleName)
43 identifier='testLibrary'
44 argument (NameExpr)
45 name (SimpleName)
46 identifier='testVersion'
47 statement (ExpressionStmt)
48 expression (VariableDeclarationExpr)
49 variables
50 variable (VariableDeclarator)
51 initializer (ObjectCreationExpr)
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='SignatureLibraryRelease'
55 arguments
56 argument (NameExpr)
57 name (SimpleName)
58 identifier='testLibrary'
59 argument (NameExpr)
60 name (SimpleName)
61 identifier='testVersion'
62 argument (MethodCallExpr)
63 name (SimpleName)
64 identifier='createSignature'
65 name (SimpleName)
66 identifier='sigLib1'
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='SignatureLibraryRelease'
70 statement (ExpressionStmt)
71 expression (MethodCallExpr)
72 name (SimpleName)
73 identifier='insert'
74 scope (NameExpr)
75 name (SimpleName)
76 identifier='dao'
77 arguments
78 argument (NameExpr)
79 name (SimpleName)
80 identifier='sigLib1'
81 statement (ExpressionStmt)
82 expression (MethodCallExpr)
83 name (SimpleName)
84 identifier='assertTrue'
85 arguments
86 argument (MethodCallExpr)
87 name (SimpleName)
88 identifier='isReleaseAlreadyPersisted'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='dao'
92 arguments
93 argument (NameExpr)
94 name (SimpleName)
95 identifier='testLibrary'
96 argument (NameExpr)
97 name (SimpleName)
98 identifier='testVersion'
99 type (VoidType)
100 name (SimpleName)
101 identifier='testIsReleaseAlreadyPersisted'
102 annotations
103 annotation (MarkerAnnotationExpr)
104 name (Name)
105 identifier='Ignore'
106 annotation (MarkerAnnotationExpr)
107 name (Name)
108 identifier='Test'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
21 24
24 25
21 26
26 27
27 28
2 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
34 37
37 38
38 39
34 40
40 41
41 42
42 43
40 44
44 45
45 46
2 47
47 48
48 49
49 50
50 51
51 52
52 53
53 54
51 55
55 56
56 57
57 58
55 59
59 60
60 61
55 62
62 63
63 64
50 65
65 66
50 67
67 68
68 69
2 70
70 71
71 72
72 73
71 74
74 75
75 76
71 77
77 78
78 79
79 80
2 81
81 82
82 83
83 84
82 85
85 86
86 87
87 88
86 89
89 90
90 91
86 92
92 93
93 94
94 95
92 96
96 97
97 98
0 99
0 100
100 101
0 102
102 103
103 104
104 105
102 106
106 107
107 108

The method being tested should return true if a specific version of a member database release has already been persisted.
