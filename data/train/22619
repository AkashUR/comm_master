257
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (BlockStmt)
4 statements
5 statement (ExpressionStmt)
6 expression (VariableDeclarationExpr)
7 variables
8 variable (VariableDeclarator)
9 initializer (MethodCallExpr)
10 name (SimpleName)
11 identifier='construct'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='CollectionType'
15 arguments
16 argument (ClassExpr)
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='List'
20 argument (MethodCallExpr)
21 name (SimpleName)
22 identifier='construct'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='SimpleType'
26 arguments
27 argument (ClassExpr)
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='Topology'
31 name (SimpleName)
32 identifier='type'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='JavaType'
36 statement (ExpressionStmt)
37 expression (VariableDeclarationExpr)
38 variables
39 variable (VariableDeclarator)
40 initializer (MethodCallExpr)
41 name (SimpleName)
42 identifier='readValue'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='om'
46 arguments
47 argument (MethodCallExpr)
48 name (SimpleName)
49 identifier='getResourceAsStream'
50 scope (ClassExpr)
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='Integration1'
54 arguments
55 argument (StringLiteralExpr)
56 value='/simple/topologies.json'
57 argument (NameExpr)
58 name (SimpleName)
59 identifier='type'
60 name (SimpleName)
61 identifier='l'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='List'
65 typeArguments
66 typeArgument (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='Topology'
69 statement (ExpressionStmt)
70 expression (VariableDeclarationExpr)
71 variables
72 variable (VariableDeclarator)
73 initializer (CastExpr)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='get'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='l'
80 arguments
81 argument (IntegerLiteralExpr)
82 value='0'
83 type (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='Topology'
86 name (SimpleName)
87 identifier='t'
88 type (ClassOrInterfaceType)
89 name (SimpleName)
90 identifier='Topology'
91 statement (ExpressionStmt)
92 expression (MethodCallExpr)
93 name (SimpleName)
94 identifier='assertEquals'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='Assert'
98 arguments
99 argument (IntegerLiteralExpr)
100 value='4'
101 argument (MethodCallExpr)
102 name (SimpleName)
103 identifier='size'
104 scope (MethodCallExpr)
105 name (SimpleName)
106 identifier='getGroupNodeIds'
107 scope (NameExpr)
108 name (SimpleName)
109 identifier='t'
110 statement (ExpressionStmt)
111 expression (MethodCallExpr)
112 name (SimpleName)
113 identifier='assertEquals'
114 scope (NameExpr)
115 name (SimpleName)
116 identifier='Assert'
117 arguments
118 argument (IntegerLiteralExpr)
119 value='10'
120 argument (MethodCallExpr)
121 name (SimpleName)
122 identifier='size'
123 scope (MethodCallExpr)
124 name (SimpleName)
125 identifier='getAlertBoltIds'
126 scope (NameExpr)
127 name (SimpleName)
128 identifier='t'
129 statement (BlockStmt)
130 statements
131 statement (ExpressionStmt)
132 expression (VariableDeclarationExpr)
133 variables
134 variable (VariableDeclarator)
135 initializer (MethodCallExpr)
136 name (SimpleName)
137 identifier='construct'
138 scope (NameExpr)
139 name (SimpleName)
140 identifier='CollectionType'
141 arguments
142 argument (ClassExpr)
143 type (ClassOrInterfaceType)
144 name (SimpleName)
145 identifier='List'
146 argument (MethodCallExpr)
147 name (SimpleName)
148 identifier='construct'
149 scope (NameExpr)
150 name (SimpleName)
151 identifier='SimpleType'
152 arguments
153 argument (ClassExpr)
154 type (ClassOrInterfaceType)
155 name (SimpleName)
156 identifier='Publishment'
157 name (SimpleName)
158 identifier='type'
159 type (ClassOrInterfaceType)
160 name (SimpleName)
161 identifier='JavaType'
162 statement (ExpressionStmt)
163 expression (VariableDeclarationExpr)
164 variables
165 variable (VariableDeclarator)
166 initializer (MethodCallExpr)
167 name (SimpleName)
168 identifier='readValue'
169 scope (NameExpr)
170 name (SimpleName)
171 identifier='om'
172 arguments
173 argument (MethodCallExpr)
174 name (SimpleName)
175 identifier='getResourceAsStream'
176 scope (ClassExpr)
177 type (ClassOrInterfaceType)
178 name (SimpleName)
179 identifier='Integration1'
180 arguments
181 argument (StringLiteralExpr)
182 value='/simple/publishments.json'
183 argument (NameExpr)
184 name (SimpleName)
185 identifier='type'
186 name (SimpleName)
187 identifier='l'
188 type (ClassOrInterfaceType)
189 name (SimpleName)
190 identifier='List'
191 typeArguments
192 typeArgument (ClassOrInterfaceType)
193 name (SimpleName)
194 identifier='Publishment'
195 statement (ExpressionStmt)
196 expression (VariableDeclarationExpr)
197 variables
198 variable (VariableDeclarator)
199 initializer (MethodCallExpr)
200 name (SimpleName)
201 identifier='get'
202 scope (NameExpr)
203 name (SimpleName)
204 identifier='l'
205 arguments
206 argument (IntegerLiteralExpr)
207 value='0'
208 name (SimpleName)
209 identifier='p'
210 type (ClassOrInterfaceType)
211 name (SimpleName)
212 identifier='Publishment'
213 statement (ExpressionStmt)
214 expression (MethodCallExpr)
215 name (SimpleName)
216 identifier='assertEquals'
217 scope (NameExpr)
218 name (SimpleName)
219 identifier='Assert'
220 arguments
221 argument (StringLiteralExpr)
222 value='KAFKA'
223 argument (MethodCallExpr)
224 name (SimpleName)
225 identifier='getType'
226 scope (NameExpr)
227 name (SimpleName)
228 identifier='p'
229 statement (ExpressionStmt)
230 expression (MethodCallExpr)
231 name (SimpleName)
232 identifier='checkAll'
233 arguments
234 argument (StringLiteralExpr)
235 value='/simple/'
236 statement (ExpressionStmt)
237 expression (MethodCallExpr)
238 name (SimpleName)
239 identifier='checkAll'
240 arguments
241 argument (StringLiteralExpr)
242 value='/correlation/'
243 type (VoidType)
244 name (SimpleName)
245 identifier='testJson'
246 thrownExceptions
247 thrownException (ClassOrInterfaceType)
248 name (SimpleName)
249 identifier='Exception'
250 annotations
251 annotation (MarkerAnnotationExpr)
252 name (Name)
253 identifier='Ignore'
254 annotation (MarkerAnnotationExpr)
255 name (Name)
256 identifier='Test'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
10 11
9 12
12 13
13 14
9 15
15 16
16 17
17 18
18 19
15 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
29 30
8 31
31 32
8 33
33 34
34 35
4 36
36 37
37 38
38 39
39 40
40 41
41 42
40 43
43 44
44 45
40 46
46 47
47 48
48 49
47 50
50 51
51 52
52 53
47 54
54 55
55 56
46 57
57 58
58 59
39 60
60 61
39 62
62 63
63 64
62 65
65 66
66 67
67 68
4 69
69 70
70 71
71 72
72 73
73 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
73 83
83 84
84 85
72 86
86 87
72 88
88 89
89 90
4 91
91 92
92 93
93 94
92 95
95 96
96 97
92 98
98 99
99 100
98 101
101 102
102 103
101 104
104 105
105 106
104 107
107 108
108 109
4 110
110 111
111 112
112 113
111 114
114 115
115 116
111 117
117 118
118 119
117 120
120 121
121 122
120 123
123 124
124 125
123 126
126 127
127 128
2 129
129 130
130 131
131 132
132 133
133 134
134 135
135 136
136 137
135 138
138 139
139 140
135 141
141 142
142 143
143 144
144 145
141 146
146 147
147 148
146 149
149 150
150 151
146 152
152 153
153 154
154 155
155 156
134 157
157 158
134 159
159 160
160 161
130 162
162 163
163 164
164 165
165 166
166 167
167 168
166 169
169 170
170 171
166 172
172 173
173 174
174 175
173 176
176 177
177 178
178 179
173 180
180 181
181 182
172 183
183 184
184 185
165 186
186 187
165 188
188 189
189 190
188 191
191 192
192 193
193 194
130 195
195 196
196 197
197 198
198 199
199 200
200 201
199 202
202 203
203 204
199 205
205 206
206 207
198 208
208 209
198 210
210 211
211 212
130 213
213 214
214 215
215 216
214 217
217 218
218 219
214 220
220 221
221 222
220 223
223 224
224 225
223 226
226 227
227 228
2 229
229 230
230 231
231 232
230 233
233 234
234 235
2 236
236 237
237 238
238 239
237 240
240 241
241 242
0 243
0 244
244 245
0 246
246 247
247 248
248 249
0 250
250 251
251 252
252 253
250 254
254 255
255 256

<p> {"name":"xxx","numOfSpout":1,"numOfAlertBolt":3,"numOfGroupBolt":2, "spoutId" :"xxx-spout","groupNodeIds":["xxx-grp"],"alertBoltIds":["xxx-bolt" ],"pubBoltId":"xxx-pubBolt","spoutParallelism":1,"groupParallelism":1, "alertParallelism":1} <p>
