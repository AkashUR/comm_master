24
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='cartesianProduct'
7 arguments
8 argument (BooleanLiteralExpr)
9 value='false'
10 argument (NameExpr)
11 name (SimpleName)
12 identifier='args'
13 type (VoidType)
14 name (SimpleName)
15 identifier='multiplyParametersByPrepending'
16 parameters
17 parameter (Parameter)
18 isVarArgs='true'
19 name (SimpleName)
20 identifier='args'
21 type (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='Object'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
0 13
0 14
14 15
0 16
16 17
17 18
17 19
19 20
17 21
21 22
22 23

<p>Performs a cartesian product of parameterizations by prepending each of the incoming args to each existing parameter's arg list.</p> For instance, if you have parameters <tt>[ ("A", 1, 2, 3) and ("B", 4, 5, 6) ]</tt>, and you called <tt>multiplyParametersByPrepending("foo-", 'c', "bar", 'd')</tt>, you would get the following parameterizations, in this order: <ol> <li>"foo-A", 'c', 1, 2, 3</li> <li>"bar-A", 'd', 1, 2, 3</li> <li>"foo-B", 'c', 4, 5, 6</li> <li>"bar-B", 'd', 1, 2, 3</li> </ol>
