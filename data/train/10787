60
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (BooleanLiteralExpr)
7 value='false'
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='params'
11 statement (ExpressionStmt)
12 expression (AssignExpr)
13 operator='ASSIGN'
14 target (NameExpr)
15 name (SimpleName)
16 identifier='h'
17 value (MethodCallExpr)
18 name (SimpleName)
19 identifier='fromBinary'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='IntegerPolynomial'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='is'
27 argument (FieldAccessExpr)
28 name (SimpleName)
29 identifier='N'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='params'
33 argument (FieldAccessExpr)
34 name (SimpleName)
35 identifier='q'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='params'
39 name (SimpleName)
40 identifier='NTRUEncryptionPublicKeyParameters'
41 parameters
42 parameter (Parameter)
43 isVarArgs='false'
44 name (SimpleName)
45 identifier='is'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='InputStream'
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='params'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='NTRUEncryptionParameters'
56 thrownExceptions
57 thrownException (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='IOException'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
5 8
8 9
9 10
2 11
11 12
12 13
12 14
14 15
15 16
12 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
23 27
27 28
28 29
27 30
30 31
31 32
23 33
33 34
34 35
33 36
36 37
37 38
0 39
39 40
0 41
41 42
42 43
42 44
44 45
42 46
46 47
47 48
41 49
49 50
49 51
51 52
49 53
53 54
54 55
0 56
56 57
57 58
58 59

Reads a polynomial <code>h</code> from an input stream and constructs a new public key
