66
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertEquals'
7 arguments
8 argument (IntegerLiteralExpr)
9 value='1'
10 argument (FieldAccessExpr)
11 name (SimpleName)
12 identifier='length'
13 scope (MethodCallExpr)
14 name (SimpleName)
15 identifier='getRawClasspath'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='javaProjectA'
19 statement (ExpressionStmt)
20 expression (VariableDeclarationExpr)
21 variables
22 variable (VariableDeclarator)
23 initializer (MethodCallExpr)
24 name (SimpleName)
25 identifier='getListOfFiles'
26 arguments
27 argument (MethodCallExpr)
28 name (SimpleName)
29 identifier='computeClasspath'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='GWTCompileRunner'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='javaProjectA'
37 name (SimpleName)
38 identifier='actualCp'
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='List'
42 typeArguments
43 typeArgument (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='File'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='assertEquals'
50 arguments
51 argument (IntegerLiteralExpr)
52 value='0'
53 argument (MethodCallExpr)
54 name (SimpleName)
55 identifier='size'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='actualCp'
59 type (VoidType)
60 name (SimpleName)
61 identifier='testComputeClasspathForJre'
62 thrownExceptions
63 thrownException (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='CoreException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
13 16
16 17
17 18
2 19
19 20
20 21
21 22
22 23
23 24
24 25
23 26
26 27
27 28
28 29
27 30
30 31
31 32
27 33
33 34
34 35
35 36
22 37
37 38
22 39
39 40
40 41
39 42
42 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
50 53
53 54
54 55
53 56
56 57
57 58
0 59
0 60
60 61
0 62
62 63
63 64
64 65

Tests that the computed classpath does not contain the JRE.
