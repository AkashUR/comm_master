69
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='rootType'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='rootType'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='members'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='members'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (NameExpr)
27 name (SimpleName)
28 identifier='containsUnion'
29 value (ConditionalExpr)
30 condition (BinaryExpr)
31 operator='EQUALS'
32 left (NameExpr)
33 name (SimpleName)
34 identifier='rootType'
35 right (NullLiteralExpr)
36 elseExpr (MethodCallExpr)
37 name (SimpleName)
38 identifier='containsUnion'
39 arguments
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='rootType'
43 argument (NameExpr)
44 name (SimpleName)
45 identifier='members'
46 thenExpr (BooleanLiteralExpr)
47 value='false'
48 name (SimpleName)
49 identifier='TypeSelectionPath'
50 parameters
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='rootType'
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='BaseType'
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='members'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='List'
65 typeArguments
66 typeArgument (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='TypeMember'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
24 29
29 30
30 31
30 32
32 33
33 34
30 35
29 36
36 37
37 38
36 39
39 40
40 41
41 42
39 43
43 44
44 45
29 46
46 47
0 48
48 49
0 50
50 51
51 52
51 53
53 54
51 55
55 56
56 57
50 58
58 59
58 60
60 61
58 62
62 63
63 64
62 65
65 66
66 67
67 68

Takes ownership of members.
