175
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='dirty'
9 scope (ThisExpr)
10 value (BooleanLiteralExpr)
11 value='true'
12 statement (ExpressionStmt)
13 expression (VariableDeclarationExpr)
14 variables
15 variable (VariableDeclarator)
16 initializer (CastExpr)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='sqrt'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='Math'
23 arguments
24 argument (BinaryExpr)
25 operator='PLUS'
26 left (BinaryExpr)
27 operator='PLUS'
28 left (BinaryExpr)
29 operator='PLUS'
30 left (BinaryExpr)
31 operator='MULTIPLY'
32 left (ArrayAccessExpr)
33 index (IntegerLiteralExpr)
34 value='3'
35 name (NameExpr)
36 name (SimpleName)
37 identifier='points'
38 right (ArrayAccessExpr)
39 index (IntegerLiteralExpr)
40 value='3'
41 name (NameExpr)
42 name (SimpleName)
43 identifier='points'
44 right (BinaryExpr)
45 operator='MULTIPLY'
46 left (ArrayAccessExpr)
47 index (IntegerLiteralExpr)
48 value='0'
49 name (NameExpr)
50 name (SimpleName)
51 identifier='points'
52 right (ArrayAccessExpr)
53 index (IntegerLiteralExpr)
54 value='0'
55 name (NameExpr)
56 name (SimpleName)
57 identifier='points'
58 right (BinaryExpr)
59 operator='MULTIPLY'
60 left (ArrayAccessExpr)
61 index (IntegerLiteralExpr)
62 value='1'
63 name (NameExpr)
64 name (SimpleName)
65 identifier='points'
66 right (ArrayAccessExpr)
67 index (IntegerLiteralExpr)
68 value='1'
69 name (NameExpr)
70 name (SimpleName)
71 identifier='points'
72 right (BinaryExpr)
73 operator='MULTIPLY'
74 left (ArrayAccessExpr)
75 index (IntegerLiteralExpr)
76 value='2'
77 name (NameExpr)
78 name (SimpleName)
79 identifier='points'
80 right (ArrayAccessExpr)
81 index (IntegerLiteralExpr)
82 value='2'
83 name (NameExpr)
84 name (SimpleName)
85 identifier='points'
86 type (PrimitiveType)
87 type='FLOAT'
88 name (SimpleName)
89 identifier='mag'
90 type (PrimitiveType)
91 type='FLOAT'
92 statement (ExpressionStmt)
93 expression (AssignExpr)
94 operator='ASSIGN'
95 target (ArrayAccessExpr)
96 index (IntegerLiteralExpr)
97 value='3'
98 name (NameExpr)
99 name (SimpleName)
100 identifier='points'
101 value (BinaryExpr)
102 operator='DIVIDE'
103 left (ArrayAccessExpr)
104 index (IntegerLiteralExpr)
105 value='3'
106 name (NameExpr)
107 name (SimpleName)
108 identifier='points'
109 right (NameExpr)
110 name (SimpleName)
111 identifier='mag'
112 statement (ExpressionStmt)
113 expression (AssignExpr)
114 operator='ASSIGN'
115 target (ArrayAccessExpr)
116 index (IntegerLiteralExpr)
117 value='0'
118 name (NameExpr)
119 name (SimpleName)
120 identifier='points'
121 value (BinaryExpr)
122 operator='DIVIDE'
123 left (ArrayAccessExpr)
124 index (IntegerLiteralExpr)
125 value='0'
126 name (NameExpr)
127 name (SimpleName)
128 identifier='points'
129 right (NameExpr)
130 name (SimpleName)
131 identifier='mag'
132 statement (ExpressionStmt)
133 expression (AssignExpr)
134 operator='ASSIGN'
135 target (ArrayAccessExpr)
136 index (IntegerLiteralExpr)
137 value='1'
138 name (NameExpr)
139 name (SimpleName)
140 identifier='points'
141 value (BinaryExpr)
142 operator='DIVIDE'
143 left (ArrayAccessExpr)
144 index (IntegerLiteralExpr)
145 value='1'
146 name (NameExpr)
147 name (SimpleName)
148 identifier='points'
149 right (NameExpr)
150 name (SimpleName)
151 identifier='mag'
152 statement (ExpressionStmt)
153 expression (AssignExpr)
154 operator='ASSIGN'
155 target (ArrayAccessExpr)
156 index (IntegerLiteralExpr)
157 value='2'
158 name (NameExpr)
159 name (SimpleName)
160 identifier='points'
161 value (BinaryExpr)
162 operator='DIVIDE'
163 left (ArrayAccessExpr)
164 index (IntegerLiteralExpr)
165 value='2'
166 name (NameExpr)
167 name (SimpleName)
168 identifier='points'
169 right (NameExpr)
170 name (SimpleName)
171 identifier='mag'
172 type (VoidType)
173 name (SimpleName)
174 identifier='normalise'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
2 12
12 13
13 14
14 15
15 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
24 26
26 27
26 28
28 29
28 30
30 31
30 32
32 33
33 34
32 35
35 36
36 37
30 38
38 39
39 40
38 41
41 42
42 43
28 44
44 45
44 46
46 47
47 48
46 49
49 50
50 51
44 52
52 53
53 54
52 55
55 56
56 57
26 58
58 59
58 60
60 61
61 62
60 63
63 64
64 65
58 66
66 67
67 68
66 69
69 70
70 71
24 72
72 73
72 74
74 75
75 76
74 77
77 78
78 79
72 80
80 81
81 82
80 83
83 84
84 85
16 86
86 87
15 88
88 89
15 90
90 91
2 92
92 93
93 94
93 95
95 96
96 97
95 98
98 99
99 100
93 101
101 102
101 103
103 104
104 105
103 106
106 107
107 108
101 109
109 110
110 111
2 112
112 113
113 114
113 115
115 116
116 117
115 118
118 119
119 120
113 121
121 122
121 123
123 124
124 125
123 126
126 127
127 128
121 129
129 130
130 131
2 132
132 133
133 134
133 135
135 136
136 137
135 138
138 139
139 140
133 141
141 142
141 143
143 144
144 145
143 146
146 147
147 148
141 149
149 150
150 151
2 152
152 153
153 154
153 155
155 156
156 157
155 158
158 159
159 160
153 161
161 162
161 163
163 164
164 165
163 166
166 167
167 168
161 169
169 170
170 171
0 172
0 173
173 174

Normalise this Quaternion into a unity Quaternion.
