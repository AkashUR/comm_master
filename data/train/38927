242
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 name (SimpleName)
8 identifier='key'
9 type (ClassOrInterfaceType)
10 name (SimpleName)
11 identifier='Long'
12 statement (ExpressionStmt)
13 expression (VariableDeclarationExpr)
14 variables
15 variable (VariableDeclarator)
16 name (SimpleName)
17 identifier='value'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='String'
21 statement (ExpressionStmt)
22 expression (VariableDeclarationExpr)
23 variables
24 variable (VariableDeclarator)
25 name (SimpleName)
26 identifier='data'
27 type (ArrayType)
28 origin='TYPE'
29 componentType (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='String'
32 statement (ExpressionStmt)
33 expression (MethodCallExpr)
34 name (SimpleName)
35 identifier='clear'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='hashData'
39 statement (ForeachStmt)
40 body (BlockStmt)
41 statements
42 statement (ExpressionStmt)
43 expression (AssignExpr)
44 operator='ASSIGN'
45 target (NameExpr)
46 name (SimpleName)
47 identifier='data'
48 value (MethodCallExpr)
49 name (SimpleName)
50 identifier='split'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='anInitData'
54 arguments
55 argument (StringLiteralExpr)
56 value=';'
57 statement (ForeachStmt)
58 body (BlockStmt)
59 statements
60 statement (ExpressionStmt)
61 expression (VariableDeclarationExpr)
62 variables
63 variable (VariableDeclarator)
64 initializer (MethodCallExpr)
65 name (SimpleName)
66 identifier='split'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='aData'
70 arguments
71 argument (StringLiteralExpr)
72 value='='
73 name (SimpleName)
74 identifier='words'
75 type (ArrayType)
76 origin='TYPE'
77 componentType (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='String'
80 statement (ExpressionStmt)
81 expression (AssignExpr)
82 operator='ASSIGN'
83 target (NameExpr)
84 name (SimpleName)
85 identifier='key'
86 value (CastExpr)
87 expression (EnclosedExpr)
88 inner (BinaryExpr)
89 operator='LEFT_SHIFT'
90 left (IntegerLiteralExpr)
91 value='1'
92 right (MethodCallExpr)
93 name (SimpleName)
94 identifier='valueOf'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='Long'
98 arguments
99 argument (ArrayAccessExpr)
100 index (IntegerLiteralExpr)
101 value='0'
102 name (NameExpr)
103 name (SimpleName)
104 identifier='words'
105 type (PrimitiveType)
106 type='LONG'
107 statement (ExpressionStmt)
108 expression (AssignExpr)
109 operator='ASSIGN'
110 target (NameExpr)
111 name (SimpleName)
112 identifier='value'
113 value (ArrayAccessExpr)
114 index (IntegerLiteralExpr)
115 value='1'
116 name (NameExpr)
117 name (SimpleName)
118 identifier='words'
119 statement (ExpressionStmt)
120 expression (VariableDeclarationExpr)
121 variables
122 variable (VariableDeclarator)
123 initializer (NameExpr)
124 name (SimpleName)
125 identifier='value'
126 name (SimpleName)
127 identifier='xlatKey'
128 type (ClassOrInterfaceType)
129 name (SimpleName)
130 identifier='String'
131 statement (ExpressionStmt)
132 expression (AssignExpr)
133 operator='ASSIGN'
134 target (NameExpr)
135 name (SimpleName)
136 identifier='xlatKey'
137 value (MethodCallExpr)
138 name (SimpleName)
139 identifier='toLowerCase'
140 scope (MethodCallExpr)
141 name (SimpleName)
142 identifier='replaceAll'
143 scope (NameExpr)
144 name (SimpleName)
145 identifier='xlatKey'
146 arguments
147 argument (StringLiteralExpr)
148 value='[ -]'
149 argument (StringLiteralExpr)
150 value='_'
151 statement (ExpressionStmt)
152 expression (AssignExpr)
153 operator='ASSIGN'
154 target (NameExpr)
155 name (SimpleName)
156 identifier='value'
157 value (MethodCallExpr)
158 name (SimpleName)
159 identifier='getString'
160 scope (NameExpr)
161 name (SimpleName)
162 identifier='Messages'
163 arguments
164 argument (NameExpr)
165 name (SimpleName)
166 identifier='xlatKey'
167 argument (NameExpr)
168 name (SimpleName)
169 identifier='value'
170 statement (ExpressionStmt)
171 expression (MethodCallExpr)
172 name (SimpleName)
173 identifier='debug'
174 scope (NameExpr)
175 name (SimpleName)
176 identifier='log'
177 arguments
178 argument (MethodCallExpr)
179 name (SimpleName)
180 identifier='format'
181 scope (NameExpr)
182 name (SimpleName)
183 identifier='String'
184 arguments
185 argument (StringLiteralExpr)
186 value='%s=%s\n'
187 argument (NameExpr)
188 name (SimpleName)
189 identifier='xlatKey'
190 argument (NameExpr)
191 name (SimpleName)
192 identifier='value'
193 statement (ExpressionStmt)
194 expression (MethodCallExpr)
195 name (SimpleName)
196 identifier='put'
197 scope (NameExpr)
198 name (SimpleName)
199 identifier='hashData'
200 arguments
201 argument (NameExpr)
202 name (SimpleName)
203 identifier='key'
204 argument (NameExpr)
205 name (SimpleName)
206 identifier='value'
207 iterable (NameExpr)
208 name (SimpleName)
209 identifier='data'
210 variable (VariableDeclarationExpr)
211 variables
212 variable (VariableDeclarator)
213 name (SimpleName)
214 identifier='aData'
215 type (ClassOrInterfaceType)
216 name (SimpleName)
217 identifier='String'
218 iterable (NameExpr)
219 name (SimpleName)
220 identifier='initData'
221 variable (VariableDeclarationExpr)
222 variables
223 variable (VariableDeclarator)
224 name (SimpleName)
225 identifier='anInitData'
226 type (ClassOrInterfaceType)
227 name (SimpleName)
228 identifier='String'
229 type (VoidType)
230 name (SimpleName)
231 identifier='initFromStrings'
232 parameters
233 parameter (Parameter)
234 isVarArgs='false'
235 name (SimpleName)
236 identifier='initData'
237 type (ArrayType)
238 origin='TYPE'
239 componentType (ClassOrInterfaceType)
240 name (SimpleName)
241 identifier='String'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
10 11
2 12
12 13
13 14
14 15
15 16
16 17
15 18
18 19
19 20
2 21
21 22
22 23
23 24
24 25
25 26
24 27
27 28
27 29
29 30
30 31
2 32
32 33
33 34
34 35
33 36
36 37
37 38
2 39
39 40
40 41
41 42
42 43
43 44
43 45
45 46
46 47
43 48
48 49
49 50
48 51
51 52
52 53
48 54
54 55
55 56
41 57
57 58
58 59
59 60
60 61
61 62
62 63
63 64
64 65
65 66
64 67
67 68
68 69
64 70
70 71
71 72
63 73
73 74
63 75
75 76
75 77
77 78
78 79
59 80
80 81
81 82
81 83
83 84
84 85
81 86
86 87
87 88
88 89
88 90
90 91
88 92
92 93
93 94
92 95
95 96
96 97
92 98
98 99
99 100
100 101
99 102
102 103
103 104
86 105
105 106
59 107
107 108
108 109
108 110
110 111
111 112
108 113
113 114
114 115
113 116
116 117
117 118
59 119
119 120
120 121
121 122
122 123
123 124
124 125
122 126
126 127
122 128
128 129
129 130
59 131
131 132
132 133
132 134
134 135
135 136
132 137
137 138
138 139
137 140
140 141
141 142
140 143
143 144
144 145
140 146
146 147
147 148
146 149
149 150
59 151
151 152
152 153
152 154
154 155
155 156
152 157
157 158
158 159
157 160
160 161
161 162
157 163
163 164
164 165
165 166
163 167
167 168
168 169
59 170
170 171
171 172
172 173
171 174
174 175
175 176
171 177
177 178
178 179
179 180
178 181
181 182
182 183
178 184
184 185
185 186
184 187
187 188
188 189
184 190
190 191
191 192
59 193
193 194
194 195
195 196
194 197
197 198
198 199
194 200
200 201
201 202
202 203
200 204
204 205
205 206
57 207
207 208
208 209
57 210
210 211
211 212
212 213
213 214
212 215
215 216
216 217
39 218
218 219
219 220
39 221
221 222
222 223
223 224
224 225
223 226
226 227
227 228
0 229
0 230
230 231
0 232
232 233
233 234
233 235
235 236
233 237
237 238
237 239
239 240
240 241

initialize hash map with values from an array of strings in the format "BitPos=value"
