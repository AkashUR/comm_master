137
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='CharacterRunAutomaton'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='toAutomaton'
15 scope (ObjectCreationExpr)
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='RegExp'
19 arguments
20 argument (StringLiteralExpr)
21 value='.'
22 name (SimpleName)
23 identifier='single'
24 type (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='CharacterRunAutomaton'
27 statement (ExpressionStmt)
28 expression (VariableDeclarationExpr)
29 variables
30 variable (VariableDeclarator)
31 initializer (ObjectCreationExpr)
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='MockAnalyzer'
35 arguments
36 argument (MethodCallExpr)
37 name (SimpleName)
38 identifier='random'
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='single'
42 argument (BooleanLiteralExpr)
43 value='false'
44 name (SimpleName)
45 identifier='a'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='Analyzer'
49 statement (ExpressionStmt)
50 expression (MethodCallExpr)
51 name (SimpleName)
52 identifier='assertAnalyzesTo'
53 arguments
54 argument (NameExpr)
55 name (SimpleName)
56 identifier='a'
57 argument (StringLiteralExpr)
58 value='foobar'
59 argument (ArrayCreationExpr)
60 elementType (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='String'
63 initializer (ArrayInitializerExpr)
64 values
65 value (StringLiteralExpr)
66 value='f'
67 value (StringLiteralExpr)
68 value='o'
69 value (StringLiteralExpr)
70 value='o'
71 value (StringLiteralExpr)
72 value='b'
73 value (StringLiteralExpr)
74 value='a'
75 value (StringLiteralExpr)
76 value='r'
77 levels
78 level (ArrayCreationLevel)
79 argument (ArrayCreationExpr)
80 elementType (PrimitiveType)
81 type='INT'
82 initializer (ArrayInitializerExpr)
83 values
84 value (IntegerLiteralExpr)
85 value='0'
86 value (IntegerLiteralExpr)
87 value='1'
88 value (IntegerLiteralExpr)
89 value='2'
90 value (IntegerLiteralExpr)
91 value='3'
92 value (IntegerLiteralExpr)
93 value='4'
94 value (IntegerLiteralExpr)
95 value='5'
96 levels
97 level (ArrayCreationLevel)
98 argument (ArrayCreationExpr)
99 elementType (PrimitiveType)
100 type='INT'
101 initializer (ArrayInitializerExpr)
102 values
103 value (IntegerLiteralExpr)
104 value='1'
105 value (IntegerLiteralExpr)
106 value='2'
107 value (IntegerLiteralExpr)
108 value='3'
109 value (IntegerLiteralExpr)
110 value='4'
111 value (IntegerLiteralExpr)
112 value='5'
113 value (IntegerLiteralExpr)
114 value='6'
115 levels
116 level (ArrayCreationLevel)
117 statement (ExpressionStmt)
118 expression (MethodCallExpr)
119 name (SimpleName)
120 identifier='checkRandomData'
121 arguments
122 argument (MethodCallExpr)
123 name (SimpleName)
124 identifier='random'
125 argument (NameExpr)
126 name (SimpleName)
127 identifier='a'
128 argument (IntegerLiteralExpr)
129 value='100'
130 type (VoidType)
131 name (SimpleName)
132 identifier='testSingleChar'
133 thrownExceptions
134 thrownException (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
12 15
15 16
16 17
17 18
15 19
19 20
20 21
6 22
22 23
6 24
24 25
25 26
2 27
27 28
28 29
29 30
30 31
31 32
32 33
33 34
31 35
35 36
36 37
37 38
35 39
39 40
40 41
35 42
42 43
30 44
44 45
30 46
46 47
47 48
2 49
49 50
50 51
51 52
50 53
53 54
54 55
55 56
53 57
57 58
53 59
59 60
60 61
61 62
59 63
63 64
64 65
65 66
64 67
67 68
64 69
69 70
64 71
71 72
64 73
73 74
64 75
75 76
59 77
77 78
53 79
79 80
80 81
79 82
82 83
83 84
84 85
83 86
86 87
83 88
88 89
83 90
90 91
83 92
92 93
83 94
94 95
79 96
96 97
53 98
98 99
99 100
98 101
101 102
102 103
103 104
102 105
105 106
102 107
107 108
102 109
109 110
102 111
111 112
102 113
113 114
98 115
115 116
2 117
117 118
118 119
119 120
118 121
121 122
122 123
123 124
121 125
125 126
126 127
121 128
128 129
0 130
0 131
131 132
0 133
133 134
134 135
135 136

Test a configuration where each character is a term
