120
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ObjectMapper'
11 name (SimpleName)
12 identifier='mapper'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='ObjectMapper'
16 statement (ExpressionStmt)
17 expression (VariableDeclarationExpr)
18 variables
19 variable (VariableDeclarator)
20 initializer (MethodCallExpr)
21 name (SimpleName)
22 identifier='readValue'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='mapper'
26 arguments
27 argument (StringLiteralExpr)
28 value='[ \"123\" ]'
29 argument (ClassExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='ListSubClass'
33 name (SimpleName)
34 identifier='result'
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='ListSubClass'
38 statement (ExpressionStmt)
39 expression (MethodCallExpr)
40 name (SimpleName)
41 identifier='assertEquals'
42 arguments
43 argument (IntegerLiteralExpr)
44 value='1'
45 argument (MethodCallExpr)
46 name (SimpleName)
47 identifier='size'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='result'
51 statement (ExpressionStmt)
52 expression (VariableDeclarationExpr)
53 variables
54 variable (VariableDeclarator)
55 initializer (MethodCallExpr)
56 name (SimpleName)
57 identifier='get'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='result'
61 arguments
62 argument (IntegerLiteralExpr)
63 value='0'
64 name (SimpleName)
65 identifier='value'
66 type (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='Object'
69 statement (ExpressionStmt)
70 expression (MethodCallExpr)
71 name (SimpleName)
72 identifier='assertEquals'
73 arguments
74 argument (ClassExpr)
75 type (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='StringWrapper'
78 argument (MethodCallExpr)
79 name (SimpleName)
80 identifier='getClass'
81 scope (NameExpr)
82 name (SimpleName)
83 identifier='value'
84 statement (ExpressionStmt)
85 expression (VariableDeclarationExpr)
86 variables
87 variable (VariableDeclarator)
88 initializer (CastExpr)
89 expression (NameExpr)
90 name (SimpleName)
91 identifier='value'
92 type (ClassOrInterfaceType)
93 name (SimpleName)
94 identifier='StringWrapper'
95 name (SimpleName)
96 identifier='bw'
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='StringWrapper'
100 statement (ExpressionStmt)
101 expression (MethodCallExpr)
102 name (SimpleName)
103 identifier='assertEquals'
104 arguments
105 argument (StringLiteralExpr)
106 value='123'
107 argument (FieldAccessExpr)
108 name (SimpleName)
109 identifier='str'
110 scope (NameExpr)
111 name (SimpleName)
112 identifier='bw'
113 type (VoidType)
114 name (SimpleName)
115 identifier='testListSubClass'
116 thrownExceptions
117 thrownException (ClassOrInterfaceType)
118 name (SimpleName)
119 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
26 29
29 30
30 31
31 32
19 33
33 34
19 35
35 36
36 37
2 38
38 39
39 40
40 41
39 42
42 43
43 44
42 45
45 46
46 47
45 48
48 49
49 50
2 51
51 52
52 53
53 54
54 55
55 56
56 57
55 58
58 59
59 60
55 61
61 62
62 63
54 64
64 65
54 66
66 67
67 68
2 69
69 70
70 71
71 72
70 73
73 74
74 75
75 76
76 77
73 78
78 79
79 80
78 81
81 82
82 83
2 84
84 85
85 86
86 87
87 88
88 89
89 90
90 91
88 92
92 93
93 94
87 95
95 96
87 97
97 98
98 99
2 100
100 101
101 102
102 103
101 104
104 105
105 106
104 107
107 108
108 109
107 110
110 111
111 112
0 113
0 114
114 115
0 116
116 117
117 118
118 119

Verifying that sub-classing works ok wrt generics information
