72
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (BinaryExpr)
8 operator='PLUS'
9 left (MethodCallExpr)
10 name (SimpleName)
11 identifier='toMillis'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='limitUnit'
15 arguments
16 argument (NameExpr)
17 name (SimpleName)
18 identifier='limit'
19 right (MethodCallExpr)
20 name (SimpleName)
21 identifier='currentTimeMillis'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='System'
25 name (SimpleName)
26 identifier='expiry'
27 type (PrimitiveType)
28 type='LONG'
29 statement (ExpressionStmt)
30 expression (MethodCallExpr)
31 name (SimpleName)
32 identifier='waitUntil'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='predicate'
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='expiry'
40 type (VoidType)
41 name (SimpleName)
42 identifier='waitUntil'
43 parameters
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='predicate'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='Predicate'
51 typeArguments
52 typeArgument (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='OutputFrame'
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='limit'
59 type (PrimitiveType)
60 type='LONG'
61 parameter (Parameter)
62 isVarArgs='false'
63 name (SimpleName)
64 identifier='limitUnit'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='TimeUnit'
68 thrownExceptions
69 thrownException (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='TimeoutException'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
7 9
9 10
10 11
9 12
12 13
13 14
9 15
15 16
16 17
17 18
7 19
19 20
20 21
19 22
22 23
23 24
6 25
25 26
6 27
27 28
2 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
33 37
37 38
38 39
0 40
0 41
41 42
0 43
43 44
44 45
44 46
46 47
44 48
48 49
49 50
48 51
51 52
52 53
53 54
43 55
55 56
55 57
57 58
55 59
59 60
43 61
61 62
61 63
63 64
61 65
65 66
66 67
0 68
68 69
69 70
70 71

Wait until any frame (usually, line) of output matches the provided predicate. <p> Note that lines will often have a trailing newline character, and this is not stripped off before the predicate is tested.
