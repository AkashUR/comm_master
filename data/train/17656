77
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 name (SimpleName)
8 identifier='original'
9 type (ClassOrInterfaceType)
10 name (SimpleName)
11 identifier='DistributionData'
12 statement (DoStmt)
13 body (BlockStmt)
14 statements
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (NameExpr)
19 name (SimpleName)
20 identifier='original'
21 value (MethodCallExpr)
22 name (SimpleName)
23 identifier='get'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='value'
27 condition (UnaryExpr)
28 operator='LOGICAL_COMPLEMENT'
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='compareAndSet'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='value'
35 arguments
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='original'
39 argument (MethodCallExpr)
40 name (SimpleName)
41 identifier='combine'
42 scope (NameExpr)
43 name (SimpleName)
44 identifier='original'
45 arguments
46 argument (MethodCallExpr)
47 name (SimpleName)
48 identifier='singleton'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='DistributionData'
52 arguments
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='n'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='afterModification'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='dirty'
63 type (VoidType)
64 name (SimpleName)
65 identifier='update'
66 parameters
67 parameter (Parameter)
68 isVarArgs='false'
69 name (SimpleName)
70 identifier='n'
71 type (PrimitiveType)
72 type='LONG'
73 annotations
74 annotation (MarkerAnnotationExpr)
75 name (Name)
76 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
10 11
2 12
12 13
13 14
14 15
15 16
16 17
16 18
18 19
19 20
16 21
21 22
22 23
21 24
24 25
25 26
12 27
27 28
27 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
37 38
35 39
39 40
40 41
39 42
42 43
43 44
39 45
45 46
46 47
47 48
46 49
49 50
50 51
46 52
52 53
53 54
54 55
2 56
56 57
57 58
58 59
57 60
60 61
61 62
0 63
0 64
64 65
0 66
66 67
67 68
67 69
69 70
67 71
71 72
0 73
73 74
74 75
75 76

Increment the counter by the given amount.
