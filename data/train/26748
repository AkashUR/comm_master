346
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='HashMap'
11 typeArguments
12 typeArgument (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='String'
15 typeArgument (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Container'
18 scope (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='container'
21 scope (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='cargo'
24 scope (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='codehaus'
27 scope (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='org'
30 name (SimpleName)
31 identifier='context'
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='Map'
35 typeArguments
36 typeArgument (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='String'
39 typeArgument (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='Container'
42 scope (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='container'
45 scope (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='cargo'
48 scope (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='codehaus'
51 scope (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='org'
54 statement (ExpressionStmt)
55 expression (MethodCallExpr)
56 name (SimpleName)
57 identifier='setUpMojo'
58 arguments
59 argument (ClassExpr)
60 type (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='InstalledLocalContainerStub'
63 argument (FieldAccessExpr)
64 name (SimpleName)
65 identifier='ID'
66 scope (NameExpr)
67 name (SimpleName)
68 identifier='InstalledLocalContainerStub'
69 argument (ClassExpr)
70 type (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='StandaloneLocalConfigurationStub'
73 statement (ExpressionStmt)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='setPluginContext'
77 scope (FieldAccessExpr)
78 name (SimpleName)
79 identifier='mojo'
80 scope (ThisExpr)
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='context'
85 statement (ExpressionStmt)
86 expression (MethodCallExpr)
87 name (SimpleName)
88 identifier='setCargoProject'
89 scope (FieldAccessExpr)
90 name (SimpleName)
91 identifier='mojo'
92 scope (ThisExpr)
93 arguments
94 argument (MethodCallExpr)
95 name (SimpleName)
96 identifier='createTestCargoProject'
97 arguments
98 argument (StringLiteralExpr)
99 value='pom'
100 statement (ExpressionStmt)
101 expression (MethodCallExpr)
102 name (SimpleName)
103 identifier='setProperties'
104 scope (MethodCallExpr)
105 name (SimpleName)
106 identifier='getConfigurationElement'
107 scope (FieldAccessExpr)
108 name (SimpleName)
109 identifier='mojo'
110 scope (ThisExpr)
111 arguments
112 argument (ObjectCreationExpr)
113 type (ClassOrInterfaceType)
114 name (SimpleName)
115 identifier='HashMap'
116 typeArguments
117 typeArgument (ClassOrInterfaceType)
118 name (SimpleName)
119 identifier='String'
120 typeArgument (ClassOrInterfaceType)
121 name (SimpleName)
122 identifier='String'
123 statement (ExpressionStmt)
124 expression (MethodCallExpr)
125 name (SimpleName)
126 identifier='put'
127 scope (MethodCallExpr)
128 name (SimpleName)
129 identifier='getProperties'
130 scope (MethodCallExpr)
131 name (SimpleName)
132 identifier='getConfigurationElement'
133 scope (FieldAccessExpr)
134 name (SimpleName)
135 identifier='mojo'
136 scope (ThisExpr)
137 arguments
138 argument (StringLiteralExpr)
139 value='foo'
140 argument (StringLiteralExpr)
141 value='bar'
142 statement (ExpressionStmt)
143 expression (MethodCallExpr)
144 name (SimpleName)
145 identifier='execute'
146 scope (FieldAccessExpr)
147 name (SimpleName)
148 identifier='mojo'
149 scope (ThisExpr)
150 statement (ExpressionStmt)
151 expression (MethodCallExpr)
152 name (SimpleName)
153 identifier='assertEquals'
154 arguments
155 argument (IntegerLiteralExpr)
156 value='1'
157 argument (MethodCallExpr)
158 name (SimpleName)
159 identifier='size'
160 scope (NameExpr)
161 name (SimpleName)
162 identifier='context'
163 statement (ExpressionStmt)
164 expression (VariableDeclarationExpr)
165 variables
166 variable (VariableDeclarator)
167 initializer (MethodCallExpr)
168 name (SimpleName)
169 identifier='iterator'
170 scope (MethodCallExpr)
171 name (SimpleName)
172 identifier='values'
173 scope (NameExpr)
174 name (SimpleName)
175 identifier='context'
176 name (SimpleName)
177 identifier='iter'
178 type (ClassOrInterfaceType)
179 name (SimpleName)
180 identifier='Iterator'
181 typeArguments
182 typeArgument (ClassOrInterfaceType)
183 name (SimpleName)
184 identifier='Container'
185 scope (ClassOrInterfaceType)
186 name (SimpleName)
187 identifier='container'
188 scope (ClassOrInterfaceType)
189 name (SimpleName)
190 identifier='cargo'
191 scope (ClassOrInterfaceType)
192 name (SimpleName)
193 identifier='codehaus'
194 scope (ClassOrInterfaceType)
195 name (SimpleName)
196 identifier='org'
197 statement (ExpressionStmt)
198 expression (VariableDeclarationExpr)
199 variables
200 variable (VariableDeclarator)
201 initializer (MethodCallExpr)
202 name (SimpleName)
203 identifier='next'
204 scope (NameExpr)
205 name (SimpleName)
206 identifier='iter'
207 name (SimpleName)
208 identifier='container'
209 type (ClassOrInterfaceType)
210 name (SimpleName)
211 identifier='Container'
212 scope (ClassOrInterfaceType)
213 name (SimpleName)
214 identifier='container'
215 scope (ClassOrInterfaceType)
216 name (SimpleName)
217 identifier='cargo'
218 scope (ClassOrInterfaceType)
219 name (SimpleName)
220 identifier='codehaus'
221 scope (ClassOrInterfaceType)
222 name (SimpleName)
223 identifier='org'
224 statement (ExpressionStmt)
225 expression (MethodCallExpr)
226 name (SimpleName)
227 identifier='assertEquals'
228 arguments
229 argument (StringLiteralExpr)
230 value='bar'
231 argument (MethodCallExpr)
232 name (SimpleName)
233 identifier='getPropertyValue'
234 scope (MethodCallExpr)
235 name (SimpleName)
236 identifier='getConfiguration'
237 scope (EnclosedExpr)
238 inner (CastExpr)
239 expression (NameExpr)
240 name (SimpleName)
241 identifier='container'
242 type (ClassOrInterfaceType)
243 name (SimpleName)
244 identifier='LocalContainer'
245 arguments
246 argument (StringLiteralExpr)
247 value='foo'
248 statement (ExpressionStmt)
249 expression (MethodCallExpr)
250 name (SimpleName)
251 identifier='put'
252 scope (MethodCallExpr)
253 name (SimpleName)
254 identifier='getProperties'
255 scope (MethodCallExpr)
256 name (SimpleName)
257 identifier='getConfigurationElement'
258 scope (FieldAccessExpr)
259 name (SimpleName)
260 identifier='mojo'
261 scope (ThisExpr)
262 arguments
263 argument (StringLiteralExpr)
264 value='foo'
265 argument (StringLiteralExpr)
266 value='qux'
267 statement (ExpressionStmt)
268 expression (MethodCallExpr)
269 name (SimpleName)
270 identifier='execute'
271 scope (FieldAccessExpr)
272 name (SimpleName)
273 identifier='mojo'
274 scope (ThisExpr)
275 statement (ExpressionStmt)
276 expression (MethodCallExpr)
277 name (SimpleName)
278 identifier='assertEquals'
279 arguments
280 argument (IntegerLiteralExpr)
281 value='1'
282 argument (MethodCallExpr)
283 name (SimpleName)
284 identifier='size'
285 scope (NameExpr)
286 name (SimpleName)
287 identifier='context'
288 statement (ExpressionStmt)
289 expression (AssignExpr)
290 operator='ASSIGN'
291 target (NameExpr)
292 name (SimpleName)
293 identifier='iter'
294 value (MethodCallExpr)
295 name (SimpleName)
296 identifier='iterator'
297 scope (MethodCallExpr)
298 name (SimpleName)
299 identifier='values'
300 scope (NameExpr)
301 name (SimpleName)
302 identifier='context'
303 statement (ExpressionStmt)
304 expression (AssignExpr)
305 operator='ASSIGN'
306 target (NameExpr)
307 name (SimpleName)
308 identifier='container'
309 value (MethodCallExpr)
310 name (SimpleName)
311 identifier='next'
312 scope (NameExpr)
313 name (SimpleName)
314 identifier='iter'
315 statement (ExpressionStmt)
316 expression (MethodCallExpr)
317 name (SimpleName)
318 identifier='assertEquals'
319 arguments
320 argument (StringLiteralExpr)
321 value='qux'
322 argument (MethodCallExpr)
323 name (SimpleName)
324 identifier='getPropertyValue'
325 scope (MethodCallExpr)
326 name (SimpleName)
327 identifier='getConfiguration'
328 scope (EnclosedExpr)
329 inner (CastExpr)
330 expression (NameExpr)
331 name (SimpleName)
332 identifier='container'
333 type (ClassOrInterfaceType)
334 name (SimpleName)
335 identifier='LocalContainer'
336 arguments
337 argument (StringLiteralExpr)
338 value='foo'
339 type (VoidType)
340 name (SimpleName)
341 identifier='testTwoExecutionsWithDifferentConfigurationsInProject'
342 thrownExceptions
343 thrownException (ClassOrInterfaceType)
344 name (SimpleName)
345 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
8 11
11 12
12 13
13 14
11 15
15 16
16 17
15 18
18 19
19 20
18 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
6 30
30 31
6 32
32 33
33 34
32 35
35 36
36 37
37 38
35 39
39 40
40 41
39 42
42 43
43 44
42 45
45 46
46 47
45 48
48 49
49 50
48 51
51 52
52 53
2 54
54 55
55 56
56 57
55 58
58 59
59 60
60 61
61 62
58 63
63 64
64 65
63 66
66 67
67 68
58 69
69 70
70 71
71 72
2 73
73 74
74 75
75 76
74 77
77 78
78 79
77 80
74 81
81 82
82 83
83 84
2 85
85 86
86 87
87 88
86 89
89 90
90 91
89 92
86 93
93 94
94 95
95 96
94 97
97 98
98 99
2 100
100 101
101 102
102 103
101 104
104 105
105 106
104 107
107 108
108 109
107 110
101 111
111 112
112 113
113 114
114 115
113 116
116 117
117 118
118 119
116 120
120 121
121 122
2 123
123 124
124 125
125 126
124 127
127 128
128 129
127 130
130 131
131 132
130 133
133 134
134 135
133 136
124 137
137 138
138 139
137 140
140 141
2 142
142 143
143 144
144 145
143 146
146 147
147 148
146 149
2 150
150 151
151 152
152 153
151 154
154 155
155 156
154 157
157 158
158 159
157 160
160 161
161 162
2 163
163 164
164 165
165 166
166 167
167 168
168 169
167 170
170 171
171 172
170 173
173 174
174 175
166 176
176 177
166 178
178 179
179 180
178 181
181 182
182 183
183 184
182 185
185 186
186 187
185 188
188 189
189 190
188 191
191 192
192 193
191 194
194 195
195 196
2 197
197 198
198 199
199 200
200 201
201 202
202 203
201 204
204 205
205 206
200 207
207 208
200 209
209 210
210 211
209 212
212 213
213 214
212 215
215 216
216 217
215 218
218 219
219 220
218 221
221 222
222 223
2 224
224 225
225 226
226 227
225 228
228 229
229 230
228 231
231 232
232 233
231 234
234 235
235 236
234 237
237 238
238 239
239 240
240 241
238 242
242 243
243 244
231 245
245 246
246 247
2 248
248 249
249 250
250 251
249 252
252 253
253 254
252 255
255 256
256 257
255 258
258 259
259 260
258 261
249 262
262 263
263 264
262 265
265 266
2 267
267 268
268 269
269 270
268 271
271 272
272 273
271 274
2 275
275 276
276 277
277 278
276 279
279 280
280 281
279 282
282 283
283 284
282 285
285 286
286 287
2 288
288 289
289 290
289 291
291 292
292 293
289 294
294 295
295 296
294 297
297 298
298 299
297 300
300 301
301 302
2 303
303 304
304 305
304 306
306 307
307 308
304 309
309 310
310 311
309 312
312 313
313 314
2 315
315 316
316 317
317 318
316 319
319 320
320 321
319 322
322 323
323 324
322 325
325 326
326 327
325 328
328 329
329 330
330 331
331 332
329 333
333 334
334 335
322 336
336 337
337 338
0 339
0 340
340 341
0 342
342 343
343 344
344 345

Test two executions with different configurations in a single project.
