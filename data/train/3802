129
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getInstance'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Cipher'
13 arguments
14 argument (StringLiteralExpr)
15 value='DES/CBC/PKCS5Padding'
16 name (SimpleName)
17 identifier='cf'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='Cipher'
21 statement (ExpressionStmt)
22 expression (VariableDeclarationExpr)
23 variables
24 variable (VariableDeclarator)
25 initializer (ObjectCreationExpr)
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='NullCipher'
29 name (SimpleName)
30 identifier='nc'
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='NullCipher'
34 statement (ExpressionStmt)
35 expression (VariableDeclarationExpr)
36 variables
37 variable (VariableDeclarator)
38 initializer (ObjectCreationExpr)
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='CipherOutputStream'
42 arguments
43 argument (ObjectCreationExpr)
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='BufferedOutputStream'
47 arguments
48 argument (CastExpr)
49 expression (NullLiteralExpr)
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='OutputStream'
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='nc'
56 name (SimpleName)
57 identifier='stream1'
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='CipherOutputStream'
61 statement (ExpressionStmt)
62 expression (VariableDeclarationExpr)
63 variables
64 variable (VariableDeclarator)
65 initializer (ObjectCreationExpr)
66 type (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='CipherOutputStream'
69 arguments
70 argument (NameExpr)
71 name (SimpleName)
72 identifier='stream1'
73 argument (NameExpr)
74 name (SimpleName)
75 identifier='cf'
76 name (SimpleName)
77 identifier='stream2'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='CipherOutputStream'
81 statement (ExpressionStmt)
82 expression (VariableDeclarationExpr)
83 variables
84 variable (VariableDeclarator)
85 initializer (ObjectCreationExpr)
86 type (ClassOrInterfaceType)
87 name (SimpleName)
88 identifier='CipherOutputStream'
89 arguments
90 argument (NameExpr)
91 name (SimpleName)
92 identifier='stream2'
93 argument (NameExpr)
94 name (SimpleName)
95 identifier='nc'
96 name (SimpleName)
97 identifier='stream3'
98 type (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='CipherOutputStream'
101 statement (ExpressionStmt)
102 expression (MethodCallExpr)
103 name (SimpleName)
104 identifier='write'
105 scope (NameExpr)
106 name (SimpleName)
107 identifier='stream3'
108 arguments
109 argument (ArrayCreationExpr)
110 elementType (PrimitiveType)
111 type='BYTE'
112 initializer (ArrayInitializerExpr)
113 values
114 value (IntegerLiteralExpr)
115 value='0'
116 levels
117 level (ArrayCreationLevel)
118 argument (IntegerLiteralExpr)
119 value='0'
120 argument (IntegerLiteralExpr)
121 value='0'
122 type (VoidType)
123 name (SimpleName)
124 identifier='testWrite5'
125 thrownExceptions
126 thrownException (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
6 16
16 17
6 18
18 19
19 20
2 21
21 22
22 23
23 24
24 25
25 26
26 27
27 28
24 29
29 30
24 31
31 32
32 33
2 34
34 35
35 36
36 37
37 38
38 39
39 40
40 41
38 42
42 43
43 44
44 45
45 46
43 47
47 48
48 49
48 50
50 51
51 52
42 53
53 54
54 55
37 56
56 57
37 58
58 59
59 60
2 61
61 62
62 63
63 64
64 65
65 66
66 67
67 68
65 69
69 70
70 71
71 72
69 73
73 74
74 75
64 76
76 77
64 78
78 79
79 80
2 81
81 82
82 83
83 84
84 85
85 86
86 87
87 88
85 89
89 90
90 91
91 92
89 93
93 94
94 95
84 96
96 97
84 98
98 99
99 100
2 101
101 102
102 103
103 104
102 105
105 106
106 107
102 108
108 109
109 110
110 111
109 112
112 113
113 114
114 115
109 116
116 117
108 118
118 119
108 120
120 121
0 122
0 123
123 124
0 125
125 126
126 127
127 128

write(byte[] b, int off, int len)
