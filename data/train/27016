120
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='newVar'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='context'
13 name (SimpleName)
14 identifier='assignVar'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='LogicalVariable'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (ObjectCreationExpr)
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='AssignOperator'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='assignVar'
30 argument (ObjectCreationExpr)
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='MutableObject'
34 typeArguments
35 typeArgument (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='ILogicalExpression'
38 arguments
39 argument (FieldAccessExpr)
40 name (SimpleName)
41 identifier='TRUE'
42 scope (NameExpr)
43 name (SimpleName)
44 identifier='ConstantExpression'
45 name (SimpleName)
46 identifier='assignOp'
47 type (ClassOrInterfaceType)
48 name (SimpleName)
49 identifier='ILogicalOperator'
50 statement (ExpressionStmt)
51 expression (MethodCallExpr)
52 name (SimpleName)
53 identifier='add'
54 scope (MethodCallExpr)
55 name (SimpleName)
56 identifier='getInputs'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='assignOp'
60 arguments
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='get'
64 scope (MethodCallExpr)
65 name (SimpleName)
66 identifier='getInputs'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='joinOp'
70 arguments
71 argument (IntegerLiteralExpr)
72 value='1'
73 statement (ExpressionStmt)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='set'
77 scope (MethodCallExpr)
78 name (SimpleName)
79 identifier='getInputs'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='joinOp'
83 arguments
84 argument (IntegerLiteralExpr)
85 value='1'
86 argument (ObjectCreationExpr)
87 type (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='MutableObject'
90 typeArguments
91 typeArgument (ClassOrInterfaceType)
92 name (SimpleName)
93 identifier='ILogicalOperator'
94 arguments
95 argument (NameExpr)
96 name (SimpleName)
97 identifier='assignOp'
98 statement (ExpressionStmt)
99 expression (MethodCallExpr)
100 name (SimpleName)
101 identifier='add'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='nullCheckVars'
105 arguments
106 argument (NameExpr)
107 name (SimpleName)
108 identifier='assignVar'
109 type (VoidType)
110 name (SimpleName)
111 identifier='injectNullCheckVars'
112 parameters
113 parameter (Parameter)
114 isVarArgs='false'
115 name (SimpleName)
116 identifier='joinOp'
117 type (ClassOrInterfaceType)
118 name (SimpleName)
119 identifier='AbstractBinaryJoinOperator'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
24 25
22 26
26 27
27 28
28 29
26 30
30 31
31 32
32 33
31 34
34 35
35 36
36 37
30 38
38 39
39 40
40 41
39 42
42 43
43 44
21 45
45 46
21 47
47 48
48 49
2 50
50 51
51 52
52 53
51 54
54 55
55 56
54 57
57 58
58 59
51 60
60 61
61 62
62 63
61 64
64 65
65 66
64 67
67 68
68 69
61 70
70 71
71 72
2 73
73 74
74 75
75 76
74 77
77 78
78 79
77 80
80 81
81 82
74 83
83 84
84 85
83 86
86 87
87 88
88 89
87 90
90 91
91 92
92 93
86 94
94 95
95 96
96 97
2 98
98 99
99 100
100 101
99 102
102 103
103 104
99 105
105 106
106 107
107 108
0 109
0 110
110 111
0 112
112 113
113 114
113 115
115 116
113 117
117 118
118 119

Inject varaibles to indicate non-matches for the right branch of a left-outer join.
