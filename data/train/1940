134
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setShort'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='tagCompound'
10 arguments
11 argument (StringLiteralExpr)
12 value='xTile'
13 argument (CastExpr)
14 expression (MethodCallExpr)
15 name (SimpleName)
16 identifier='getX'
17 scope (FieldAccessExpr)
18 name (SimpleName)
19 identifier='blockPos'
20 scope (ThisExpr)
21 type (PrimitiveType)
22 type='SHORT'
23 statement (ExpressionStmt)
24 expression (MethodCallExpr)
25 name (SimpleName)
26 identifier='setShort'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='tagCompound'
30 arguments
31 argument (StringLiteralExpr)
32 value='yTile'
33 argument (CastExpr)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='getY'
37 scope (FieldAccessExpr)
38 name (SimpleName)
39 identifier='blockPos'
40 scope (ThisExpr)
41 type (PrimitiveType)
42 type='SHORT'
43 statement (ExpressionStmt)
44 expression (MethodCallExpr)
45 name (SimpleName)
46 identifier='setShort'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='tagCompound'
50 arguments
51 argument (StringLiteralExpr)
52 value='zTile'
53 argument (CastExpr)
54 expression (MethodCallExpr)
55 name (SimpleName)
56 identifier='getZ'
57 scope (FieldAccessExpr)
58 name (SimpleName)
59 identifier='blockPos'
60 scope (ThisExpr)
61 type (PrimitiveType)
62 type='SHORT'
63 statement (ExpressionStmt)
64 expression (MethodCallExpr)
65 name (SimpleName)
66 identifier='setFloat'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='tagCompound'
70 arguments
71 argument (StringLiteralExpr)
72 value='damage'
73 argument (FieldAccessExpr)
74 name (SimpleName)
75 identifier='damage'
76 scope (ThisExpr)
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='setInteger'
81 scope (NameExpr)
82 name (SimpleName)
83 identifier='tagCompound'
84 arguments
85 argument (StringLiteralExpr)
86 value='distanceTraveled'
87 argument (FieldAccessExpr)
88 name (SimpleName)
89 identifier='distanceTraveled'
90 scope (ThisExpr)
91 statement (ExpressionStmt)
92 expression (MethodCallExpr)
93 name (SimpleName)
94 identifier='setInteger'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='tagCompound'
98 arguments
99 argument (StringLiteralExpr)
100 value='life'
101 argument (FieldAccessExpr)
102 name (SimpleName)
103 identifier='life'
104 scope (ThisExpr)
105 statement (ExpressionStmt)
106 expression (MethodCallExpr)
107 name (SimpleName)
108 identifier='setInteger'
109 scope (NameExpr)
110 name (SimpleName)
111 identifier='tagCompound'
112 arguments
113 argument (StringLiteralExpr)
114 value='color'
115 argument (FieldAccessExpr)
116 name (SimpleName)
117 identifier='color'
118 scope (ThisExpr)
119 type (VoidType)
120 name (SimpleName)
121 identifier='writeEntityToNBT'
122 parameters
123 parameter (Parameter)
124 isVarArgs='false'
125 name (SimpleName)
126 identifier='tagCompound'
127 type (ClassOrInterfaceType)
128 name (SimpleName)
129 identifier='NBTTagCompound'
130 annotations
131 annotation (MarkerAnnotationExpr)
132 name (Name)
133 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
14 15
15 16
14 17
17 18
18 19
17 20
13 21
21 22
2 23
23 24
24 25
25 26
24 27
27 28
28 29
24 30
30 31
31 32
30 33
33 34
34 35
35 36
34 37
37 38
38 39
37 40
33 41
41 42
2 43
43 44
44 45
45 46
44 47
47 48
48 49
44 50
50 51
51 52
50 53
53 54
54 55
55 56
54 57
57 58
58 59
57 60
53 61
61 62
2 63
63 64
64 65
65 66
64 67
67 68
68 69
64 70
70 71
71 72
70 73
73 74
74 75
73 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
78 84
84 85
85 86
84 87
87 88
88 89
87 90
2 91
91 92
92 93
93 94
92 95
95 96
96 97
92 98
98 99
99 100
98 101
101 102
102 103
101 104
2 105
105 106
106 107
107 108
106 109
109 110
110 111
106 112
112 113
113 114
112 115
115 116
116 117
115 118
0 119
0 120
120 121
0 122
122 123
123 124
123 125
125 126
123 127
127 128
128 129
0 130
130 131
131 132
132 133

(abstract) Protected helper method to write subclass entity data to NBT.
