196
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='createServers'
7 arguments
8 argument (IntegerLiteralExpr)
9 value='3'
10 statement (ExpressionStmt)
11 expression (VariableDeclarationExpr)
12 variables
13 variable (VariableDeclarator)
14 initializer (MethodCallExpr)
15 name (SimpleName)
16 identifier='createServer'
17 arguments
18 argument (MethodCallExpr)
19 name (SimpleName)
20 identifier='nextMember'
21 arguments
22 argument (FieldAccessExpr)
23 name (SimpleName)
24 identifier='PASSIVE'
25 scope (FieldAccessExpr)
26 name (SimpleName)
27 identifier='Type'
28 scope (NameExpr)
29 name (SimpleName)
30 identifier='Member'
31 name (SimpleName)
32 identifier='passive'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='CopycatServer'
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='thenRun'
40 scope (MethodCallExpr)
41 name (SimpleName)
42 identifier='join'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='passive'
46 arguments
47 argument (MethodCallExpr)
48 name (SimpleName)
49 identifier='collect'
50 scope (MethodCallExpr)
51 name (SimpleName)
52 identifier='map'
53 scope (MethodCallExpr)
54 name (SimpleName)
55 identifier='stream'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='members'
59 arguments
60 argument (NullLiteralExpr)
61 arguments
62 argument (MethodCallExpr)
63 name (SimpleName)
64 identifier='toList'
65 scope (NameExpr)
66 name (SimpleName)
67 identifier='Collectors'
68 arguments
69 argument (NullLiteralExpr)
70 statement (ExpressionStmt)
71 expression (MethodCallExpr)
72 name (SimpleName)
73 identifier='await'
74 arguments
75 argument (IntegerLiteralExpr)
76 value='10000'
77 statement (ExpressionStmt)
78 expression (VariableDeclarationExpr)
79 variables
80 variable (VariableDeclarator)
81 initializer (MethodCallExpr)
82 name (SimpleName)
83 identifier='nextMember'
84 arguments
85 argument (FieldAccessExpr)
86 name (SimpleName)
87 identifier='RESERVE'
88 scope (FieldAccessExpr)
89 name (SimpleName)
90 identifier='Type'
91 scope (NameExpr)
92 name (SimpleName)
93 identifier='Member'
94 name (SimpleName)
95 identifier='reserveMember'
96 type (ClassOrInterfaceType)
97 name (SimpleName)
98 identifier='Member'
99 statement (ExpressionStmt)
100 expression (MethodCallExpr)
101 name (SimpleName)
102 identifier='onJoin'
103 scope (MethodCallExpr)
104 name (SimpleName)
105 identifier='cluster'
106 scope (NameExpr)
107 name (SimpleName)
108 identifier='passive'
109 arguments
110 argument (NullLiteralExpr)
111 statement (ExpressionStmt)
112 expression (VariableDeclarationExpr)
113 variables
114 variable (VariableDeclarator)
115 initializer (MethodCallExpr)
116 name (SimpleName)
117 identifier='createServer'
118 arguments
119 argument (NameExpr)
120 name (SimpleName)
121 identifier='reserveMember'
122 name (SimpleName)
123 identifier='reserve'
124 type (ClassOrInterfaceType)
125 name (SimpleName)
126 identifier='CopycatServer'
127 statement (ExpressionStmt)
128 expression (MethodCallExpr)
129 name (SimpleName)
130 identifier='thenRun'
131 scope (MethodCallExpr)
132 name (SimpleName)
133 identifier='join'
134 scope (NameExpr)
135 name (SimpleName)
136 identifier='reserve'
137 arguments
138 argument (MethodCallExpr)
139 name (SimpleName)
140 identifier='collect'
141 scope (MethodCallExpr)
142 name (SimpleName)
143 identifier='map'
144 scope (MethodCallExpr)
145 name (SimpleName)
146 identifier='stream'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='members'
150 arguments
151 argument (NullLiteralExpr)
152 arguments
153 argument (MethodCallExpr)
154 name (SimpleName)
155 identifier='toList'
156 scope (NameExpr)
157 name (SimpleName)
158 identifier='Collectors'
159 arguments
160 argument (NullLiteralExpr)
161 statement (ExpressionStmt)
162 expression (MethodCallExpr)
163 name (SimpleName)
164 identifier='await'
165 arguments
166 argument (IntegerLiteralExpr)
167 value='10000'
168 statement (ExpressionStmt)
169 expression (MethodCallExpr)
170 name (SimpleName)
171 identifier='thenRun'
172 scope (MethodCallExpr)
173 name (SimpleName)
174 identifier='shutdown'
175 scope (NameExpr)
176 name (SimpleName)
177 identifier='reserve'
178 arguments
179 argument (NullLiteralExpr)
180 statement (ExpressionStmt)
181 expression (MethodCallExpr)
182 name (SimpleName)
183 identifier='await'
184 arguments
185 argument (IntegerLiteralExpr)
186 value='10000'
187 argument (IntegerLiteralExpr)
188 value='2'
189 type (VoidType)
190 name (SimpleName)
191 identifier='testPassiveReserveAvailabilityChange'
192 thrownExceptions
193 thrownException (ClassOrInterfaceType)
194 name (SimpleName)
195 identifier='Throwable'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
12 13
13 14
14 15
15 16
14 17
17 18
18 19
19 20
18 21
21 22
22 23
23 24
22 25
25 26
26 27
25 28
28 29
29 30
13 31
31 32
13 33
33 34
34 35
2 36
36 37
37 38
38 39
37 40
40 41
41 42
40 43
43 44
44 45
40 46
46 47
47 48
48 49
47 50
50 51
51 52
50 53
53 54
54 55
53 56
56 57
57 58
50 59
59 60
47 61
61 62
62 63
63 64
62 65
65 66
66 67
37 68
68 69
2 70
70 71
71 72
72 73
71 74
74 75
75 76
2 77
77 78
78 79
79 80
80 81
81 82
82 83
81 84
84 85
85 86
86 87
85 88
88 89
89 90
88 91
91 92
92 93
80 94
94 95
80 96
96 97
97 98
2 99
99 100
100 101
101 102
100 103
103 104
104 105
103 106
106 107
107 108
100 109
109 110
2 111
111 112
112 113
113 114
114 115
115 116
116 117
115 118
118 119
119 120
120 121
114 122
122 123
114 124
124 125
125 126
2 127
127 128
128 129
129 130
128 131
131 132
132 133
131 134
134 135
135 136
131 137
137 138
138 139
139 140
138 141
141 142
142 143
141 144
144 145
145 146
144 147
147 148
148 149
141 150
150 151
138 152
152 153
153 154
154 155
153 156
156 157
157 158
128 159
159 160
2 161
161 162
162 163
163 164
162 165
165 166
166 167
2 168
168 169
169 170
170 171
169 172
172 173
173 174
172 175
175 176
176 177
169 178
178 179
2 180
180 181
181 182
182 183
181 184
184 185
185 186
184 187
187 188
0 189
0 190
190 191
0 192
192 193
193 194
194 195

Tests detecting an availability change of a reserve member on a passive member.
