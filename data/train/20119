105
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='AtomicInteger'
11 name (SimpleName)
12 identifier='count'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='AtomicInteger'
16 statement (ExpressionStmt)
17 expression (VariableDeclarationExpr)
18 variables
19 variable (VariableDeclarator)
20 initializer (ObjectCreationExpr)
21 type (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='AtomicBoolean'
24 arguments
25 argument (BooleanLiteralExpr)
26 value='true'
27 name (SimpleName)
28 identifier='keepGoing'
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='AtomicBoolean'
32 statement (ExpressionStmt)
33 expression (MethodCallExpr)
34 name (SimpleName)
35 identifier='createChainedFinalizer'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='count'
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='keepGoing'
43 statement (WhileStmt)
44 body (BlockStmt)
45 statements
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='sleep'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='Thread'
53 arguments
54 argument (IntegerLiteralExpr)
55 value='500'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='induceFinalization'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='FinalizationTester'
63 condition (BinaryExpr)
64 operator='EQUALS'
65 left (MethodCallExpr)
66 name (SimpleName)
67 identifier='get'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='count'
71 right (IntegerLiteralExpr)
72 value='0'
73 statement (ExpressionStmt)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='set'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='keepGoing'
80 arguments
81 argument (BooleanLiteralExpr)
82 value='false'
83 statement (ExpressionStmt)
84 expression (MethodCallExpr)
85 name (SimpleName)
86 identifier='assertTrue'
87 arguments
88 argument (BinaryExpr)
89 operator='GREATER'
90 left (MethodCallExpr)
91 name (SimpleName)
92 identifier='get'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='count'
96 right (IntegerLiteralExpr)
97 value='0'
98 type (VoidType)
99 name (SimpleName)
100 identifier='testSystemRunFinalizationReturnsEvenIfQueueIsNonEmpty'
101 thrownExceptions
102 thrownException (ClassOrInterfaceType)
103 name (SimpleName)
104 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
19 20
20 21
21 22
22 23
20 24
24 25
25 26
19 27
27 28
19 29
29 30
30 31
2 32
32 33
33 34
34 35
33 36
36 37
37 38
38 39
36 40
40 41
41 42
2 43
43 44
44 45
45 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
45 56
56 57
57 58
58 59
57 60
60 61
61 62
43 63
63 64
63 65
65 66
66 67
65 68
68 69
69 70
63 71
71 72
2 73
73 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
2 83
83 84
84 85
85 86
84 87
87 88
88 89
88 90
90 91
91 92
90 93
93 94
94 95
88 96
96 97
0 98
0 99
99 100
0 101
101 102
102 103
103 104

Make sure that System.runFinalization() returns even if the finalization queue is never completely empty. http://b/4193517
