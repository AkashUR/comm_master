55
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='addTaint'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='getTaint'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='o'
14 type (VoidType)
15 name (SimpleName)
16 identifier='copyFrom'
17 parameters
18 parameter (Parameter)
19 isVarArgs='false'
20 name (SimpleName)
21 identifier='o'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='Surface'
25 annotations
26 annotation (NormalAnnotationExpr)
27 name (Name)
28 identifier='DSGenerator'
29 pairs
30 pair (MemberValuePair)
31 name (SimpleName)
32 identifier='tool_name'
33 value (StringLiteralExpr)
34 value='Doppelganger'
35 pair (MemberValuePair)
36 name (SimpleName)
37 identifier='tool_version'
38 value (StringLiteralExpr)
39 value='2.0'
40 pair (MemberValuePair)
41 name (SimpleName)
42 identifier='generated_on'
43 value (StringLiteralExpr)
44 value='2013-12-30 12:29:28.565 -0500'
45 pair (MemberValuePair)
46 name (SimpleName)
47 identifier='hash_original_method'
48 value (StringLiteralExpr)
49 value='1CEDD42C8B2FBCD0475C0CDDE7D9C910'
50 pair (MemberValuePair)
51 name (SimpleName)
52 identifier='hash_generated_method'
53 value (StringLiteralExpr)
54 value='D1F9A3C528664A4811E23CEB5B4F8B3B'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
0 14
0 15
15 16
0 17
17 18
18 19
18 20
20 21
18 22
22 23
23 24
0 25
25 26
26 27
27 28
26 29
29 30
30 31
31 32
30 33
33 34
29 35
35 36
36 37
35 38
38 39
29 40
40 41
41 42
40 43
43 44
29 45
45 46
46 47
45 48
48 49
29 50
50 51
51 52
50 53
53 54

Copy another surface to this one.  This surface now holds a reference to the same data as the original surface, and is -not- the owner. This is for use by the window manager when returning a window surface back from a client, converting it from the representation being managed by the window manager to the representation the client uses to draw in to it.
