116
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='tnf'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='type'
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='id'
15 argument (NameExpr)
16 name (SimpleName)
17 identifier='payload'
18 argument (CastExpr)
19 expression (EnclosedExpr)
20 inner (BinaryExpr)
21 operator='BINARY_OR'
22 left (NameExpr)
23 name (SimpleName)
24 identifier='FLAG_MB'
25 right (NameExpr)
26 name (SimpleName)
27 identifier='FLAG_ME'
28 type (PrimitiveType)
29 type='BYTE'
30 name (SimpleName)
31 identifier='NdefRecord'
32 parameters
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='tnf'
37 type (PrimitiveType)
38 type='SHORT'
39 parameter (Parameter)
40 isVarArgs='false'
41 name (SimpleName)
42 identifier='type'
43 type (ArrayType)
44 origin='TYPE'
45 componentType (PrimitiveType)
46 type='BYTE'
47 parameter (Parameter)
48 isVarArgs='false'
49 name (SimpleName)
50 identifier='id'
51 type (ArrayType)
52 origin='TYPE'
53 componentType (PrimitiveType)
54 type='BYTE'
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='payload'
59 type (ArrayType)
60 origin='TYPE'
61 componentType (PrimitiveType)
62 type='BYTE'
63 annotations
64 annotation (SingleMemberAnnotationExpr)
65 memberValue (StringLiteralExpr)
66 value='data structure'
67 name (Name)
68 identifier='DSComment'
69 annotation (SingleMemberAnnotationExpr)
70 memberValue (FieldAccessExpr)
71 name (SimpleName)
72 identifier='DATA_STRUCTURE'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='DSCat'
76 name (Name)
77 identifier='DSSafe'
78 annotation (SingleMemberAnnotationExpr)
79 memberValue (FieldAccessExpr)
80 name (SimpleName)
81 identifier='NFC'
82 scope (NameExpr)
83 name (SimpleName)
84 identifier='DSSinkKind'
85 name (Name)
86 identifier='DSSink'
87 annotation (NormalAnnotationExpr)
88 name (Name)
89 identifier='DSGenerator'
90 pairs
91 pair (MemberValuePair)
92 name (SimpleName)
93 identifier='tool_name'
94 value (StringLiteralExpr)
95 value='Doppelganger'
96 pair (MemberValuePair)
97 name (SimpleName)
98 identifier='tool_version'
99 value (StringLiteralExpr)
100 value='2.0'
101 pair (MemberValuePair)
102 name (SimpleName)
103 identifier='generated_on'
104 value (StringLiteralExpr)
105 value='2013-12-30 12:30:50.189 -0500'
106 pair (MemberValuePair)
107 name (SimpleName)
108 identifier='hash_original_method'
109 value (StringLiteralExpr)
110 value='FB48E937FC56CBD69B2A6F082227DD21'
111 pair (MemberValuePair)
112 name (SimpleName)
113 identifier='hash_generated_method'
114 value (StringLiteralExpr)
115 value='DE7D3367A8D67D13F8EFFB1D24B2E12A'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
13 14
5 15
15 16
16 17
5 18
18 19
19 20
20 21
20 22
22 23
23 24
20 25
25 26
26 27
18 28
28 29
0 30
30 31
0 32
32 33
33 34
33 35
35 36
33 37
37 38
32 39
39 40
39 41
41 42
39 43
43 44
43 45
45 46
32 47
47 48
47 49
49 50
47 51
51 52
51 53
53 54
32 55
55 56
55 57
57 58
55 59
59 60
59 61
61 62
0 63
63 64
64 65
65 66
64 67
67 68
63 69
69 70
70 71
71 72
70 73
73 74
74 75
69 76
76 77
63 78
78 79
79 80
80 81
79 82
82 83
83 84
78 85
85 86
63 87
87 88
88 89
87 90
90 91
91 92
92 93
91 94
94 95
90 96
96 97
97 98
96 99
99 100
90 101
101 102
102 103
101 104
104 105
90 106
106 107
107 108
106 109
109 110
90 111
111 112
112 113
111 114
114 115

Construct an NDEF Record. <p> Applications should not attempt to manually chunk NDEF Records - the implementation of android.nfc will automatically chunk an NDEF Record when necessary (and only present a single logical NDEF Record to the application). So applications should not use TNF_UNCHANGED.
