86
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='viewportHeight'
9 scope (NameExpr)
10 name (SimpleName)
11 identifier='camera'
12 value (BinaryExpr)
13 operator='MULTIPLY'
14 left (IntegerLiteralExpr)
15 value='2'
16 right (NameExpr)
17 name (SimpleName)
18 identifier='SATELLITE_SIZE'
19 statement (ExpressionStmt)
20 expression (AssignExpr)
21 operator='ASSIGN'
22 target (FieldAccessExpr)
23 name (SimpleName)
24 identifier='viewportWidth'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='camera'
28 value (BinaryExpr)
29 operator='MULTIPLY'
30 left (NameExpr)
31 name (SimpleName)
32 identifier='aspectRatio'
33 right (FieldAccessExpr)
34 name (SimpleName)
35 identifier='viewportHeight'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='camera'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='set'
43 scope (FieldAccessExpr)
44 name (SimpleName)
45 identifier='position'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='camera'
49 arguments
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='SATELLITE_POSITION_X'
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='SATELLITE_POSITION_Y'
56 argument (IntegerLiteralExpr)
57 value='0'
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='rotate'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='camera'
65 arguments
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='SATELLITE_ROTATION'
69 type (VoidType)
70 name (SimpleName)
71 identifier='trackSatellite'
72 parameters
73 parameter (Parameter)
74 isVarArgs='false'
75 name (SimpleName)
76 identifier='camera'
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='OrthographicCamera'
80 parameter (Parameter)
81 isVarArgs='false'
82 name (SimpleName)
83 identifier='aspectRatio'
84 type (PrimitiveType)
85 type='FLOAT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
9 10
10 11
4 12
12 13
12 14
14 15
12 16
16 17
17 18
2 19
19 20
20 21
20 22
22 23
23 24
22 25
25 26
26 27
20 28
28 29
28 30
30 31
31 32
28 33
33 34
34 35
33 36
36 37
37 38
2 39
39 40
40 41
41 42
40 43
43 44
44 45
43 46
46 47
47 48
40 49
49 50
50 51
51 52
49 53
53 54
54 55
49 56
56 57
2 58
58 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
0 69
0 70
70 71
0 72
72 73
73 74
73 75
75 76
73 77
77 78
78 79
72 80
80 81
80 82
82 83
80 84
84 85

Finally, let's zoom in on the satellite, and match its rotation. This could be very tricky, given that rectangles are drawn by specifying their lower left corner, and also considering that rectangles can specify the origin about which they will be rotated. Fortunately, we were smart when drawing the satellite, and made sure that it was _centered_ at SATELLITE_POSITION_X, SATELLITE_POSITION_Y, and also rotated about that point. That makes our job super easy. We just move the camera to that position, and rotate the camera.
