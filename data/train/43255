108
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='nextInstructionInCodeOrder'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='cb'
13 name (SimpleName)
14 identifier='g'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Instruction'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (CastExpr)
23 expression (EnclosedExpr)
24 inner (MethodCallExpr)
25 name (SimpleName)
26 identifier='copy'
27 scope (MethodCallExpr)
28 name (SimpleName)
29 identifier='getTarget'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='Goto'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='g'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='BranchOperand'
40 name (SimpleName)
41 identifier='gTarget'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='BranchOperand'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='setCond'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='IfCmp'
52 arguments
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='cb'
56 argument (MethodCallExpr)
57 name (SimpleName)
58 identifier='flipCode'
59 scope (MethodCallExpr)
60 name (SimpleName)
61 identifier='getCond'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='IfCmp'
65 arguments
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='cb'
69 statement (ExpressionStmt)
70 expression (MethodCallExpr)
71 name (SimpleName)
72 identifier='setTarget'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='IfCmp'
76 arguments
77 argument (NameExpr)
78 name (SimpleName)
79 identifier='cb'
80 argument (NameExpr)
81 name (SimpleName)
82 identifier='gTarget'
83 statement (ExpressionStmt)
84 expression (MethodCallExpr)
85 name (SimpleName)
86 identifier='flipBranchProbability'
87 scope (NameExpr)
88 name (SimpleName)
89 identifier='cb'
90 statement (ExpressionStmt)
91 expression (MethodCallExpr)
92 name (SimpleName)
93 identifier='remove'
94 scope (NameExpr)
95 name (SimpleName)
96 identifier='g'
97 type (VoidType)
98 name (SimpleName)
99 identifier='flipConditionalBranch'
100 parameters
101 parameter (Parameter)
102 isVarArgs='false'
103 name (SimpleName)
104 identifier='cb'
105 type (ClassOrInterfaceType)
106 name (SimpleName)
107 identifier='Instruction'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32
27 33
33 34
34 35
35 36
22 37
37 38
38 39
21 40
40 41
21 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
46 52
52 53
53 54
54 55
52 56
56 57
57 58
56 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
2 69
69 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
78 79
76 80
80 81
81 82
2 83
83 84
84 85
85 86
84 87
87 88
88 89
2 90
90 91
91 92
92 93
91 94
94 95
95 96
0 97
0 98
98 99
0 100
100 101
101 102
101 103
103 104
101 105
105 106
106 107

Flip a conditional branch and remove the trailing goto. See comment 3) of processConditionalBranch <p> Precondition isFlipCandidate(cb)
