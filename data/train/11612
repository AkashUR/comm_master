107
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='back'
9 value (NameExpr)
10 name (SimpleName)
11 identifier='p'
12 statement (ExpressionStmt)
13 expression (AssignExpr)
14 operator='ASSIGN'
15 target (NameExpr)
16 name (SimpleName)
17 identifier='label'
18 value (NameExpr)
19 name (SimpleName)
20 identifier='l'
21 statement (ExpressionStmt)
22 expression (AssignExpr)
23 operator='ASSIGN'
24 target (NameExpr)
25 name (SimpleName)
26 identifier='forward'
27 value (ArrayCreationExpr)
28 elementType (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='Village'
31 levels
32 level (ArrayCreationLevel)
33 dimension (IntegerLiteralExpr)
34 value='4'
35 statement (ExpressionStmt)
36 expression (AssignExpr)
37 operator='ASSIGN'
38 target (NameExpr)
39 name (SimpleName)
40 identifier='seed'
41 value (BinaryExpr)
42 operator='MULTIPLY'
43 left (NameExpr)
44 name (SimpleName)
45 identifier='label'
46 right (EnclosedExpr)
47 inner (BinaryExpr)
48 operator='PLUS'
49 left (NameExpr)
50 name (SimpleName)
51 identifier='IQ'
52 right (NameExpr)
53 name (SimpleName)
54 identifier='s'
55 statement (ExpressionStmt)
56 expression (AssignExpr)
57 operator='ASSIGN'
58 target (NameExpr)
59 name (SimpleName)
60 identifier='hospital'
61 value (ObjectCreationExpr)
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='Hospital'
65 arguments
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='level'
69 statement (ExpressionStmt)
70 expression (AssignExpr)
71 operator='ASSIGN'
72 target (NameExpr)
73 name (SimpleName)
74 identifier='returned'
75 value (ObjectCreationExpr)
76 type (ClassOrInterfaceType)
77 name (SimpleName)
78 identifier='List'
79 name (SimpleName)
80 identifier='Village'
81 parameters
82 parameter (Parameter)
83 isVarArgs='false'
84 name (SimpleName)
85 identifier='level'
86 type (PrimitiveType)
87 type='INT'
88 parameter (Parameter)
89 isVarArgs='false'
90 name (SimpleName)
91 identifier='l'
92 type (PrimitiveType)
93 type='INT'
94 parameter (Parameter)
95 isVarArgs='false'
96 name (SimpleName)
97 identifier='p'
98 type (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='Village'
101 parameter (Parameter)
102 isVarArgs='false'
103 name (SimpleName)
104 identifier='s'
105 type (PrimitiveType)
106 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
2 12
12 13
13 14
13 15
15 16
16 17
13 18
18 19
19 20
2 21
21 22
22 23
22 24
24 25
25 26
22 27
27 28
28 29
29 30
27 31
31 32
32 33
33 34
2 35
35 36
36 37
36 38
38 39
39 40
36 41
41 42
41 43
43 44
44 45
41 46
46 47
47 48
47 49
49 50
50 51
47 52
52 53
53 54
2 55
55 56
56 57
56 58
58 59
59 60
56 61
61 62
62 63
63 64
61 65
65 66
66 67
67 68
2 69
69 70
70 71
70 72
72 73
73 74
70 75
75 76
76 77
77 78
0 79
79 80
0 81
81 82
82 83
82 84
84 85
82 86
86 87
81 88
88 89
88 90
90 91
88 92
92 93
81 94
94 95
94 96
96 97
94 98
98 99
99 100
81 101
101 102
101 103
103 104
101 105
105 106

Construct an empty village.
