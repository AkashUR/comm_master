97
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='withSuccessThreshold'
10 scope (MethodCallExpr)
11 name (SimpleName)
12 identifier='withFailureThreshold'
13 scope (ObjectCreationExpr)
14 type (ClassOrInterfaceType)
15 name (SimpleName)
16 identifier='CircuitBreaker'
17 arguments
18 argument (IntegerLiteralExpr)
19 value='3'
20 argument (IntegerLiteralExpr)
21 value='5'
22 arguments
23 argument (IntegerLiteralExpr)
24 value='3'
25 name (SimpleName)
26 identifier='breaker'
27 type (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='CircuitBreaker'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='halfOpen'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='breaker'
37 statement (ExpressionStmt)
38 expression (VariableDeclarationExpr)
39 variables
40 variable (VariableDeclarator)
41 initializer (ObjectCreationExpr)
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='HalfOpenState'
45 arguments
46 argument (NameExpr)
47 name (SimpleName)
48 identifier='breaker'
49 name (SimpleName)
50 identifier='state'
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='HalfOpenState'
54 statement (ExpressionStmt)
55 expression (MethodCallExpr)
56 name (SimpleName)
57 identifier='assertFalse'
58 arguments
59 argument (MethodCallExpr)
60 name (SimpleName)
61 identifier='isOpen'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='breaker'
65 statement (ExpressionStmt)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='assertFalse'
69 arguments
70 argument (MethodCallExpr)
71 name (SimpleName)
72 identifier='isClosed'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='breaker'
76 statement (ExpressionStmt)
77 expression (MethodCallExpr)
78 name (SimpleName)
79 identifier='recordFailure'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='state'
83 statement (ExpressionStmt)
84 expression (MethodCallExpr)
85 name (SimpleName)
86 identifier='assertTrue'
87 arguments
88 argument (MethodCallExpr)
89 name (SimpleName)
90 identifier='isOpen'
91 scope (NameExpr)
92 name (SimpleName)
93 identifier='breaker'
94 type (VoidType)
95 name (SimpleName)
96 identifier='testFailureWithSuccessThresholdAndFailureRatio'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
15 16
10 17
17 18
18 19
17 20
20 21
7 22
22 23
23 24
6 25
25 26
6 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
2 37
37 38
38 39
39 40
40 41
41 42
42 43
43 44
41 45
45 46
46 47
47 48
40 49
49 50
40 51
51 52
52 53
2 54
54 55
55 56
56 57
55 58
58 59
59 60
60 61
59 62
62 63
63 64
2 65
65 66
66 67
67 68
66 69
69 70
70 71
71 72
70 73
73 74
74 75
2 76
76 77
77 78
78 79
77 80
80 81
81 82
2 83
83 84
84 85
85 86
84 87
87 88
88 89
89 90
88 91
91 92
92 93
0 94
0 95
95 96

Asserts that the circuit is opened after a single failure.
