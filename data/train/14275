57
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertAnalyzesTo'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='analyzer'
11 argument (StringLiteralExpr)
12 value='1234'
13 argument (ArrayCreationExpr)
14 elementType (ClassOrInterfaceType)
15 name (SimpleName)
16 identifier='String'
17 initializer (ArrayInitializerExpr)
18 values
19 value (StringLiteralExpr)
20 value='1234'
21 levels
22 level (ArrayCreationLevel)
23 argument (ArrayCreationExpr)
24 elementType (PrimitiveType)
25 type='INT'
26 initializer (ArrayInitializerExpr)
27 values
28 value (IntegerLiteralExpr)
29 value='0'
30 levels
31 level (ArrayCreationLevel)
32 argument (ArrayCreationExpr)
33 elementType (PrimitiveType)
34 type='INT'
35 initializer (ArrayInitializerExpr)
36 values
37 value (IntegerLiteralExpr)
38 value='4'
39 levels
40 level (ArrayCreationLevel)
41 argument (ArrayCreationExpr)
42 elementType (PrimitiveType)
43 type='INT'
44 initializer (ArrayInitializerExpr)
45 values
46 value (IntegerLiteralExpr)
47 value='1'
48 levels
49 level (ArrayCreationLevel)
50 type (VoidType)
51 name (SimpleName)
52 identifier='testNumbers'
53 thrownExceptions
54 thrownException (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
7 13
13 14
14 15
15 16
13 17
17 18
18 19
19 20
13 21
21 22
7 23
23 24
24 25
23 26
26 27
27 28
28 29
23 30
30 31
7 32
32 33
33 34
32 35
35 36
36 37
37 38
32 39
39 40
7 41
41 42
42 43
41 44
44 45
45 46
46 47
41 48
48 49
0 50
0 51
51 52
0 53
53 54
54 55
55 56

for convenience, if the input yields no output, we pass it thru as-is
