253
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='SessionNode'
11 arguments
12 argument (StringLiteralExpr)
13 value='???'
14 argument (StringLiteralExpr)
15 value='Node1'
16 argument (ClassExpr)
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='Type1'
20 name (SimpleName)
21 identifier='node1'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='SessionNode'
25 statement (ExpressionStmt)
26 expression (VariableDeclarationExpr)
27 variables
28 variable (VariableDeclarator)
29 initializer (ObjectCreationExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='SessionNode'
33 arguments
34 argument (StringLiteralExpr)
35 value='???'
36 argument (StringLiteralExpr)
37 value='Node2'
38 argument (ClassExpr)
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='Type2'
42 name (SimpleName)
43 identifier='node2'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='SessionNode'
47 statement (ExpressionStmt)
48 expression (VariableDeclarationExpr)
49 variables
50 variable (VariableDeclarator)
51 initializer (ObjectCreationExpr)
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='SessionNode'
55 arguments
56 argument (StringLiteralExpr)
57 value='???'
58 argument (StringLiteralExpr)
59 value='Node3'
60 argument (ClassExpr)
61 type (ClassOrInterfaceType)
62 name (SimpleName)
63 identifier='Type3'
64 name (SimpleName)
65 identifier='node3'
66 type (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='SessionNode'
69 statement (ExpressionStmt)
70 expression (VariableDeclarationExpr)
71 variables
72 variable (VariableDeclarator)
73 initializer (ObjectCreationExpr)
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='SessionNode'
77 arguments
78 argument (StringLiteralExpr)
79 value='???'
80 argument (StringLiteralExpr)
81 value='Node4'
82 argument (ClassExpr)
83 type (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='Type4'
86 name (SimpleName)
87 identifier='node4'
88 type (ClassOrInterfaceType)
89 name (SimpleName)
90 identifier='SessionNode'
91 statement (ExpressionStmt)
92 expression (MethodCallExpr)
93 name (SimpleName)
94 identifier='assertTrue'
95 arguments
96 argument (MethodCallExpr)
97 name (SimpleName)
98 identifier='addChild'
99 scope (NameExpr)
100 name (SimpleName)
101 identifier='node2'
102 arguments
103 argument (NameExpr)
104 name (SimpleName)
105 identifier='node1'
106 statement (ExpressionStmt)
107 expression (MethodCallExpr)
108 name (SimpleName)
109 identifier='assertEquals'
110 arguments
111 argument (IntegerLiteralExpr)
112 value='1'
113 argument (MethodCallExpr)
114 name (SimpleName)
115 identifier='getNumChildren'
116 scope (NameExpr)
117 name (SimpleName)
118 identifier='node2'
119 statement (ExpressionStmt)
120 expression (MethodCallExpr)
121 name (SimpleName)
122 identifier='assertEquals'
123 arguments
124 argument (IntegerLiteralExpr)
125 value='1'
126 argument (MethodCallExpr)
127 name (SimpleName)
128 identifier='getNumParents'
129 scope (NameExpr)
130 name (SimpleName)
131 identifier='node1'
132 statement (ExpressionStmt)
133 expression (MethodCallExpr)
134 name (SimpleName)
135 identifier='assertTrue'
136 arguments
137 argument (UnaryExpr)
138 operator='LOGICAL_COMPLEMENT'
139 expression (MethodCallExpr)
140 name (SimpleName)
141 identifier='addChild'
142 scope (NameExpr)
143 name (SimpleName)
144 identifier='node4'
145 arguments
146 argument (NameExpr)
147 name (SimpleName)
148 identifier='node1'
149 statement (ExpressionStmt)
150 expression (MethodCallExpr)
151 name (SimpleName)
152 identifier='assertTrue'
153 arguments
154 argument (MethodCallExpr)
155 name (SimpleName)
156 identifier='addChild'
157 scope (NameExpr)
158 name (SimpleName)
159 identifier='node3'
160 arguments
161 argument (NameExpr)
162 name (SimpleName)
163 identifier='node1'
164 statement (ExpressionStmt)
165 expression (MethodCallExpr)
166 name (SimpleName)
167 identifier='assertTrue'
168 arguments
169 argument (UnaryExpr)
170 operator='LOGICAL_COMPLEMENT'
171 expression (MethodCallExpr)
172 name (SimpleName)
173 identifier='removeChild'
174 scope (NameExpr)
175 name (SimpleName)
176 identifier='node4'
177 arguments
178 argument (NameExpr)
179 name (SimpleName)
180 identifier='node1'
181 statement (ExpressionStmt)
182 expression (MethodCallExpr)
183 name (SimpleName)
184 identifier='assertEquals'
185 arguments
186 argument (IntegerLiteralExpr)
187 value='1'
188 argument (MethodCallExpr)
189 name (SimpleName)
190 identifier='getNumChildren'
191 scope (NameExpr)
192 name (SimpleName)
193 identifier='node2'
194 statement (ExpressionStmt)
195 expression (MethodCallExpr)
196 name (SimpleName)
197 identifier='assertEquals'
198 arguments
199 argument (IntegerLiteralExpr)
200 value='1'
201 argument (MethodCallExpr)
202 name (SimpleName)
203 identifier='getNumChildren'
204 scope (NameExpr)
205 name (SimpleName)
206 identifier='node3'
207 statement (ExpressionStmt)
208 expression (MethodCallExpr)
209 name (SimpleName)
210 identifier='assertTrue'
211 arguments
212 argument (MethodCallExpr)
213 name (SimpleName)
214 identifier='removeChild'
215 scope (NameExpr)
216 name (SimpleName)
217 identifier='node2'
218 arguments
219 argument (NameExpr)
220 name (SimpleName)
221 identifier='node1'
222 statement (ExpressionStmt)
223 expression (MethodCallExpr)
224 name (SimpleName)
225 identifier='assertTrue'
226 arguments
227 argument (MethodCallExpr)
228 name (SimpleName)
229 identifier='removeChild'
230 scope (NameExpr)
231 name (SimpleName)
232 identifier='node3'
233 arguments
234 argument (NameExpr)
235 name (SimpleName)
236 identifier='node1'
237 statement (ExpressionStmt)
238 expression (MethodCallExpr)
239 name (SimpleName)
240 identifier='assertEquals'
241 arguments
242 argument (IntegerLiteralExpr)
243 value='0'
244 argument (MethodCallExpr)
245 name (SimpleName)
246 identifier='getNumChildren'
247 scope (NameExpr)
248 name (SimpleName)
249 identifier='node3'
250 type (VoidType)
251 name (SimpleName)
252 identifier='testAddRemoveChildren'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
11 16
16 17
17 18
18 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
28 29
29 30
30 31
31 32
29 33
33 34
34 35
33 36
36 37
33 38
38 39
39 40
40 41
28 42
42 43
28 44
44 45
45 46
2 47
47 48
48 49
49 50
50 51
51 52
52 53
53 54
51 55
55 56
56 57
55 58
58 59
55 60
60 61
61 62
62 63
50 64
64 65
50 66
66 67
67 68
2 69
69 70
70 71
71 72
72 73
73 74
74 75
75 76
73 77
77 78
78 79
77 80
80 81
77 82
82 83
83 84
84 85
72 86
86 87
72 88
88 89
89 90
2 91
91 92
92 93
93 94
92 95
95 96
96 97
97 98
96 99
99 100
100 101
96 102
102 103
103 104
104 105
2 106
106 107
107 108
108 109
107 110
110 111
111 112
110 113
113 114
114 115
113 116
116 117
117 118
2 119
119 120
120 121
121 122
120 123
123 124
124 125
123 126
126 127
127 128
126 129
129 130
130 131
2 132
132 133
133 134
134 135
133 136
136 137
137 138
137 139
139 140
140 141
139 142
142 143
143 144
139 145
145 146
146 147
147 148
2 149
149 150
150 151
151 152
150 153
153 154
154 155
155 156
154 157
157 158
158 159
154 160
160 161
161 162
162 163
2 164
164 165
165 166
166 167
165 168
168 169
169 170
169 171
171 172
172 173
171 174
174 175
175 176
171 177
177 178
178 179
179 180
2 181
181 182
182 183
183 184
182 185
185 186
186 187
185 188
188 189
189 190
188 191
191 192
192 193
2 194
194 195
195 196
196 197
195 198
198 199
199 200
198 201
201 202
202 203
201 204
204 205
205 206
2 207
207 208
208 209
209 210
208 211
211 212
212 213
213 214
212 215
215 216
216 217
212 218
218 219
219 220
220 221
2 222
222 223
223 224
224 225
223 226
226 227
227 228
228 229
227 230
230 231
231 232
227 233
233 234
234 235
235 236
2 237
237 238
238 239
239 240
238 241
241 242
242 243
241 244
244 245
245 246
244 247
247 248
248 249
0 250
0 251
251 252

Tests whether children nodes can be added and removed correctly.
