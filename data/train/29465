56
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertNotNull'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='mInflater'
11 statement (ExpressionStmt)
12 expression (MethodCallExpr)
13 name (SimpleName)
14 identifier='inflate'
15 arguments
16 argument (FieldAccessExpr)
17 name (SimpleName)
18 identifier='size_adaptive'
19 scope (FieldAccessExpr)
20 name (SimpleName)
21 identifier='layout'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='R'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='assertNotNull'
29 arguments
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='mSizeAdaptiveLayout'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='assertNotNull'
37 arguments
38 argument (NameExpr)
39 name (SimpleName)
40 identifier='mSmallView'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='assertNotNull'
45 arguments
46 argument (NameExpr)
47 name (SimpleName)
48 identifier='mLargeView'
49 type (VoidType)
50 name (SimpleName)
51 identifier='testPreconditions'
52 annotations
53 annotation (MarkerAnnotationExpr)
54 name (Name)
55 identifier='SmallTest'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
2 11
11 12
12 13
13 14
12 15
15 16
16 17
17 18
16 19
19 20
20 21
19 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
31 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
39 40
2 41
41 42
42 43
43 44
42 45
45 46
46 47
47 48
0 49
0 50
50 51
0 52
52 53
53 54
54 55

The name 'test preconditions' is a convention to signal that if this test doesn't pass, the test case was not set up properly and it might explain any and all failures in other tests.  This is not guaranteed to run before other tests, as junit uses reflection to find the tests.
