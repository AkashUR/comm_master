64
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='requireNonNull'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='Objects'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='p'
14 statement (ExpressionStmt)
15 expression (AssignExpr)
16 operator='ASSIGN'
17 target (NameExpr)
18 name (SimpleName)
19 identifier='fileToLock'
20 value (MethodCallExpr)
21 name (SimpleName)
22 identifier='open'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='FileChannel'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='p'
30 argument (FieldAccessExpr)
31 name (SimpleName)
32 identifier='CREATE'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='StandardOpenOption'
36 argument (FieldAccessExpr)
37 name (SimpleName)
38 identifier='WRITE'
39 scope (NameExpr)
40 name (SimpleName)
41 identifier='StandardOpenOption'
42 statement (ExpressionStmt)
43 expression (AssignExpr)
44 operator='ASSIGN'
45 target (NameExpr)
46 name (SimpleName)
47 identifier='closeChannel'
48 value (BooleanLiteralExpr)
49 value='true'
50 name (SimpleName)
51 identifier='AsyncFileLock'
52 parameters
53 parameter (Parameter)
54 isVarArgs='false'
55 name (SimpleName)
56 identifier='p'
57 type (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='Path'
60 thrownExceptions
61 thrownException (ClassOrInterfaceType)
62 name (SimpleName)
63 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
2 14
14 15
15 16
15 17
17 18
18 19
15 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
26 30
30 31
31 32
30 33
33 34
34 35
26 36
36 37
37 38
36 39
39 40
40 41
2 42
42 43
43 44
43 45
45 46
46 47
43 48
48 49
0 50
50 51
0 52
52 53
53 54
53 55
55 56
53 57
57 58
58 59
0 60
60 61
61 62
62 63

Creates a new AsyncFileLock from a path to a file. The file will be created if it does not exist. The file will be used for locking purposes only.
