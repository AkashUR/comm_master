31
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='install'
7 scope (SuperExpr)
8 arguments
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='ftf'
12 statement (ExpressionStmt)
13 expression (MethodCallExpr)
14 name (SimpleName)
15 identifier='updateMaskIfNecessary'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='positionCursorAtInitialLocation'
20 type (VoidType)
21 name (SimpleName)
22 identifier='install'
23 parameters
24 parameter (Parameter)
25 isVarArgs='false'
26 name (SimpleName)
27 identifier='ftf'
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='JFormattedTextField'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
4 8
8 9
9 10
10 11
2 12
12 13
13 14
14 15
2 16
16 17
17 18
18 19
0 20
0 21
21 22
0 23
23 24
24 25
24 26
26 27
24 28
28 29
29 30

Installs the <code>DefaultFormatter</code> onto a particular <code>JFormattedTextField</code>. This will invoke <code>valueToString</code> to convert the current value from the <code>JFormattedTextField</code> to a String. This will then install the <code>Action</code>s from <code>getActions</code>, the <code>DocumentFilter</code> returned from <code>getDocumentFilter</code> and the <code>NavigationFilter</code> returned from <code>getNavigationFilter</code> onto the <code>JFormattedTextField</code>. <p> Subclasses will typically only need to override this if they wish to install additional listeners on the <code>JFormattedTextField</code>. <p> If there is a <code>ParseException</code> in converting the current value to a String, this will set the text to an empty String, and mark the <code>JFormattedTextField</code> as being in an invalid state. <p> While this is a public method, this is typically only useful for subclassers of <code>JFormattedTextField</code>. <code>JFormattedTextField</code> will invoke this method at the appropriate times when the value changes, or its internal state changes.
