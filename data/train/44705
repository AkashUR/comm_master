68
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (UnaryExpr)
8 operator='MINUS'
9 expression (LongLiteralExpr)
10 value='98374823947823578L'
11 name (SimpleName)
12 identifier='a'
13 type (PrimitiveType)
14 type='LONG'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (MethodCallExpr)
20 name (SimpleName)
21 identifier='valueOf'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='BigDecimal'
25 arguments
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='a'
29 name (SimpleName)
30 identifier='aNumber'
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='BigDecimal'
34 statement (ExpressionStmt)
35 expression (VariableDeclarationExpr)
36 variables
37 variable (VariableDeclarator)
38 initializer (StringLiteralExpr)
39 value='-98374823947823578'
40 name (SimpleName)
41 identifier='result'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='String'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='assertTrue'
49 arguments
50 argument (StringLiteralExpr)
51 value='incorrect value'
52 argument (MethodCallExpr)
53 name (SimpleName)
54 identifier='equals'
55 scope (MethodCallExpr)
56 name (SimpleName)
57 identifier='toString'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='aNumber'
61 arguments
62 argument (NameExpr)
63 name (SimpleName)
64 identifier='result'
65 type (VoidType)
66 name (SimpleName)
67 identifier='testValueOfNegZeroScale'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
7 9
9 10
6 11
11 12
6 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
19 22
22 23
23 24
19 25
25 26
26 27
27 28
18 29
29 30
18 31
31 32
32 33
2 34
34 35
35 36
36 37
37 38
38 39
37 40
40 41
37 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
49 52
52 53
53 54
52 55
55 56
56 57
55 58
58 59
59 60
52 61
61 62
62 63
63 64
0 65
0 66
66 67

Create a BigDecimal from a negative long value; scale is 0
