31
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='sort1'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='a'
11 argument (IntegerLiteralExpr)
12 value='0'
13 argument (FieldAccessExpr)
14 name (SimpleName)
15 identifier='length'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='a'
19 type (VoidType)
20 name (SimpleName)
21 identifier='sort'
22 parameters
23 parameter (Parameter)
24 isVarArgs='false'
25 name (SimpleName)
26 identifier='a'
27 type (ArrayType)
28 origin='TYPE'
29 componentType (PrimitiveType)
30 type='LONG'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
7 13
13 14
14 15
13 16
16 17
17 18
0 19
0 20
20 21
0 22
22 23
23 24
23 25
25 26
23 27
27 28
27 29
29 30

Sorts the specified array of longs into ascending numerical order. The sorting algorithm is a tuned quicksort, adapted from Jon L. Bentley and M. Douglas McIlroy's "Engineering a Sort Function", Software-Practice and Experience, Vol. 23(11) P. 1249-1265 (November 1993).  This algorithm offers n*log(n) performance on many data sets that cause other quicksorts to degrade to quadratic performance.
