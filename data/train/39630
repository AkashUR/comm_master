84
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='SimpleImmutableEntry'
11 scope (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='AbstractMap'
14 typeArguments
15 typeArgument (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='TupleExpr'
18 typeArgument (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='List'
21 typeArguments
22 typeArgument (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='ValueExpr'
25 arguments
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='te'
29 argument (NameExpr)
30 name (SimpleName)
31 identifier='constraints'
32 name (SimpleName)
33 identifier='entry'
34 type (ClassOrInterfaceType)
35 name (SimpleName)
36 identifier='Entry'
37 scope (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='Map'
40 typeArguments
41 typeArgument (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='TupleExpr'
44 typeArgument (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='List'
47 typeArguments
48 typeArgument (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='ValueExpr'
51 statement (ExpressionStmt)
52 expression (MethodCallExpr)
53 name (SimpleName)
54 identifier='add'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='optionalTEs'
58 arguments
59 argument (NameExpr)
60 name (SimpleName)
61 identifier='entry'
62 type (VoidType)
63 name (SimpleName)
64 identifier='addOptionalTE'
65 parameters
66 parameter (Parameter)
67 isVarArgs='false'
68 name (SimpleName)
69 identifier='te'
70 type (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='TupleExpr'
73 parameter (Parameter)
74 isVarArgs='false'
75 name (SimpleName)
76 identifier='constraints'
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='List'
80 typeArguments
81 typeArgument (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='ValueExpr'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
8 11
11 12
12 13
8 14
14 15
15 16
16 17
14 18
18 19
19 20
18 21
21 22
22 23
23 24
7 25
25 26
26 27
27 28
25 29
29 30
30 31
6 32
32 33
6 34
34 35
35 36
34 37
37 38
38 39
34 40
40 41
41 42
42 43
40 44
44 45
45 46
44 47
47 48
48 49
49 50
2 51
51 52
52 53
53 54
52 55
55 56
56 57
52 58
58 59
59 60
60 61
0 62
0 63
63 64
0 65
65 66
66 67
66 68
68 69
66 70
70 71
71 72
65 73
73 74
73 75
75 76
73 77
77 78
78 79
77 80
80 81
81 82
82 83

add the supplied tuple expression as an optional expression, with a list of constraints that hold as conditions.
