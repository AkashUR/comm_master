69
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='enter'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Context'
13 name (SimpleName)
14 identifier='cx'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Context'
18 statement (TryStmt)
19 finallyBlock (BlockStmt)
20 statements
21 statement (ExpressionStmt)
22 expression (MethodCallExpr)
23 name (SimpleName)
24 identifier='exit'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='Context'
28 tryBlock (BlockStmt)
29 statements
30 statement (ExpressionStmt)
31 expression (VariableDeclarationExpr)
32 variables
33 variable (VariableDeclarator)
34 initializer (MethodCallExpr)
35 name (SimpleName)
36 identifier='evaluateString'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='cx'
40 arguments
41 argument (NameExpr)
42 name (SimpleName)
43 identifier='global'
44 argument (StringLiteralExpr)
45 value='f(7) + 1'
46 argument (StringLiteralExpr)
47 value='test source'
48 argument (IntegerLiteralExpr)
49 value='1'
50 argument (NullLiteralExpr)
51 name (SimpleName)
52 identifier='result'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='Object'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='assertEquals'
60 arguments
61 argument (DoubleLiteralExpr)
62 value='15.0'
63 argument (NameExpr)
64 name (SimpleName)
65 identifier='result'
66 type (VoidType)
67 name (SimpleName)
68 identifier='testSimpleFunction'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
18 28
28 29
29 30
30 31
31 32
32 33
33 34
34 35
35 36
34 37
37 38
38 39
34 40
40 41
41 42
42 43
40 44
44 45
40 46
46 47
40 48
48 49
40 50
33 51
51 52
33 53
53 54
54 55
29 56
56 57
57 58
58 59
57 60
60 61
61 62
60 63
63 64
64 65
0 66
0 67
67 68

Simple test: call 'f' defined above
