68
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='process'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='parent'
12 statement (ExpressionStmt)
13 expression (MethodCallExpr)
14 name (SimpleName)
15 identifier='initMessageQueues'
16 statement (AssertStmt)
17 check (EnclosedExpr)
18 inner (BinaryExpr)
19 operator='NOT_EQUALS'
20 left (NameExpr)
21 name (SimpleName)
22 identifier='parent'
23 right (NullLiteralExpr)
24 statement (ExpressionStmt)
25 expression (AssignExpr)
26 operator='ASSIGN'
27 target (NameExpr)
28 name (SimpleName)
29 identifier='state'
30 value (MethodCallExpr)
31 name (SimpleName)
32 identifier='clone'
33 scope (MethodCallExpr)
34 name (SimpleName)
35 identifier='state'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='parent'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='forEach'
43 scope (FieldAccessExpr)
44 name (SimpleName)
45 identifier='scopeStack'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='parent'
49 arguments
50 argument (NullLiteralExpr)
51 name (SimpleName)
52 identifier='SessionThread'
53 parameters
54 parameter (Parameter)
55 isVarArgs='false'
56 name (SimpleName)
57 identifier='process'
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='Process'
61 parameter (Parameter)
62 isVarArgs='false'
63 name (SimpleName)
64 identifier='parent'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='ExecutionThread'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
2 12
12 13
13 14
14 15
2 16
16 17
17 18
18 19
18 20
20 21
21 22
18 23
2 24
24 25
25 26
25 27
27 28
28 29
25 30
30 31
31 32
30 33
33 34
34 35
33 36
36 37
37 38
2 39
39 40
40 41
41 42
40 43
43 44
44 45
43 46
46 47
47 48
40 49
49 50
0 51
51 52
0 53
53 54
54 55
54 56
56 57
54 58
58 59
59 60
53 61
61 62
61 63
63 64
61 65
65 66
66 67

Constructs a SessionThread cloning another ExecutionThread, copying the  State and Scope stack of the parent.
