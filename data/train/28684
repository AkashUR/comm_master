163
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='StringWriter'
11 name (SimpleName)
12 identifier='sw'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='StringWriter'
16 statement (ExpressionStmt)
17 expression (VariableDeclarationExpr)
18 variables
19 variable (VariableDeclarator)
20 initializer (ObjectCreationExpr)
21 type (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='PrintWriter'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='sw'
28 argument (BooleanLiteralExpr)
29 value='true'
30 name (SimpleName)
31 identifier='pw'
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='PrintWriter'
35 statement (ExpressionStmt)
36 expression (MethodCallExpr)
37 name (SimpleName)
38 identifier='doTestSearch'
39 arguments
40 argument (MethodCallExpr)
41 name (SimpleName)
42 identifier='random'
43 argument (NameExpr)
44 name (SimpleName)
45 identifier='pw'
46 argument (BooleanLiteralExpr)
47 value='false'
48 statement (ExpressionStmt)
49 expression (MethodCallExpr)
50 name (SimpleName)
51 identifier='close'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='pw'
55 statement (ExpressionStmt)
56 expression (MethodCallExpr)
57 name (SimpleName)
58 identifier='close'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='sw'
62 statement (ExpressionStmt)
63 expression (VariableDeclarationExpr)
64 variables
65 variable (VariableDeclarator)
66 initializer (MethodCallExpr)
67 name (SimpleName)
68 identifier='toString'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='sw'
72 name (SimpleName)
73 identifier='multiFileOutput'
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='String'
77 statement (ExpressionStmt)
78 expression (AssignExpr)
79 operator='ASSIGN'
80 target (NameExpr)
81 name (SimpleName)
82 identifier='sw'
83 value (ObjectCreationExpr)
84 type (ClassOrInterfaceType)
85 name (SimpleName)
86 identifier='StringWriter'
87 statement (ExpressionStmt)
88 expression (AssignExpr)
89 operator='ASSIGN'
90 target (NameExpr)
91 name (SimpleName)
92 identifier='pw'
93 value (ObjectCreationExpr)
94 type (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='PrintWriter'
97 arguments
98 argument (NameExpr)
99 name (SimpleName)
100 identifier='sw'
101 argument (BooleanLiteralExpr)
102 value='true'
103 statement (ExpressionStmt)
104 expression (MethodCallExpr)
105 name (SimpleName)
106 identifier='doTestSearch'
107 arguments
108 argument (MethodCallExpr)
109 name (SimpleName)
110 identifier='random'
111 argument (NameExpr)
112 name (SimpleName)
113 identifier='pw'
114 argument (BooleanLiteralExpr)
115 value='true'
116 statement (ExpressionStmt)
117 expression (MethodCallExpr)
118 name (SimpleName)
119 identifier='close'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='pw'
123 statement (ExpressionStmt)
124 expression (MethodCallExpr)
125 name (SimpleName)
126 identifier='close'
127 scope (NameExpr)
128 name (SimpleName)
129 identifier='sw'
130 statement (ExpressionStmt)
131 expression (VariableDeclarationExpr)
132 variables
133 variable (VariableDeclarator)
134 initializer (MethodCallExpr)
135 name (SimpleName)
136 identifier='toString'
137 scope (NameExpr)
138 name (SimpleName)
139 identifier='sw'
140 name (SimpleName)
141 identifier='singleFileOutput'
142 type (ClassOrInterfaceType)
143 name (SimpleName)
144 identifier='String'
145 statement (ExpressionStmt)
146 expression (MethodCallExpr)
147 name (SimpleName)
148 identifier='assertEquals'
149 arguments
150 argument (NameExpr)
151 name (SimpleName)
152 identifier='multiFileOutput'
153 argument (NameExpr)
154 name (SimpleName)
155 identifier='singleFileOutput'
156 type (VoidType)
157 name (SimpleName)
158 identifier='testSearch'
159 thrownExceptions
160 thrownException (ClassOrInterfaceType)
161 name (SimpleName)
162 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
19 20
20 21
21 22
22 23
20 24
24 25
25 26
26 27
24 28
28 29
19 30
30 31
19 32
32 33
33 34
2 35
35 36
36 37
37 38
36 39
39 40
40 41
41 42
39 43
43 44
44 45
39 46
46 47
2 48
48 49
49 50
50 51
49 52
52 53
53 54
2 55
55 56
56 57
57 58
56 59
59 60
60 61
2 62
62 63
63 64
64 65
65 66
66 67
67 68
66 69
69 70
70 71
65 72
72 73
65 74
74 75
75 76
2 77
77 78
78 79
78 80
80 81
81 82
78 83
83 84
84 85
85 86
2 87
87 88
88 89
88 90
90 91
91 92
88 93
93 94
94 95
95 96
93 97
97 98
98 99
99 100
97 101
101 102
2 103
103 104
104 105
105 106
104 107
107 108
108 109
109 110
107 111
111 112
112 113
107 114
114 115
2 116
116 117
117 118
118 119
117 120
120 121
121 122
2 123
123 124
124 125
125 126
124 127
127 128
128 129
2 130
130 131
131 132
132 133
133 134
134 135
135 136
134 137
137 138
138 139
133 140
140 141
133 142
142 143
143 144
2 145
145 146
146 147
147 148
146 149
149 150
150 151
151 152
149 153
153 154
154 155
0 156
0 157
157 158
0 159
159 160
160 161
161 162

This test performs a number of searches. It also compares output of searches using multi-file index segments with single-file index segments. TODO: someone should check that the results of the searches are still correct by adding assert statements. Right now, the test passes if the results are the same between multi-file and single-file formats, even if the results are wrong.
