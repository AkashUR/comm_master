133
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='segmentProperties'
9 value (ObjectCreationExpr)
10 type (ClassOrInterfaceType)
11 name (SimpleName)
12 identifier='SegmentProperties'
13 arguments
14 argument (MethodCallExpr)
15 name (SimpleName)
16 identifier='getColumnInTable'
17 scope (MethodCallExpr)
18 name (SimpleName)
19 identifier='get'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='footerList'
23 arguments
24 argument (IntegerLiteralExpr)
25 value='0'
26 argument (MethodCallExpr)
27 name (SimpleName)
28 identifier='getColumnCardinality'
29 scope (MethodCallExpr)
30 name (SimpleName)
31 identifier='getSegmentInfo'
32 scope (MethodCallExpr)
33 name (SimpleName)
34 identifier='get'
35 scope (NameExpr)
36 name (SimpleName)
37 identifier='footerList'
38 arguments
39 argument (IntegerLiteralExpr)
40 value='0'
41 statement (ExpressionStmt)
42 expression (VariableDeclarationExpr)
43 variables
44 variable (VariableDeclarator)
45 initializer (ObjectCreationExpr)
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='BTreeBuilderInfo'
49 arguments
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='footerList'
53 argument (MethodCallExpr)
54 name (SimpleName)
55 identifier='getDimensionColumnsValueSize'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='segmentProperties'
59 name (SimpleName)
60 identifier='indexBuilderInfo'
61 type (ClassOrInterfaceType)
62 name (SimpleName)
63 identifier='BTreeBuilderInfo'
64 statement (ExpressionStmt)
65 expression (VariableDeclarationExpr)
66 variables
67 variable (VariableDeclarator)
68 initializer (ObjectCreationExpr)
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='BlockletBTreeBuilder'
72 name (SimpleName)
73 identifier='blocksBuilder'
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='BtreeBuilder'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='build'
81 scope (NameExpr)
82 name (SimpleName)
83 identifier='blocksBuilder'
84 arguments
85 argument (NameExpr)
86 name (SimpleName)
87 identifier='indexBuilderInfo'
88 statement (ExpressionStmt)
89 expression (AssignExpr)
90 operator='ASSIGN'
91 target (NameExpr)
92 name (SimpleName)
93 identifier='dataRefNode'
94 value (MethodCallExpr)
95 name (SimpleName)
96 identifier='get'
97 scope (NameExpr)
98 name (SimpleName)
99 identifier='blocksBuilder'
100 statement (ExpressionStmt)
101 expression (AssignExpr)
102 operator='ASSIGN'
103 target (NameExpr)
104 name (SimpleName)
105 identifier='totalNumberOfRows'
106 value (MethodCallExpr)
107 name (SimpleName)
108 identifier='getNumberOfRows'
109 scope (MethodCallExpr)
110 name (SimpleName)
111 identifier='get'
112 scope (NameExpr)
113 name (SimpleName)
114 identifier='footerList'
115 arguments
116 argument (IntegerLiteralExpr)
117 value='0'
118 type (VoidType)
119 name (SimpleName)
120 identifier='buildIndex'
121 parameters
122 parameter (Parameter)
123 isVarArgs='false'
124 name (SimpleName)
125 identifier='footerList'
126 type (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='List'
129 typeArguments
130 typeArgument (ClassOrInterfaceType)
131 name (SimpleName)
132 identifier='DataFileFooter'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
11 12
9 13
13 14
14 15
15 16
14 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
13 26
26 27
27 28
26 29
29 30
30 31
29 32
32 33
33 34
32 35
35 36
36 37
32 38
38 39
39 40
2 41
41 42
42 43
43 44
44 45
45 46
46 47
47 48
45 49
49 50
50 51
51 52
49 53
53 54
54 55
53 56
56 57
57 58
44 59
59 60
44 61
61 62
62 63
2 64
64 65
65 66
66 67
67 68
68 69
69 70
70 71
67 72
72 73
67 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
78 84
84 85
85 86
86 87
2 88
88 89
89 90
89 91
91 92
92 93
89 94
94 95
95 96
94 97
97 98
98 99
2 100
100 101
101 102
101 103
103 104
104 105
101 106
106 107
107 108
106 109
109 110
110 111
109 112
112 113
113 114
109 115
115 116
116 117
0 118
0 119
119 120
0 121
121 122
122 123
122 124
124 125
122 126
126 127
127 128
126 129
129 130
130 131
131 132

Below method will be used to load the data block
