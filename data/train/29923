256
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertEquals'
7 arguments
8 argument (IntegerLiteralExpr)
9 value='0'
10 argument (MethodCallExpr)
11 name (SimpleName)
12 identifier='longValue'
13 scope (ObjectCreationExpr)
14 type (ClassOrInterfaceType)
15 name (SimpleName)
16 identifier='Interval'
17 arguments
18 argument (StringLiteralExpr)
19 value='0'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='assertEquals'
24 arguments
25 argument (IntegerLiteralExpr)
26 value='100'
27 argument (MethodCallExpr)
28 name (SimpleName)
29 identifier='longValue'
30 scope (ObjectCreationExpr)
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='Interval'
34 arguments
35 argument (StringLiteralExpr)
36 value='100'
37 statement (ExpressionStmt)
38 expression (MethodCallExpr)
39 name (SimpleName)
40 identifier='assertEquals'
41 arguments
42 argument (IntegerLiteralExpr)
43 value='0'
44 argument (MethodCallExpr)
45 name (SimpleName)
46 identifier='longValue'
47 scope (ObjectCreationExpr)
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='Interval'
51 arguments
52 argument (StringLiteralExpr)
53 value='0s'
54 statement (ExpressionStmt)
55 expression (MethodCallExpr)
56 name (SimpleName)
57 identifier='assertEquals'
58 arguments
59 argument (IntegerLiteralExpr)
60 value='2000'
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='longValue'
64 scope (ObjectCreationExpr)
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='Interval'
68 arguments
69 argument (StringLiteralExpr)
70 value='2s'
71 statement (ExpressionStmt)
72 expression (MethodCallExpr)
73 name (SimpleName)
74 identifier='assertEquals'
75 arguments
76 argument (IntegerLiteralExpr)
77 value='2000'
78 argument (MethodCallExpr)
79 name (SimpleName)
80 identifier='longValue'
81 scope (ObjectCreationExpr)
82 type (ClassOrInterfaceType)
83 name (SimpleName)
84 identifier='Interval'
85 arguments
86 argument (StringLiteralExpr)
87 value='2S'
88 statement (ExpressionStmt)
89 expression (MethodCallExpr)
90 name (SimpleName)
91 identifier='assertEquals'
92 arguments
93 argument (IntegerLiteralExpr)
94 value='0'
95 argument (MethodCallExpr)
96 name (SimpleName)
97 identifier='longValue'
98 scope (ObjectCreationExpr)
99 type (ClassOrInterfaceType)
100 name (SimpleName)
101 identifier='Interval'
102 arguments
103 argument (StringLiteralExpr)
104 value='0m'
105 statement (ExpressionStmt)
106 expression (MethodCallExpr)
107 name (SimpleName)
108 identifier='assertEquals'
109 arguments
110 argument (IntegerLiteralExpr)
111 value='120000'
112 argument (MethodCallExpr)
113 name (SimpleName)
114 identifier='longValue'
115 scope (ObjectCreationExpr)
116 type (ClassOrInterfaceType)
117 name (SimpleName)
118 identifier='Interval'
119 arguments
120 argument (StringLiteralExpr)
121 value=' 2m'
122 statement (ExpressionStmt)
123 expression (MethodCallExpr)
124 name (SimpleName)
125 identifier='assertEquals'
126 arguments
127 argument (IntegerLiteralExpr)
128 value='120000'
129 argument (MethodCallExpr)
130 name (SimpleName)
131 identifier='longValue'
132 scope (ObjectCreationExpr)
133 type (ClassOrInterfaceType)
134 name (SimpleName)
135 identifier='Interval'
136 arguments
137 argument (StringLiteralExpr)
138 value='2M'
139 statement (ExpressionStmt)
140 expression (MethodCallExpr)
141 name (SimpleName)
142 identifier='assertEquals'
143 arguments
144 argument (IntegerLiteralExpr)
145 value='0'
146 argument (MethodCallExpr)
147 name (SimpleName)
148 identifier='longValue'
149 scope (ObjectCreationExpr)
150 type (ClassOrInterfaceType)
151 name (SimpleName)
152 identifier='Interval'
153 arguments
154 argument (StringLiteralExpr)
155 value='0h'
156 statement (ExpressionStmt)
157 expression (MethodCallExpr)
158 name (SimpleName)
159 identifier='assertEquals'
160 arguments
161 argument (IntegerLiteralExpr)
162 value='7200000'
163 argument (MethodCallExpr)
164 name (SimpleName)
165 identifier='longValue'
166 scope (ObjectCreationExpr)
167 type (ClassOrInterfaceType)
168 name (SimpleName)
169 identifier='Interval'
170 arguments
171 argument (StringLiteralExpr)
172 value='2h '
173 statement (ExpressionStmt)
174 expression (MethodCallExpr)
175 name (SimpleName)
176 identifier='assertEquals'
177 arguments
178 argument (IntegerLiteralExpr)
179 value='7200000'
180 argument (MethodCallExpr)
181 name (SimpleName)
182 identifier='longValue'
183 scope (ObjectCreationExpr)
184 type (ClassOrInterfaceType)
185 name (SimpleName)
186 identifier='Interval'
187 arguments
188 argument (StringLiteralExpr)
189 value='2H'
190 statement (ExpressionStmt)
191 expression (MethodCallExpr)
192 name (SimpleName)
193 identifier='assertEquals'
194 arguments
195 argument (IntegerLiteralExpr)
196 value='0'
197 argument (MethodCallExpr)
198 name (SimpleName)
199 identifier='longValue'
200 scope (ObjectCreationExpr)
201 type (ClassOrInterfaceType)
202 name (SimpleName)
203 identifier='Interval'
204 arguments
205 argument (StringLiteralExpr)
206 value='0d'
207 statement (ExpressionStmt)
208 expression (MethodCallExpr)
209 name (SimpleName)
210 identifier='assertEquals'
211 arguments
212 argument (BinaryExpr)
213 operator='MULTIPLY'
214 left (IntegerLiteralExpr)
215 value='7200000'
216 right (IntegerLiteralExpr)
217 value='24'
218 argument (MethodCallExpr)
219 name (SimpleName)
220 identifier='longValue'
221 scope (ObjectCreationExpr)
222 type (ClassOrInterfaceType)
223 name (SimpleName)
224 identifier='Interval'
225 arguments
226 argument (StringLiteralExpr)
227 value=' 2d '
228 statement (ExpressionStmt)
229 expression (MethodCallExpr)
230 name (SimpleName)
231 identifier='assertEquals'
232 arguments
233 argument (BinaryExpr)
234 operator='MULTIPLY'
235 left (IntegerLiteralExpr)
236 value='7200000'
237 right (IntegerLiteralExpr)
238 value='24'
239 argument (MethodCallExpr)
240 name (SimpleName)
241 identifier='longValue'
242 scope (ObjectCreationExpr)
243 type (ClassOrInterfaceType)
244 name (SimpleName)
245 identifier='Interval'
246 arguments
247 argument (StringLiteralExpr)
248 value='2D'
249 type (VoidType)
250 name (SimpleName)
251 identifier='testIntervalString'
252 thrownExceptions
253 thrownException (ClassOrInterfaceType)
254 name (SimpleName)
255 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
15 16
13 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32
32 33
30 34
34 35
35 36
2 37
37 38
38 39
39 40
38 41
41 42
42 43
41 44
44 45
45 46
44 47
47 48
48 49
49 50
47 51
51 52
52 53
2 54
54 55
55 56
56 57
55 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
66 67
64 68
68 69
69 70
2 71
71 72
72 73
73 74
72 75
75 76
76 77
75 78
78 79
79 80
78 81
81 82
82 83
83 84
81 85
85 86
86 87
2 88
88 89
89 90
90 91
89 92
92 93
93 94
92 95
95 96
96 97
95 98
98 99
99 100
100 101
98 102
102 103
103 104
2 105
105 106
106 107
107 108
106 109
109 110
110 111
109 112
112 113
113 114
112 115
115 116
116 117
117 118
115 119
119 120
120 121
2 122
122 123
123 124
124 125
123 126
126 127
127 128
126 129
129 130
130 131
129 132
132 133
133 134
134 135
132 136
136 137
137 138
2 139
139 140
140 141
141 142
140 143
143 144
144 145
143 146
146 147
147 148
146 149
149 150
150 151
151 152
149 153
153 154
154 155
2 156
156 157
157 158
158 159
157 160
160 161
161 162
160 163
163 164
164 165
163 166
166 167
167 168
168 169
166 170
170 171
171 172
2 173
173 174
174 175
175 176
174 177
177 178
178 179
177 180
180 181
181 182
180 183
183 184
184 185
185 186
183 187
187 188
188 189
2 190
190 191
191 192
192 193
191 194
194 195
195 196
194 197
197 198
198 199
197 200
200 201
201 202
202 203
200 204
204 205
205 206
2 207
207 208
208 209
209 210
208 211
211 212
212 213
212 214
214 215
212 216
216 217
211 218
218 219
219 220
218 221
221 222
222 223
223 224
221 225
225 226
226 227
2 228
228 229
229 230
230 231
229 232
232 233
233 234
233 235
235 236
233 237
237 238
232 239
239 240
240 241
239 242
242 243
243 244
244 245
242 246
246 247
247 248
0 249
0 250
250 251
0 252
252 253
253 254
254 255

Verify ability to parse interval values from strings.
