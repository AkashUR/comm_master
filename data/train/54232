72
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='from'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='from'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='to'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='to'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='start'
29 scope (ThisExpr)
30 value (NameExpr)
31 name (SimpleName)
32 identifier='start'
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (FieldAccessExpr)
37 name (SimpleName)
38 identifier='end'
39 scope (ThisExpr)
40 value (NameExpr)
41 name (SimpleName)
42 identifier='end'
43 name (SimpleName)
44 identifier='PatternExtract'
45 parameters
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='from'
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='Entity'
53 parameter (Parameter)
54 isVarArgs='false'
55 name (SimpleName)
56 identifier='to'
57 type (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='Entity'
60 parameter (Parameter)
61 isVarArgs='false'
62 name (SimpleName)
63 identifier='start'
64 type (PrimitiveType)
65 type='INT'
66 parameter (Parameter)
67 isVarArgs='false'
68 name (SimpleName)
69 identifier='end'
70 type (PrimitiveType)
71 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
2 33
33 34
34 35
34 36
36 37
37 38
36 39
34 40
40 41
41 42
0 43
43 44
0 45
45 46
46 47
46 48
48 49
46 50
50 51
51 52
45 53
53 54
53 55
55 56
53 57
57 58
58 59
45 60
60 61
60 62
62 63
60 64
64 65
45 66
66 67
66 68
68 69
66 70
70 71

Instantiates a new pattern extract.
