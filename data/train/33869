143
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='mTuner'
9 value (NameExpr)
10 name (SimpleName)
11 identifier='tuner'
12 statement (ExpressionStmt)
13 expression (MethodCallExpr)
14 name (SimpleName)
15 identifier='addListener'
16 scope (MethodCallExpr)
17 name (SimpleName)
18 identifier='getTunerController'
19 scope (NameExpr)
20 name (SimpleName)
21 identifier='mTuner'
22 arguments
23 argument (CastExpr)
24 expression (ThisExpr)
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='IFrequencyChangeProcessor'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (NameExpr)
32 name (SimpleName)
33 identifier='mTunerChannel'
34 value (NameExpr)
35 name (SimpleName)
36 identifier='tunerChannel'
37 statement (ExpressionStmt)
38 expression (AssignExpr)
39 operator='ASSIGN'
40 target (NameExpr)
41 name (SimpleName)
42 identifier='mTunerFrequency'
43 value (MethodCallExpr)
44 name (SimpleName)
45 identifier='getFrequency'
46 scope (MethodCallExpr)
47 name (SimpleName)
48 identifier='getTunerController'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='mTuner'
52 statement (ExpressionStmt)
53 expression (VariableDeclarationExpr)
54 variables
55 variable (VariableDeclarator)
56 initializer (BinaryExpr)
57 operator='MINUS'
58 left (NameExpr)
59 name (SimpleName)
60 identifier='mTunerFrequency'
61 right (MethodCallExpr)
62 name (SimpleName)
63 identifier='getFrequency'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='mTunerChannel'
67 name (SimpleName)
68 identifier='frequencyOffset'
69 type (PrimitiveType)
70 type='LONG'
71 statement (ExpressionStmt)
72 expression (AssignExpr)
73 operator='ASSIGN'
74 target (NameExpr)
75 name (SimpleName)
76 identifier='mMixer'
77 value (ObjectCreationExpr)
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='Oscillator'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='frequencyOffset'
85 argument (MethodCallExpr)
86 name (SimpleName)
87 identifier='getSampleRate'
88 scope (MethodCallExpr)
89 name (SimpleName)
90 identifier='getTunerController'
91 scope (NameExpr)
92 name (SimpleName)
93 identifier='mTuner'
94 statement (ExpressionStmt)
95 expression (MethodCallExpr)
96 name (SimpleName)
97 identifier='frequencyChanged'
98 arguments
99 argument (ObjectCreationExpr)
100 type (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='FrequencyChangeEvent'
103 arguments
104 argument (FieldAccessExpr)
105 name (SimpleName)
106 identifier='NOTIFICATION_SAMPLE_RATE_CHANGE'
107 scope (NameExpr)
108 name (SimpleName)
109 identifier='Event'
110 argument (MethodCallExpr)
111 name (SimpleName)
112 identifier='getSampleRate'
113 scope (MethodCallExpr)
114 name (SimpleName)
115 identifier='getTunerController'
116 scope (NameExpr)
117 name (SimpleName)
118 identifier='mTuner'
119 name (SimpleName)
120 identifier='TunerChannelSource'
121 parameters
122 parameter (Parameter)
123 isVarArgs='false'
124 name (SimpleName)
125 identifier='tuner'
126 type (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='Tuner'
129 parameter (Parameter)
130 isVarArgs='false'
131 name (SimpleName)
132 identifier='tunerChannel'
133 type (ClassOrInterfaceType)
134 name (SimpleName)
135 identifier='TunerChannel'
136 thrownExceptions
137 thrownException (ClassOrInterfaceType)
138 name (SimpleName)
139 identifier='RejectedExecutionException'
140 thrownException (ClassOrInterfaceType)
141 name (SimpleName)
142 identifier='SourceException'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
2 12
12 13
13 14
14 15
13 16
16 17
17 18
16 19
19 20
20 21
13 22
22 23
23 24
23 25
25 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
29 34
34 35
35 36
2 37
37 38
38 39
38 40
40 41
41 42
38 43
43 44
44 45
43 46
46 47
47 48
46 49
49 50
50 51
2 52
52 53
53 54
54 55
55 56
56 57
56 58
58 59
59 60
56 61
61 62
62 63
61 64
64 65
65 66
55 67
67 68
55 69
69 70
2 71
71 72
72 73
72 74
74 75
75 76
72 77
77 78
78 79
79 80
77 81
81 82
82 83
83 84
81 85
85 86
86 87
85 88
88 89
89 90
88 91
91 92
92 93
2 94
94 95
95 96
96 97
95 98
98 99
99 100
100 101
101 102
99 103
103 104
104 105
105 106
104 107
107 108
108 109
103 110
110 111
111 112
110 113
113 114
114 115
113 116
116 117
117 118
0 119
119 120
0 121
121 122
122 123
122 124
124 125
122 126
126 127
127 128
121 129
129 130
129 131
131 132
129 133
133 134
134 135
0 136
136 137
137 138
138 139
136 140
140 141
141 142

Provides a Digital Drop Channel (DDC) to decimate the IQ output from a  tuner down to a 48 kHz IQ channel rate. Note: this class can only be used once (started and stopped) and a new tuner channel source must be requested from the tuner once this object has been stopped.  This is because channels are managed dynamically and center tuned frequency may have changed since this source was obtained  and thus the tuner might no longer be able to source this channel once it has been stopped.
