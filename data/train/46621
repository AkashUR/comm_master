100
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='write'
7 scope (ThisExpr)
8 arguments
9 argument (CastExpr)
10 expression (EnclosedExpr)
11 inner (BinaryExpr)
12 operator='BINARY_AND'
13 left (EnclosedExpr)
14 inner (BinaryExpr)
15 operator='SIGNED_RIGHT_SHIFT'
16 left (NameExpr)
17 name (SimpleName)
18 identifier='ul'
19 right (IntegerLiteralExpr)
20 value='24'
21 right (IntegerLiteralExpr)
22 value='0xff'
23 type (PrimitiveType)
24 type='BYTE'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='write'
29 scope (ThisExpr)
30 arguments
31 argument (CastExpr)
32 expression (EnclosedExpr)
33 inner (BinaryExpr)
34 operator='BINARY_AND'
35 left (EnclosedExpr)
36 inner (BinaryExpr)
37 operator='SIGNED_RIGHT_SHIFT'
38 left (NameExpr)
39 name (SimpleName)
40 identifier='ul'
41 right (IntegerLiteralExpr)
42 value='16'
43 right (IntegerLiteralExpr)
44 value='0xff'
45 type (PrimitiveType)
46 type='BYTE'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='write'
51 scope (ThisExpr)
52 arguments
53 argument (CastExpr)
54 expression (EnclosedExpr)
55 inner (BinaryExpr)
56 operator='BINARY_AND'
57 left (EnclosedExpr)
58 inner (BinaryExpr)
59 operator='SIGNED_RIGHT_SHIFT'
60 left (NameExpr)
61 name (SimpleName)
62 identifier='ul'
63 right (IntegerLiteralExpr)
64 value='8'
65 right (IntegerLiteralExpr)
66 value='0xff'
67 type (PrimitiveType)
68 type='BYTE'
69 statement (ExpressionStmt)
70 expression (MethodCallExpr)
71 name (SimpleName)
72 identifier='write'
73 scope (ThisExpr)
74 arguments
75 argument (CastExpr)
76 expression (EnclosedExpr)
77 inner (BinaryExpr)
78 operator='BINARY_AND'
79 left (NameExpr)
80 name (SimpleName)
81 identifier='ul'
82 right (IntegerLiteralExpr)
83 value='0xff'
84 type (PrimitiveType)
85 type='BYTE'
86 type (VoidType)
87 name (SimpleName)
88 identifier='writeULong'
89 parameters
90 parameter (Parameter)
91 isVarArgs='false'
92 name (SimpleName)
93 identifier='ul'
94 type (PrimitiveType)
95 type='LONG'
96 thrownExceptions
97 thrownException (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
4 8
8 9
9 10
10 11
11 12
11 13
13 14
14 15
14 16
16 17
17 18
14 19
19 20
11 21
21 22
9 23
23 24
2 25
25 26
26 27
27 28
26 29
26 30
30 31
31 32
32 33
33 34
33 35
35 36
36 37
36 38
38 39
39 40
36 41
41 42
33 43
43 44
31 45
45 46
2 47
47 48
48 49
49 50
48 51
48 52
52 53
53 54
54 55
55 56
55 57
57 58
58 59
58 60
60 61
61 62
58 63
63 64
55 65
65 66
53 67
67 68
2 69
69 70
70 71
71 72
70 73
70 74
74 75
75 76
76 77
77 78
77 79
79 80
80 81
77 82
82 83
75 84
84 85
0 86
0 87
87 88
0 89
89 90
90 91
90 92
92 93
90 94
94 95
0 96
96 97
97 98
98 99

Write a ULong value.
