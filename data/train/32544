102
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='list'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='list'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='index'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='origin'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='fence'
29 scope (ThisExpr)
30 value (NameExpr)
31 name (SimpleName)
32 identifier='fence'
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (FieldAccessExpr)
37 name (SimpleName)
38 identifier='alist'
39 scope (ThisExpr)
40 value (ConditionalExpr)
41 condition (InstanceOfExpr)
42 expression (NameExpr)
43 name (SimpleName)
44 identifier='list'
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='AbstractList'
48 elseExpr (NullLiteralExpr)
49 thenExpr (CastExpr)
50 expression (NameExpr)
51 name (SimpleName)
52 identifier='list'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='AbstractList'
56 typeArguments
57 typeArgument (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='E'
60 statement (ExpressionStmt)
61 expression (AssignExpr)
62 operator='ASSIGN'
63 target (FieldAccessExpr)
64 name (SimpleName)
65 identifier='expectedModCount'
66 scope (ThisExpr)
67 value (NameExpr)
68 name (SimpleName)
69 identifier='expectedModCount'
70 name (SimpleName)
71 identifier='RASpliterator'
72 parameters
73 parameter (Parameter)
74 isVarArgs='false'
75 name (SimpleName)
76 identifier='list'
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='List'
80 typeArguments
81 typeArgument (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='E'
84 parameter (Parameter)
85 isVarArgs='false'
86 name (SimpleName)
87 identifier='origin'
88 type (PrimitiveType)
89 type='INT'
90 parameter (Parameter)
91 isVarArgs='false'
92 name (SimpleName)
93 identifier='fence'
94 type (PrimitiveType)
95 type='INT'
96 parameter (Parameter)
97 isVarArgs='false'
98 name (SimpleName)
99 identifier='expectedModCount'
100 type (PrimitiveType)
101 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
2 33
33 34
34 35
34 36
36 37
37 38
36 39
34 40
40 41
41 42
42 43
43 44
41 45
45 46
46 47
40 48
40 49
49 50
50 51
51 52
49 53
53 54
54 55
53 56
56 57
57 58
58 59
2 60
60 61
61 62
61 63
63 64
64 65
63 66
61 67
67 68
68 69
0 70
70 71
0 72
72 73
73 74
73 75
75 76
73 77
77 78
78 79
77 80
80 81
81 82
82 83
72 84
84 85
84 86
86 87
84 88
88 89
72 90
90 91
90 92
92 93
90 94
94 95
72 96
96 97
96 98
98 99
96 100
100 101

Create new spliterator covering the given range
