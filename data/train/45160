139
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='logger'
9 value (MethodCallExpr)
10 name (SimpleName)
11 identifier='getLogger'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='Logger'
15 arguments
16 argument (MethodCallExpr)
17 name (SimpleName)
18 identifier='getThreadDependentLoggername'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='info'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='logger'
26 arguments
27 argument (StringLiteralExpr)
28 value='Building circuits by permute'
29 statement (ExpressionStmt)
30 expression (MethodCallExpr)
31 name (SimpleName)
32 identifier='set_logic_circuits'
33 arguments
34 argument (ObjectCreationExpr)
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='ArrayList'
38 typeArguments
39 typeArgument (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='LogicCircuit'
42 statement (ExpressionStmt)
43 expression (VariableDeclarationExpr)
44 variables
45 variable (VariableDeclarator)
46 initializer (MethodCallExpr)
47 name (SimpleName)
48 identifier='get_unassigned_lc'
49 name (SimpleName)
50 identifier='lc'
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='LogicCircuit'
54 statement (ExpressionStmt)
55 expression (VariableDeclarationExpr)
56 variables
57 variable (VariableDeclarator)
58 initializer (MethodCallExpr)
59 name (SimpleName)
60 identifier='size'
61 scope (MethodCallExpr)
62 name (SimpleName)
63 identifier='get_logic_gates'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='lc'
67 name (SimpleName)
68 identifier='n_gates_circuit'
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='Integer'
72 statement (ExpressionStmt)
73 expression (VariableDeclarationExpr)
74 variables
75 variable (VariableDeclarator)
76 initializer (MethodCallExpr)
77 name (SimpleName)
78 identifier='size'
79 scope (MethodCallExpr)
80 name (SimpleName)
81 identifier='keySet'
82 scope (MethodCallExpr)
83 name (SimpleName)
84 identifier='get_GATES_BY_NAME'
85 scope (MethodCallExpr)
86 name (SimpleName)
87 identifier='get_gate_library'
88 name (SimpleName)
89 identifier='n_gates_library'
90 type (ClassOrInterfaceType)
91 name (SimpleName)
92 identifier='Integer'
93 statement (ExpressionStmt)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='permuteNORGateIndices'
97 arguments
98 argument (NameExpr)
99 name (SimpleName)
100 identifier='lc'
101 argument (MethodCallExpr)
102 name (SimpleName)
103 identifier='get_gate_library'
104 statement (ExpressionStmt)
105 expression (MethodCallExpr)
106 name (SimpleName)
107 identifier='info'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='logger'
111 arguments
112 argument (StringLiteralExpr)
113 value='enumerate assignments'
114 statement (ExpressionStmt)
115 expression (MethodCallExpr)
116 name (SimpleName)
117 identifier='enumerateAssignments'
118 statement (ExpressionStmt)
119 expression (MethodCallExpr)
120 name (SimpleName)
121 identifier='info'
122 scope (NameExpr)
123 name (SimpleName)
124 identifier='logger'
125 arguments
126 argument (StringLiteralExpr)
127 value='evaluate assignments'
128 statement (ExpressionStmt)
129 expression (MethodCallExpr)
130 name (SimpleName)
131 identifier='evaluateAssignments'
132 type (VoidType)
133 name (SimpleName)
134 identifier='buildCircuits'
135 annotations
136 annotation (MarkerAnnotationExpr)
137 name (Name)
138 identifier='Override'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
9 15
15 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
2 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
36 37
35 38
38 39
39 40
40 41
2 42
42 43
43 44
44 45
45 46
46 47
47 48
45 49
49 50
45 51
51 52
52 53
2 54
54 55
55 56
56 57
57 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
57 67
67 68
57 69
69 70
70 71
2 72
72 73
73 74
74 75
75 76
76 77
77 78
76 79
79 80
80 81
79 82
82 83
83 84
82 85
85 86
86 87
75 88
88 89
75 90
90 91
91 92
2 93
93 94
94 95
95 96
94 97
97 98
98 99
99 100
97 101
101 102
102 103
2 104
104 105
105 106
106 107
105 108
108 109
109 110
105 111
111 112
112 113
2 114
114 115
115 116
116 117
2 118
118 119
119 120
120 121
119 122
122 123
123 124
119 125
125 126
126 127
2 128
128 129
129 130
130 131
0 132
0 133
133 134
0 135
135 136
136 137
137 138

Synopsis    [ ] Currently hard-coded to handle a single gate type (i.e. NOR/NOT).
