169
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (NameExpr)
5 name (SimpleName)
6 identifier='featureID'
7 entries
8 entrie (SwitchEntryStmt)
9 label (FieldAccessExpr)
10 name (SimpleName)
11 identifier='FUNCTION_TYPE_EXPRESSION__BINDING'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='TypeRefsPackage'
15 statements
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setBinding'
20 arguments
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='BINDING_EDEFAULT'
24 statement (ReturnStmt)
25 entrie (SwitchEntryStmt)
26 label (FieldAccessExpr)
27 name (SimpleName)
28 identifier='FUNCTION_TYPE_EXPRESSION__DECLARED_TYPE'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='TypeRefsPackage'
32 statements
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='setDeclaredType'
37 arguments
38 argument (CastExpr)
39 expression (NullLiteralExpr)
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='TFunction'
43 statement (ReturnStmt)
44 entrie (SwitchEntryStmt)
45 label (FieldAccessExpr)
46 name (SimpleName)
47 identifier='FUNCTION_TYPE_EXPRESSION__DECLARED_THIS_TYPE'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='TypeRefsPackage'
51 statements
52 statement (ExpressionStmt)
53 expression (MethodCallExpr)
54 name (SimpleName)
55 identifier='setDeclaredThisType'
56 arguments
57 argument (CastExpr)
58 expression (NullLiteralExpr)
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='TypeRef'
62 statement (ReturnStmt)
63 entrie (SwitchEntryStmt)
64 label (FieldAccessExpr)
65 name (SimpleName)
66 identifier='FUNCTION_TYPE_EXPRESSION__OWNED_TYPE_VARS'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='TypeRefsPackage'
70 statements
71 statement (ExpressionStmt)
72 expression (MethodCallExpr)
73 name (SimpleName)
74 identifier='clear'
75 scope (MethodCallExpr)
76 name (SimpleName)
77 identifier='getOwnedTypeVars'
78 statement (ReturnStmt)
79 entrie (SwitchEntryStmt)
80 label (FieldAccessExpr)
81 name (SimpleName)
82 identifier='FUNCTION_TYPE_EXPRESSION__UNBOUND_TYPE_VARS'
83 scope (NameExpr)
84 name (SimpleName)
85 identifier='TypeRefsPackage'
86 statements
87 statement (ExpressionStmt)
88 expression (MethodCallExpr)
89 name (SimpleName)
90 identifier='clear'
91 scope (MethodCallExpr)
92 name (SimpleName)
93 identifier='getUnboundTypeVars'
94 statement (ReturnStmt)
95 entrie (SwitchEntryStmt)
96 label (FieldAccessExpr)
97 name (SimpleName)
98 identifier='FUNCTION_TYPE_EXPRESSION__UNBOUND_TYPE_VARS_UPPER_BOUNDS'
99 scope (NameExpr)
100 name (SimpleName)
101 identifier='TypeRefsPackage'
102 statements
103 statement (ExpressionStmt)
104 expression (MethodCallExpr)
105 name (SimpleName)
106 identifier='clear'
107 scope (MethodCallExpr)
108 name (SimpleName)
109 identifier='getUnboundTypeVarsUpperBounds'
110 statement (ReturnStmt)
111 entrie (SwitchEntryStmt)
112 label (FieldAccessExpr)
113 name (SimpleName)
114 identifier='FUNCTION_TYPE_EXPRESSION__FPARS'
115 scope (NameExpr)
116 name (SimpleName)
117 identifier='TypeRefsPackage'
118 statements
119 statement (ExpressionStmt)
120 expression (MethodCallExpr)
121 name (SimpleName)
122 identifier='clear'
123 scope (MethodCallExpr)
124 name (SimpleName)
125 identifier='getFpars'
126 statement (ReturnStmt)
127 entrie (SwitchEntryStmt)
128 label (FieldAccessExpr)
129 name (SimpleName)
130 identifier='FUNCTION_TYPE_EXPRESSION__RETURN_TYPE_REF'
131 scope (NameExpr)
132 name (SimpleName)
133 identifier='TypeRefsPackage'
134 statements
135 statement (ExpressionStmt)
136 expression (MethodCallExpr)
137 name (SimpleName)
138 identifier='setReturnTypeRef'
139 arguments
140 argument (CastExpr)
141 expression (NullLiteralExpr)
142 type (ClassOrInterfaceType)
143 name (SimpleName)
144 identifier='TypeRef'
145 statement (ReturnStmt)
146 statement (ExpressionStmt)
147 expression (MethodCallExpr)
148 name (SimpleName)
149 identifier='eUnset'
150 scope (SuperExpr)
151 arguments
152 argument (NameExpr)
153 name (SimpleName)
154 identifier='featureID'
155 type (VoidType)
156 name (SimpleName)
157 identifier='eUnset'
158 parameters
159 parameter (Parameter)
160 isVarArgs='false'
161 name (SimpleName)
162 identifier='featureID'
163 type (PrimitiveType)
164 type='INT'
165 annotations
166 annotation (MarkerAnnotationExpr)
167 name (Name)
168 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
3 7
7 8
8 9
9 10
10 11
9 12
12 13
13 14
8 15
15 16
16 17
17 18
18 19
17 20
20 21
21 22
22 23
15 24
7 25
25 26
26 27
27 28
26 29
29 30
30 31
25 32
32 33
33 34
34 35
35 36
34 37
37 38
38 39
38 40
40 41
41 42
32 43
7 44
44 45
45 46
46 47
45 48
48 49
49 50
44 51
51 52
52 53
53 54
54 55
53 56
56 57
57 58
57 59
59 60
60 61
51 62
7 63
63 64
64 65
65 66
64 67
67 68
68 69
63 70
70 71
71 72
72 73
73 74
72 75
75 76
76 77
70 78
7 79
79 80
80 81
81 82
80 83
83 84
84 85
79 86
86 87
87 88
88 89
89 90
88 91
91 92
92 93
86 94
7 95
95 96
96 97
97 98
96 99
99 100
100 101
95 102
102 103
103 104
104 105
105 106
104 107
107 108
108 109
102 110
7 111
111 112
112 113
113 114
112 115
115 116
116 117
111 118
118 119
119 120
120 121
121 122
120 123
123 124
124 125
118 126
7 127
127 128
128 129
129 130
128 131
131 132
132 133
127 134
134 135
135 136
136 137
137 138
136 139
139 140
140 141
140 142
142 143
143 144
134 145
2 146
146 147
147 148
148 149
147 150
147 151
151 152
152 153
153 154
0 155
0 156
156 157
0 158
158 159
159 160
159 161
161 162
159 163
163 164
0 165
165 166
166 167
167 168

<!-- begin-user-doc --> <!-- end-user-doc -->
