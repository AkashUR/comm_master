65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='resetSyntax'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='m_st'
10 statement (ExpressionStmt)
11 expression (MethodCallExpr)
12 name (SimpleName)
13 identifier='wordChars'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='m_st'
17 arguments
18 argument (CharLiteralExpr)
19 value='\u0000'
20 argument (CharLiteralExpr)
21 value='\u00ff'
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='slashStarComments'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='m_st'
29 arguments
30 argument (BooleanLiteralExpr)
31 value='false'
32 statement (ExpressionStmt)
33 expression (MethodCallExpr)
34 name (SimpleName)
35 identifier='slashSlashComments'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='m_st'
39 arguments
40 argument (BooleanLiteralExpr)
41 value='false'
42 statement (ExpressionStmt)
43 expression (MethodCallExpr)
44 name (SimpleName)
45 identifier='ordinaryChar'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='m_st'
49 arguments
50 argument (CharLiteralExpr)
51 value='\n'
52 statement (ExpressionStmt)
53 expression (MethodCallExpr)
54 name (SimpleName)
55 identifier='ordinaryChar'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='m_st'
59 arguments
60 argument (CharLiteralExpr)
61 value='\r'
62 type (VoidType)
63 name (SimpleName)
64 identifier='alterSyntax'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
12 13
11 14
14 15
15 16
11 17
17 18
18 19
17 20
20 21
2 22
22 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
2 32
32 33
33 34
34 35
33 36
36 37
37 38
33 39
39 40
40 41
2 42
42 43
43 44
44 45
43 46
46 47
47 48
43 49
49 50
50 51
2 52
52 53
53 54
54 55
53 56
56 57
57 58
53 59
59 60
60 61
0 62
0 63
63 64

This is the alternative syntax for the tokenizer.
