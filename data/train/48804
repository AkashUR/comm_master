51
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='debug'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='logger'
10 arguments
11 argument (StringLiteralExpr)
12 value='Starting function {}'
13 argument (NameExpr)
14 name (SimpleName)
15 identifier='functionName'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='put'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='timers'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='functionName'
27 argument (MethodCallExpr)
28 name (SimpleName)
29 identifier='time'
30 scope (MethodCallExpr)
31 name (SimpleName)
32 identifier='getTimer'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='metrics'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='functionName'
40 type (VoidType)
41 name (SimpleName)
42 identifier='startFunction'
43 parameters
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='functionName'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='String'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
23 27
27 28
28 29
27 30
30 31
31 32
30 33
33 34
34 35
30 36
36 37
37 38
38 39
0 40
0 41
41 42
0 43
43 44
44 45
44 46
46 47
44 48
48 49
49 50

Start a timer at the start of the function, and log that the function is about to begin
