96
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertTrue'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='isDefaultNextSuggestion'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='sh'
14 arguments
15 argument (StringLiteralExpr)
16 value='about'
17 argument (StringLiteralExpr)
18 value='p'
19 argument (StringLiteralExpr)
20 value='part'
21 statement (ExpressionStmt)
22 expression (MethodCallExpr)
23 name (SimpleName)
24 identifier='assertTrue'
25 arguments
26 argument (MethodCallExpr)
27 name (SimpleName)
28 identifier='isDefaultNextSuggestion'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='sh'
32 arguments
33 argument (StringLiteralExpr)
34 value='I\'m'
35 argument (StringLiteralExpr)
36 value='a'
37 argument (StringLiteralExpr)
38 value='about'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='assertTrue'
43 arguments
44 argument (MethodCallExpr)
45 name (SimpleName)
46 identifier='isDefaultNextSuggestion'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='sh'
50 arguments
51 argument (StringLiteralExpr)
52 value='about'
53 argument (StringLiteralExpr)
54 value='b'
55 argument (StringLiteralExpr)
56 value='business'
57 statement (ExpressionStmt)
58 expression (MethodCallExpr)
59 name (SimpleName)
60 identifier='assertTrue'
61 arguments
62 argument (MethodCallExpr)
63 name (SimpleName)
64 identifier='isASuggestion'
65 scope (NameExpr)
66 name (SimpleName)
67 identifier='sh'
68 arguments
69 argument (StringLiteralExpr)
70 value='about'
71 argument (StringLiteralExpr)
72 value='b'
73 argument (StringLiteralExpr)
74 value='being'
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='assertFalse'
79 arguments
80 argument (MethodCallExpr)
81 name (SimpleName)
82 identifier='isDefaultNextSuggestion'
83 scope (NameExpr)
84 name (SimpleName)
85 identifier='sh'
86 arguments
87 argument (StringLiteralExpr)
88 value='about'
89 argument (StringLiteralExpr)
90 value='p'
91 argument (StringLiteralExpr)
92 value='business'
93 type (VoidType)
94 name (SimpleName)
95 identifier='testBigramsAtFirstChar'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
8 14
14 15
15 16
14 17
17 18
14 19
19 20
2 21
21 22
22 23
23 24
22 25
25 26
26 27
27 28
26 29
29 30
30 31
26 32
32 33
33 34
32 35
35 36
32 37
37 38
2 39
39 40
40 41
41 42
40 43
43 44
44 45
45 46
44 47
47 48
48 49
44 50
50 51
51 52
50 53
53 54
50 55
55 56
2 57
57 58
58 59
59 60
58 61
61 62
62 63
63 64
62 65
65 66
66 67
62 68
68 69
69 70
68 71
71 72
68 73
73 74
2 75
75 76
76 77
77 78
76 79
79 80
80 81
81 82
80 83
83 84
84 85
80 86
86 87
87 88
86 89
89 90
86 91
91 92
0 93
0 94
94 95

Make sure bigrams are showing when first character is typed and don't show any when there aren't any
