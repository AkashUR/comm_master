694
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertLongRangeSplit'
7 arguments
8 argument (FieldAccessExpr)
9 name (SimpleName)
10 identifier='MAX_VALUE'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='Long'
14 argument (FieldAccessExpr)
15 name (SimpleName)
16 identifier='MAX_VALUE'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='Long'
20 argument (IntegerLiteralExpr)
21 value='1'
22 argument (BooleanLiteralExpr)
23 value='true'
24 argument (MethodCallExpr)
25 name (SimpleName)
26 identifier='asList'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='Arrays'
30 arguments
31 argument (LongLiteralExpr)
32 value='0xffffffffffffffffL'
33 argument (LongLiteralExpr)
34 value='0xffffffffffffffffL'
35 argument (MethodCallExpr)
36 name (SimpleName)
37 identifier='asList'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='Arrays'
41 arguments
42 argument (IntegerLiteralExpr)
43 value='0'
44 statement (ExpressionStmt)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='assertLongRangeSplit'
48 arguments
49 argument (FieldAccessExpr)
50 name (SimpleName)
51 identifier='MAX_VALUE'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='Long'
55 argument (FieldAccessExpr)
56 name (SimpleName)
57 identifier='MAX_VALUE'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='Long'
61 argument (IntegerLiteralExpr)
62 value='2'
63 argument (BooleanLiteralExpr)
64 value='true'
65 argument (MethodCallExpr)
66 name (SimpleName)
67 identifier='asList'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='Arrays'
71 arguments
72 argument (LongLiteralExpr)
73 value='0xffffffffffffffffL'
74 argument (LongLiteralExpr)
75 value='0xffffffffffffffffL'
76 argument (MethodCallExpr)
77 name (SimpleName)
78 identifier='asList'
79 scope (NameExpr)
80 name (SimpleName)
81 identifier='Arrays'
82 arguments
83 argument (IntegerLiteralExpr)
84 value='0'
85 statement (ExpressionStmt)
86 expression (MethodCallExpr)
87 name (SimpleName)
88 identifier='assertLongRangeSplit'
89 arguments
90 argument (FieldAccessExpr)
91 name (SimpleName)
92 identifier='MAX_VALUE'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='Long'
96 argument (FieldAccessExpr)
97 name (SimpleName)
98 identifier='MAX_VALUE'
99 scope (NameExpr)
100 name (SimpleName)
101 identifier='Long'
102 argument (IntegerLiteralExpr)
103 value='4'
104 argument (BooleanLiteralExpr)
105 value='true'
106 argument (MethodCallExpr)
107 name (SimpleName)
108 identifier='asList'
109 scope (NameExpr)
110 name (SimpleName)
111 identifier='Arrays'
112 arguments
113 argument (LongLiteralExpr)
114 value='0xffffffffffffffffL'
115 argument (LongLiteralExpr)
116 value='0xffffffffffffffffL'
117 argument (MethodCallExpr)
118 name (SimpleName)
119 identifier='asList'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='Arrays'
123 arguments
124 argument (IntegerLiteralExpr)
125 value='0'
126 statement (ExpressionStmt)
127 expression (MethodCallExpr)
128 name (SimpleName)
129 identifier='assertLongRangeSplit'
130 arguments
131 argument (FieldAccessExpr)
132 name (SimpleName)
133 identifier='MAX_VALUE'
134 scope (NameExpr)
135 name (SimpleName)
136 identifier='Long'
137 argument (FieldAccessExpr)
138 name (SimpleName)
139 identifier='MAX_VALUE'
140 scope (NameExpr)
141 name (SimpleName)
142 identifier='Long'
143 argument (IntegerLiteralExpr)
144 value='6'
145 argument (BooleanLiteralExpr)
146 value='true'
147 argument (MethodCallExpr)
148 name (SimpleName)
149 identifier='asList'
150 scope (NameExpr)
151 name (SimpleName)
152 identifier='Arrays'
153 arguments
154 argument (LongLiteralExpr)
155 value='0xffffffffffffffffL'
156 argument (LongLiteralExpr)
157 value='0xffffffffffffffffL'
158 argument (MethodCallExpr)
159 name (SimpleName)
160 identifier='asList'
161 scope (NameExpr)
162 name (SimpleName)
163 identifier='Arrays'
164 arguments
165 argument (IntegerLiteralExpr)
166 value='0'
167 statement (ExpressionStmt)
168 expression (MethodCallExpr)
169 name (SimpleName)
170 identifier='assertLongRangeSplit'
171 arguments
172 argument (FieldAccessExpr)
173 name (SimpleName)
174 identifier='MAX_VALUE'
175 scope (NameExpr)
176 name (SimpleName)
177 identifier='Long'
178 argument (FieldAccessExpr)
179 name (SimpleName)
180 identifier='MAX_VALUE'
181 scope (NameExpr)
182 name (SimpleName)
183 identifier='Long'
184 argument (IntegerLiteralExpr)
185 value='8'
186 argument (BooleanLiteralExpr)
187 value='true'
188 argument (MethodCallExpr)
189 name (SimpleName)
190 identifier='asList'
191 scope (NameExpr)
192 name (SimpleName)
193 identifier='Arrays'
194 arguments
195 argument (LongLiteralExpr)
196 value='0xffffffffffffffffL'
197 argument (LongLiteralExpr)
198 value='0xffffffffffffffffL'
199 argument (MethodCallExpr)
200 name (SimpleName)
201 identifier='asList'
202 scope (NameExpr)
203 name (SimpleName)
204 identifier='Arrays'
205 arguments
206 argument (IntegerLiteralExpr)
207 value='0'
208 statement (ExpressionStmt)
209 expression (MethodCallExpr)
210 name (SimpleName)
211 identifier='assertLongRangeSplit'
212 arguments
213 argument (FieldAccessExpr)
214 name (SimpleName)
215 identifier='MAX_VALUE'
216 scope (NameExpr)
217 name (SimpleName)
218 identifier='Long'
219 argument (FieldAccessExpr)
220 name (SimpleName)
221 identifier='MAX_VALUE'
222 scope (NameExpr)
223 name (SimpleName)
224 identifier='Long'
225 argument (IntegerLiteralExpr)
226 value='64'
227 argument (BooleanLiteralExpr)
228 value='true'
229 argument (MethodCallExpr)
230 name (SimpleName)
231 identifier='asList'
232 scope (NameExpr)
233 name (SimpleName)
234 identifier='Arrays'
235 arguments
236 argument (LongLiteralExpr)
237 value='0xffffffffffffffffL'
238 argument (LongLiteralExpr)
239 value='0xffffffffffffffffL'
240 argument (MethodCallExpr)
241 name (SimpleName)
242 identifier='asList'
243 scope (NameExpr)
244 name (SimpleName)
245 identifier='Arrays'
246 arguments
247 argument (IntegerLiteralExpr)
248 value='0'
249 statement (ExpressionStmt)
250 expression (MethodCallExpr)
251 name (SimpleName)
252 identifier='assertLongRangeSplit'
253 arguments
254 argument (BinaryExpr)
255 operator='MINUS'
256 left (FieldAccessExpr)
257 name (SimpleName)
258 identifier='MAX_VALUE'
259 scope (NameExpr)
260 name (SimpleName)
261 identifier='Long'
262 right (LongLiteralExpr)
263 value='0xfL'
264 argument (FieldAccessExpr)
265 name (SimpleName)
266 identifier='MAX_VALUE'
267 scope (NameExpr)
268 name (SimpleName)
269 identifier='Long'
270 argument (IntegerLiteralExpr)
271 value='4'
272 argument (BooleanLiteralExpr)
273 value='true'
274 argument (MethodCallExpr)
275 name (SimpleName)
276 identifier='asList'
277 scope (NameExpr)
278 name (SimpleName)
279 identifier='Arrays'
280 arguments
281 argument (LongLiteralExpr)
282 value='0xfffffffffffffffL'
283 argument (LongLiteralExpr)
284 value='0xfffffffffffffffL'
285 argument (MethodCallExpr)
286 name (SimpleName)
287 identifier='asList'
288 scope (NameExpr)
289 name (SimpleName)
290 identifier='Arrays'
291 arguments
292 argument (IntegerLiteralExpr)
293 value='4'
294 statement (ExpressionStmt)
295 expression (MethodCallExpr)
296 name (SimpleName)
297 identifier='assertLongRangeSplit'
298 arguments
299 argument (BinaryExpr)
300 operator='MINUS'
301 left (FieldAccessExpr)
302 name (SimpleName)
303 identifier='MAX_VALUE'
304 scope (NameExpr)
305 name (SimpleName)
306 identifier='Long'
307 right (LongLiteralExpr)
308 value='0x10L'
309 argument (FieldAccessExpr)
310 name (SimpleName)
311 identifier='MAX_VALUE'
312 scope (NameExpr)
313 name (SimpleName)
314 identifier='Long'
315 argument (IntegerLiteralExpr)
316 value='4'
317 argument (BooleanLiteralExpr)
318 value='true'
319 argument (MethodCallExpr)
320 name (SimpleName)
321 identifier='asList'
322 scope (NameExpr)
323 name (SimpleName)
324 identifier='Arrays'
325 arguments
326 argument (LongLiteralExpr)
327 value='0xffffffffffffffefL'
328 argument (LongLiteralExpr)
329 value='0xffffffffffffffefL'
330 argument (LongLiteralExpr)
331 value='0xfffffffffffffffL'
332 argument (LongLiteralExpr)
333 value='0xfffffffffffffffL'
334 argument (MethodCallExpr)
335 name (SimpleName)
336 identifier='asList'
337 scope (NameExpr)
338 name (SimpleName)
339 identifier='Arrays'
340 arguments
341 argument (IntegerLiteralExpr)
342 value='0'
343 argument (IntegerLiteralExpr)
344 value='4'
345 statement (ExpressionStmt)
346 expression (MethodCallExpr)
347 name (SimpleName)
348 identifier='assertLongRangeSplit'
349 arguments
350 argument (FieldAccessExpr)
351 name (SimpleName)
352 identifier='MIN_VALUE'
353 scope (NameExpr)
354 name (SimpleName)
355 identifier='Long'
356 argument (FieldAccessExpr)
357 name (SimpleName)
358 identifier='MIN_VALUE'
359 scope (NameExpr)
360 name (SimpleName)
361 identifier='Long'
362 argument (IntegerLiteralExpr)
363 value='1'
364 argument (BooleanLiteralExpr)
365 value='true'
366 argument (MethodCallExpr)
367 name (SimpleName)
368 identifier='asList'
369 scope (NameExpr)
370 name (SimpleName)
371 identifier='Arrays'
372 arguments
373 argument (LongLiteralExpr)
374 value='0x0000000000000000L'
375 argument (LongLiteralExpr)
376 value='0x0000000000000000L'
377 argument (MethodCallExpr)
378 name (SimpleName)
379 identifier='asList'
380 scope (NameExpr)
381 name (SimpleName)
382 identifier='Arrays'
383 arguments
384 argument (IntegerLiteralExpr)
385 value='0'
386 statement (ExpressionStmt)
387 expression (MethodCallExpr)
388 name (SimpleName)
389 identifier='assertLongRangeSplit'
390 arguments
391 argument (FieldAccessExpr)
392 name (SimpleName)
393 identifier='MIN_VALUE'
394 scope (NameExpr)
395 name (SimpleName)
396 identifier='Long'
397 argument (FieldAccessExpr)
398 name (SimpleName)
399 identifier='MIN_VALUE'
400 scope (NameExpr)
401 name (SimpleName)
402 identifier='Long'
403 argument (IntegerLiteralExpr)
404 value='2'
405 argument (BooleanLiteralExpr)
406 value='true'
407 argument (MethodCallExpr)
408 name (SimpleName)
409 identifier='asList'
410 scope (NameExpr)
411 name (SimpleName)
412 identifier='Arrays'
413 arguments
414 argument (LongLiteralExpr)
415 value='0x0000000000000000L'
416 argument (LongLiteralExpr)
417 value='0x0000000000000000L'
418 argument (MethodCallExpr)
419 name (SimpleName)
420 identifier='asList'
421 scope (NameExpr)
422 name (SimpleName)
423 identifier='Arrays'
424 arguments
425 argument (IntegerLiteralExpr)
426 value='0'
427 statement (ExpressionStmt)
428 expression (MethodCallExpr)
429 name (SimpleName)
430 identifier='assertLongRangeSplit'
431 arguments
432 argument (FieldAccessExpr)
433 name (SimpleName)
434 identifier='MIN_VALUE'
435 scope (NameExpr)
436 name (SimpleName)
437 identifier='Long'
438 argument (FieldAccessExpr)
439 name (SimpleName)
440 identifier='MIN_VALUE'
441 scope (NameExpr)
442 name (SimpleName)
443 identifier='Long'
444 argument (IntegerLiteralExpr)
445 value='4'
446 argument (BooleanLiteralExpr)
447 value='true'
448 argument (MethodCallExpr)
449 name (SimpleName)
450 identifier='asList'
451 scope (NameExpr)
452 name (SimpleName)
453 identifier='Arrays'
454 arguments
455 argument (LongLiteralExpr)
456 value='0x0000000000000000L'
457 argument (LongLiteralExpr)
458 value='0x0000000000000000L'
459 argument (MethodCallExpr)
460 name (SimpleName)
461 identifier='asList'
462 scope (NameExpr)
463 name (SimpleName)
464 identifier='Arrays'
465 arguments
466 argument (IntegerLiteralExpr)
467 value='0'
468 statement (ExpressionStmt)
469 expression (MethodCallExpr)
470 name (SimpleName)
471 identifier='assertLongRangeSplit'
472 arguments
473 argument (FieldAccessExpr)
474 name (SimpleName)
475 identifier='MIN_VALUE'
476 scope (NameExpr)
477 name (SimpleName)
478 identifier='Long'
479 argument (FieldAccessExpr)
480 name (SimpleName)
481 identifier='MIN_VALUE'
482 scope (NameExpr)
483 name (SimpleName)
484 identifier='Long'
485 argument (IntegerLiteralExpr)
486 value='6'
487 argument (BooleanLiteralExpr)
488 value='true'
489 argument (MethodCallExpr)
490 name (SimpleName)
491 identifier='asList'
492 scope (NameExpr)
493 name (SimpleName)
494 identifier='Arrays'
495 arguments
496 argument (LongLiteralExpr)
497 value='0x0000000000000000L'
498 argument (LongLiteralExpr)
499 value='0x0000000000000000L'
500 argument (MethodCallExpr)
501 name (SimpleName)
502 identifier='asList'
503 scope (NameExpr)
504 name (SimpleName)
505 identifier='Arrays'
506 arguments
507 argument (IntegerLiteralExpr)
508 value='0'
509 statement (ExpressionStmt)
510 expression (MethodCallExpr)
511 name (SimpleName)
512 identifier='assertLongRangeSplit'
513 arguments
514 argument (FieldAccessExpr)
515 name (SimpleName)
516 identifier='MIN_VALUE'
517 scope (NameExpr)
518 name (SimpleName)
519 identifier='Long'
520 argument (FieldAccessExpr)
521 name (SimpleName)
522 identifier='MIN_VALUE'
523 scope (NameExpr)
524 name (SimpleName)
525 identifier='Long'
526 argument (IntegerLiteralExpr)
527 value='8'
528 argument (BooleanLiteralExpr)
529 value='true'
530 argument (MethodCallExpr)
531 name (SimpleName)
532 identifier='asList'
533 scope (NameExpr)
534 name (SimpleName)
535 identifier='Arrays'
536 arguments
537 argument (LongLiteralExpr)
538 value='0x0000000000000000L'
539 argument (LongLiteralExpr)
540 value='0x0000000000000000L'
541 argument (MethodCallExpr)
542 name (SimpleName)
543 identifier='asList'
544 scope (NameExpr)
545 name (SimpleName)
546 identifier='Arrays'
547 arguments
548 argument (IntegerLiteralExpr)
549 value='0'
550 statement (ExpressionStmt)
551 expression (MethodCallExpr)
552 name (SimpleName)
553 identifier='assertLongRangeSplit'
554 arguments
555 argument (FieldAccessExpr)
556 name (SimpleName)
557 identifier='MIN_VALUE'
558 scope (NameExpr)
559 name (SimpleName)
560 identifier='Long'
561 argument (FieldAccessExpr)
562 name (SimpleName)
563 identifier='MIN_VALUE'
564 scope (NameExpr)
565 name (SimpleName)
566 identifier='Long'
567 argument (IntegerLiteralExpr)
568 value='64'
569 argument (BooleanLiteralExpr)
570 value='true'
571 argument (MethodCallExpr)
572 name (SimpleName)
573 identifier='asList'
574 scope (NameExpr)
575 name (SimpleName)
576 identifier='Arrays'
577 arguments
578 argument (LongLiteralExpr)
579 value='0x0000000000000000L'
580 argument (LongLiteralExpr)
581 value='0x0000000000000000L'
582 argument (MethodCallExpr)
583 name (SimpleName)
584 identifier='asList'
585 scope (NameExpr)
586 name (SimpleName)
587 identifier='Arrays'
588 arguments
589 argument (IntegerLiteralExpr)
590 value='0'
591 statement (ExpressionStmt)
592 expression (MethodCallExpr)
593 name (SimpleName)
594 identifier='assertLongRangeSplit'
595 arguments
596 argument (FieldAccessExpr)
597 name (SimpleName)
598 identifier='MIN_VALUE'
599 scope (NameExpr)
600 name (SimpleName)
601 identifier='Long'
602 argument (BinaryExpr)
603 operator='PLUS'
604 left (FieldAccessExpr)
605 name (SimpleName)
606 identifier='MIN_VALUE'
607 scope (NameExpr)
608 name (SimpleName)
609 identifier='Long'
610 right (LongLiteralExpr)
611 value='0xfL'
612 argument (IntegerLiteralExpr)
613 value='4'
614 argument (BooleanLiteralExpr)
615 value='true'
616 argument (MethodCallExpr)
617 name (SimpleName)
618 identifier='asList'
619 scope (NameExpr)
620 name (SimpleName)
621 identifier='Arrays'
622 arguments
623 argument (LongLiteralExpr)
624 value='0x000000000000000L'
625 argument (LongLiteralExpr)
626 value='0x000000000000000L'
627 argument (MethodCallExpr)
628 name (SimpleName)
629 identifier='asList'
630 scope (NameExpr)
631 name (SimpleName)
632 identifier='Arrays'
633 arguments
634 argument (IntegerLiteralExpr)
635 value='4'
636 statement (ExpressionStmt)
637 expression (MethodCallExpr)
638 name (SimpleName)
639 identifier='assertLongRangeSplit'
640 arguments
641 argument (FieldAccessExpr)
642 name (SimpleName)
643 identifier='MIN_VALUE'
644 scope (NameExpr)
645 name (SimpleName)
646 identifier='Long'
647 argument (BinaryExpr)
648 operator='PLUS'
649 left (FieldAccessExpr)
650 name (SimpleName)
651 identifier='MIN_VALUE'
652 scope (NameExpr)
653 name (SimpleName)
654 identifier='Long'
655 right (LongLiteralExpr)
656 value='0x10L'
657 argument (IntegerLiteralExpr)
658 value='4'
659 argument (BooleanLiteralExpr)
660 value='true'
661 argument (MethodCallExpr)
662 name (SimpleName)
663 identifier='asList'
664 scope (NameExpr)
665 name (SimpleName)
666 identifier='Arrays'
667 arguments
668 argument (LongLiteralExpr)
669 value='0x0000000000000010L'
670 argument (LongLiteralExpr)
671 value='0x0000000000000010L'
672 argument (LongLiteralExpr)
673 value='0x000000000000000L'
674 argument (LongLiteralExpr)
675 value='0x000000000000000L'
676 argument (MethodCallExpr)
677 name (SimpleName)
678 identifier='asList'
679 scope (NameExpr)
680 name (SimpleName)
681 identifier='Arrays'
682 arguments
683 argument (IntegerLiteralExpr)
684 value='0'
685 argument (IntegerLiteralExpr)
686 value='4'
687 type (VoidType)
688 name (SimpleName)
689 identifier='testLongExtremeValues'
690 thrownExceptions
691 thrownException (ClassOrInterfaceType)
692 name (SimpleName)
693 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
7 14
14 15
15 16
14 17
17 18
18 19
7 20
20 21
7 22
22 23
7 24
24 25
25 26
24 27
27 28
28 29
24 30
30 31
31 32
30 33
33 34
7 35
35 36
36 37
35 38
38 39
39 40
35 41
41 42
42 43
2 44
44 45
45 46
46 47
45 48
48 49
49 50
50 51
49 52
52 53
53 54
48 55
55 56
56 57
55 58
58 59
59 60
48 61
61 62
48 63
63 64
48 65
65 66
66 67
65 68
68 69
69 70
65 71
71 72
72 73
71 74
74 75
48 76
76 77
77 78
76 79
79 80
80 81
76 82
82 83
83 84
2 85
85 86
86 87
87 88
86 89
89 90
90 91
91 92
90 93
93 94
94 95
89 96
96 97
97 98
96 99
99 100
100 101
89 102
102 103
89 104
104 105
89 106
106 107
107 108
106 109
109 110
110 111
106 112
112 113
113 114
112 115
115 116
89 117
117 118
118 119
117 120
120 121
121 122
117 123
123 124
124 125
2 126
126 127
127 128
128 129
127 130
130 131
131 132
132 133
131 134
134 135
135 136
130 137
137 138
138 139
137 140
140 141
141 142
130 143
143 144
130 145
145 146
130 147
147 148
148 149
147 150
150 151
151 152
147 153
153 154
154 155
153 156
156 157
130 158
158 159
159 160
158 161
161 162
162 163
158 164
164 165
165 166
2 167
167 168
168 169
169 170
168 171
171 172
172 173
173 174
172 175
175 176
176 177
171 178
178 179
179 180
178 181
181 182
182 183
171 184
184 185
171 186
186 187
171 188
188 189
189 190
188 191
191 192
192 193
188 194
194 195
195 196
194 197
197 198
171 199
199 200
200 201
199 202
202 203
203 204
199 205
205 206
206 207
2 208
208 209
209 210
210 211
209 212
212 213
213 214
214 215
213 216
216 217
217 218
212 219
219 220
220 221
219 222
222 223
223 224
212 225
225 226
212 227
227 228
212 229
229 230
230 231
229 232
232 233
233 234
229 235
235 236
236 237
235 238
238 239
212 240
240 241
241 242
240 243
243 244
244 245
240 246
246 247
247 248
2 249
249 250
250 251
251 252
250 253
253 254
254 255
254 256
256 257
257 258
256 259
259 260
260 261
254 262
262 263
253 264
264 265
265 266
264 267
267 268
268 269
253 270
270 271
253 272
272 273
253 274
274 275
275 276
274 277
277 278
278 279
274 280
280 281
281 282
280 283
283 284
253 285
285 286
286 287
285 288
288 289
289 290
285 291
291 292
292 293
2 294
294 295
295 296
296 297
295 298
298 299
299 300
299 301
301 302
302 303
301 304
304 305
305 306
299 307
307 308
298 309
309 310
310 311
309 312
312 313
313 314
298 315
315 316
298 317
317 318
298 319
319 320
320 321
319 322
322 323
323 324
319 325
325 326
326 327
325 328
328 329
325 330
330 331
325 332
332 333
298 334
334 335
335 336
334 337
337 338
338 339
334 340
340 341
341 342
340 343
343 344
2 345
345 346
346 347
347 348
346 349
349 350
350 351
351 352
350 353
353 354
354 355
349 356
356 357
357 358
356 359
359 360
360 361
349 362
362 363
349 364
364 365
349 366
366 367
367 368
366 369
369 370
370 371
366 372
372 373
373 374
372 375
375 376
349 377
377 378
378 379
377 380
380 381
381 382
377 383
383 384
384 385
2 386
386 387
387 388
388 389
387 390
390 391
391 392
392 393
391 394
394 395
395 396
390 397
397 398
398 399
397 400
400 401
401 402
390 403
403 404
390 405
405 406
390 407
407 408
408 409
407 410
410 411
411 412
407 413
413 414
414 415
413 416
416 417
390 418
418 419
419 420
418 421
421 422
422 423
418 424
424 425
425 426
2 427
427 428
428 429
429 430
428 431
431 432
432 433
433 434
432 435
435 436
436 437
431 438
438 439
439 440
438 441
441 442
442 443
431 444
444 445
431 446
446 447
431 448
448 449
449 450
448 451
451 452
452 453
448 454
454 455
455 456
454 457
457 458
431 459
459 460
460 461
459 462
462 463
463 464
459 465
465 466
466 467
2 468
468 469
469 470
470 471
469 472
472 473
473 474
474 475
473 476
476 477
477 478
472 479
479 480
480 481
479 482
482 483
483 484
472 485
485 486
472 487
487 488
472 489
489 490
490 491
489 492
492 493
493 494
489 495
495 496
496 497
495 498
498 499
472 500
500 501
501 502
500 503
503 504
504 505
500 506
506 507
507 508
2 509
509 510
510 511
511 512
510 513
513 514
514 515
515 516
514 517
517 518
518 519
513 520
520 521
521 522
520 523
523 524
524 525
513 526
526 527
513 528
528 529
513 530
530 531
531 532
530 533
533 534
534 535
530 536
536 537
537 538
536 539
539 540
513 541
541 542
542 543
541 544
544 545
545 546
541 547
547 548
548 549
2 550
550 551
551 552
552 553
551 554
554 555
555 556
556 557
555 558
558 559
559 560
554 561
561 562
562 563
561 564
564 565
565 566
554 567
567 568
554 569
569 570
554 571
571 572
572 573
571 574
574 575
575 576
571 577
577 578
578 579
577 580
580 581
554 582
582 583
583 584
582 585
585 586
586 587
582 588
588 589
589 590
2 591
591 592
592 593
593 594
592 595
595 596
596 597
597 598
596 599
599 600
600 601
595 602
602 603
602 604
604 605
605 606
604 607
607 608
608 609
602 610
610 611
595 612
612 613
595 614
614 615
595 616
616 617
617 618
616 619
619 620
620 621
616 622
622 623
623 624
622 625
625 626
595 627
627 628
628 629
627 630
630 631
631 632
627 633
633 634
634 635
2 636
636 637
637 638
638 639
637 640
640 641
641 642
642 643
641 644
644 645
645 646
640 647
647 648
647 649
649 650
650 651
649 652
652 653
653 654
647 655
655 656
640 657
657 658
640 659
659 660
640 661
661 662
662 663
661 664
664 665
665 666
661 667
667 668
668 669
667 670
670 671
667 672
672 673
667 674
674 675
640 676
676 677
677 678
676 679
679 680
680 681
676 682
682 683
683 684
682 685
685 686
0 687
0 688
688 689
0 690
690 691
691 692
692 693

LUCENE-2541: LegacyNumericRangeQuery errors with endpoints near long min and max values
