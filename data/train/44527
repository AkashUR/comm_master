40
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='hitOrDraw'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='graphics'
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='info'
14 argument (NullLiteralExpr)
15 type (VoidType)
16 name (SimpleName)
17 identifier='draw'
18 parameters
19 parameter (Parameter)
20 isVarArgs='false'
21 name (SimpleName)
22 identifier='object'
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='Object'
26 parameter (Parameter)
27 isVarArgs='false'
28 name (SimpleName)
29 identifier='graphics'
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='Graphics2D'
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='info'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='DrawInfo2D'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
12 13
7 14
0 15
0 16
16 17
0 18
18 19
19 20
19 21
21 22
19 23
23 24
24 25
18 26
26 27
26 28
28 29
26 30
30 31
31 32
18 33
33 34
33 35
35 36
33 37
37 38
38 39

Draws the field with its origin at [info.draw.x,info.draw.y], relative to the  scaled coordinate system defined by [info.draw.width,info.draw.height].  The only parts that need be drawn are those which fall within the [info.clip] rectangle. Since your draw and hitObjects methods are likely to be nearly identical, you can choose instead to override the hitOrDraw method to handle both of them.  By default this method simply calls hitOrDraw.  FieldPortrayals will receive null for the object; they should just draw their own fields.
