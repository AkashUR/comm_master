228
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getViewByTestId'
10 arguments
11 argument (StringLiteralExpr)
12 value='A'
13 name (SimpleName)
14 identifier='innerButton'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='View'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (MethodCallExpr)
23 name (SimpleName)
24 identifier='getViewByTestId'
25 arguments
26 argument (StringLiteralExpr)
27 value='B'
28 name (SimpleName)
29 identifier='touchableParent'
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='View'
33 statement (ExpressionStmt)
34 expression (VariableDeclarationExpr)
35 variables
36 variable (VariableDeclarator)
37 initializer (MethodCallExpr)
38 name (SimpleName)
39 identifier='createGestureGenerator'
40 name (SimpleName)
41 identifier='gestureGenerator'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='SingleTouchGestureGenerator'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='startGesture'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='gestureGenerator'
52 arguments
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='innerButton'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='waitForBridgeAndUIIdle'
60 statement (ExpressionStmt)
61 expression (MethodCallExpr)
62 name (SimpleName)
63 identifier='endGesture'
64 scope (MethodCallExpr)
65 name (SimpleName)
66 identifier='dragTo'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='gestureGenerator'
70 arguments
71 argument (NameExpr)
72 name (SimpleName)
73 identifier='touchableParent'
74 argument (IntegerLiteralExpr)
75 value='15'
76 statement (ExpressionStmt)
77 expression (MethodCallExpr)
78 name (SimpleName)
79 identifier='waitForBridgeAndUIIdle'
80 statement (ExpressionStmt)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='assertEquals'
84 arguments
85 argument (IntegerLiteralExpr)
86 value='1'
87 argument (MethodCallExpr)
88 name (SimpleName)
89 identifier='size'
90 scope (MethodCallExpr)
91 name (SimpleName)
92 identifier='getCalls'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='mRecordingModule'
96 statement (ExpressionStmt)
97 expression (MethodCallExpr)
98 name (SimpleName)
99 identifier='assertEquals'
100 arguments
101 argument (StringLiteralExpr)
102 value='inner'
103 argument (MethodCallExpr)
104 name (SimpleName)
105 identifier='get'
106 scope (MethodCallExpr)
107 name (SimpleName)
108 identifier='getCalls'
109 scope (NameExpr)
110 name (SimpleName)
111 identifier='mRecordingModule'
112 arguments
113 argument (IntegerLiteralExpr)
114 value='0'
115 statement (ExpressionStmt)
116 expression (MethodCallExpr)
117 name (SimpleName)
118 identifier='reset'
119 scope (NameExpr)
120 name (SimpleName)
121 identifier='mRecordingModule'
122 statement (ExpressionStmt)
123 expression (AssignExpr)
124 operator='ASSIGN'
125 target (NameExpr)
126 name (SimpleName)
127 identifier='touchableParent'
128 value (MethodCallExpr)
129 name (SimpleName)
130 identifier='getViewByTestId'
131 arguments
132 argument (StringLiteralExpr)
133 value='D'
134 statement (ExpressionStmt)
135 expression (AssignExpr)
136 operator='ASSIGN'
137 target (NameExpr)
138 name (SimpleName)
139 identifier='innerButton'
140 value (MethodCallExpr)
141 name (SimpleName)
142 identifier='getViewByTestId'
143 arguments
144 argument (StringLiteralExpr)
145 value='C'
146 statement (ExpressionStmt)
147 expression (AssignExpr)
148 operator='ASSIGN'
149 target (NameExpr)
150 name (SimpleName)
151 identifier='gestureGenerator'
152 value (MethodCallExpr)
153 name (SimpleName)
154 identifier='createGestureGenerator'
155 statement (ExpressionStmt)
156 expression (MethodCallExpr)
157 name (SimpleName)
158 identifier='startGesture'
159 scope (NameExpr)
160 name (SimpleName)
161 identifier='gestureGenerator'
162 arguments
163 argument (NameExpr)
164 name (SimpleName)
165 identifier='innerButton'
166 statement (ExpressionStmt)
167 expression (MethodCallExpr)
168 name (SimpleName)
169 identifier='waitForBridgeAndUIIdle'
170 statement (ExpressionStmt)
171 expression (MethodCallExpr)
172 name (SimpleName)
173 identifier='endGesture'
174 scope (MethodCallExpr)
175 name (SimpleName)
176 identifier='dragTo'
177 scope (NameExpr)
178 name (SimpleName)
179 identifier='gestureGenerator'
180 arguments
181 argument (NameExpr)
182 name (SimpleName)
183 identifier='touchableParent'
184 argument (IntegerLiteralExpr)
185 value='15'
186 statement (ExpressionStmt)
187 expression (MethodCallExpr)
188 name (SimpleName)
189 identifier='waitForBridgeAndUIIdle'
190 statement (ExpressionStmt)
191 expression (MethodCallExpr)
192 name (SimpleName)
193 identifier='assertEquals'
194 arguments
195 argument (IntegerLiteralExpr)
196 value='1'
197 argument (MethodCallExpr)
198 name (SimpleName)
199 identifier='size'
200 scope (MethodCallExpr)
201 name (SimpleName)
202 identifier='getCalls'
203 scope (NameExpr)
204 name (SimpleName)
205 identifier='mRecordingModule'
206 statement (ExpressionStmt)
207 expression (MethodCallExpr)
208 name (SimpleName)
209 identifier='assertEquals'
210 arguments
211 argument (StringLiteralExpr)
212 value='outer'
213 argument (MethodCallExpr)
214 name (SimpleName)
215 identifier='get'
216 scope (MethodCallExpr)
217 name (SimpleName)
218 identifier='getCalls'
219 scope (NameExpr)
220 name (SimpleName)
221 identifier='mRecordingModule'
222 arguments
223 argument (IntegerLiteralExpr)
224 value='0'
225 type (VoidType)
226 name (SimpleName)
227 identifier='testDownOnInnerUpOnTouchableParent'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
21 28
28 29
21 30
30 31
31 32
2 33
33 34
34 35
35 36
36 37
37 38
38 39
36 40
40 41
36 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
46 52
52 53
53 54
54 55
2 56
56 57
57 58
58 59
2 60
60 61
61 62
62 63
61 64
64 65
65 66
64 67
67 68
68 69
64 70
70 71
71 72
72 73
70 74
74 75
2 76
76 77
77 78
78 79
2 80
80 81
81 82
82 83
81 84
84 85
85 86
84 87
87 88
88 89
87 90
90 91
91 92
90 93
93 94
94 95
2 96
96 97
97 98
98 99
97 100
100 101
101 102
100 103
103 104
104 105
103 106
106 107
107 108
106 109
109 110
110 111
103 112
112 113
113 114
2 115
115 116
116 117
117 118
116 119
119 120
120 121
2 122
122 123
123 124
123 125
125 126
126 127
123 128
128 129
129 130
128 131
131 132
132 133
2 134
134 135
135 136
135 137
137 138
138 139
135 140
140 141
141 142
140 143
143 144
144 145
2 146
146 147
147 148
147 149
149 150
150 151
147 152
152 153
153 154
2 155
155 156
156 157
157 158
156 159
159 160
160 161
156 162
162 163
163 164
164 165
2 166
166 167
167 168
168 169
2 170
170 171
171 172
172 173
171 174
174 175
175 176
174 177
177 178
178 179
174 180
180 181
181 182
182 183
180 184
184 185
2 186
186 187
187 188
188 189
2 190
190 191
191 192
192 193
191 194
194 195
195 196
194 197
197 198
198 199
197 200
200 201
201 202
200 203
203 204
204 205
2 206
206 207
207 208
208 209
207 210
210 211
211 212
210 213
213 214
214 215
213 216
216 217
217 218
216 219
219 220
220 221
213 222
222 223
223 224
0 225
0 226
226 227

1) Start touch at view A, then drag and release on view {B} (but outside of A), expect {B}'s touch handler to fire 2) Do the same with view C and {D}
