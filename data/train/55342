162
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ObjectMapper'
11 name (SimpleName)
12 identifier='m'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='ObjectMapper'
16 statement (ExpressionStmt)
17 expression (VariableDeclarationExpr)
18 variables
19 variable (VariableDeclarator)
20 initializer (MethodCallExpr)
21 name (SimpleName)
22 identifier='writeAndMap'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='m'
27 argument (ObjectCreationExpr)
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='BaseClassIgnore'
31 name (SimpleName)
32 identifier='result'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='Map'
36 typeArguments
37 typeArgument (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='String'
40 typeArgument (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='Object'
43 statement (ExpressionStmt)
44 expression (MethodCallExpr)
45 name (SimpleName)
46 identifier='assertEquals'
47 arguments
48 argument (IntegerLiteralExpr)
49 value='1'
50 argument (MethodCallExpr)
51 name (SimpleName)
52 identifier='size'
53 scope (NameExpr)
54 name (SimpleName)
55 identifier='result'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='assertEquals'
60 arguments
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='valueOf'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='Integer'
67 arguments
68 argument (IntegerLiteralExpr)
69 value='2'
70 argument (MethodCallExpr)
71 name (SimpleName)
72 identifier='get'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='result'
76 arguments
77 argument (StringLiteralExpr)
78 value='y'
79 statement (ExpressionStmt)
80 expression (AssignExpr)
81 operator='ASSIGN'
82 target (NameExpr)
83 name (SimpleName)
84 identifier='result'
85 value (MethodCallExpr)
86 name (SimpleName)
87 identifier='writeAndMap'
88 arguments
89 argument (NameExpr)
90 name (SimpleName)
91 identifier='m'
92 argument (ObjectCreationExpr)
93 type (ClassOrInterfaceType)
94 name (SimpleName)
95 identifier='SubClassNonIgnore'
96 statement (ExpressionStmt)
97 expression (MethodCallExpr)
98 name (SimpleName)
99 identifier='assertEquals'
100 arguments
101 argument (IntegerLiteralExpr)
102 value='2'
103 argument (MethodCallExpr)
104 name (SimpleName)
105 identifier='size'
106 scope (NameExpr)
107 name (SimpleName)
108 identifier='result'
109 statement (ExpressionStmt)
110 expression (MethodCallExpr)
111 name (SimpleName)
112 identifier='assertEquals'
113 arguments
114 argument (MethodCallExpr)
115 name (SimpleName)
116 identifier='valueOf'
117 scope (NameExpr)
118 name (SimpleName)
119 identifier='Integer'
120 arguments
121 argument (IntegerLiteralExpr)
122 value='3'
123 argument (MethodCallExpr)
124 name (SimpleName)
125 identifier='get'
126 scope (NameExpr)
127 name (SimpleName)
128 identifier='result'
129 arguments
130 argument (StringLiteralExpr)
131 value='x'
132 statement (ExpressionStmt)
133 expression (MethodCallExpr)
134 name (SimpleName)
135 identifier='assertEquals'
136 arguments
137 argument (MethodCallExpr)
138 name (SimpleName)
139 identifier='valueOf'
140 scope (NameExpr)
141 name (SimpleName)
142 identifier='Integer'
143 arguments
144 argument (IntegerLiteralExpr)
145 value='2'
146 argument (MethodCallExpr)
147 name (SimpleName)
148 identifier='get'
149 scope (NameExpr)
150 name (SimpleName)
151 identifier='result'
152 arguments
153 argument (StringLiteralExpr)
154 value='y'
155 type (VoidType)
156 name (SimpleName)
157 identifier='testIgnoreOver'
158 thrownExceptions
159 thrownException (ClassOrInterfaceType)
160 name (SimpleName)
161 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
19 20
20 21
21 22
20 23
23 24
24 25
25 26
23 27
27 28
28 29
29 30
19 31
31 32
19 33
33 34
34 35
33 36
36 37
37 38
38 39
36 40
40 41
41 42
2 43
43 44
44 45
45 46
44 47
47 48
48 49
47 50
50 51
51 52
50 53
53 54
54 55
2 56
56 57
57 58
58 59
57 60
60 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
60 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
2 79
79 80
80 81
80 82
82 83
83 84
80 85
85 86
86 87
85 88
88 89
89 90
90 91
88 92
92 93
93 94
94 95
2 96
96 97
97 98
98 99
97 100
100 101
101 102
100 103
103 104
104 105
103 106
106 107
107 108
2 109
109 110
110 111
111 112
110 113
113 114
114 115
115 116
114 117
117 118
118 119
114 120
120 121
121 122
113 123
123 124
124 125
123 126
126 127
127 128
123 129
129 130
130 131
2 132
132 133
133 134
134 135
133 136
136 137
137 138
138 139
137 140
140 141
141 142
137 143
143 144
144 145
136 146
146 147
147 148
146 149
149 150
150 151
146 152
152 153
153 154
0 155
0 156
156 157
0 158
158 159
159 160
160 161

Test case to verify that ignore tag can also be disabled via inheritance
