92
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (StringLiteralExpr)
8 value='-732546982374982347892379283571094797.287346782359284756'
9 name (SimpleName)
10 identifier='a'
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='String'
14 statement (ExpressionStmt)
15 expression (VariableDeclarationExpr)
16 variables
17 variable (VariableDeclarator)
18 initializer (IntegerLiteralExpr)
19 value='18'
20 name (SimpleName)
21 identifier='aScale'
22 type (PrimitiveType)
23 type='INT'
24 statement (ExpressionStmt)
25 expression (VariableDeclarationExpr)
26 variables
27 variable (VariableDeclarator)
28 initializer (ObjectCreationExpr)
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='BigInteger'
32 arguments
33 argument (StringLiteralExpr)
34 value='-732546982374982347892379283571094797287346782359284756'
35 name (SimpleName)
36 identifier='bA'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='BigInteger'
40 statement (ExpressionStmt)
41 expression (VariableDeclarationExpr)
42 variables
43 variable (VariableDeclarator)
44 initializer (ObjectCreationExpr)
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='BigDecimal'
48 arguments
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='a'
52 name (SimpleName)
53 identifier='aNumber'
54 type (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='BigDecimal'
57 statement (ExpressionStmt)
58 expression (MethodCallExpr)
59 name (SimpleName)
60 identifier='assertEquals'
61 arguments
62 argument (StringLiteralExpr)
63 value='incorrect value'
64 argument (NameExpr)
65 name (SimpleName)
66 identifier='bA'
67 argument (MethodCallExpr)
68 name (SimpleName)
69 identifier='unscaledValue'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='aNumber'
73 statement (ExpressionStmt)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='assertEquals'
77 arguments
78 argument (StringLiteralExpr)
79 value='incorrect scale'
80 argument (NameExpr)
81 name (SimpleName)
82 identifier='aScale'
83 argument (MethodCallExpr)
84 name (SimpleName)
85 identifier='scale'
86 scope (NameExpr)
87 name (SimpleName)
88 identifier='aNumber'
89 type (VoidType)
90 name (SimpleName)
91 identifier='testConstrStringWithoutExpNeg'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
6 11
11 12
12 13
2 14
14 15
15 16
16 17
17 18
18 19
17 20
20 21
17 22
22 23
2 24
24 25
25 26
26 27
27 28
28 29
29 30
30 31
28 32
32 33
33 34
27 35
35 36
27 37
37 38
38 39
2 40
40 41
41 42
42 43
43 44
44 45
45 46
46 47
44 48
48 49
49 50
50 51
43 52
52 53
43 54
54 55
55 56
2 57
57 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
67 70
70 71
71 72
2 73
73 74
74 75
75 76
74 77
77 78
78 79
77 80
80 81
81 82
77 83
83 84
84 85
83 86
86 87
87 88
0 89
0 90
90 91

new BigDecimal(String value); value does not contain exponent
