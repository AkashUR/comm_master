127
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='sin'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Math'
13 arguments
14 argument (BinaryExpr)
15 operator='DIVIDE'
16 left (NameExpr)
17 name (SimpleName)
18 identifier='angle'
19 right (IntegerLiteralExpr)
20 value='2'
21 name (SimpleName)
22 identifier='s'
23 type (PrimitiveType)
24 type='DOUBLE'
25 statement (ExpressionStmt)
26 expression (AssignExpr)
27 operator='ASSIGN'
28 target (NameExpr)
29 name (SimpleName)
30 identifier='x'
31 value (CastExpr)
32 expression (EnclosedExpr)
33 inner (BinaryExpr)
34 operator='MULTIPLY'
35 left (FieldAccessExpr)
36 name (SimpleName)
37 identifier='x'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='axis'
41 right (NameExpr)
42 name (SimpleName)
43 identifier='s'
44 type (PrimitiveType)
45 type='FLOAT'
46 statement (ExpressionStmt)
47 expression (AssignExpr)
48 operator='ASSIGN'
49 target (NameExpr)
50 name (SimpleName)
51 identifier='y'
52 value (CastExpr)
53 expression (EnclosedExpr)
54 inner (BinaryExpr)
55 operator='MULTIPLY'
56 left (FieldAccessExpr)
57 name (SimpleName)
58 identifier='y'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='axis'
62 right (NameExpr)
63 name (SimpleName)
64 identifier='s'
65 type (PrimitiveType)
66 type='FLOAT'
67 statement (ExpressionStmt)
68 expression (AssignExpr)
69 operator='ASSIGN'
70 target (NameExpr)
71 name (SimpleName)
72 identifier='z'
73 value (CastExpr)
74 expression (EnclosedExpr)
75 inner (BinaryExpr)
76 operator='MULTIPLY'
77 left (FieldAccessExpr)
78 name (SimpleName)
79 identifier='z'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='axis'
83 right (NameExpr)
84 name (SimpleName)
85 identifier='s'
86 type (PrimitiveType)
87 type='FLOAT'
88 statement (ExpressionStmt)
89 expression (AssignExpr)
90 operator='ASSIGN'
91 target (NameExpr)
92 name (SimpleName)
93 identifier='w'
94 value (CastExpr)
95 expression (MethodCallExpr)
96 name (SimpleName)
97 identifier='cos'
98 scope (NameExpr)
99 name (SimpleName)
100 identifier='Math'
101 arguments
102 argument (BinaryExpr)
103 operator='DIVIDE'
104 left (NameExpr)
105 name (SimpleName)
106 identifier='angle'
107 right (IntegerLiteralExpr)
108 value='2'
109 type (PrimitiveType)
110 type='FLOAT'
111 name (SimpleName)
112 identifier='Quaternion'
113 parameters
114 parameter (Parameter)
115 isVarArgs='false'
116 name (SimpleName)
117 identifier='axis'
118 type (ClassOrInterfaceType)
119 name (SimpleName)
120 identifier='Vector3f'
121 parameter (Parameter)
122 isVarArgs='false'
123 name (SimpleName)
124 identifier='angle'
125 type (PrimitiveType)
126 type='FLOAT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
14 16
16 17
17 18
14 19
19 20
6 21
21 22
6 23
23 24
2 25
25 26
26 27
26 28
28 29
29 30
26 31
31 32
32 33
33 34
33 35
35 36
36 37
35 38
38 39
39 40
33 41
41 42
42 43
31 44
44 45
2 46
46 47
47 48
47 49
49 50
50 51
47 52
52 53
53 54
54 55
54 56
56 57
57 58
56 59
59 60
60 61
54 62
62 63
63 64
52 65
65 66
2 67
67 68
68 69
68 70
70 71
71 72
68 73
73 74
74 75
75 76
75 77
77 78
78 79
77 80
80 81
81 82
75 83
83 84
84 85
73 86
86 87
2 88
88 89
89 90
89 91
91 92
92 93
89 94
94 95
95 96
96 97
95 98
98 99
99 100
95 101
101 102
102 103
102 104
104 105
105 106
102 107
107 108
94 109
109 110
0 111
111 112
0 113
113 114
114 115
114 116
116 117
114 118
118 119
119 120
113 121
121 122
121 123
123 124
121 125
125 126

Assumes axis is already normalised. Angle must be in radians.
