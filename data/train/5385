104
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='collection'
9 scope (ThisExpr)
10 value (NullLiteralExpr)
11 statement (ExpressionStmt)
12 expression (AssignExpr)
13 operator='ASSIGN'
14 target (FieldAccessExpr)
15 name (SimpleName)
16 identifier='it'
17 scope (ThisExpr)
18 value (NameExpr)
19 name (SimpleName)
20 identifier='iterator'
21 statement (ExpressionStmt)
22 expression (AssignExpr)
23 operator='ASSIGN'
24 target (FieldAccessExpr)
25 name (SimpleName)
26 identifier='est'
27 scope (ThisExpr)
28 value (NameExpr)
29 name (SimpleName)
30 identifier='size'
31 statement (ExpressionStmt)
32 expression (AssignExpr)
33 operator='ASSIGN'
34 target (FieldAccessExpr)
35 name (SimpleName)
36 identifier='characteristics'
37 scope (ThisExpr)
38 value (ConditionalExpr)
39 condition (BinaryExpr)
40 operator='EQUALS'
41 left (EnclosedExpr)
42 inner (BinaryExpr)
43 operator='BINARY_AND'
44 left (NameExpr)
45 name (SimpleName)
46 identifier='characteristics'
47 right (FieldAccessExpr)
48 name (SimpleName)
49 identifier='CONCURRENT'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='Spliterator'
53 right (IntegerLiteralExpr)
54 value='0'
55 elseExpr (NameExpr)
56 name (SimpleName)
57 identifier='characteristics'
58 thenExpr (BinaryExpr)
59 operator='BINARY_OR'
60 left (BinaryExpr)
61 operator='BINARY_OR'
62 left (NameExpr)
63 name (SimpleName)
64 identifier='characteristics'
65 right (FieldAccessExpr)
66 name (SimpleName)
67 identifier='SIZED'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='Spliterator'
71 right (FieldAccessExpr)
72 name (SimpleName)
73 identifier='SUBSIZED'
74 scope (NameExpr)
75 name (SimpleName)
76 identifier='Spliterator'
77 name (SimpleName)
78 identifier='IteratorSpliterator'
79 parameters
80 parameter (Parameter)
81 isVarArgs='false'
82 name (SimpleName)
83 identifier='iterator'
84 type (ClassOrInterfaceType)
85 name (SimpleName)
86 identifier='Iterator'
87 typeArguments
88 typeArgument (WildcardType)
89 extendedType (ClassOrInterfaceType)
90 name (SimpleName)
91 identifier='T'
92 parameter (Parameter)
93 isVarArgs='false'
94 name (SimpleName)
95 identifier='size'
96 type (PrimitiveType)
97 type='LONG'
98 parameter (Parameter)
99 isVarArgs='false'
100 name (SimpleName)
101 identifier='characteristics'
102 type (PrimitiveType)
103 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
2 11
11 12
12 13
12 14
14 15
15 16
14 17
12 18
18 19
19 20
2 21
21 22
22 23
22 24
24 25
25 26
24 27
22 28
28 29
29 30
2 31
31 32
32 33
32 34
34 35
35 36
34 37
32 38
38 39
39 40
39 41
41 42
42 43
42 44
44 45
45 46
42 47
47 48
48 49
47 50
50 51
51 52
39 53
53 54
38 55
55 56
56 57
38 58
58 59
58 60
60 61
60 62
62 63
63 64
60 65
65 66
66 67
65 68
68 69
69 70
58 71
71 72
72 73
71 74
74 75
75 76
0 77
77 78
0 79
79 80
80 81
80 82
82 83
80 84
84 85
85 86
84 87
87 88
88 89
89 90
90 91
79 92
92 93
92 94
94 95
92 96
96 97
79 98
98 99
98 100
100 101
98 102
102 103

Creates a spliterator using the given iterator for traversal, and reporting the given initial size and characteristics.
