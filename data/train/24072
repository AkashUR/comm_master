43
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='registerOutParam'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='procedureCall'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='parameterIndex'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='sqlType'
17 type (VoidType)
18 name (SimpleName)
19 identifier='registerOutParameter'
20 parameters
21 parameter (Parameter)
22 isVarArgs='false'
23 name (SimpleName)
24 identifier='parameterIndex'
25 type (PrimitiveType)
26 type='INT'
27 parameter (Parameter)
28 isVarArgs='false'
29 name (SimpleName)
30 identifier='sqlType'
31 type (PrimitiveType)
32 type='INT'
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='scale'
37 type (PrimitiveType)
38 type='INT'
39 thrownExceptions
40 thrownException (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='SQLException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
0 17
0 18
18 19
0 20
20 21
21 22
21 23
23 24
21 25
25 26
20 27
27 28
27 29
29 30
27 31
31 32
20 33
33 34
33 35
35 36
33 37
37 38
0 39
39 40
40 41
41 42

Registers the parameter in ordinal position <code>parameterIndex</code> to be of JDBC type <code>sqlType</code>.  This method must be called before a stored procedure is executed. <p> The JDBC type specified by <code>sqlType</code> for an OUT parameter determines the Java type that must be used in the <code>get</code> method to read the value of that parameter. <p> This version of <code>registerOutParameter</code> should be used when the parameter is of JDBC type <code>NUMERIC</code> or <code>DECIMAL</code>.
