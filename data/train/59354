120
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='registerInput'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='varName'
11 argument (MethodCallExpr)
12 name (SimpleName)
13 identifier='toJavaRDD'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='rdd'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='format'
20 argument (NameExpr)
21 name (SimpleName)
22 identifier='hasHeader'
23 argument (NameExpr)
24 name (SimpleName)
25 identifier='delim'
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='fill'
29 argument (NameExpr)
30 name (SimpleName)
31 identifier='fillValue'
32 argument (UnaryExpr)
33 operator='MINUS'
34 expression (IntegerLiteralExpr)
35 value='1'
36 argument (UnaryExpr)
37 operator='MINUS'
38 expression (IntegerLiteralExpr)
39 value='1'
40 argument (UnaryExpr)
41 operator='MINUS'
42 expression (IntegerLiteralExpr)
43 value='1'
44 type (VoidType)
45 name (SimpleName)
46 identifier='registerInput'
47 parameters
48 parameter (Parameter)
49 isVarArgs='false'
50 name (SimpleName)
51 identifier='varName'
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='String'
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='rdd'
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='RDD'
62 typeArguments
63 typeArgument (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='String'
66 parameter (Parameter)
67 isVarArgs='false'
68 name (SimpleName)
69 identifier='format'
70 type (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='String'
73 parameter (Parameter)
74 isVarArgs='false'
75 name (SimpleName)
76 identifier='hasHeader'
77 type (PrimitiveType)
78 type='BOOLEAN'
79 parameter (Parameter)
80 isVarArgs='false'
81 name (SimpleName)
82 identifier='delim'
83 type (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='String'
86 parameter (Parameter)
87 isVarArgs='false'
88 name (SimpleName)
89 identifier='fill'
90 type (PrimitiveType)
91 type='BOOLEAN'
92 parameter (Parameter)
93 isVarArgs='false'
94 name (SimpleName)
95 identifier='fillValue'
96 type (PrimitiveType)
97 type='DOUBLE'
98 parameter (Parameter)
99 isVarArgs='false'
100 name (SimpleName)
101 identifier='rlen'
102 type (PrimitiveType)
103 type='LONG'
104 parameter (Parameter)
105 isVarArgs='false'
106 name (SimpleName)
107 identifier='clen'
108 type (PrimitiveType)
109 type='LONG'
110 parameter (Parameter)
111 isVarArgs='false'
112 name (SimpleName)
113 identifier='nnz'
114 type (PrimitiveType)
115 type='LONG'
116 thrownExceptions
117 thrownException (ClassOrInterfaceType)
118 name (SimpleName)
119 identifier='DMLRuntimeException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
15 16
7 17
17 18
18 19
7 20
20 21
21 22
7 23
23 24
24 25
7 26
26 27
27 28
7 29
29 30
30 31
7 32
32 33
32 34
34 35
7 36
36 37
36 38
38 39
7 40
40 41
40 42
42 43
0 44
0 45
45 46
0 47
47 48
48 49
48 50
50 51
48 52
52 53
53 54
47 55
55 56
55 57
57 58
55 59
59 60
60 61
59 62
62 63
63 64
64 65
47 66
66 67
66 68
68 69
66 70
70 71
71 72
47 73
73 74
73 75
75 76
73 77
77 78
47 79
79 80
79 81
81 82
79 83
83 84
84 85
47 86
86 87
86 88
88 89
86 90
90 91
47 92
92 93
92 94
94 95
92 96
96 97
47 98
98 99
98 100
100 101
98 102
102 103
47 104
104 105
104 106
106 107
104 108
108 109
47 110
110 111
110 112
112 113
110 114
114 115
0 116
116 117
117 118
118 119

Register CSV/Text as inputs: Method for supplying csv file format properties along with dimensions or nnz <p> Marks the variable in the DML script as input variable. Note that this expects a "varName = read(...)" statement in the DML script which through non-MLContext invocation would have been created by reading a HDFS file.
