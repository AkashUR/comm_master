215
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='put'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='store'
10 arguments
11 argument (StringLiteralExpr)
12 value='A'
13 argument (MethodCallExpr)
14 name (SimpleName)
15 identifier='asList'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='Arrays'
19 arguments
20 argument (ArrayCreationExpr)
21 elementType (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='String'
24 initializer (ArrayInitializerExpr)
25 values
26 value (StringLiteralExpr)
27 value='E'
28 value (StringLiteralExpr)
29 value='D'
30 value (StringLiteralExpr)
31 value='E'
32 levels
33 level (ArrayCreationLevel)
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='put'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='store'
41 arguments
42 argument (StringLiteralExpr)
43 value='B'
44 argument (MethodCallExpr)
45 name (SimpleName)
46 identifier='asList'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='Arrays'
50 arguments
51 argument (ArrayCreationExpr)
52 elementType (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='String'
55 initializer (ArrayInitializerExpr)
56 values
57 value (StringLiteralExpr)
58 value='C'
59 value (StringLiteralExpr)
60 value='E'
61 value (StringLiteralExpr)
62 value='D'
63 value (StringLiteralExpr)
64 value='E'
65 levels
66 level (ArrayCreationLevel)
67 statement (ExpressionStmt)
68 expression (MethodCallExpr)
69 name (SimpleName)
70 identifier='parseFailed'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='store'
74 arguments
75 argument (StringLiteralExpr)
76 value='A'
77 statement (ExpressionStmt)
78 expression (VariableDeclarationExpr)
79 variables
80 variable (VariableDeclarator)
81 initializer (MethodCallExpr)
82 name (SimpleName)
83 identifier='getListOfModulesToReparse'
84 scope (NameExpr)
85 name (SimpleName)
86 identifier='store'
87 arguments
88 argument (StringLiteralExpr)
89 value='C'
90 name (SimpleName)
91 identifier='cModules'
92 type (ClassOrInterfaceType)
93 name (SimpleName)
94 identifier='List'
95 statement (ExpressionStmt)
96 expression (VariableDeclarationExpr)
97 variables
98 variable (VariableDeclarator)
99 initializer (MethodCallExpr)
100 name (SimpleName)
101 identifier='getListOfModulesToReparse'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='store'
105 arguments
106 argument (StringLiteralExpr)
107 value='D'
108 name (SimpleName)
109 identifier='dModules'
110 type (ClassOrInterfaceType)
111 name (SimpleName)
112 identifier='List'
113 statement (ExpressionStmt)
114 expression (VariableDeclarationExpr)
115 variables
116 variable (VariableDeclarator)
117 initializer (MethodCallExpr)
118 name (SimpleName)
119 identifier='getListOfModulesToReparse'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='store'
123 arguments
124 argument (StringLiteralExpr)
125 value='E'
126 name (SimpleName)
127 identifier='eModules'
128 type (ClassOrInterfaceType)
129 name (SimpleName)
130 identifier='List'
131 statement (ExpressionStmt)
132 expression (MethodCallExpr)
133 name (SimpleName)
134 identifier='assertEquals'
135 arguments
136 argument (IntegerLiteralExpr)
137 value='1'
138 argument (MethodCallExpr)
139 name (SimpleName)
140 identifier='size'
141 scope (NameExpr)
142 name (SimpleName)
143 identifier='cModules'
144 statement (ExpressionStmt)
145 expression (MethodCallExpr)
146 name (SimpleName)
147 identifier='assertTrue'
148 arguments
149 argument (MethodCallExpr)
150 name (SimpleName)
151 identifier='contains'
152 scope (NameExpr)
153 name (SimpleName)
154 identifier='cModules'
155 arguments
156 argument (StringLiteralExpr)
157 value='B'
158 statement (ExpressionStmt)
159 expression (MethodCallExpr)
160 name (SimpleName)
161 identifier='assertEquals'
162 arguments
163 argument (IntegerLiteralExpr)
164 value='1'
165 argument (MethodCallExpr)
166 name (SimpleName)
167 identifier='size'
168 scope (NameExpr)
169 name (SimpleName)
170 identifier='dModules'
171 statement (ExpressionStmt)
172 expression (MethodCallExpr)
173 name (SimpleName)
174 identifier='assertTrue'
175 arguments
176 argument (MethodCallExpr)
177 name (SimpleName)
178 identifier='contains'
179 scope (NameExpr)
180 name (SimpleName)
181 identifier='dModules'
182 arguments
183 argument (StringLiteralExpr)
184 value='B'
185 statement (ExpressionStmt)
186 expression (MethodCallExpr)
187 name (SimpleName)
188 identifier='assertEquals'
189 arguments
190 argument (IntegerLiteralExpr)
191 value='1'
192 argument (MethodCallExpr)
193 name (SimpleName)
194 identifier='size'
195 scope (NameExpr)
196 name (SimpleName)
197 identifier='eModules'
198 statement (ExpressionStmt)
199 expression (MethodCallExpr)
200 name (SimpleName)
201 identifier='assertTrue'
202 arguments
203 argument (MethodCallExpr)
204 name (SimpleName)
205 identifier='contains'
206 scope (NameExpr)
207 name (SimpleName)
208 identifier='eModules'
209 arguments
210 argument (StringLiteralExpr)
211 value='B'
212 type (VoidType)
213 name (SimpleName)
214 identifier='testStore2withFail'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
14 15
13 16
16 17
17 18
13 19
19 20
20 21
21 22
22 23
20 24
24 25
25 26
26 27
25 28
28 29
25 30
30 31
20 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
35 41
41 42
42 43
41 44
44 45
45 46
44 47
47 48
48 49
44 50
50 51
51 52
52 53
53 54
51 55
55 56
56 57
57 58
56 59
59 60
56 61
61 62
56 63
63 64
51 65
65 66
2 67
67 68
68 69
69 70
68 71
71 72
72 73
68 74
74 75
75 76
2 77
77 78
78 79
79 80
80 81
81 82
82 83
81 84
84 85
85 86
81 87
87 88
88 89
80 90
90 91
80 92
92 93
93 94
2 95
95 96
96 97
97 98
98 99
99 100
100 101
99 102
102 103
103 104
99 105
105 106
106 107
98 108
108 109
98 110
110 111
111 112
2 113
113 114
114 115
115 116
116 117
117 118
118 119
117 120
120 121
121 122
117 123
123 124
124 125
116 126
126 127
116 128
128 129
129 130
2 131
131 132
132 133
133 134
132 135
135 136
136 137
135 138
138 139
139 140
138 141
141 142
142 143
2 144
144 145
145 146
146 147
145 148
148 149
149 150
150 151
149 152
152 153
153 154
149 155
155 156
156 157
2 158
158 159
159 160
160 161
159 162
162 163
163 164
162 165
165 166
166 167
165 168
168 169
169 170
2 171
171 172
172 173
173 174
172 175
175 176
176 177
177 178
176 179
179 180
180 181
176 182
182 183
183 184
2 185
185 186
186 187
187 188
186 189
189 190
190 191
189 192
192 193
193 194
192 195
195 196
196 197
2 198
198 199
199 200
200 201
199 202
202 203
203 204
204 205
203 206
206 207
207 208
203 209
209 210
210 211
0 212
0 213
213 214

A -> E, D  D -> E B -> C, D C -> E then a parse fail of A only the following should remain B -> C, D D -> E C -> E
