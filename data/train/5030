171
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertEquals'
7 arguments
8 argument (BinaryExpr)
9 operator='PLUS'
10 left (StringLiteralExpr)
11 value='NAME: '
12 right (MethodCallExpr)
13 name (SimpleName)
14 identifier='toString'
15 scope (NameExpr)
16 name (SimpleName)
17 identifier='actual'
18 argument (NameExpr)
19 name (SimpleName)
20 identifier='name'
21 argument (MethodCallExpr)
22 name (SimpleName)
23 identifier='getName'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='actual'
27 statement (ExpressionStmt)
28 expression (MethodCallExpr)
29 name (SimpleName)
30 identifier='assertEquals'
31 arguments
32 argument (BinaryExpr)
33 operator='PLUS'
34 left (StringLiteralExpr)
35 value='START: '
36 right (MethodCallExpr)
37 name (SimpleName)
38 identifier='toString'
39 scope (NameExpr)
40 name (SimpleName)
41 identifier='actual'
42 argument (NameExpr)
43 name (SimpleName)
44 identifier='start'
45 argument (MethodCallExpr)
46 name (SimpleName)
47 identifier='getStart'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='actual'
51 statement (ExpressionStmt)
52 expression (MethodCallExpr)
53 name (SimpleName)
54 identifier='assertEquals'
55 arguments
56 argument (BinaryExpr)
57 operator='PLUS'
58 left (StringLiteralExpr)
59 value='GAP: '
60 right (MethodCallExpr)
61 name (SimpleName)
62 identifier='toString'
63 scope (NameExpr)
64 name (SimpleName)
65 identifier='actual'
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='gap'
69 argument (MethodCallExpr)
70 name (SimpleName)
71 identifier='getGap'
72 scope (NameExpr)
73 name (SimpleName)
74 identifier='actual'
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='assertEquals'
79 arguments
80 argument (BinaryExpr)
81 operator='PLUS'
82 left (StringLiteralExpr)
83 value='END: '
84 right (MethodCallExpr)
85 name (SimpleName)
86 identifier='toString'
87 scope (NameExpr)
88 name (SimpleName)
89 identifier='actual'
90 argument (NameExpr)
91 name (SimpleName)
92 identifier='end'
93 argument (MethodCallExpr)
94 name (SimpleName)
95 identifier='getEnd'
96 scope (NameExpr)
97 name (SimpleName)
98 identifier='actual'
99 statement (ExpressionStmt)
100 expression (MethodCallExpr)
101 name (SimpleName)
102 identifier='assertEquals'
103 arguments
104 argument (BinaryExpr)
105 operator='PLUS'
106 left (StringLiteralExpr)
107 value='#COUNT: '
108 right (MethodCallExpr)
109 name (SimpleName)
110 identifier='toString'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='actual'
114 argument (NameExpr)
115 name (SimpleName)
116 identifier='numCount'
117 argument (MethodCallExpr)
118 name (SimpleName)
119 identifier='size'
120 scope (MethodCallExpr)
121 name (SimpleName)
122 identifier='getCounts'
123 scope (NameExpr)
124 name (SimpleName)
125 identifier='actual'
126 type (VoidType)
127 name (SimpleName)
128 identifier='assertRange'
129 parameters
130 parameter (Parameter)
131 isVarArgs='false'
132 name (SimpleName)
133 identifier='name'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='String'
137 parameter (Parameter)
138 isVarArgs='false'
139 name (SimpleName)
140 identifier='start'
141 type (ClassOrInterfaceType)
142 name (SimpleName)
143 identifier='Object'
144 parameter (Parameter)
145 isVarArgs='false'
146 name (SimpleName)
147 identifier='gap'
148 type (ClassOrInterfaceType)
149 name (SimpleName)
150 identifier='Object'
151 parameter (Parameter)
152 isVarArgs='false'
153 name (SimpleName)
154 identifier='end'
155 type (ClassOrInterfaceType)
156 name (SimpleName)
157 identifier='Object'
158 parameter (Parameter)
159 isVarArgs='false'
160 name (SimpleName)
161 identifier='numCount'
162 type (PrimitiveType)
163 type='INT'
164 parameter (Parameter)
165 isVarArgs='false'
166 name (SimpleName)
167 identifier='actual'
168 type (ClassOrInterfaceType)
169 name (SimpleName)
170 identifier='RangeFacet'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
8 10
10 11
8 12
12 13
13 14
12 15
15 16
16 17
7 18
18 19
19 20
7 21
21 22
22 23
21 24
24 25
25 26
2 27
27 28
28 29
29 30
28 31
31 32
32 33
32 34
34 35
32 36
36 37
37 38
36 39
39 40
40 41
31 42
42 43
43 44
31 45
45 46
46 47
45 48
48 49
49 50
2 51
51 52
52 53
53 54
52 55
55 56
56 57
56 58
58 59
56 60
60 61
61 62
60 63
63 64
64 65
55 66
66 67
67 68
55 69
69 70
70 71
69 72
72 73
73 74
2 75
75 76
76 77
77 78
76 79
79 80
80 81
80 82
82 83
80 84
84 85
85 86
84 87
87 88
88 89
79 90
90 91
91 92
79 93
93 94
94 95
93 96
96 97
97 98
2 99
99 100
100 101
101 102
100 103
103 104
104 105
104 106
106 107
104 108
108 109
109 110
108 111
111 112
112 113
103 114
114 115
115 116
103 117
117 118
118 119
117 120
120 121
121 122
120 123
123 124
124 125
0 126
0 127
127 128
0 129
129 130
130 131
130 132
132 133
130 134
134 135
135 136
129 137
137 138
137 139
139 140
137 141
141 142
142 143
129 144
144 145
144 146
146 147
144 148
148 149
149 150
129 151
151 152
151 153
153 154
151 155
155 156
156 157
129 158
158 159
158 160
160 161
158 162
162 163
129 164
164 165
164 166
166 167
164 168
168 169
169 170

asserts that the actual RangeFacet matches the expected criteria
