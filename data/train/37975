277
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getJaxbMapper'
10 name (SimpleName)
11 identifier='mapper'
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='ObjectMapper'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (ObjectCreationExpr)
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='ListBean'
23 name (SimpleName)
24 identifier='input'
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='ListBean'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (FieldAccessExpr)
32 name (SimpleName)
33 identifier='otherAnimals'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='input'
37 value (MethodCallExpr)
38 name (SimpleName)
39 identifier='asList'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='Arrays'
43 arguments
44 argument (ObjectCreationExpr)
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='Cow'
48 arguments
49 argument (StringLiteralExpr)
50 value='bluey'
51 argument (IntegerLiteralExpr)
52 value='150'
53 argument (ObjectCreationExpr)
54 type (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='Emu'
57 arguments
58 argument (StringLiteralExpr)
59 value='Bob'
60 argument (StringLiteralExpr)
61 value='black'
62 statement (ExpressionStmt)
63 expression (VariableDeclarationExpr)
64 variables
65 variable (VariableDeclarator)
66 initializer (MethodCallExpr)
67 name (SimpleName)
68 identifier='writeValueAsString'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='mapper'
72 arguments
73 argument (NameExpr)
74 name (SimpleName)
75 identifier='input'
76 name (SimpleName)
77 identifier='str'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='String'
81 statement (ExpressionStmt)
82 expression (VariableDeclarationExpr)
83 variables
84 variable (VariableDeclarator)
85 initializer (MethodCallExpr)
86 name (SimpleName)
87 identifier='readValue'
88 scope (NameExpr)
89 name (SimpleName)
90 identifier='mapper'
91 arguments
92 argument (NameExpr)
93 name (SimpleName)
94 identifier='str'
95 argument (ClassExpr)
96 type (ClassOrInterfaceType)
97 name (SimpleName)
98 identifier='ListBean'
99 name (SimpleName)
100 identifier='result'
101 type (ClassOrInterfaceType)
102 name (SimpleName)
103 identifier='ListBean'
104 statement (ExpressionStmt)
105 expression (MethodCallExpr)
106 name (SimpleName)
107 identifier='assertEquals'
108 arguments
109 argument (IntegerLiteralExpr)
110 value='2'
111 argument (MethodCallExpr)
112 name (SimpleName)
113 identifier='size'
114 scope (FieldAccessExpr)
115 name (SimpleName)
116 identifier='otherAnimals'
117 scope (NameExpr)
118 name (SimpleName)
119 identifier='result'
120 statement (ExpressionStmt)
121 expression (VariableDeclarationExpr)
122 variables
123 variable (VariableDeclarator)
124 initializer (MethodCallExpr)
125 name (SimpleName)
126 identifier='get'
127 scope (FieldAccessExpr)
128 name (SimpleName)
129 identifier='otherAnimals'
130 scope (NameExpr)
131 name (SimpleName)
132 identifier='result'
133 arguments
134 argument (IntegerLiteralExpr)
135 value='0'
136 name (SimpleName)
137 identifier='a1'
138 type (ClassOrInterfaceType)
139 name (SimpleName)
140 identifier='Animal'
141 statement (ExpressionStmt)
142 expression (MethodCallExpr)
143 name (SimpleName)
144 identifier='assertNotNull'
145 arguments
146 argument (NameExpr)
147 name (SimpleName)
148 identifier='a1'
149 statement (ExpressionStmt)
150 expression (MethodCallExpr)
151 name (SimpleName)
152 identifier='assertEquals'
153 arguments
154 argument (ClassExpr)
155 type (ClassOrInterfaceType)
156 name (SimpleName)
157 identifier='Cow'
158 argument (MethodCallExpr)
159 name (SimpleName)
160 identifier='getClass'
161 scope (NameExpr)
162 name (SimpleName)
163 identifier='a1'
164 statement (ExpressionStmt)
165 expression (MethodCallExpr)
166 name (SimpleName)
167 identifier='assertEquals'
168 arguments
169 argument (StringLiteralExpr)
170 value='bluey'
171 argument (FieldAccessExpr)
172 name (SimpleName)
173 identifier='nickname'
174 scope (NameExpr)
175 name (SimpleName)
176 identifier='a1'
177 statement (ExpressionStmt)
178 expression (MethodCallExpr)
179 name (SimpleName)
180 identifier='assertEquals'
181 arguments
182 argument (IntegerLiteralExpr)
183 value='150'
184 argument (FieldAccessExpr)
185 name (SimpleName)
186 identifier='weightInPounds'
187 scope (EnclosedExpr)
188 inner (CastExpr)
189 expression (NameExpr)
190 name (SimpleName)
191 identifier='a1'
192 type (ClassOrInterfaceType)
193 name (SimpleName)
194 identifier='Cow'
195 statement (ExpressionStmt)
196 expression (VariableDeclarationExpr)
197 variables
198 variable (VariableDeclarator)
199 initializer (MethodCallExpr)
200 name (SimpleName)
201 identifier='get'
202 scope (FieldAccessExpr)
203 name (SimpleName)
204 identifier='otherAnimals'
205 scope (NameExpr)
206 name (SimpleName)
207 identifier='result'
208 arguments
209 argument (IntegerLiteralExpr)
210 value='1'
211 name (SimpleName)
212 identifier='a2'
213 type (ClassOrInterfaceType)
214 name (SimpleName)
215 identifier='Animal'
216 statement (ExpressionStmt)
217 expression (MethodCallExpr)
218 name (SimpleName)
219 identifier='assertNotNull'
220 arguments
221 argument (NameExpr)
222 name (SimpleName)
223 identifier='a2'
224 statement (ExpressionStmt)
225 expression (MethodCallExpr)
226 name (SimpleName)
227 identifier='assertEquals'
228 arguments
229 argument (ClassExpr)
230 type (ClassOrInterfaceType)
231 name (SimpleName)
232 identifier='Emu'
233 argument (MethodCallExpr)
234 name (SimpleName)
235 identifier='getClass'
236 scope (NameExpr)
237 name (SimpleName)
238 identifier='a2'
239 statement (ExpressionStmt)
240 expression (MethodCallExpr)
241 name (SimpleName)
242 identifier='assertEquals'
243 arguments
244 argument (StringLiteralExpr)
245 value='Bob'
246 argument (FieldAccessExpr)
247 name (SimpleName)
248 identifier='nickname'
249 scope (NameExpr)
250 name (SimpleName)
251 identifier='a2'
252 statement (ExpressionStmt)
253 expression (MethodCallExpr)
254 name (SimpleName)
255 identifier='assertEquals'
256 arguments
257 argument (StringLiteralExpr)
258 value='black'
259 argument (FieldAccessExpr)
260 name (SimpleName)
261 identifier='featherColor'
262 scope (EnclosedExpr)
263 inner (CastExpr)
264 expression (NameExpr)
265 name (SimpleName)
266 identifier='a2'
267 type (ClassOrInterfaceType)
268 name (SimpleName)
269 identifier='Emu'
270 type (VoidType)
271 name (SimpleName)
272 identifier='testPolymorphicListElementRef'
273 thrownExceptions
274 thrownException (ClassOrInterfaceType)
275 name (SimpleName)
276 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
6 10
10 11
6 12
12 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
21 22
18 23
23 24
18 25
25 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
31 34
34 35
35 36
29 37
37 38
38 39
37 40
40 41
41 42
37 43
43 44
44 45
45 46
46 47
44 48
48 49
49 50
48 51
51 52
43 53
53 54
54 55
55 56
53 57
57 58
58 59
57 60
60 61
2 62
62 63
63 64
64 65
65 66
66 67
67 68
66 69
69 70
70 71
66 72
72 73
73 74
74 75
65 76
76 77
65 78
78 79
79 80
2 81
81 82
82 83
83 84
84 85
85 86
86 87
85 88
88 89
89 90
85 91
91 92
92 93
93 94
91 95
95 96
96 97
97 98
84 99
99 100
84 101
101 102
102 103
2 104
104 105
105 106
106 107
105 108
108 109
109 110
108 111
111 112
112 113
111 114
114 115
115 116
114 117
117 118
118 119
2 120
120 121
121 122
122 123
123 124
124 125
125 126
124 127
127 128
128 129
127 130
130 131
131 132
124 133
133 134
134 135
123 136
136 137
123 138
138 139
139 140
2 141
141 142
142 143
143 144
142 145
145 146
146 147
147 148
2 149
149 150
150 151
151 152
150 153
153 154
154 155
155 156
156 157
153 158
158 159
159 160
158 161
161 162
162 163
2 164
164 165
165 166
166 167
165 168
168 169
169 170
168 171
171 172
172 173
171 174
174 175
175 176
2 177
177 178
178 179
179 180
178 181
181 182
182 183
181 184
184 185
185 186
184 187
187 188
188 189
189 190
190 191
188 192
192 193
193 194
2 195
195 196
196 197
197 198
198 199
199 200
200 201
199 202
202 203
203 204
202 205
205 206
206 207
199 208
208 209
209 210
198 211
211 212
198 213
213 214
214 215
2 216
216 217
217 218
218 219
217 220
220 221
221 222
222 223
2 224
224 225
225 226
226 227
225 228
228 229
229 230
230 231
231 232
228 233
233 234
234 235
233 236
236 237
237 238
2 239
239 240
240 241
241 242
240 243
243 244
244 245
243 246
246 247
247 248
246 249
249 250
250 251
2 252
252 253
253 254
254 255
253 256
256 257
257 258
256 259
259 260
260 261
259 262
262 263
263 264
264 265
265 266
263 267
267 268
268 269
0 270
0 271
271 272
0 273
273 274
274 275
275 276

And then a test for collection types using element ref(s)
