71
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='expandFor'
7 arguments
8 argument (BinaryExpr)
9 operator='MINUS'
10 left (BinaryExpr)
11 operator='PLUS'
12 left (NameExpr)
13 name (SimpleName)
14 identifier='size'
15 right (FieldAccessExpr)
16 name (SimpleName)
17 identifier='size'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='v'
21 right (IntegerLiteralExpr)
22 value='1'
23 argument (NullLiteralExpr)
24 statement (ExpressionStmt)
25 expression (MethodCallExpr)
26 name (SimpleName)
27 identifier='arraycopy'
28 scope (NameExpr)
29 name (SimpleName)
30 identifier='System'
31 arguments
32 argument (FieldAccessExpr)
33 name (SimpleName)
34 identifier='vector'
35 scope (NameExpr)
36 name (SimpleName)
37 identifier='v'
38 argument (IntegerLiteralExpr)
39 value='0'
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='vector'
43 argument (BinaryExpr)
44 operator='MINUS'
45 left (NameExpr)
46 name (SimpleName)
47 identifier='size'
48 right (FieldAccessExpr)
49 name (SimpleName)
50 identifier='size'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='v'
54 argument (FieldAccessExpr)
55 name (SimpleName)
56 identifier='size'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='v'
60 type (VoidType)
61 name (SimpleName)
62 identifier='addAll'
63 parameters
64 parameter (Parameter)
65 isVarArgs='false'
66 name (SimpleName)
67 identifier='v'
68 type (ClassOrInterfaceType)
69 name (SimpleName)
70 identifier='OVector'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
8 10
10 11
10 12
12 13
13 14
10 15
15 16
16 17
15 18
18 19
19 20
8 21
21 22
7 23
2 24
24 25
25 26
26 27
25 28
28 29
29 30
25 31
31 32
32 33
33 34
32 35
35 36
36 37
31 38
38 39
31 40
40 41
41 42
31 43
43 44
43 45
45 46
46 47
43 48
48 49
49 50
48 51
51 52
52 53
31 54
54 55
55 56
54 57
57 58
58 59
0 60
0 61
61 62
0 63
63 64
64 65
64 66
66 67
64 68
68 69
69 70

Adds all the values in the given vector to the end of this vector, expanding its capacity as necessary.
