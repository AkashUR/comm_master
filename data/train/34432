181
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (NameExpr)
5 name (SimpleName)
6 identifier='featureID'
7 entries
8 entrie (SwitchEntryStmt)
9 label (FieldAccessExpr)
10 name (SimpleName)
11 identifier='FUNCTION_BLOCK__CONFIGURATION'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='FunctionblockPackage'
15 statements
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setConfiguration'
20 arguments
21 argument (CastExpr)
22 expression (NameExpr)
23 name (SimpleName)
24 identifier='newValue'
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='Configuration'
28 statement (ReturnStmt)
29 entrie (SwitchEntryStmt)
30 label (FieldAccessExpr)
31 name (SimpleName)
32 identifier='FUNCTION_BLOCK__STATUS'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='FunctionblockPackage'
36 statements
37 statement (ExpressionStmt)
38 expression (MethodCallExpr)
39 name (SimpleName)
40 identifier='setStatus'
41 arguments
42 argument (CastExpr)
43 expression (NameExpr)
44 name (SimpleName)
45 identifier='newValue'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='Status'
49 statement (ReturnStmt)
50 entrie (SwitchEntryStmt)
51 label (FieldAccessExpr)
52 name (SimpleName)
53 identifier='FUNCTION_BLOCK__FAULT'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='FunctionblockPackage'
57 statements
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='setFault'
62 arguments
63 argument (CastExpr)
64 expression (NameExpr)
65 name (SimpleName)
66 identifier='newValue'
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='Fault'
70 statement (ReturnStmt)
71 entrie (SwitchEntryStmt)
72 label (FieldAccessExpr)
73 name (SimpleName)
74 identifier='FUNCTION_BLOCK__EVENTS'
75 scope (NameExpr)
76 name (SimpleName)
77 identifier='FunctionblockPackage'
78 statements
79 statement (ExpressionStmt)
80 expression (MethodCallExpr)
81 name (SimpleName)
82 identifier='clear'
83 scope (MethodCallExpr)
84 name (SimpleName)
85 identifier='getEvents'
86 statement (ExpressionStmt)
87 expression (MethodCallExpr)
88 name (SimpleName)
89 identifier='addAll'
90 scope (MethodCallExpr)
91 name (SimpleName)
92 identifier='getEvents'
93 arguments
94 argument (CastExpr)
95 expression (NameExpr)
96 name (SimpleName)
97 identifier='newValue'
98 type (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='Collection'
101 typeArguments
102 typeArgument (WildcardType)
103 extendedType (ClassOrInterfaceType)
104 name (SimpleName)
105 identifier='Event'
106 statement (ReturnStmt)
107 entrie (SwitchEntryStmt)
108 label (FieldAccessExpr)
109 name (SimpleName)
110 identifier='FUNCTION_BLOCK__OPERATIONS'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='FunctionblockPackage'
114 statements
115 statement (ExpressionStmt)
116 expression (MethodCallExpr)
117 name (SimpleName)
118 identifier='clear'
119 scope (MethodCallExpr)
120 name (SimpleName)
121 identifier='getOperations'
122 statement (ExpressionStmt)
123 expression (MethodCallExpr)
124 name (SimpleName)
125 identifier='addAll'
126 scope (MethodCallExpr)
127 name (SimpleName)
128 identifier='getOperations'
129 arguments
130 argument (CastExpr)
131 expression (NameExpr)
132 name (SimpleName)
133 identifier='newValue'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='Collection'
137 typeArguments
138 typeArgument (WildcardType)
139 extendedType (ClassOrInterfaceType)
140 name (SimpleName)
141 identifier='Operation'
142 statement (ReturnStmt)
143 statement (ExpressionStmt)
144 expression (MethodCallExpr)
145 name (SimpleName)
146 identifier='eSet'
147 scope (SuperExpr)
148 arguments
149 argument (NameExpr)
150 name (SimpleName)
151 identifier='featureID'
152 argument (NameExpr)
153 name (SimpleName)
154 identifier='newValue'
155 type (VoidType)
156 name (SimpleName)
157 identifier='eSet'
158 parameters
159 parameter (Parameter)
160 isVarArgs='false'
161 name (SimpleName)
162 identifier='featureID'
163 type (PrimitiveType)
164 type='INT'
165 parameter (Parameter)
166 isVarArgs='false'
167 name (SimpleName)
168 identifier='newValue'
169 type (ClassOrInterfaceType)
170 name (SimpleName)
171 identifier='Object'
172 annotations
173 annotation (SingleMemberAnnotationExpr)
174 memberValue (StringLiteralExpr)
175 value='unchecked'
176 name (Name)
177 identifier='SuppressWarnings'
178 annotation (MarkerAnnotationExpr)
179 name (Name)
180 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
3 7
7 8
8 9
9 10
10 11
9 12
12 13
13 14
8 15
15 16
16 17
17 18
18 19
17 20
20 21
21 22
22 23
23 24
21 25
25 26
26 27
15 28
7 29
29 30
30 31
31 32
30 33
33 34
34 35
29 36
36 37
37 38
38 39
39 40
38 41
41 42
42 43
43 44
44 45
42 46
46 47
47 48
36 49
7 50
50 51
51 52
52 53
51 54
54 55
55 56
50 57
57 58
58 59
59 60
60 61
59 62
62 63
63 64
64 65
65 66
63 67
67 68
68 69
57 70
7 71
71 72
72 73
73 74
72 75
75 76
76 77
71 78
78 79
79 80
80 81
81 82
80 83
83 84
84 85
78 86
86 87
87 88
88 89
87 90
90 91
91 92
87 93
93 94
94 95
95 96
96 97
94 98
98 99
99 100
98 101
101 102
102 103
103 104
104 105
78 106
7 107
107 108
108 109
109 110
108 111
111 112
112 113
107 114
114 115
115 116
116 117
117 118
116 119
119 120
120 121
114 122
122 123
123 124
124 125
123 126
126 127
127 128
123 129
129 130
130 131
131 132
132 133
130 134
134 135
135 136
134 137
137 138
138 139
139 140
140 141
114 142
2 143
143 144
144 145
145 146
144 147
144 148
148 149
149 150
150 151
148 152
152 153
153 154
0 155
0 156
156 157
0 158
158 159
159 160
159 161
161 162
159 163
163 164
158 165
165 166
165 167
167 168
165 169
169 170
170 171
0 172
172 173
173 174
174 175
173 176
176 177
172 178
178 179
179 180

<!-- begin-user-doc --> <!-- end-user-doc -->
