68
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='message'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='Debug'
10 arguments
11 argument (StringLiteralExpr)
12 value='dndlistener'
13 argument (StringLiteralExpr)
14 value='dragEnter (target)'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (MethodCallExpr)
20 name (SimpleName)
21 identifier='getDropAction'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='dtde'
25 name (SimpleName)
26 identifier='action'
27 type (PrimitiveType)
28 type='INT'
29 statement (ExpressionStmt)
30 expression (MethodCallExpr)
31 name (SimpleName)
32 identifier='message'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='Debug'
36 arguments
37 argument (StringLiteralExpr)
38 value='dndlistener'
39 argument (BinaryExpr)
40 operator='PLUS'
41 left (StringLiteralExpr)
42 value='action='
43 right (NameExpr)
44 name (SimpleName)
45 identifier='action'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='acceptDrag'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='dtde'
53 arguments
54 argument (NameExpr)
55 name (SimpleName)
56 identifier='action'
57 type (VoidType)
58 name (SimpleName)
59 identifier='dragEnter'
60 parameters
61 parameter (Parameter)
62 isVarArgs='false'
63 name (SimpleName)
64 identifier='dtde'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='DropTargetDragEvent'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
19 22
22 23
23 24
18 25
25 26
18 27
27 28
2 29
29 30
30 31
31 32
30 33
33 34
34 35
30 36
36 37
37 38
36 39
39 40
39 41
41 42
39 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
55 56
0 57
0 58
58 59
0 60
60 61
61 62
61 63
63 64
61 65
65 66
66 67

Called when a drag operation has encountered the <code>DropTarget</code>. <P>
