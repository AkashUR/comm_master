94
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='createRandomOutOfTimeOrderEventGroupedByName'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='MockSampleMetadataFactory'
13 arguments
14 argument (StringLiteralExpr)
15 value='sampleStream_1'
16 name (SimpleName)
17 identifier='event'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='PartitionedEvent'
21 statement (ExpressionStmt)
22 expression (MethodCallExpr)
23 name (SimpleName)
24 identifier='info'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='LOG'
28 arguments
29 argument (StringLiteralExpr)
30 value='Receive {}'
31 argument (NameExpr)
32 name (SimpleName)
33 identifier='event'
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='emit'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='collector'
41 arguments
42 argument (MethodCallExpr)
43 name (SimpleName)
44 identifier='get'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='outputStreamIds'
48 arguments
49 argument (CastExpr)
50 expression (EnclosedExpr)
51 inner (BinaryExpr)
52 operator='REMAINDER'
53 left (MethodCallExpr)
54 name (SimpleName)
55 identifier='getPartitionKey'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='event'
59 right (MethodCallExpr)
60 name (SimpleName)
61 identifier='size'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='outputStreamIds'
65 type (PrimitiveType)
66 type='INT'
67 argument (MethodCallExpr)
68 name (SimpleName)
69 identifier='singletonList'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='Collections'
73 arguments
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='event'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='sleep'
81 scope (NameExpr)
82 name (SimpleName)
83 identifier='Utils'
84 arguments
85 argument (IntegerLiteralExpr)
86 value='500'
87 type (VoidType)
88 name (SimpleName)
89 identifier='nextTuple'
90 annotations
91 annotation (MarkerAnnotationExpr)
92 name (Name)
93 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
6 16
16 17
6 18
18 19
19 20
2 21
21 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
28 31
31 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
35 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
50 51
51 52
51 53
53 54
54 55
53 56
56 57
57 58
51 59
59 60
60 61
59 62
62 63
63 64
49 65
65 66
41 67
67 68
68 69
67 70
70 71
71 72
67 73
73 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
78 84
84 85
85 86
0 87
0 88
88 89
0 90
90 91
91 92
92 93

This unit test is not to mock the end2end logic of correlation spout, but simply generate some sample data for following bolts testing
