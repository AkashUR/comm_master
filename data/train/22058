50
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='showMissingWarning'
7 arguments
8 argument (StringLiteralExpr)
9 value='applyMatrix'
10 type (VoidType)
11 name (SimpleName)
12 identifier='applyMatrix'
13 parameters
14 parameter (Parameter)
15 isVarArgs='false'
16 name (SimpleName)
17 identifier='n00'
18 type (PrimitiveType)
19 type='FLOAT'
20 parameter (Parameter)
21 isVarArgs='false'
22 name (SimpleName)
23 identifier='n01'
24 type (PrimitiveType)
25 type='FLOAT'
26 parameter (Parameter)
27 isVarArgs='false'
28 name (SimpleName)
29 identifier='n02'
30 type (PrimitiveType)
31 type='FLOAT'
32 parameter (Parameter)
33 isVarArgs='false'
34 name (SimpleName)
35 identifier='n10'
36 type (PrimitiveType)
37 type='FLOAT'
38 parameter (Parameter)
39 isVarArgs='false'
40 name (SimpleName)
41 identifier='n11'
42 type (PrimitiveType)
43 type='FLOAT'
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='n12'
48 type (PrimitiveType)
49 type='FLOAT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
0 10
0 11
11 12
0 13
13 14
14 15
14 16
16 17
14 18
18 19
13 20
20 21
20 22
22 23
20 24
24 25
13 26
26 27
26 28
28 29
26 30
30 31
13 32
32 33
32 34
34 35
32 36
36 37
13 38
38 39
38 40
40 41
38 42
42 43
13 44
44 45
44 46
46 47
44 48
48 49

Apply a 3x2 affine transformation matrix.
