39
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='maxConcurrency'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='predeclareLocks'
12 argument (BooleanLiteralExpr)
13 value='true'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='delegate'
17 name (SimpleName)
18 identifier='NonBlockingLockManager'
19 parameters
20 parameter (Parameter)
21 isVarArgs='false'
22 name (SimpleName)
23 identifier='maxConcurrency'
24 type (PrimitiveType)
25 type='INT'
26 parameter (Parameter)
27 isVarArgs='false'
28 name (SimpleName)
29 identifier='predeclareLocks'
30 type (PrimitiveType)
31 type='BOOLEAN'
32 parameter (Parameter)
33 isVarArgs='false'
34 name (SimpleName)
35 identifier='delegate'
36 type (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='Executor'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
5 14
14 15
15 16
0 17
17 18
0 19
19 20
20 21
20 22
22 23
20 24
24 25
19 26
26 27
26 28
28 29
26 30
30 31
19 32
32 33
32 34
34 35
32 36
36 37
37 38

Create a lock manager. No concurrency limit imposed when <i>predeclareLocks</i> is <code>true</code> as deadlocks are impossible and we do not maintain a WAITS_FOR graph.
