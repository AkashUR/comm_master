567
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ConditionalExpr)
8 condition (MethodCallExpr)
9 name (SimpleName)
10 identifier='hasMainGun'
11 elseExpr (FieldAccessExpr)
12 name (SimpleName)
13 identifier='ARMOR_NA'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='IArmorState'
17 thenExpr (EnclosedExpr)
18 inner (ConditionalExpr)
19 condition (BinaryExpr)
20 operator='GREATER'
21 left (MethodCallExpr)
22 name (SimpleName)
23 identifier='getWeight'
24 right (IntegerLiteralExpr)
25 value='9'
26 elseExpr (IntegerLiteralExpr)
27 value='1'
28 thenExpr (IntegerLiteralExpr)
29 value='2'
30 name (SimpleName)
31 identifier='mainGunIS'
32 type (PrimitiveType)
33 type='INT'
34 statement (SwitchStmt)
35 selector (CastExpr)
36 expression (NameExpr)
37 name (SimpleName)
38 identifier='weight'
39 type (PrimitiveType)
40 type='INT'
41 entries
42 entrie (SwitchEntryStmt)
43 label (IntegerLiteralExpr)
44 value='2'
45 statements
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='setInternal'
50 arguments
51 argument (IntegerLiteralExpr)
52 value='1'
53 argument (IntegerLiteralExpr)
54 value='2'
55 argument (ConditionalExpr)
56 condition (MethodCallExpr)
57 name (SimpleName)
58 identifier='isQuad'
59 elseExpr (IntegerLiteralExpr)
60 value='1'
61 thenExpr (FieldAccessExpr)
62 name (SimpleName)
63 identifier='ARMOR_NA'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='IArmorState'
67 argument (ConditionalExpr)
68 condition (MethodCallExpr)
69 name (SimpleName)
70 identifier='isQuad'
71 elseExpr (IntegerLiteralExpr)
72 value='2'
73 thenExpr (IntegerLiteralExpr)
74 value='4'
75 argument (NameExpr)
76 name (SimpleName)
77 identifier='mainGunIS'
78 statement (BreakStmt)
79 entrie (SwitchEntryStmt)
80 label (IntegerLiteralExpr)
81 value='3'
82 statements
83 statement (ExpressionStmt)
84 expression (MethodCallExpr)
85 name (SimpleName)
86 identifier='setInternal'
87 arguments
88 argument (IntegerLiteralExpr)
89 value='1'
90 argument (IntegerLiteralExpr)
91 value='3'
92 argument (ConditionalExpr)
93 condition (MethodCallExpr)
94 name (SimpleName)
95 identifier='isQuad'
96 elseExpr (IntegerLiteralExpr)
97 value='1'
98 thenExpr (FieldAccessExpr)
99 name (SimpleName)
100 identifier='ARMOR_NA'
101 scope (NameExpr)
102 name (SimpleName)
103 identifier='IArmorState'
104 argument (ConditionalExpr)
105 condition (MethodCallExpr)
106 name (SimpleName)
107 identifier='isQuad'
108 elseExpr (IntegerLiteralExpr)
109 value='2'
110 thenExpr (IntegerLiteralExpr)
111 value='4'
112 argument (NameExpr)
113 name (SimpleName)
114 identifier='mainGunIS'
115 statement (BreakStmt)
116 entrie (SwitchEntryStmt)
117 label (IntegerLiteralExpr)
118 value='4'
119 statements
120 statement (ExpressionStmt)
121 expression (MethodCallExpr)
122 name (SimpleName)
123 identifier='setInternal'
124 arguments
125 argument (IntegerLiteralExpr)
126 value='1'
127 argument (IntegerLiteralExpr)
128 value='4'
129 argument (ConditionalExpr)
130 condition (MethodCallExpr)
131 name (SimpleName)
132 identifier='isQuad'
133 elseExpr (IntegerLiteralExpr)
134 value='1'
135 thenExpr (FieldAccessExpr)
136 name (SimpleName)
137 identifier='ARMOR_NA'
138 scope (NameExpr)
139 name (SimpleName)
140 identifier='IArmorState'
141 argument (ConditionalExpr)
142 condition (MethodCallExpr)
143 name (SimpleName)
144 identifier='isQuad'
145 elseExpr (IntegerLiteralExpr)
146 value='3'
147 thenExpr (IntegerLiteralExpr)
148 value='5'
149 argument (NameExpr)
150 name (SimpleName)
151 identifier='mainGunIS'
152 statement (BreakStmt)
153 entrie (SwitchEntryStmt)
154 label (IntegerLiteralExpr)
155 value='5'
156 statements
157 statement (ExpressionStmt)
158 expression (MethodCallExpr)
159 name (SimpleName)
160 identifier='setInternal'
161 arguments
162 argument (IntegerLiteralExpr)
163 value='1'
164 argument (IntegerLiteralExpr)
165 value='5'
166 argument (ConditionalExpr)
167 condition (MethodCallExpr)
168 name (SimpleName)
169 identifier='isQuad'
170 elseExpr (IntegerLiteralExpr)
171 value='1'
172 thenExpr (FieldAccessExpr)
173 name (SimpleName)
174 identifier='ARMOR_NA'
175 scope (NameExpr)
176 name (SimpleName)
177 identifier='IArmorState'
178 argument (ConditionalExpr)
179 condition (MethodCallExpr)
180 name (SimpleName)
181 identifier='isQuad'
182 elseExpr (IntegerLiteralExpr)
183 value='3'
184 thenExpr (IntegerLiteralExpr)
185 value='5'
186 argument (NameExpr)
187 name (SimpleName)
188 identifier='mainGunIS'
189 statement (BreakStmt)
190 entrie (SwitchEntryStmt)
191 label (IntegerLiteralExpr)
192 value='6'
193 statements
194 statement (ExpressionStmt)
195 expression (MethodCallExpr)
196 name (SimpleName)
197 identifier='setInternal'
198 arguments
199 argument (IntegerLiteralExpr)
200 value='2'
201 argument (IntegerLiteralExpr)
202 value='6'
203 argument (ConditionalExpr)
204 condition (MethodCallExpr)
205 name (SimpleName)
206 identifier='isQuad'
207 elseExpr (IntegerLiteralExpr)
208 value='2'
209 thenExpr (FieldAccessExpr)
210 name (SimpleName)
211 identifier='ARMOR_NA'
212 scope (NameExpr)
213 name (SimpleName)
214 identifier='IArmorState'
215 argument (ConditionalExpr)
216 condition (MethodCallExpr)
217 name (SimpleName)
218 identifier='isQuad'
219 elseExpr (IntegerLiteralExpr)
220 value='4'
221 thenExpr (IntegerLiteralExpr)
222 value='8'
223 argument (NameExpr)
224 name (SimpleName)
225 identifier='mainGunIS'
226 statement (BreakStmt)
227 entrie (SwitchEntryStmt)
228 label (IntegerLiteralExpr)
229 value='7'
230 statements
231 statement (ExpressionStmt)
232 expression (MethodCallExpr)
233 name (SimpleName)
234 identifier='setInternal'
235 arguments
236 argument (IntegerLiteralExpr)
237 value='2'
238 argument (IntegerLiteralExpr)
239 value='7'
240 argument (ConditionalExpr)
241 condition (MethodCallExpr)
242 name (SimpleName)
243 identifier='isQuad'
244 elseExpr (IntegerLiteralExpr)
245 value='2'
246 thenExpr (FieldAccessExpr)
247 name (SimpleName)
248 identifier='ARMOR_NA'
249 scope (NameExpr)
250 name (SimpleName)
251 identifier='IArmorState'
252 argument (ConditionalExpr)
253 condition (MethodCallExpr)
254 name (SimpleName)
255 identifier='isQuad'
256 elseExpr (IntegerLiteralExpr)
257 value='4'
258 thenExpr (IntegerLiteralExpr)
259 value='8'
260 argument (NameExpr)
261 name (SimpleName)
262 identifier='mainGunIS'
263 statement (BreakStmt)
264 entrie (SwitchEntryStmt)
265 label (IntegerLiteralExpr)
266 value='8'
267 statements
268 statement (ExpressionStmt)
269 expression (MethodCallExpr)
270 name (SimpleName)
271 identifier='setInternal'
272 arguments
273 argument (IntegerLiteralExpr)
274 value='2'
275 argument (IntegerLiteralExpr)
276 value='8'
277 argument (ConditionalExpr)
278 condition (MethodCallExpr)
279 name (SimpleName)
280 identifier='isQuad'
281 elseExpr (IntegerLiteralExpr)
282 value='2'
283 thenExpr (FieldAccessExpr)
284 name (SimpleName)
285 identifier='ARMOR_NA'
286 scope (NameExpr)
287 name (SimpleName)
288 identifier='IArmorState'
289 argument (ConditionalExpr)
290 condition (MethodCallExpr)
291 name (SimpleName)
292 identifier='isQuad'
293 elseExpr (IntegerLiteralExpr)
294 value='5'
295 thenExpr (IntegerLiteralExpr)
296 value='9'
297 argument (NameExpr)
298 name (SimpleName)
299 identifier='mainGunIS'
300 statement (BreakStmt)
301 entrie (SwitchEntryStmt)
302 label (IntegerLiteralExpr)
303 value='9'
304 statements
305 statement (ExpressionStmt)
306 expression (MethodCallExpr)
307 name (SimpleName)
308 identifier='setInternal'
309 arguments
310 argument (IntegerLiteralExpr)
311 value='2'
312 argument (IntegerLiteralExpr)
313 value='9'
314 argument (ConditionalExpr)
315 condition (MethodCallExpr)
316 name (SimpleName)
317 identifier='isQuad'
318 elseExpr (IntegerLiteralExpr)
319 value='2'
320 thenExpr (FieldAccessExpr)
321 name (SimpleName)
322 identifier='ARMOR_NA'
323 scope (NameExpr)
324 name (SimpleName)
325 identifier='IArmorState'
326 argument (ConditionalExpr)
327 condition (MethodCallExpr)
328 name (SimpleName)
329 identifier='isQuad'
330 elseExpr (IntegerLiteralExpr)
331 value='5'
332 thenExpr (IntegerLiteralExpr)
333 value='9'
334 argument (NameExpr)
335 name (SimpleName)
336 identifier='mainGunIS'
337 statement (BreakStmt)
338 entrie (SwitchEntryStmt)
339 label (IntegerLiteralExpr)
340 value='10'
341 statements
342 statement (ExpressionStmt)
343 expression (MethodCallExpr)
344 name (SimpleName)
345 identifier='setInternal'
346 arguments
347 argument (IntegerLiteralExpr)
348 value='3'
349 argument (IntegerLiteralExpr)
350 value='10'
351 argument (ConditionalExpr)
352 condition (MethodCallExpr)
353 name (SimpleName)
354 identifier='isQuad'
355 elseExpr (IntegerLiteralExpr)
356 value='3'
357 thenExpr (FieldAccessExpr)
358 name (SimpleName)
359 identifier='ARMOR_NA'
360 scope (NameExpr)
361 name (SimpleName)
362 identifier='IArmorState'
363 argument (ConditionalExpr)
364 condition (MethodCallExpr)
365 name (SimpleName)
366 identifier='isQuad'
367 elseExpr (IntegerLiteralExpr)
368 value='6'
369 thenExpr (IntegerLiteralExpr)
370 value='12'
371 argument (NameExpr)
372 name (SimpleName)
373 identifier='mainGunIS'
374 statement (BreakStmt)
375 entrie (SwitchEntryStmt)
376 label (IntegerLiteralExpr)
377 value='11'
378 statements
379 statement (ExpressionStmt)
380 expression (MethodCallExpr)
381 name (SimpleName)
382 identifier='setInternal'
383 arguments
384 argument (IntegerLiteralExpr)
385 value='3'
386 argument (IntegerLiteralExpr)
387 value='11'
388 argument (ConditionalExpr)
389 condition (MethodCallExpr)
390 name (SimpleName)
391 identifier='isQuad'
392 elseExpr (IntegerLiteralExpr)
393 value='3'
394 thenExpr (FieldAccessExpr)
395 name (SimpleName)
396 identifier='ARMOR_NA'
397 scope (NameExpr)
398 name (SimpleName)
399 identifier='IArmorState'
400 argument (ConditionalExpr)
401 condition (MethodCallExpr)
402 name (SimpleName)
403 identifier='isQuad'
404 elseExpr (IntegerLiteralExpr)
405 value='6'
406 thenExpr (IntegerLiteralExpr)
407 value='12'
408 argument (NameExpr)
409 name (SimpleName)
410 identifier='mainGunIS'
411 statement (BreakStmt)
412 entrie (SwitchEntryStmt)
413 label (IntegerLiteralExpr)
414 value='12'
415 statements
416 statement (ExpressionStmt)
417 expression (MethodCallExpr)
418 name (SimpleName)
419 identifier='setInternal'
420 arguments
421 argument (IntegerLiteralExpr)
422 value='3'
423 argument (IntegerLiteralExpr)
424 value='12'
425 argument (ConditionalExpr)
426 condition (MethodCallExpr)
427 name (SimpleName)
428 identifier='isQuad'
429 elseExpr (IntegerLiteralExpr)
430 value='3'
431 thenExpr (FieldAccessExpr)
432 name (SimpleName)
433 identifier='ARMOR_NA'
434 scope (NameExpr)
435 name (SimpleName)
436 identifier='IArmorState'
437 argument (ConditionalExpr)
438 condition (MethodCallExpr)
439 name (SimpleName)
440 identifier='isQuad'
441 elseExpr (IntegerLiteralExpr)
442 value='7'
443 thenExpr (IntegerLiteralExpr)
444 value='13'
445 argument (NameExpr)
446 name (SimpleName)
447 identifier='mainGunIS'
448 statement (BreakStmt)
449 entrie (SwitchEntryStmt)
450 label (IntegerLiteralExpr)
451 value='13'
452 statements
453 statement (ExpressionStmt)
454 expression (MethodCallExpr)
455 name (SimpleName)
456 identifier='setInternal'
457 arguments
458 argument (IntegerLiteralExpr)
459 value='3'
460 argument (IntegerLiteralExpr)
461 value='13'
462 argument (ConditionalExpr)
463 condition (MethodCallExpr)
464 name (SimpleName)
465 identifier='isQuad'
466 elseExpr (IntegerLiteralExpr)
467 value='3'
468 thenExpr (FieldAccessExpr)
469 name (SimpleName)
470 identifier='ARMOR_NA'
471 scope (NameExpr)
472 name (SimpleName)
473 identifier='IArmorState'
474 argument (ConditionalExpr)
475 condition (MethodCallExpr)
476 name (SimpleName)
477 identifier='isQuad'
478 elseExpr (IntegerLiteralExpr)
479 value='6'
480 thenExpr (IntegerLiteralExpr)
481 value='13'
482 argument (NameExpr)
483 name (SimpleName)
484 identifier='mainGunIS'
485 statement (BreakStmt)
486 entrie (SwitchEntryStmt)
487 label (IntegerLiteralExpr)
488 value='14'
489 statements
490 statement (ExpressionStmt)
491 expression (MethodCallExpr)
492 name (SimpleName)
493 identifier='setInternal'
494 arguments
495 argument (IntegerLiteralExpr)
496 value='4'
497 argument (IntegerLiteralExpr)
498 value='14'
499 argument (ConditionalExpr)
500 condition (MethodCallExpr)
501 name (SimpleName)
502 identifier='isQuad'
503 elseExpr (IntegerLiteralExpr)
504 value='4'
505 thenExpr (FieldAccessExpr)
506 name (SimpleName)
507 identifier='ARMOR_NA'
508 scope (NameExpr)
509 name (SimpleName)
510 identifier='IArmorState'
511 argument (ConditionalExpr)
512 condition (MethodCallExpr)
513 name (SimpleName)
514 identifier='isQuad'
515 elseExpr (IntegerLiteralExpr)
516 value='8'
517 thenExpr (IntegerLiteralExpr)
518 value='16'
519 argument (NameExpr)
520 name (SimpleName)
521 identifier='mainGunIS'
522 statement (BreakStmt)
523 entrie (SwitchEntryStmt)
524 label (IntegerLiteralExpr)
525 value='15'
526 statements
527 statement (ExpressionStmt)
528 expression (MethodCallExpr)
529 name (SimpleName)
530 identifier='setInternal'
531 arguments
532 argument (IntegerLiteralExpr)
533 value='4'
534 argument (IntegerLiteralExpr)
535 value='15'
536 argument (ConditionalExpr)
537 condition (MethodCallExpr)
538 name (SimpleName)
539 identifier='isQuad'
540 elseExpr (IntegerLiteralExpr)
541 value='4'
542 thenExpr (FieldAccessExpr)
543 name (SimpleName)
544 identifier='ARMOR_NA'
545 scope (NameExpr)
546 name (SimpleName)
547 identifier='IArmorState'
548 argument (ConditionalExpr)
549 condition (MethodCallExpr)
550 name (SimpleName)
551 identifier='isQuad'
552 elseExpr (IntegerLiteralExpr)
553 value='8'
554 thenExpr (IntegerLiteralExpr)
555 value='16'
556 argument (NameExpr)
557 name (SimpleName)
558 identifier='mainGunIS'
559 statement (BreakStmt)
560 type (VoidType)
561 name (SimpleName)
562 identifier='autoSetInternal'
563 annotations
564 annotation (MarkerAnnotationExpr)
565 name (Name)
566 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
15 16
7 17
17 18
18 19
19 20
19 21
21 22
22 23
19 24
24 25
18 26
26 27
18 28
28 29
6 30
30 31
6 32
32 33
2 34
34 35
35 36
36 37
37 38
35 39
39 40
34 41
41 42
42 43
43 44
42 45
45 46
46 47
47 48
48 49
47 50
50 51
51 52
50 53
53 54
50 55
55 56
56 57
57 58
55 59
59 60
55 61
61 62
62 63
61 64
64 65
65 66
50 67
67 68
68 69
69 70
67 71
71 72
67 73
73 74
50 75
75 76
76 77
45 78
41 79
79 80
80 81
79 82
82 83
83 84
84 85
85 86
84 87
87 88
88 89
87 90
90 91
87 92
92 93
93 94
94 95
92 96
96 97
92 98
98 99
99 100
98 101
101 102
102 103
87 104
104 105
105 106
106 107
104 108
108 109
104 110
110 111
87 112
112 113
113 114
82 115
41 116
116 117
117 118
116 119
119 120
120 121
121 122
122 123
121 124
124 125
125 126
124 127
127 128
124 129
129 130
130 131
131 132
129 133
133 134
129 135
135 136
136 137
135 138
138 139
139 140
124 141
141 142
142 143
143 144
141 145
145 146
141 147
147 148
124 149
149 150
150 151
119 152
41 153
153 154
154 155
153 156
156 157
157 158
158 159
159 160
158 161
161 162
162 163
161 164
164 165
161 166
166 167
167 168
168 169
166 170
170 171
166 172
172 173
173 174
172 175
175 176
176 177
161 178
178 179
179 180
180 181
178 182
182 183
178 184
184 185
161 186
186 187
187 188
156 189
41 190
190 191
191 192
190 193
193 194
194 195
195 196
196 197
195 198
198 199
199 200
198 201
201 202
198 203
203 204
204 205
205 206
203 207
207 208
203 209
209 210
210 211
209 212
212 213
213 214
198 215
215 216
216 217
217 218
215 219
219 220
215 221
221 222
198 223
223 224
224 225
193 226
41 227
227 228
228 229
227 230
230 231
231 232
232 233
233 234
232 235
235 236
236 237
235 238
238 239
235 240
240 241
241 242
242 243
240 244
244 245
240 246
246 247
247 248
246 249
249 250
250 251
235 252
252 253
253 254
254 255
252 256
256 257
252 258
258 259
235 260
260 261
261 262
230 263
41 264
264 265
265 266
264 267
267 268
268 269
269 270
270 271
269 272
272 273
273 274
272 275
275 276
272 277
277 278
278 279
279 280
277 281
281 282
277 283
283 284
284 285
283 286
286 287
287 288
272 289
289 290
290 291
291 292
289 293
293 294
289 295
295 296
272 297
297 298
298 299
267 300
41 301
301 302
302 303
301 304
304 305
305 306
306 307
307 308
306 309
309 310
310 311
309 312
312 313
309 314
314 315
315 316
316 317
314 318
318 319
314 320
320 321
321 322
320 323
323 324
324 325
309 326
326 327
327 328
328 329
326 330
330 331
326 332
332 333
309 334
334 335
335 336
304 337
41 338
338 339
339 340
338 341
341 342
342 343
343 344
344 345
343 346
346 347
347 348
346 349
349 350
346 351
351 352
352 353
353 354
351 355
355 356
351 357
357 358
358 359
357 360
360 361
361 362
346 363
363 364
364 365
365 366
363 367
367 368
363 369
369 370
346 371
371 372
372 373
341 374
41 375
375 376
376 377
375 378
378 379
379 380
380 381
381 382
380 383
383 384
384 385
383 386
386 387
383 388
388 389
389 390
390 391
388 392
392 393
388 394
394 395
395 396
394 397
397 398
398 399
383 400
400 401
401 402
402 403
400 404
404 405
400 406
406 407
383 408
408 409
409 410
378 411
41 412
412 413
413 414
412 415
415 416
416 417
417 418
418 419
417 420
420 421
421 422
420 423
423 424
420 425
425 426
426 427
427 428
425 429
429 430
425 431
431 432
432 433
431 434
434 435
435 436
420 437
437 438
438 439
439 440
437 441
441 442
437 443
443 444
420 445
445 446
446 447
415 448
41 449
449 450
450 451
449 452
452 453
453 454
454 455
455 456
454 457
457 458
458 459
457 460
460 461
457 462
462 463
463 464
464 465
462 466
466 467
462 468
468 469
469 470
468 471
471 472
472 473
457 474
474 475
475 476
476 477
474 478
478 479
474 480
480 481
457 482
482 483
483 484
452 485
41 486
486 487
487 488
486 489
489 490
490 491
491 492
492 493
491 494
494 495
495 496
494 497
497 498
494 499
499 500
500 501
501 502
499 503
503 504
499 505
505 506
506 507
505 508
508 509
509 510
494 511
511 512
512 513
513 514
511 515
515 516
511 517
517 518
494 519
519 520
520 521
489 522
41 523
523 524
524 525
523 526
526 527
527 528
528 529
529 530
528 531
531 532
532 533
531 534
534 535
531 536
536 537
537 538
538 539
536 540
540 541
536 542
542 543
543 544
542 545
545 546
546 547
531 548
548 549
549 550
550 551
548 552
552 553
548 554
554 555
531 556
556 557
557 558
526 559
0 560
0 561
561 562
0 563
563 564
564 565
565 566

Set the internal structure to the appropriate value for the pmech's weight class
