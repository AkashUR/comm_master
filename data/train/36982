93
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (StringLiteralExpr)
8 value='errorMessage'
9 name (SimpleName)
10 identifier='errorMessage'
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='CharSequence'
14 statement (ExpressionStmt)
15 expression (VariableDeclarationExpr)
16 variables
17 variable (VariableDeclarator)
18 initializer (ObjectCreationExpr)
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='AbstractValidatorImplementation'
22 arguments
23 argument (StringLiteralExpr)
24 value='foo'
25 argument (BooleanLiteralExpr)
26 value='true'
27 name (SimpleName)
28 identifier='validator'
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='Validator'
32 typeArguments
33 typeArgument (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='Object'
36 statement (ExpressionStmt)
37 expression (VariableDeclarationExpr)
38 variables
39 variable (VariableDeclarator)
40 initializer (MethodCallExpr)
41 name (SimpleName)
42 identifier='create'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='NegateValidator'
46 arguments
47 argument (NameExpr)
48 name (SimpleName)
49 identifier='errorMessage'
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='validator'
53 name (SimpleName)
54 identifier='negateValidator'
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='NegateValidator'
58 typeArguments
59 typeArgument (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='Object'
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='assertEquals'
66 arguments
67 argument (NameExpr)
68 name (SimpleName)
69 identifier='errorMessage'
70 argument (MethodCallExpr)
71 name (SimpleName)
72 identifier='getErrorMessage'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='negateValidator'
76 statement (ExpressionStmt)
77 expression (MethodCallExpr)
78 name (SimpleName)
79 identifier='assertEquals'
80 arguments
81 argument (NameExpr)
82 name (SimpleName)
83 identifier='validator'
84 argument (MethodCallExpr)
85 name (SimpleName)
86 identifier='getValidator'
87 scope (NameExpr)
88 name (SimpleName)
89 identifier='negateValidator'
90 type (VoidType)
91 name (SimpleName)
92 identifier='testFactoryMethodWithCharSequenceParameter'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
6 11
11 12
12 13
2 14
14 15
15 16
16 17
17 18
18 19
19 20
20 21
18 22
22 23
23 24
22 25
25 26
17 27
27 28
17 29
29 30
30 31
29 32
32 33
33 34
34 35
2 36
36 37
37 38
38 39
39 40
40 41
41 42
40 43
43 44
44 45
40 46
46 47
47 48
48 49
46 50
50 51
51 52
39 53
53 54
39 55
55 56
56 57
55 58
58 59
59 60
60 61
2 62
62 63
63 64
64 65
63 66
66 67
67 68
68 69
66 70
70 71
71 72
70 73
73 74
74 75
2 76
76 77
77 78
78 79
77 80
80 81
81 82
82 83
80 84
84 85
85 86
84 87
87 88
88 89
0 90
0 91
91 92

Tests, if all properties are correctly initialized by the factory method, which expects a char sequence as a parameter.
