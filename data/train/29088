207
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 name (SimpleName)
8 identifier='typeStr'
9 type (ClassOrInterfaceType)
10 name (SimpleName)
11 identifier='String'
12 statement (SwitchStmt)
13 selector (NameExpr)
14 name (SimpleName)
15 identifier='id'
16 entries
17 entrie (SwitchEntryStmt)
18 label (NameExpr)
19 name (SimpleName)
20 identifier='WINDOW_OPENED'
21 statements
22 statement (ExpressionStmt)
23 expression (AssignExpr)
24 operator='ASSIGN'
25 target (NameExpr)
26 name (SimpleName)
27 identifier='typeStr'
28 value (StringLiteralExpr)
29 value='WINDOW_OPENED'
30 statement (BreakStmt)
31 entrie (SwitchEntryStmt)
32 label (NameExpr)
33 name (SimpleName)
34 identifier='WINDOW_CLOSING'
35 statements
36 statement (ExpressionStmt)
37 expression (AssignExpr)
38 operator='ASSIGN'
39 target (NameExpr)
40 name (SimpleName)
41 identifier='typeStr'
42 value (StringLiteralExpr)
43 value='WINDOW_CLOSING'
44 statement (BreakStmt)
45 entrie (SwitchEntryStmt)
46 label (NameExpr)
47 name (SimpleName)
48 identifier='WINDOW_CLOSED'
49 statements
50 statement (ExpressionStmt)
51 expression (AssignExpr)
52 operator='ASSIGN'
53 target (NameExpr)
54 name (SimpleName)
55 identifier='typeStr'
56 value (StringLiteralExpr)
57 value='WINDOW_CLOSED'
58 statement (BreakStmt)
59 entrie (SwitchEntryStmt)
60 label (NameExpr)
61 name (SimpleName)
62 identifier='WINDOW_ICONIFIED'
63 statements
64 statement (ExpressionStmt)
65 expression (AssignExpr)
66 operator='ASSIGN'
67 target (NameExpr)
68 name (SimpleName)
69 identifier='typeStr'
70 value (StringLiteralExpr)
71 value='WINDOW_ICONIFIED'
72 statement (BreakStmt)
73 entrie (SwitchEntryStmt)
74 label (NameExpr)
75 name (SimpleName)
76 identifier='WINDOW_DEICONIFIED'
77 statements
78 statement (ExpressionStmt)
79 expression (AssignExpr)
80 operator='ASSIGN'
81 target (NameExpr)
82 name (SimpleName)
83 identifier='typeStr'
84 value (StringLiteralExpr)
85 value='WINDOW_DEICONIFIED'
86 statement (BreakStmt)
87 entrie (SwitchEntryStmt)
88 label (NameExpr)
89 name (SimpleName)
90 identifier='WINDOW_ACTIVATED'
91 statements
92 statement (ExpressionStmt)
93 expression (AssignExpr)
94 operator='ASSIGN'
95 target (NameExpr)
96 name (SimpleName)
97 identifier='typeStr'
98 value (StringLiteralExpr)
99 value='WINDOW_ACTIVATED'
100 statement (BreakStmt)
101 entrie (SwitchEntryStmt)
102 label (NameExpr)
103 name (SimpleName)
104 identifier='WINDOW_DEACTIVATED'
105 statements
106 statement (ExpressionStmt)
107 expression (AssignExpr)
108 operator='ASSIGN'
109 target (NameExpr)
110 name (SimpleName)
111 identifier='typeStr'
112 value (StringLiteralExpr)
113 value='WINDOW_DEACTIVATED'
114 statement (BreakStmt)
115 entrie (SwitchEntryStmt)
116 label (NameExpr)
117 name (SimpleName)
118 identifier='WINDOW_GAINED_FOCUS'
119 statements
120 statement (ExpressionStmt)
121 expression (AssignExpr)
122 operator='ASSIGN'
123 target (NameExpr)
124 name (SimpleName)
125 identifier='typeStr'
126 value (StringLiteralExpr)
127 value='WINDOW_GAINED_FOCUS'
128 statement (BreakStmt)
129 entrie (SwitchEntryStmt)
130 label (NameExpr)
131 name (SimpleName)
132 identifier='WINDOW_LOST_FOCUS'
133 statements
134 statement (ExpressionStmt)
135 expression (AssignExpr)
136 operator='ASSIGN'
137 target (NameExpr)
138 name (SimpleName)
139 identifier='typeStr'
140 value (StringLiteralExpr)
141 value='WINDOW_LOST_FOCUS'
142 statement (BreakStmt)
143 entrie (SwitchEntryStmt)
144 label (NameExpr)
145 name (SimpleName)
146 identifier='WINDOW_STATE_CHANGED'
147 statements
148 statement (ExpressionStmt)
149 expression (AssignExpr)
150 operator='ASSIGN'
151 target (NameExpr)
152 name (SimpleName)
153 identifier='typeStr'
154 value (StringLiteralExpr)
155 value='WINDOW_STATE_CHANGED'
156 statement (BreakStmt)
157 entrie (SwitchEntryStmt)
158 statements
159 statement (ExpressionStmt)
160 expression (AssignExpr)
161 operator='ASSIGN'
162 target (NameExpr)
163 name (SimpleName)
164 identifier='typeStr'
165 value (StringLiteralExpr)
166 value='unknown type'
167 statement (ExpressionStmt)
168 expression (AssignExpr)
169 operator='PLUS'
170 target (NameExpr)
171 name (SimpleName)
172 identifier='typeStr'
173 value (BinaryExpr)
174 operator='PLUS'
175 left (BinaryExpr)
176 operator='PLUS'
177 left (BinaryExpr)
178 operator='PLUS'
179 left (BinaryExpr)
180 operator='PLUS'
181 left (BinaryExpr)
182 operator='PLUS'
183 left (StringLiteralExpr)
184 value=',opposite='
185 right (MethodCallExpr)
186 name (SimpleName)
187 identifier='getOppositeWindow'
188 right (StringLiteralExpr)
189 value=',oldState='
190 right (NameExpr)
191 name (SimpleName)
192 identifier='oldState'
193 right (StringLiteralExpr)
194 value=',newState='
195 right (NameExpr)
196 name (SimpleName)
197 identifier='newState'
198 statement (ReturnStmt)
199 expression (NameExpr)
200 name (SimpleName)
201 identifier='typeStr'
202 type (ClassOrInterfaceType)
203 name (SimpleName)
204 identifier='String'
205 name (SimpleName)
206 identifier='paramString'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
10 11
2 12
12 13
13 14
14 15
12 16
16 17
17 18
18 19
19 20
17 21
21 22
22 23
23 24
23 25
25 26
26 27
23 28
28 29
21 30
16 31
31 32
32 33
33 34
31 35
35 36
36 37
37 38
37 39
39 40
40 41
37 42
42 43
35 44
16 45
45 46
46 47
47 48
45 49
49 50
50 51
51 52
51 53
53 54
54 55
51 56
56 57
49 58
16 59
59 60
60 61
61 62
59 63
63 64
64 65
65 66
65 67
67 68
68 69
65 70
70 71
63 72
16 73
73 74
74 75
75 76
73 77
77 78
78 79
79 80
79 81
81 82
82 83
79 84
84 85
77 86
16 87
87 88
88 89
89 90
87 91
91 92
92 93
93 94
93 95
95 96
96 97
93 98
98 99
91 100
16 101
101 102
102 103
103 104
101 105
105 106
106 107
107 108
107 109
109 110
110 111
107 112
112 113
105 114
16 115
115 116
116 117
117 118
115 119
119 120
120 121
121 122
121 123
123 124
124 125
121 126
126 127
119 128
16 129
129 130
130 131
131 132
129 133
133 134
134 135
135 136
135 137
137 138
138 139
135 140
140 141
133 142
16 143
143 144
144 145
145 146
143 147
147 148
148 149
149 150
149 151
151 152
152 153
149 154
154 155
147 156
16 157
157 158
158 159
159 160
160 161
160 162
162 163
163 164
160 165
165 166
2 167
167 168
168 169
168 170
170 171
171 172
168 173
173 174
173 175
175 176
175 177
177 178
177 179
179 180
179 181
181 182
181 183
183 184
181 185
185 186
186 187
179 188
188 189
177 190
190 191
191 192
175 193
193 194
173 195
195 196
196 197
2 198
198 199
199 200
200 201
0 202
202 203
203 204
0 205
205 206

Returns a parameter string identifying this event. This method is useful for event-logging and for debugging.
