176
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='generateSubtypeValidationMethods'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='raveIR'
14 name (SimpleName)
15 identifier='allMethods'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='List'
19 typeArguments
20 typeArgument (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='MethodSpec'
23 statement (ExpressionStmt)
24 expression (MethodCallExpr)
25 name (SimpleName)
26 identifier='add'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='allMethods'
30 arguments
31 argument (MethodCallExpr)
32 name (SimpleName)
33 identifier='generateConstructor'
34 arguments
35 argument (NameExpr)
36 name (SimpleName)
37 identifier='raveIR'
38 statement (ExpressionStmt)
39 expression (VariableDeclarationExpr)
40 variables
41 variable (VariableDeclarator)
42 initializer (BinaryExpr)
43 operator='PLUS'
44 left (MethodCallExpr)
45 name (SimpleName)
46 identifier='getSimpleName'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='raveIR'
50 right (NameExpr)
51 name (SimpleName)
52 identifier='GENERATED_CLASS_POSTFIX'
53 name (SimpleName)
54 identifier='className'
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='String'
58 statement (ExpressionStmt)
59 expression (VariableDeclarationExpr)
60 variables
61 variable (VariableDeclarator)
62 initializer (MethodCallExpr)
63 name (SimpleName)
64 identifier='classBuilder'
65 scope (NameExpr)
66 name (SimpleName)
67 identifier='TypeSpec'
68 arguments
69 argument (NameExpr)
70 name (SimpleName)
71 identifier='className'
72 name (SimpleName)
73 identifier='builder'
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='Builder'
77 scope (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='TypeSpec'
80 statement (ExpressionStmt)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='addMethods'
84 scope (MethodCallExpr)
85 name (SimpleName)
86 identifier='addModifiers'
87 scope (MethodCallExpr)
88 name (SimpleName)
89 identifier='superclass'
90 scope (NameExpr)
91 name (SimpleName)
92 identifier='builder'
93 arguments
94 argument (ClassExpr)
95 type (ClassOrInterfaceType)
96 name (SimpleName)
97 identifier='BaseValidator'
98 arguments
99 argument (FieldAccessExpr)
100 name (SimpleName)
101 identifier='PUBLIC'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='Modifier'
105 argument (FieldAccessExpr)
106 name (SimpleName)
107 identifier='FINAL'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='Modifier'
111 arguments
112 argument (NameExpr)
113 name (SimpleName)
114 identifier='allMethods'
115 statement (ExpressionStmt)
116 expression (VariableDeclarationExpr)
117 variables
118 variable (VariableDeclarator)
119 initializer (MethodCallExpr)
120 name (SimpleName)
121 identifier='build'
122 scope (NameExpr)
123 name (SimpleName)
124 identifier='builder'
125 name (SimpleName)
126 identifier='validatorClass'
127 type (ClassOrInterfaceType)
128 name (SimpleName)
129 identifier='TypeSpec'
130 statement (ExpressionStmt)
131 expression (MethodCallExpr)
132 name (SimpleName)
133 identifier='writeTo'
134 scope (MethodCallExpr)
135 name (SimpleName)
136 identifier='build'
137 scope (MethodCallExpr)
138 name (SimpleName)
139 identifier='builder'
140 scope (NameExpr)
141 name (SimpleName)
142 identifier='JavaFile'
143 arguments
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='getPackageName'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='raveIR'
150 argument (NameExpr)
151 name (SimpleName)
152 identifier='validatorClass'
153 arguments
154 argument (NameExpr)
155 name (SimpleName)
156 identifier='filer'
157 type (VoidType)
158 name (SimpleName)
159 identifier='generateJava'
160 parameters
161 parameter (Parameter)
162 isVarArgs='false'
163 name (SimpleName)
164 identifier='raveIR'
165 type (ClassOrInterfaceType)
166 name (SimpleName)
167 identifier='RaveIR'
168 annotations
169 annotation (MarkerAnnotationExpr)
170 name (Name)
171 identifier='NonNull'
172 thrownExceptions
173 thrownException (ClassOrInterfaceType)
174 name (SimpleName)
175 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
16 19
19 20
20 21
21 22
2 23
23 24
24 25
25 26
24 27
27 28
28 29
24 30
30 31
31 32
32 33
31 34
34 35
35 36
36 37
2 38
38 39
39 40
40 41
41 42
42 43
42 44
44 45
45 46
44 47
47 48
48 49
42 50
50 51
51 52
41 53
53 54
41 55
55 56
56 57
2 58
58 59
59 60
60 61
61 62
62 63
63 64
62 65
65 66
66 67
62 68
68 69
69 70
70 71
61 72
72 73
61 74
74 75
75 76
74 77
77 78
78 79
2 80
80 81
81 82
82 83
81 84
84 85
85 86
84 87
87 88
88 89
87 90
90 91
91 92
87 93
93 94
94 95
95 96
96 97
84 98
98 99
99 100
100 101
99 102
102 103
103 104
98 105
105 106
106 107
105 108
108 109
109 110
81 111
111 112
112 113
113 114
2 115
115 116
116 117
117 118
118 119
119 120
120 121
119 122
122 123
123 124
118 125
125 126
118 127
127 128
128 129
2 130
130 131
131 132
132 133
131 134
134 135
135 136
134 137
137 138
138 139
137 140
140 141
141 142
137 143
143 144
144 145
145 146
144 147
147 148
148 149
143 150
150 151
151 152
131 153
153 154
154 155
155 156
0 157
0 158
158 159
0 160
160 161
161 162
161 163
163 164
161 165
165 166
166 167
161 168
168 169
169 170
170 171
0 172
172 173
173 174
174 175

Generates the java code representing the input IR.
