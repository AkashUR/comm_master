69
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Base64OutputStream'
11 arguments
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='outputStream'
15 argument (NameExpr)
16 name (SimpleName)
17 identifier='wrapAt'
18 name (SimpleName)
19 identifier='aux'
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='Base64OutputStream'
23 statement (ExpressionStmt)
24 expression (MethodCallExpr)
25 name (SimpleName)
26 identifier='copy'
27 arguments
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='inputStream'
31 argument (NameExpr)
32 name (SimpleName)
33 identifier='aux'
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='commit'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='aux'
41 type (VoidType)
42 name (SimpleName)
43 identifier='encode'
44 parameters
45 parameter (Parameter)
46 isVarArgs='false'
47 name (SimpleName)
48 identifier='inputStream'
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='InputStream'
52 parameter (Parameter)
53 isVarArgs='false'
54 name (SimpleName)
55 identifier='outputStream'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='OutputStream'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='wrapAt'
63 type (PrimitiveType)
64 type='INT'
65 thrownExceptions
66 thrownException (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
11 15
15 16
16 17
6 18
18 19
6 20
20 21
21 22
2 23
23 24
24 25
25 26
24 27
27 28
28 29
29 30
27 31
31 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
0 41
0 42
42 43
0 44
44 45
45 46
45 47
47 48
45 49
49 50
50 51
44 52
52 53
52 54
54 55
52 56
56 57
57 58
44 59
59 60
59 61
61 62
59 63
63 64
0 65
65 66
66 67
67 68

<p> Encodes data from the given input stream and writes them in the given output stream, wrapping every encoded line every <em>wrapAt</em> characters. A <em>wrapAt</em> value less than 1 disables wrapping. </p> <p> The supplied input stream is read until its end is reached, but it's not closed by this method. </p> <p> The supplied output stream is nor flushed neither closed by this method. </p>
