65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (CastExpr)
8 expression (NameExpr)
9 name (SimpleName)
10 identifier='tessellator'
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='GLUtessellatorImpl'
14 name (SimpleName)
15 identifier='tess'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='GLUtessellatorImpl'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='gluTessNormal'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='tess'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='x'
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='y'
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='z'
36 type (VoidType)
37 name (SimpleName)
38 identifier='gluTessNormal'
39 parameters
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='tessellator'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='GLUtessellator'
47 parameter (Parameter)
48 isVarArgs='false'
49 name (SimpleName)
50 identifier='x'
51 type (PrimitiveType)
52 type='DOUBLE'
53 parameter (Parameter)
54 isVarArgs='false'
55 name (SimpleName)
56 identifier='y'
57 type (PrimitiveType)
58 type='DOUBLE'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='z'
63 type (PrimitiveType)
64 type='DOUBLE'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
26 30
30 31
31 32
26 33
33 34
34 35
0 36
0 37
37 38
0 39
39 40
40 41
40 42
42 43
40 44
44 45
45 46
39 47
47 48
47 49
49 50
47 51
51 52
39 53
53 54
53 55
55 56
53 57
57 58
39 59
59 60
59 61
61 62
59 63
63 64

<b>gluTessNormal</b> describes a normal for a polygon that the program is defining. All input data will be projected onto a plane perpendicular to the one of the three coordinate axes before tessellation and all output triangles will be oriented CCW with repsect to the normal (CW orientation can be obtained by reversing the sign of the supplied normal).  For example, if you know that all polygons lie in the x-y plane, call <b>gluTessNormal</b>(tess, 0.0, 0.0, 0.0) before rendering any polygons.<P> If the supplied normal is (0.0, 0.0, 0.0)(the initial value), the normal is determined as follows.  The direction of the normal, up to its sign, is found by fitting a plane to the vertices, without regard to how the vertices are connected.  It is expected that the input data lies approximately in the plane; otherwise, projection perpendicular to one of the three coordinate axes may substantially change the geometry.  The sign of the normal is chosen so that the sum of the signed areas of all input contours is nonnegative (where a CCW contour has positive area).<P> The supplied normal persists until it is changed by another call to <b>gluTessNormal</b>.
