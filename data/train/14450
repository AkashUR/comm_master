147
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='keySet'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='nodeSetsDepartingFromLink'
13 name (SimpleName)
14 identifier='keySet'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Set'
18 typeArguments
19 typeArgument (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='MotifLink'
22 statement (ExpressionStmt)
23 expression (AssignExpr)
24 operator='ASSIGN'
25 target (NameExpr)
26 name (SimpleName)
27 identifier='nodesWithLink'
28 value (ObjectCreationExpr)
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='HashMap'
32 typeArguments
33 typeArgument (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='MotifLink'
36 typeArgument (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='ArrayList'
39 typeArguments
40 typeArgument (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='Node'
43 arguments
44 argument (MethodCallExpr)
45 name (SimpleName)
46 identifier='size'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='keySet'
50 statement (ForeachStmt)
51 body (BlockStmt)
52 statements
53 statement (ExpressionStmt)
54 expression (VariableDeclarationExpr)
55 variables
56 variable (VariableDeclarator)
57 initializer (MethodCallExpr)
58 name (SimpleName)
59 identifier='get'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='nodeSetsDepartingFromLink'
63 arguments
64 argument (NameExpr)
65 name (SimpleName)
66 identifier='motifLink'
67 name (SimpleName)
68 identifier='nodes'
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='Set'
72 typeArguments
73 typeArgument (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='Node'
76 statement (ExpressionStmt)
77 expression (VariableDeclarationExpr)
78 variables
79 variable (VariableDeclarator)
80 initializer (ObjectCreationExpr)
81 type (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='ArrayList'
84 typeArguments
85 typeArgument (ClassOrInterfaceType)
86 name (SimpleName)
87 identifier='Node'
88 arguments
89 argument (NameExpr)
90 name (SimpleName)
91 identifier='nodes'
92 name (SimpleName)
93 identifier='n'
94 type (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='ArrayList'
97 typeArguments
98 typeArgument (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='Node'
101 statement (ExpressionStmt)
102 expression (MethodCallExpr)
103 name (SimpleName)
104 identifier='sort'
105 scope (NameExpr)
106 name (SimpleName)
107 identifier='Collections'
108 arguments
109 argument (NameExpr)
110 name (SimpleName)
111 identifier='n'
112 statement (ExpressionStmt)
113 expression (MethodCallExpr)
114 name (SimpleName)
115 identifier='put'
116 scope (NameExpr)
117 name (SimpleName)
118 identifier='nodesWithLink'
119 arguments
120 argument (NameExpr)
121 name (SimpleName)
122 identifier='motifLink'
123 argument (NameExpr)
124 name (SimpleName)
125 identifier='n'
126 iterable (NameExpr)
127 name (SimpleName)
128 identifier='keySet'
129 variable (VariableDeclarationExpr)
130 variables
131 variable (VariableDeclarator)
132 name (SimpleName)
133 identifier='motifLink'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='MotifLink'
137 statement (ExpressionStmt)
138 expression (AssignExpr)
139 operator='ASSIGN'
140 target (NameExpr)
141 name (SimpleName)
142 identifier='nodeSetsDepartingFromLink'
143 value (NullLiteralExpr)
144 type (VoidType)
145 name (SimpleName)
146 identifier='finalizeNetworkConstruction'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
15 18
18 19
19 20
20 21
2 22
22 23
23 24
23 25
25 26
26 27
23 28
28 29
29 30
30 31
29 32
32 33
33 34
34 35
32 36
36 37
37 38
36 39
39 40
40 41
41 42
28 43
43 44
44 45
45 46
44 47
47 48
48 49
2 50
50 51
51 52
52 53
53 54
54 55
55 56
56 57
57 58
58 59
57 60
60 61
61 62
57 63
63 64
64 65
65 66
56 67
67 68
56 69
69 70
70 71
69 72
72 73
73 74
74 75
52 76
76 77
77 78
78 79
79 80
80 81
81 82
82 83
81 84
84 85
85 86
86 87
80 88
88 89
89 90
90 91
79 92
92 93
79 94
94 95
95 96
94 97
97 98
98 99
99 100
52 101
101 102
102 103
103 104
102 105
105 106
106 107
102 108
108 109
109 110
110 111
52 112
112 113
113 114
114 115
113 116
116 117
117 118
113 119
119 120
120 121
121 122
119 123
123 124
124 125
50 126
126 127
127 128
50 129
129 130
130 131
131 132
132 133
131 134
134 135
135 136
2 137
137 138
138 139
138 140
140 141
141 142
138 143
0 144
0 145
145 146

Optimises network structure for further processing
