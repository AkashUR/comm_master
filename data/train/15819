88
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ECPoint'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='valueOf'
15 scope (NameExpr)
16 name (SimpleName)
17 identifier='BigInteger'
18 arguments
19 argument (UnaryExpr)
20 operator='MINUS'
21 expression (LongLiteralExpr)
22 value='23456L'
23 argument (FieldAccessExpr)
24 name (SimpleName)
25 identifier='ONE'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='BigInteger'
29 name (SimpleName)
30 identifier='p1'
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='ECPoint'
34 statement (ExpressionStmt)
35 expression (VariableDeclarationExpr)
36 variables
37 variable (VariableDeclarator)
38 initializer (ObjectCreationExpr)
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='ECPoint'
42 arguments
43 argument (MethodCallExpr)
44 name (SimpleName)
45 identifier='valueOf'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='BigInteger'
49 arguments
50 argument (UnaryExpr)
51 operator='MINUS'
52 expression (LongLiteralExpr)
53 value='23456L'
54 argument (MethodCallExpr)
55 name (SimpleName)
56 identifier='valueOf'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='BigInteger'
60 arguments
61 argument (LongLiteralExpr)
62 value='1L'
63 name (SimpleName)
64 identifier='p2'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='ECPoint'
68 statement (ExpressionStmt)
69 expression (MethodCallExpr)
70 name (SimpleName)
71 identifier='assertEquals'
72 arguments
73 argument (MethodCallExpr)
74 name (SimpleName)
75 identifier='hashCode'
76 scope (NameExpr)
77 name (SimpleName)
78 identifier='p1'
79 argument (MethodCallExpr)
80 name (SimpleName)
81 identifier='hashCode'
82 scope (NameExpr)
83 name (SimpleName)
84 identifier='p2'
85 type (VoidType)
86 name (SimpleName)
87 identifier='testHashCode02'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
12 15
15 16
16 17
12 18
18 19
19 20
19 21
21 22
11 23
23 24
24 25
23 26
26 27
27 28
6 29
29 30
6 31
31 32
32 33
2 34
34 35
35 36
36 37
37 38
38 39
39 40
40 41
38 42
42 43
43 44
44 45
43 46
46 47
47 48
43 49
49 50
50 51
50 52
52 53
42 54
54 55
55 56
54 57
57 58
58 59
54 60
60 61
61 62
37 63
63 64
37 65
65 66
66 67
2 68
68 69
69 70
70 71
69 72
72 73
73 74
74 75
73 76
76 77
77 78
72 79
79 80
80 81
79 82
82 83
83 84
0 85
0 86
86 87

Test #2 for <code>hashCode()</code> method.<br> Assertion: must return the same value if invoked on equal (according to the <code>equals(Object)</code> method) objects.
