108
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='zzBuffer'
9 value (FieldAccessExpr)
10 name (SimpleName)
11 identifier='array'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='s'
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (NameExpr)
19 name (SimpleName)
20 identifier='zzStartRead'
21 value (FieldAccessExpr)
22 name (SimpleName)
23 identifier='offset'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='s'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (NameExpr)
31 name (SimpleName)
32 identifier='zzEndRead'
33 value (BinaryExpr)
34 operator='MINUS'
35 left (BinaryExpr)
36 operator='PLUS'
37 left (NameExpr)
38 name (SimpleName)
39 identifier='zzStartRead'
40 right (FieldAccessExpr)
41 name (SimpleName)
42 identifier='count'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='s'
46 right (IntegerLiteralExpr)
47 value='1'
48 statement (ExpressionStmt)
49 expression (AssignExpr)
50 operator='ASSIGN'
51 target (NameExpr)
52 name (SimpleName)
53 identifier='zzCurrentPos'
54 value (AssignExpr)
55 operator='ASSIGN'
56 target (NameExpr)
57 name (SimpleName)
58 identifier='zzMarkedPos'
59 value (FieldAccessExpr)
60 name (SimpleName)
61 identifier='offset'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='s'
65 statement (ExpressionStmt)
66 expression (AssignExpr)
67 operator='ASSIGN'
68 target (NameExpr)
69 name (SimpleName)
70 identifier='zzLexicalState'
71 value (NameExpr)
72 name (SimpleName)
73 identifier='YYINITIAL'
74 statement (ExpressionStmt)
75 expression (AssignExpr)
76 operator='ASSIGN'
77 target (NameExpr)
78 name (SimpleName)
79 identifier='zzReader'
80 value (NameExpr)
81 name (SimpleName)
82 identifier='reader'
83 statement (ExpressionStmt)
84 expression (AssignExpr)
85 operator='ASSIGN'
86 target (NameExpr)
87 name (SimpleName)
88 identifier='zzAtEOF'
89 value (BooleanLiteralExpr)
90 value='false'
91 type (VoidType)
92 name (SimpleName)
93 identifier='yyreset'
94 parameters
95 parameter (Parameter)
96 isVarArgs='false'
97 name (SimpleName)
98 identifier='reader'
99 type (ClassOrInterfaceType)
100 name (SimpleName)
101 identifier='Reader'
102 scope (ClassOrInterfaceType)
103 name (SimpleName)
104 identifier='io'
105 scope (ClassOrInterfaceType)
106 name (SimpleName)
107 identifier='java'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
2 15
15 16
16 17
16 18
18 19
19 20
16 21
21 22
22 23
21 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
28 33
33 34
33 35
35 36
35 37
37 38
38 39
35 40
40 41
41 42
40 43
43 44
44 45
33 46
46 47
2 48
48 49
49 50
49 51
51 52
52 53
49 54
54 55
54 56
56 57
57 58
54 59
59 60
60 61
59 62
62 63
63 64
2 65
65 66
66 67
66 68
68 69
69 70
66 71
71 72
72 73
2 74
74 75
75 76
75 77
77 78
78 79
75 80
80 81
81 82
2 83
83 84
84 85
84 86
86 87
87 88
84 89
89 90
0 91
0 92
92 93
0 94
94 95
95 96
95 97
97 98
95 99
99 100
100 101
99 102
102 103
103 104
102 105
105 106
106 107

Resets the scanner to read from a new input stream. Does not close the old reader. All internal variables are reset, the old input stream <b>cannot</b> be reused (internal buffer is discarded and lost). Lexical state is set to <tt>YY_INITIAL</tt>.
