249
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='fromHtml'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Html'
13 arguments
14 argument (StringLiteralExpr)
15 value='Hello <b>b<i>bi</b>i</i>'
16 name (SimpleName)
17 identifier='spanned'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='Spanned'
21 statement (ExpressionStmt)
22 expression (VariableDeclarationExpr)
23 variables
24 variable (VariableDeclarator)
25 initializer (MethodCallExpr)
26 name (SimpleName)
27 identifier='getSpans'
28 scope (NameExpr)
29 name (SimpleName)
30 identifier='spanned'
31 arguments
32 argument (IntegerLiteralExpr)
33 value='0'
34 argument (IntegerLiteralExpr)
35 value='100'
36 argument (ClassExpr)
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='Object'
40 name (SimpleName)
41 identifier='spans'
42 type (ArrayType)
43 origin='TYPE'
44 componentType (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='Object'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='assertEquals'
51 arguments
52 argument (FieldAccessExpr)
53 name (SimpleName)
54 identifier='ITALIC'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='Typeface'
58 argument (MethodCallExpr)
59 name (SimpleName)
60 identifier='getStyle'
61 scope (EnclosedExpr)
62 inner (CastExpr)
63 expression (ArrayAccessExpr)
64 index (IntegerLiteralExpr)
65 value='0'
66 name (NameExpr)
67 name (SimpleName)
68 identifier='spans'
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='StyleSpan'
72 statement (ExpressionStmt)
73 expression (MethodCallExpr)
74 name (SimpleName)
75 identifier='assertEquals'
76 arguments
77 argument (IntegerLiteralExpr)
78 value='7'
79 argument (MethodCallExpr)
80 name (SimpleName)
81 identifier='getSpanStart'
82 scope (NameExpr)
83 name (SimpleName)
84 identifier='spanned'
85 arguments
86 argument (ArrayAccessExpr)
87 index (IntegerLiteralExpr)
88 value='0'
89 name (NameExpr)
90 name (SimpleName)
91 identifier='spans'
92 statement (ExpressionStmt)
93 expression (MethodCallExpr)
94 name (SimpleName)
95 identifier='assertEquals'
96 arguments
97 argument (IntegerLiteralExpr)
98 value='9'
99 argument (MethodCallExpr)
100 name (SimpleName)
101 identifier='getSpanEnd'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='spanned'
105 arguments
106 argument (ArrayAccessExpr)
107 index (IntegerLiteralExpr)
108 value='0'
109 name (NameExpr)
110 name (SimpleName)
111 identifier='spans'
112 statement (ExpressionStmt)
113 expression (MethodCallExpr)
114 name (SimpleName)
115 identifier='assertEquals'
116 arguments
117 argument (FieldAccessExpr)
118 name (SimpleName)
119 identifier='BOLD'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='Typeface'
123 argument (MethodCallExpr)
124 name (SimpleName)
125 identifier='getStyle'
126 scope (EnclosedExpr)
127 inner (CastExpr)
128 expression (ArrayAccessExpr)
129 index (IntegerLiteralExpr)
130 value='1'
131 name (NameExpr)
132 name (SimpleName)
133 identifier='spans'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='StyleSpan'
137 statement (ExpressionStmt)
138 expression (MethodCallExpr)
139 name (SimpleName)
140 identifier='assertEquals'
141 arguments
142 argument (IntegerLiteralExpr)
143 value='6'
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='getSpanStart'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='spanned'
150 arguments
151 argument (ArrayAccessExpr)
152 index (IntegerLiteralExpr)
153 value='1'
154 name (NameExpr)
155 name (SimpleName)
156 identifier='spans'
157 statement (ExpressionStmt)
158 expression (MethodCallExpr)
159 name (SimpleName)
160 identifier='assertEquals'
161 arguments
162 argument (IntegerLiteralExpr)
163 value='9'
164 argument (MethodCallExpr)
165 name (SimpleName)
166 identifier='getSpanEnd'
167 scope (NameExpr)
168 name (SimpleName)
169 identifier='spanned'
170 arguments
171 argument (ArrayAccessExpr)
172 index (IntegerLiteralExpr)
173 value='1'
174 name (NameExpr)
175 name (SimpleName)
176 identifier='spans'
177 statement (ExpressionStmt)
178 expression (MethodCallExpr)
179 name (SimpleName)
180 identifier='assertEquals'
181 arguments
182 argument (FieldAccessExpr)
183 name (SimpleName)
184 identifier='ITALIC'
185 scope (NameExpr)
186 name (SimpleName)
187 identifier='Typeface'
188 argument (MethodCallExpr)
189 name (SimpleName)
190 identifier='getStyle'
191 scope (EnclosedExpr)
192 inner (CastExpr)
193 expression (ArrayAccessExpr)
194 index (IntegerLiteralExpr)
195 value='2'
196 name (NameExpr)
197 name (SimpleName)
198 identifier='spans'
199 type (ClassOrInterfaceType)
200 name (SimpleName)
201 identifier='StyleSpan'
202 statement (ExpressionStmt)
203 expression (MethodCallExpr)
204 name (SimpleName)
205 identifier='assertEquals'
206 arguments
207 argument (IntegerLiteralExpr)
208 value='9'
209 argument (MethodCallExpr)
210 name (SimpleName)
211 identifier='getSpanStart'
212 scope (NameExpr)
213 name (SimpleName)
214 identifier='spanned'
215 arguments
216 argument (ArrayAccessExpr)
217 index (IntegerLiteralExpr)
218 value='2'
219 name (NameExpr)
220 name (SimpleName)
221 identifier='spans'
222 statement (ExpressionStmt)
223 expression (MethodCallExpr)
224 name (SimpleName)
225 identifier='assertEquals'
226 arguments
227 argument (IntegerLiteralExpr)
228 value='10'
229 argument (MethodCallExpr)
230 name (SimpleName)
231 identifier='getSpanEnd'
232 scope (NameExpr)
233 name (SimpleName)
234 identifier='spanned'
235 arguments
236 argument (ArrayAccessExpr)
237 index (IntegerLiteralExpr)
238 value='2'
239 name (NameExpr)
240 name (SimpleName)
241 identifier='spans'
242 type (VoidType)
243 name (SimpleName)
244 identifier='testBadHtml'
245 annotations
246 annotation (MarkerAnnotationExpr)
247 name (Name)
248 identifier='SmallTest'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
6 16
16 17
6 18
18 19
19 20
2 21
21 22
22 23
23 24
24 25
25 26
26 27
25 28
28 29
29 30
25 31
31 32
32 33
31 34
34 35
31 36
36 37
37 38
38 39
24 40
40 41
24 42
42 43
42 44
44 45
45 46
2 47
47 48
48 49
49 50
48 51
51 52
52 53
53 54
52 55
55 56
56 57
51 58
58 59
59 60
58 61
61 62
62 63
63 64
64 65
63 66
66 67
67 68
62 69
69 70
70 71
2 72
72 73
73 74
74 75
73 76
76 77
77 78
76 79
79 80
80 81
79 82
82 83
83 84
79 85
85 86
86 87
87 88
86 89
89 90
90 91
2 92
92 93
93 94
94 95
93 96
96 97
97 98
96 99
99 100
100 101
99 102
102 103
103 104
99 105
105 106
106 107
107 108
106 109
109 110
110 111
2 112
112 113
113 114
114 115
113 116
116 117
117 118
118 119
117 120
120 121
121 122
116 123
123 124
124 125
123 126
126 127
127 128
128 129
129 130
128 131
131 132
132 133
127 134
134 135
135 136
2 137
137 138
138 139
139 140
138 141
141 142
142 143
141 144
144 145
145 146
144 147
147 148
148 149
144 150
150 151
151 152
152 153
151 154
154 155
155 156
2 157
157 158
158 159
159 160
158 161
161 162
162 163
161 164
164 165
165 166
164 167
167 168
168 169
164 170
170 171
171 172
172 173
171 174
174 175
175 176
2 177
177 178
178 179
179 180
178 181
181 182
182 183
183 184
182 185
185 186
186 187
181 188
188 189
189 190
188 191
191 192
192 193
193 194
194 195
193 196
196 197
197 198
192 199
199 200
200 201
2 202
202 203
203 204
204 205
203 206
206 207
207 208
206 209
209 210
210 211
209 212
212 213
213 214
209 215
215 216
216 217
217 218
216 219
219 220
220 221
2 222
222 223
223 224
224 225
223 226
226 227
227 228
226 229
229 230
230 231
229 232
232 233
233 234
229 235
235 236
236 237
237 238
236 239
239 240
240 241
0 242
0 243
243 244
0 245
245 246
246 247
247 248

Tests that the parser can handle mal-formed HTML.
