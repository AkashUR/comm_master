99
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getRegister'
10 scope (MethodCallExpr)
11 name (SimpleName)
12 identifier='getResult'
13 scope (NameExpr)
14 name (SimpleName)
15 identifier='GuardedUnary'
16 arguments
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='s'
20 name (SimpleName)
21 identifier='result'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='Register'
25 statement (ExpressionStmt)
26 expression (VariableDeclarationExpr)
27 variables
28 variable (VariableDeclarator)
29 initializer (MethodCallExpr)
30 name (SimpleName)
31 identifier='findOrCreateVertex'
32 arguments
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='result'
36 name (SimpleName)
37 identifier='v'
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='ValueGraphVertex'
41 statement (ExpressionStmt)
42 expression (VariableDeclarationExpr)
43 variables
44 variable (VariableDeclarator)
45 initializer (MethodCallExpr)
46 name (SimpleName)
47 identifier='getVal'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='GuardedUnary'
51 arguments
52 argument (NameExpr)
53 name (SimpleName)
54 identifier='s'
55 name (SimpleName)
56 identifier='val'
57 type (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='Operand'
60 statement (ExpressionStmt)
61 expression (AssignExpr)
62 operator='ASSIGN'
63 target (NameExpr)
64 name (SimpleName)
65 identifier='val'
66 value (MethodCallExpr)
67 name (SimpleName)
68 identifier='bypassMoves'
69 arguments
70 argument (NameExpr)
71 name (SimpleName)
72 identifier='val'
73 statement (ExpressionStmt)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='copyVertex'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='v'
80 arguments
81 argument (MethodCallExpr)
82 name (SimpleName)
83 identifier='findOrCreateVertex'
84 arguments
85 argument (NameExpr)
86 name (SimpleName)
87 identifier='val'
88 type (VoidType)
89 name (SimpleName)
90 identifier='processPi'
91 parameters
92 parameter (Parameter)
93 isVarArgs='false'
94 name (SimpleName)
95 identifier='s'
96 type (ClassOrInterfaceType)
97 name (SimpleName)
98 identifier='Instruction'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
10 16
16 17
17 18
18 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
28 29
29 30
30 31
29 32
32 33
33 34
34 35
28 36
36 37
28 38
38 39
39 40
2 41
41 42
42 43
43 44
44 45
45 46
46 47
45 48
48 49
49 50
45 51
51 52
52 53
53 54
44 55
55 56
44 57
57 58
58 59
2 60
60 61
61 62
61 63
63 64
64 65
61 66
66 67
67 68
66 69
69 70
70 71
71 72
2 73
73 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
82 83
81 84
84 85
85 86
86 87
0 88
0 89
89 90
0 91
91 92
92 93
92 94
94 95
92 96
96 97
97 98

Update the value graph to account for a given PI instruction. <p><b>PRECONDITION:</b> <code> s.operator == PI </code>
