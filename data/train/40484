299
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='get'
10 scope (MethodCallExpr)
11 name (SimpleName)
12 identifier='getParkingOccupancyBins'
13 scope (MethodCallExpr)
14 name (SimpleName)
15 identifier='getParkingOccupancyMaintainer'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='parkingBookKeeper'
19 arguments
20 argument (MethodCallExpr)
21 name (SimpleName)
22 identifier='create'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='Id'
26 arguments
27 argument (IntegerLiteralExpr)
28 value='36'
29 argument (ClassExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='ActivityFacility'
33 name (SimpleName)
34 identifier='pob'
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='ParkingOccupancyBins'
38 statement (ExpressionStmt)
39 expression (MethodCallExpr)
40 name (SimpleName)
41 identifier='assertEquals'
42 arguments
43 argument (IntegerLiteralExpr)
44 value='3'
45 argument (MethodCallExpr)
46 name (SimpleName)
47 identifier='getOccupancy'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='pob'
51 arguments
52 argument (IntegerLiteralExpr)
53 value='38000'
54 statement (ExpressionStmt)
55 expression (AssignExpr)
56 operator='ASSIGN'
57 target (NameExpr)
58 name (SimpleName)
59 identifier='pob'
60 value (MethodCallExpr)
61 name (SimpleName)
62 identifier='get'
63 scope (MethodCallExpr)
64 name (SimpleName)
65 identifier='getParkingOccupancyBins'
66 scope (MethodCallExpr)
67 name (SimpleName)
68 identifier='getParkingOccupancyMaintainer'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='parkingBookKeeper'
72 arguments
73 argument (MethodCallExpr)
74 name (SimpleName)
75 identifier='create'
76 scope (NameExpr)
77 name (SimpleName)
78 identifier='Id'
79 arguments
80 argument (IntegerLiteralExpr)
81 value='1'
82 argument (ClassExpr)
83 type (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='ActivityFacility'
86 statement (ExpressionStmt)
87 expression (MethodCallExpr)
88 name (SimpleName)
89 identifier='assertEquals'
90 arguments
91 argument (IntegerLiteralExpr)
92 value='3'
93 argument (MethodCallExpr)
94 name (SimpleName)
95 identifier='getOccupancy'
96 scope (NameExpr)
97 name (SimpleName)
98 identifier='pob'
99 arguments
100 argument (IntegerLiteralExpr)
101 value='0'
102 statement (ExpressionStmt)
103 expression (VariableDeclarationExpr)
104 variables
105 variable (VariableDeclarator)
106 initializer (MethodCallExpr)
107 name (SimpleName)
108 identifier='get'
109 scope (MethodCallExpr)
110 name (SimpleName)
111 identifier='getParkingCapacityFullTimes'
112 scope (MethodCallExpr)
113 name (SimpleName)
114 identifier='getParkingOccupancyMaintainer'
115 scope (NameExpr)
116 name (SimpleName)
117 identifier='parkingBookKeeper'
118 arguments
119 argument (MethodCallExpr)
120 name (SimpleName)
121 identifier='create'
122 scope (NameExpr)
123 name (SimpleName)
124 identifier='Id'
125 arguments
126 argument (IntegerLiteralExpr)
127 value='36'
128 argument (ClassExpr)
129 type (ClassOrInterfaceType)
130 name (SimpleName)
131 identifier='ActivityFacility'
132 name (SimpleName)
133 identifier='pcfl'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='ParkingCapacityFullLogger'
137 statement (ExpressionStmt)
138 expression (MethodCallExpr)
139 name (SimpleName)
140 identifier='assertEquals'
141 arguments
142 argument (BooleanLiteralExpr)
143 value='true'
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='isParkingFullAtTime'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='pcfl'
150 arguments
151 argument (IntegerLiteralExpr)
152 value='38000'
153 statement (ExpressionStmt)
154 expression (MethodCallExpr)
155 name (SimpleName)
156 identifier='assertEquals'
157 arguments
158 argument (BooleanLiteralExpr)
159 value='false'
160 argument (MethodCallExpr)
161 name (SimpleName)
162 identifier='isParkingFullAtTime'
163 scope (NameExpr)
164 name (SimpleName)
165 identifier='pcfl'
166 arguments
167 argument (IntegerLiteralExpr)
168 value='0'
169 statement (ExpressionStmt)
170 expression (AssignExpr)
171 operator='ASSIGN'
172 target (NameExpr)
173 name (SimpleName)
174 identifier='pcfl'
175 value (MethodCallExpr)
176 name (SimpleName)
177 identifier='get'
178 scope (MethodCallExpr)
179 name (SimpleName)
180 identifier='getParkingCapacityFullTimes'
181 scope (MethodCallExpr)
182 name (SimpleName)
183 identifier='getParkingOccupancyMaintainer'
184 scope (NameExpr)
185 name (SimpleName)
186 identifier='parkingBookKeeper'
187 arguments
188 argument (MethodCallExpr)
189 name (SimpleName)
190 identifier='create'
191 scope (NameExpr)
192 name (SimpleName)
193 identifier='Id'
194 arguments
195 argument (IntegerLiteralExpr)
196 value='1'
197 argument (ClassExpr)
198 type (ClassOrInterfaceType)
199 name (SimpleName)
200 identifier='ActivityFacility'
201 statement (ExpressionStmt)
202 expression (MethodCallExpr)
203 name (SimpleName)
204 identifier='assertEquals'
205 arguments
206 argument (BooleanLiteralExpr)
207 value='true'
208 argument (MethodCallExpr)
209 name (SimpleName)
210 identifier='isParkingFullAtTime'
211 scope (NameExpr)
212 name (SimpleName)
213 identifier='pcfl'
214 arguments
215 argument (IntegerLiteralExpr)
216 value='0'
217 statement (ExpressionStmt)
218 expression (MethodCallExpr)
219 name (SimpleName)
220 identifier='assertEquals'
221 arguments
222 argument (BooleanLiteralExpr)
223 value='false'
224 argument (MethodCallExpr)
225 name (SimpleName)
226 identifier='isParkingFullAtTime'
227 scope (NameExpr)
228 name (SimpleName)
229 identifier='pcfl'
230 arguments
231 argument (IntegerLiteralExpr)
232 value='38000'
233 statement (ExpressionStmt)
234 expression (VariableDeclarationExpr)
235 variables
236 variable (VariableDeclarator)
237 initializer (MethodCallExpr)
238 name (SimpleName)
239 identifier='get'
240 scope (MethodCallExpr)
241 name (SimpleName)
242 identifier='getParkingArrivalDepartureLog'
243 scope (MethodCallExpr)
244 name (SimpleName)
245 identifier='getParkingOccupancyMaintainer'
246 scope (NameExpr)
247 name (SimpleName)
248 identifier='parkingBookKeeper'
249 arguments
250 argument (MethodCallExpr)
251 name (SimpleName)
252 identifier='create'
253 scope (NameExpr)
254 name (SimpleName)
255 identifier='Id'
256 arguments
257 argument (IntegerLiteralExpr)
258 value='1'
259 argument (ClassExpr)
260 type (ClassOrInterfaceType)
261 name (SimpleName)
262 identifier='Person'
263 name (SimpleName)
264 identifier='pal'
265 type (ClassOrInterfaceType)
266 name (SimpleName)
267 identifier='ParkingArrivalDepartureLog'
268 statement (ExpressionStmt)
269 expression (MethodCallExpr)
270 name (SimpleName)
271 identifier='assertEquals'
272 arguments
273 argument (IntegerLiteralExpr)
274 value='2'
275 argument (MethodCallExpr)
276 name (SimpleName)
277 identifier='size'
278 scope (MethodCallExpr)
279 name (SimpleName)
280 identifier='getParkingArrivalDepartureList'
281 scope (NameExpr)
282 name (SimpleName)
283 identifier='pal'
284 type (VoidType)
285 name (SimpleName)
286 identifier='notifyShutdown'
287 parameters
288 parameter (Parameter)
289 isVarArgs='false'
290 name (SimpleName)
291 identifier='event'
292 type (ClassOrInterfaceType)
293 name (SimpleName)
294 identifier='ShutdownEvent'
295 annotations
296 annotation (MarkerAnnotationExpr)
297 name (Name)
298 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
13 16
16 17
17 18
7 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
26 29
29 30
30 31
31 32
6 33
33 34
6 35
35 36
36 37
2 38
38 39
39 40
40 41
39 42
42 43
43 44
42 45
45 46
46 47
45 48
48 49
49 50
45 51
51 52
52 53
2 54
54 55
55 56
55 57
57 58
58 59
55 60
60 61
61 62
60 63
63 64
64 65
63 66
66 67
67 68
66 69
69 70
70 71
60 72
72 73
73 74
74 75
73 76
76 77
77 78
73 79
79 80
80 81
79 82
82 83
83 84
84 85
2 86
86 87
87 88
88 89
87 90
90 91
91 92
90 93
93 94
94 95
93 96
96 97
97 98
93 99
99 100
100 101
2 102
102 103
103 104
104 105
105 106
106 107
107 108
106 109
109 110
110 111
109 112
112 113
113 114
112 115
115 116
116 117
106 118
118 119
119 120
120 121
119 122
122 123
123 124
119 125
125 126
126 127
125 128
128 129
129 130
130 131
105 132
132 133
105 134
134 135
135 136
2 137
137 138
138 139
139 140
138 141
141 142
142 143
141 144
144 145
145 146
144 147
147 148
148 149
144 150
150 151
151 152
2 153
153 154
154 155
155 156
154 157
157 158
158 159
157 160
160 161
161 162
160 163
163 164
164 165
160 166
166 167
167 168
2 169
169 170
170 171
170 172
172 173
173 174
170 175
175 176
176 177
175 178
178 179
179 180
178 181
181 182
182 183
181 184
184 185
185 186
175 187
187 188
188 189
189 190
188 191
191 192
192 193
188 194
194 195
195 196
194 197
197 198
198 199
199 200
2 201
201 202
202 203
203 204
202 205
205 206
206 207
205 208
208 209
209 210
208 211
211 212
212 213
208 214
214 215
215 216
2 217
217 218
218 219
219 220
218 221
221 222
222 223
221 224
224 225
225 226
224 227
227 228
228 229
224 230
230 231
231 232
2 233
233 234
234 235
235 236
236 237
237 238
238 239
237 240
240 241
241 242
240 243
243 244
244 245
243 246
246 247
247 248
237 249
249 250
250 251
251 252
250 253
253 254
254 255
250 256
256 257
257 258
256 259
259 260
260 261
261 262
236 263
263 264
236 265
265 266
266 267
2 268
268 269
269 270
270 271
269 272
272 273
273 274
272 275
275 276
276 277
275 278
278 279
279 280
278 281
281 282
282 283
0 284
0 285
285 286
0 287
287 288
288 289
288 290
290 291
288 292
292 293
293 294
0 295
295 296
296 297
297 298

add test just before shutdown of the system.
