244
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (NameExpr)
5 name (SimpleName)
6 identifier='featureID'
7 entries
8 entrie (SwitchEntryStmt)
9 label (FieldAccessExpr)
10 name (SimpleName)
11 identifier='TFUNCTION__AST_ELEMENT'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='TypesPackage'
15 statements
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setAstElement'
20 arguments
21 argument (CastExpr)
22 expression (NameExpr)
23 name (SimpleName)
24 identifier='newValue'
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='EObject'
28 statement (ReturnStmt)
29 entrie (SwitchEntryStmt)
30 label (FieldAccessExpr)
31 name (SimpleName)
32 identifier='TFUNCTION__EXTERNAL'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='TypesPackage'
36 statements
37 statement (ExpressionStmt)
38 expression (MethodCallExpr)
39 name (SimpleName)
40 identifier='setExternal'
41 arguments
42 argument (CastExpr)
43 expression (NameExpr)
44 name (SimpleName)
45 identifier='newValue'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='Boolean'
49 statement (ReturnStmt)
50 entrie (SwitchEntryStmt)
51 label (FieldAccessExpr)
52 name (SimpleName)
53 identifier='TFUNCTION__FPARS'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='TypesPackage'
57 statements
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='clear'
62 scope (MethodCallExpr)
63 name (SimpleName)
64 identifier='getFpars'
65 statement (ExpressionStmt)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='addAll'
69 scope (MethodCallExpr)
70 name (SimpleName)
71 identifier='getFpars'
72 arguments
73 argument (CastExpr)
74 expression (NameExpr)
75 name (SimpleName)
76 identifier='newValue'
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='Collection'
80 typeArguments
81 typeArgument (WildcardType)
82 extendedType (ClassOrInterfaceType)
83 name (SimpleName)
84 identifier='TFormalParameter'
85 statement (ReturnStmt)
86 entrie (SwitchEntryStmt)
87 label (FieldAccessExpr)
88 name (SimpleName)
89 identifier='TFUNCTION__RETURN_TYPE_REF'
90 scope (NameExpr)
91 name (SimpleName)
92 identifier='TypesPackage'
93 statements
94 statement (ExpressionStmt)
95 expression (MethodCallExpr)
96 name (SimpleName)
97 identifier='setReturnTypeRef'
98 arguments
99 argument (CastExpr)
100 expression (NameExpr)
101 name (SimpleName)
102 identifier='newValue'
103 type (ClassOrInterfaceType)
104 name (SimpleName)
105 identifier='TypeRef'
106 statement (ReturnStmt)
107 entrie (SwitchEntryStmt)
108 label (FieldAccessExpr)
109 name (SimpleName)
110 identifier='TFUNCTION__TYPE_VARS'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='TypesPackage'
114 statements
115 statement (ExpressionStmt)
116 expression (MethodCallExpr)
117 name (SimpleName)
118 identifier='clear'
119 scope (MethodCallExpr)
120 name (SimpleName)
121 identifier='getTypeVars'
122 statement (ExpressionStmt)
123 expression (MethodCallExpr)
124 name (SimpleName)
125 identifier='addAll'
126 scope (MethodCallExpr)
127 name (SimpleName)
128 identifier='getTypeVars'
129 arguments
130 argument (CastExpr)
131 expression (NameExpr)
132 name (SimpleName)
133 identifier='newValue'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='Collection'
137 typeArguments
138 typeArgument (WildcardType)
139 extendedType (ClassOrInterfaceType)
140 name (SimpleName)
141 identifier='TypeVariable'
142 statement (ReturnStmt)
143 entrie (SwitchEntryStmt)
144 label (FieldAccessExpr)
145 name (SimpleName)
146 identifier='TFUNCTION__DECLARED_THIS_TYPE'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='TypesPackage'
150 statements
151 statement (ExpressionStmt)
152 expression (MethodCallExpr)
153 name (SimpleName)
154 identifier='setDeclaredThisType'
155 arguments
156 argument (CastExpr)
157 expression (NameExpr)
158 name (SimpleName)
159 identifier='newValue'
160 type (ClassOrInterfaceType)
161 name (SimpleName)
162 identifier='TypeRef'
163 statement (ReturnStmt)
164 entrie (SwitchEntryStmt)
165 label (FieldAccessExpr)
166 name (SimpleName)
167 identifier='TFUNCTION__DECLARED_ASYNC'
168 scope (NameExpr)
169 name (SimpleName)
170 identifier='TypesPackage'
171 statements
172 statement (ExpressionStmt)
173 expression (MethodCallExpr)
174 name (SimpleName)
175 identifier='setDeclaredAsync'
176 arguments
177 argument (CastExpr)
178 expression (NameExpr)
179 name (SimpleName)
180 identifier='newValue'
181 type (ClassOrInterfaceType)
182 name (SimpleName)
183 identifier='Boolean'
184 statement (ReturnStmt)
185 entrie (SwitchEntryStmt)
186 label (FieldAccessExpr)
187 name (SimpleName)
188 identifier='TFUNCTION__CONSTRUCTOR'
189 scope (NameExpr)
190 name (SimpleName)
191 identifier='TypesPackage'
192 statements
193 statement (ExpressionStmt)
194 expression (MethodCallExpr)
195 name (SimpleName)
196 identifier='setConstructor'
197 arguments
198 argument (CastExpr)
199 expression (NameExpr)
200 name (SimpleName)
201 identifier='newValue'
202 type (ClassOrInterfaceType)
203 name (SimpleName)
204 identifier='Boolean'
205 statement (ReturnStmt)
206 statement (ExpressionStmt)
207 expression (MethodCallExpr)
208 name (SimpleName)
209 identifier='eSet'
210 scope (SuperExpr)
211 arguments
212 argument (NameExpr)
213 name (SimpleName)
214 identifier='featureID'
215 argument (NameExpr)
216 name (SimpleName)
217 identifier='newValue'
218 type (VoidType)
219 name (SimpleName)
220 identifier='eSet'
221 parameters
222 parameter (Parameter)
223 isVarArgs='false'
224 name (SimpleName)
225 identifier='featureID'
226 type (PrimitiveType)
227 type='INT'
228 parameter (Parameter)
229 isVarArgs='false'
230 name (SimpleName)
231 identifier='newValue'
232 type (ClassOrInterfaceType)
233 name (SimpleName)
234 identifier='Object'
235 annotations
236 annotation (SingleMemberAnnotationExpr)
237 memberValue (StringLiteralExpr)
238 value='unchecked'
239 name (Name)
240 identifier='SuppressWarnings'
241 annotation (MarkerAnnotationExpr)
242 name (Name)
243 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
3 7
7 8
8 9
9 10
10 11
9 12
12 13
13 14
8 15
15 16
16 17
17 18
18 19
17 20
20 21
21 22
22 23
23 24
21 25
25 26
26 27
15 28
7 29
29 30
30 31
31 32
30 33
33 34
34 35
29 36
36 37
37 38
38 39
39 40
38 41
41 42
42 43
43 44
44 45
42 46
46 47
47 48
36 49
7 50
50 51
51 52
52 53
51 54
54 55
55 56
50 57
57 58
58 59
59 60
60 61
59 62
62 63
63 64
57 65
65 66
66 67
67 68
66 69
69 70
70 71
66 72
72 73
73 74
74 75
75 76
73 77
77 78
78 79
77 80
80 81
81 82
82 83
83 84
57 85
7 86
86 87
87 88
88 89
87 90
90 91
91 92
86 93
93 94
94 95
95 96
96 97
95 98
98 99
99 100
100 101
101 102
99 103
103 104
104 105
93 106
7 107
107 108
108 109
109 110
108 111
111 112
112 113
107 114
114 115
115 116
116 117
117 118
116 119
119 120
120 121
114 122
122 123
123 124
124 125
123 126
126 127
127 128
123 129
129 130
130 131
131 132
132 133
130 134
134 135
135 136
134 137
137 138
138 139
139 140
140 141
114 142
7 143
143 144
144 145
145 146
144 147
147 148
148 149
143 150
150 151
151 152
152 153
153 154
152 155
155 156
156 157
157 158
158 159
156 160
160 161
161 162
150 163
7 164
164 165
165 166
166 167
165 168
168 169
169 170
164 171
171 172
172 173
173 174
174 175
173 176
176 177
177 178
178 179
179 180
177 181
181 182
182 183
171 184
7 185
185 186
186 187
187 188
186 189
189 190
190 191
185 192
192 193
193 194
194 195
195 196
194 197
197 198
198 199
199 200
200 201
198 202
202 203
203 204
192 205
2 206
206 207
207 208
208 209
207 210
207 211
211 212
212 213
213 214
211 215
215 216
216 217
0 218
0 219
219 220
0 221
221 222
222 223
222 224
224 225
222 226
226 227
221 228
228 229
228 230
230 231
228 232
232 233
233 234
0 235
235 236
236 237
237 238
236 239
239 240
235 241
241 242
242 243

<!-- begin-user-doc --> <!-- end-user-doc -->
