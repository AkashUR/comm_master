134
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='DefaultPieDataset'
11 name (SimpleName)
12 identifier='d1'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='DefaultPieDataset'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setValue'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='d1'
23 arguments
24 argument (StringLiteralExpr)
25 value='V1'
26 argument (ObjectCreationExpr)
27 type (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='Integer'
30 arguments
31 argument (IntegerLiteralExpr)
32 value='1'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='setValue'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='d1'
40 arguments
41 argument (StringLiteralExpr)
42 value='V2'
43 argument (NullLiteralExpr)
44 statement (ExpressionStmt)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='setValue'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='d1'
51 arguments
52 argument (StringLiteralExpr)
53 value='V3'
54 argument (ObjectCreationExpr)
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='Integer'
58 arguments
59 argument (IntegerLiteralExpr)
60 value='3'
61 statement (ExpressionStmt)
62 expression (VariableDeclarationExpr)
63 variables
64 variable (VariableDeclarator)
65 initializer (CastExpr)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='clone'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='d1'
72 type (ClassOrInterfaceType)
73 name (SimpleName)
74 identifier='DefaultPieDataset'
75 name (SimpleName)
76 identifier='d2'
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='DefaultPieDataset'
80 statement (ExpressionStmt)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='assertTrue'
84 arguments
85 argument (BinaryExpr)
86 operator='NOT_EQUALS'
87 left (NameExpr)
88 name (SimpleName)
89 identifier='d1'
90 right (NameExpr)
91 name (SimpleName)
92 identifier='d2'
93 statement (ExpressionStmt)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='assertTrue'
97 arguments
98 argument (BinaryExpr)
99 operator='EQUALS'
100 left (MethodCallExpr)
101 name (SimpleName)
102 identifier='getClass'
103 scope (NameExpr)
104 name (SimpleName)
105 identifier='d1'
106 right (MethodCallExpr)
107 name (SimpleName)
108 identifier='getClass'
109 scope (NameExpr)
110 name (SimpleName)
111 identifier='d2'
112 statement (ExpressionStmt)
113 expression (MethodCallExpr)
114 name (SimpleName)
115 identifier='assertTrue'
116 arguments
117 argument (MethodCallExpr)
118 name (SimpleName)
119 identifier='equals'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='d1'
123 arguments
124 argument (NameExpr)
125 name (SimpleName)
126 identifier='d2'
127 type (VoidType)
128 name (SimpleName)
129 identifier='testCloning'
130 thrownExceptions
131 thrownException (ClassOrInterfaceType)
132 name (SimpleName)
133 identifier='CloneNotSupportedException'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
23 26
26 27
27 28
28 29
26 30
30 31
31 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
34 40
40 41
41 42
40 43
2 44
44 45
45 46
46 47
45 48
48 49
49 50
45 51
51 52
52 53
51 54
54 55
55 56
56 57
54 58
58 59
59 60
2 61
61 62
62 63
63 64
64 65
65 66
66 67
67 68
66 69
69 70
70 71
65 72
72 73
73 74
64 75
75 76
64 77
77 78
78 79
2 80
80 81
81 82
82 83
81 84
84 85
85 86
85 87
87 88
88 89
85 90
90 91
91 92
2 93
93 94
94 95
95 96
94 97
97 98
98 99
98 100
100 101
101 102
100 103
103 104
104 105
98 106
106 107
107 108
106 109
109 110
110 111
2 112
112 113
113 114
114 115
113 116
116 117
117 118
118 119
117 120
120 121
121 122
117 123
123 124
124 125
125 126
0 127
0 128
128 129
0 130
130 131
131 132
132 133

Confirm that cloning works.
