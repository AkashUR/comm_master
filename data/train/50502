64
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='messageToThrow'
9 value (StringLiteralExpr)
10 value='renewed'
11 type (VoidType)
12 name (SimpleName)
13 identifier='performAdditionalDomainRenewLogic'
14 parameters
15 parameter (Parameter)
16 isVarArgs='false'
17 name (SimpleName)
18 identifier='domainResource'
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='DomainResource'
22 parameter (Parameter)
23 isVarArgs='false'
24 name (SimpleName)
25 identifier='clientId'
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='String'
29 parameter (Parameter)
30 isVarArgs='false'
31 name (SimpleName)
32 identifier='asOfDate'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='DateTime'
36 parameter (Parameter)
37 isVarArgs='false'
38 name (SimpleName)
39 identifier='years'
40 type (PrimitiveType)
41 type='INT'
42 parameter (Parameter)
43 isVarArgs='false'
44 name (SimpleName)
45 identifier='eppInput'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='EppInput'
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='historyEntry'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='HistoryEntry'
56 thrownExceptions
57 thrownException (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='EppException'
60 annotations
61 annotation (MarkerAnnotationExpr)
62 name (Name)
63 identifier='Override'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
0 11
0 12
12 13
0 14
14 15
15 16
15 17
17 18
15 19
19 20
20 21
14 22
22 23
22 24
24 25
22 26
26 27
27 28
14 29
29 30
29 31
31 32
29 33
33 34
34 35
14 36
36 37
36 38
38 39
36 40
40 41
14 42
42 43
42 44
44 45
42 46
46 47
47 48
14 49
49 50
49 51
51 52
49 53
53 54
54 55
0 56
56 57
57 58
58 59
0 60
60 61
61 62
62 63

Performs additional tasks required for a renew command. Any changes should not be persisted to Datastore until commitAdditionalLogicChanges is called.
