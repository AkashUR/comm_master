244
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='fInvalid'
9 value (EnclosedExpr)
10 inner (BinaryExpr)
11 operator='EQUALS'
12 left (EnclosedExpr)
13 inner (BinaryExpr)
14 operator='BINARY_AND'
15 left (NameExpr)
16 name (SimpleName)
17 identifier='statusWord'
18 right (IntegerLiteralExpr)
19 value='1'
20 right (IntegerLiteralExpr)
21 value='1'
22 statement (ExpressionStmt)
23 expression (AssignExpr)
24 operator='ASSIGN'
25 target (NameExpr)
26 name (SimpleName)
27 identifier='fDenormalized'
28 value (EnclosedExpr)
29 inner (BinaryExpr)
30 operator='EQUALS'
31 left (EnclosedExpr)
32 inner (BinaryExpr)
33 operator='BINARY_AND'
34 left (NameExpr)
35 name (SimpleName)
36 identifier='statusWord'
37 right (IntegerLiteralExpr)
38 value='2'
39 right (IntegerLiteralExpr)
40 value='2'
41 statement (ExpressionStmt)
42 expression (AssignExpr)
43 operator='ASSIGN'
44 target (NameExpr)
45 name (SimpleName)
46 identifier='fZeroDivide'
47 value (EnclosedExpr)
48 inner (BinaryExpr)
49 operator='EQUALS'
50 left (EnclosedExpr)
51 inner (BinaryExpr)
52 operator='BINARY_AND'
53 left (NameExpr)
54 name (SimpleName)
55 identifier='statusWord'
56 right (IntegerLiteralExpr)
57 value='4'
58 right (IntegerLiteralExpr)
59 value='4'
60 statement (ExpressionStmt)
61 expression (AssignExpr)
62 operator='ASSIGN'
63 target (NameExpr)
64 name (SimpleName)
65 identifier='fOverflow'
66 value (EnclosedExpr)
67 inner (BinaryExpr)
68 operator='EQUALS'
69 left (EnclosedExpr)
70 inner (BinaryExpr)
71 operator='BINARY_AND'
72 left (NameExpr)
73 name (SimpleName)
74 identifier='statusWord'
75 right (IntegerLiteralExpr)
76 value='8'
77 right (IntegerLiteralExpr)
78 value='8'
79 statement (ExpressionStmt)
80 expression (AssignExpr)
81 operator='ASSIGN'
82 target (NameExpr)
83 name (SimpleName)
84 identifier='fUnderflow'
85 value (EnclosedExpr)
86 inner (BinaryExpr)
87 operator='EQUALS'
88 left (EnclosedExpr)
89 inner (BinaryExpr)
90 operator='BINARY_AND'
91 left (NameExpr)
92 name (SimpleName)
93 identifier='statusWord'
94 right (IntegerLiteralExpr)
95 value='16'
96 right (IntegerLiteralExpr)
97 value='16'
98 statement (ExpressionStmt)
99 expression (AssignExpr)
100 operator='ASSIGN'
101 target (NameExpr)
102 name (SimpleName)
103 identifier='fPrecision'
104 value (EnclosedExpr)
105 inner (BinaryExpr)
106 operator='EQUALS'
107 left (EnclosedExpr)
108 inner (BinaryExpr)
109 operator='BINARY_AND'
110 left (NameExpr)
111 name (SimpleName)
112 identifier='statusWord'
113 right (IntegerLiteralExpr)
114 value='32'
115 right (IntegerLiteralExpr)
116 value='32'
117 statement (ExpressionStmt)
118 expression (AssignExpr)
119 operator='ASSIGN'
120 target (NameExpr)
121 name (SimpleName)
122 identifier='fStackFault'
123 value (EnclosedExpr)
124 inner (BinaryExpr)
125 operator='EQUALS'
126 left (EnclosedExpr)
127 inner (BinaryExpr)
128 operator='BINARY_AND'
129 left (NameExpr)
130 name (SimpleName)
131 identifier='statusWord'
132 right (IntegerLiteralExpr)
133 value='64'
134 right (IntegerLiteralExpr)
135 value='64'
136 statement (ExpressionStmt)
137 expression (AssignExpr)
138 operator='ASSIGN'
139 target (NameExpr)
140 name (SimpleName)
141 identifier='fC0'
142 value (EnclosedExpr)
143 inner (BinaryExpr)
144 operator='EQUALS'
145 left (EnclosedExpr)
146 inner (BinaryExpr)
147 operator='BINARY_AND'
148 left (NameExpr)
149 name (SimpleName)
150 identifier='statusWord'
151 right (IntegerLiteralExpr)
152 value='256'
153 right (IntegerLiteralExpr)
154 value='256'
155 statement (ExpressionStmt)
156 expression (AssignExpr)
157 operator='ASSIGN'
158 target (NameExpr)
159 name (SimpleName)
160 identifier='fC1'
161 value (EnclosedExpr)
162 inner (BinaryExpr)
163 operator='EQUALS'
164 left (EnclosedExpr)
165 inner (BinaryExpr)
166 operator='BINARY_AND'
167 left (NameExpr)
168 name (SimpleName)
169 identifier='statusWord'
170 right (IntegerLiteralExpr)
171 value='512'
172 right (IntegerLiteralExpr)
173 value='512'
174 statement (ExpressionStmt)
175 expression (AssignExpr)
176 operator='ASSIGN'
177 target (NameExpr)
178 name (SimpleName)
179 identifier='fC2'
180 value (EnclosedExpr)
181 inner (BinaryExpr)
182 operator='EQUALS'
183 left (EnclosedExpr)
184 inner (BinaryExpr)
185 operator='BINARY_AND'
186 left (NameExpr)
187 name (SimpleName)
188 identifier='statusWord'
189 right (IntegerLiteralExpr)
190 value='1024'
191 right (IntegerLiteralExpr)
192 value='1024'
193 statement (ExpressionStmt)
194 expression (AssignExpr)
195 operator='ASSIGN'
196 target (NameExpr)
197 name (SimpleName)
198 identifier='top'
199 value (CastExpr)
200 expression (EnclosedExpr)
201 inner (BinaryExpr)
202 operator='BINARY_AND'
203 left (EnclosedExpr)
204 inner (BinaryExpr)
205 operator='SIGNED_RIGHT_SHIFT'
206 left (NameExpr)
207 name (SimpleName)
208 identifier='statusWord'
209 right (IntegerLiteralExpr)
210 value='11'
211 right (IntegerLiteralExpr)
212 value='7'
213 type (PrimitiveType)
214 type='INT'
215 statement (ExpressionStmt)
216 expression (AssignExpr)
217 operator='ASSIGN'
218 target (NameExpr)
219 name (SimpleName)
220 identifier='fC3'
221 value (EnclosedExpr)
222 inner (BinaryExpr)
223 operator='EQUALS'
224 left (EnclosedExpr)
225 inner (BinaryExpr)
226 operator='BINARY_AND'
227 left (NameExpr)
228 name (SimpleName)
229 identifier='statusWord'
230 right (IntegerLiteralExpr)
231 value='16384'
232 right (IntegerLiteralExpr)
233 value='16384'
234 type (VoidType)
235 name (SimpleName)
236 identifier='putStatusWord'
237 parameters
238 parameter (Parameter)
239 isVarArgs='false'
240 name (SimpleName)
241 identifier='statusWord'
242 type (PrimitiveType)
243 type='LONG'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
10 12
12 13
13 14
13 15
15 16
16 17
13 18
18 19
10 20
20 21
2 22
22 23
23 24
23 25
25 26
26 27
23 28
28 29
29 30
29 31
31 32
32 33
32 34
34 35
35 36
32 37
37 38
29 39
39 40
2 41
41 42
42 43
42 44
44 45
45 46
42 47
47 48
48 49
48 50
50 51
51 52
51 53
53 54
54 55
51 56
56 57
48 58
58 59
2 60
60 61
61 62
61 63
63 64
64 65
61 66
66 67
67 68
67 69
69 70
70 71
70 72
72 73
73 74
70 75
75 76
67 77
77 78
2 79
79 80
80 81
80 82
82 83
83 84
80 85
85 86
86 87
86 88
88 89
89 90
89 91
91 92
92 93
89 94
94 95
86 96
96 97
2 98
98 99
99 100
99 101
101 102
102 103
99 104
104 105
105 106
105 107
107 108
108 109
108 110
110 111
111 112
108 113
113 114
105 115
115 116
2 117
117 118
118 119
118 120
120 121
121 122
118 123
123 124
124 125
124 126
126 127
127 128
127 129
129 130
130 131
127 132
132 133
124 134
134 135
2 136
136 137
137 138
137 139
139 140
140 141
137 142
142 143
143 144
143 145
145 146
146 147
146 148
148 149
149 150
146 151
151 152
143 153
153 154
2 155
155 156
156 157
156 158
158 159
159 160
156 161
161 162
162 163
162 164
164 165
165 166
165 167
167 168
168 169
165 170
170 171
162 172
172 173
2 174
174 175
175 176
175 177
177 178
178 179
175 180
180 181
181 182
181 183
183 184
184 185
184 186
186 187
187 188
184 189
189 190
181 191
191 192
2 193
193 194
194 195
194 196
196 197
197 198
194 199
199 200
200 201
201 202
201 203
203 204
204 205
204 206
206 207
207 208
204 209
209 210
201 211
211 212
199 213
213 214
2 215
215 216
216 217
216 218
218 219
219 220
216 221
221 222
222 223
222 224
224 225
225 226
225 227
227 228
228 229
225 230
230 231
222 232
232 233
0 234
0 235
235 236
0 237
237 238
238 239
238 240
240 241
238 242
242 243

sets the FPU's flags from a given word value such as the one produced by getStatusWord().
