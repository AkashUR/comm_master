77
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Striterator'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='iterator'
15 scope (NameExpr)
16 name (SimpleName)
17 identifier='m_data'
18 name (SimpleName)
19 identifier='iter'
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='Striterator'
23 statement (ExpressionStmt)
24 expression (MethodCallExpr)
25 name (SimpleName)
26 identifier='assertTrue'
27 arguments
28 argument (MethodCallExpr)
29 name (SimpleName)
30 identifier='isOpen'
31 scope (NameExpr)
32 name (SimpleName)
33 identifier='iter'
34 statement (WhileStmt)
35 body (BlockStmt)
36 statements
37 statement (ExpressionStmt)
38 expression (MethodCallExpr)
39 name (SimpleName)
40 identifier='next'
41 scope (NameExpr)
42 name (SimpleName)
43 identifier='iter'
44 statement (ExpressionStmt)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='assertTrue'
48 arguments
49 argument (MethodCallExpr)
50 name (SimpleName)
51 identifier='isOpen'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='iter'
55 condition (MethodCallExpr)
56 name (SimpleName)
57 identifier='hasNext'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='iter'
61 statement (ExpressionStmt)
62 expression (MethodCallExpr)
63 name (SimpleName)
64 identifier='assertTrue'
65 arguments
66 argument (UnaryExpr)
67 operator='LOGICAL_COMPLEMENT'
68 expression (MethodCallExpr)
69 name (SimpleName)
70 identifier='isOpen'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='iter'
74 type (VoidType)
75 name (SimpleName)
76 identifier='test_simpleCloseOnEnd'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
12 15
15 16
16 17
6 18
18 19
6 20
20 21
21 22
2 23
23 24
24 25
25 26
24 27
27 28
28 29
29 30
28 31
31 32
32 33
2 34
34 35
35 36
36 37
37 38
38 39
39 40
38 41
41 42
42 43
36 44
44 45
45 46
46 47
45 48
48 49
49 50
50 51
49 52
52 53
53 54
34 55
55 56
56 57
55 58
58 59
59 60
2 61
61 62
62 63
63 64
62 65
65 66
66 67
66 68
68 69
69 70
68 71
71 72
72 73
0 74
0 75
75 76

Test that Striterator is closed after hasNext return false
