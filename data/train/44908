1445
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='createMock'
10 arguments
11 argument (ClassExpr)
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='IDeviceListener'
15 name (SimpleName)
16 identifier='mockListener'
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='IDeviceListener'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='anyTimes'
24 scope (MethodCallExpr)
25 name (SimpleName)
26 identifier='andReturn'
27 scope (MethodCallExpr)
28 name (SimpleName)
29 identifier='expect'
30 arguments
31 argument (MethodCallExpr)
32 name (SimpleName)
33 identifier='getName'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='mockListener'
37 arguments
38 argument (StringLiteralExpr)
39 value='mockListener'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='atLeastOnce'
44 scope (MethodCallExpr)
45 name (SimpleName)
46 identifier='andReturn'
47 scope (MethodCallExpr)
48 name (SimpleName)
49 identifier='expect'
50 arguments
51 argument (MethodCallExpr)
52 name (SimpleName)
53 identifier='isCallbackOrderingPostreq'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='mockListener'
57 arguments
58 argument (CastExpr)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='anyObject'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='String'
65 argument (CastExpr)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='anyObject'
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='String'
72 arguments
73 argument (BooleanLiteralExpr)
74 value='false'
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='atLeastOnce'
79 scope (MethodCallExpr)
80 name (SimpleName)
81 identifier='andReturn'
82 scope (MethodCallExpr)
83 name (SimpleName)
84 identifier='expect'
85 arguments
86 argument (MethodCallExpr)
87 name (SimpleName)
88 identifier='isCallbackOrderingPrereq'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='mockListener'
92 arguments
93 argument (CastExpr)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='anyObject'
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='String'
100 argument (CastExpr)
101 expression (MethodCallExpr)
102 name (SimpleName)
103 identifier='anyObject'
104 type (ClassOrInterfaceType)
105 name (SimpleName)
106 identifier='String'
107 arguments
108 argument (BooleanLiteralExpr)
109 value='false'
110 statement (ExpressionStmt)
111 expression (VariableDeclarationExpr)
112 variables
113 variable (VariableDeclarator)
114 initializer (MethodCallExpr)
115 name (SimpleName)
116 identifier='createMock'
117 arguments
118 argument (ClassExpr)
119 type (ClassOrInterfaceType)
120 name (SimpleName)
121 identifier='ITopologyService'
122 name (SimpleName)
123 identifier='mockTopology'
124 type (ClassOrInterfaceType)
125 name (SimpleName)
126 identifier='ITopologyService'
127 statement (ExpressionStmt)
128 expression (MethodCallExpr)
129 name (SimpleName)
130 identifier='anyTimes'
131 scope (MethodCallExpr)
132 name (SimpleName)
133 identifier='andReturn'
134 scope (MethodCallExpr)
135 name (SimpleName)
136 identifier='expect'
137 arguments
138 argument (MethodCallExpr)
139 name (SimpleName)
140 identifier='isAttachmentPointPort'
141 scope (NameExpr)
142 name (SimpleName)
143 identifier='mockTopology'
144 arguments
145 argument (MethodCallExpr)
146 name (SimpleName)
147 identifier='of'
148 scope (NameExpr)
149 name (SimpleName)
150 identifier='DatapathId'
151 arguments
152 argument (MethodCallExpr)
153 name (SimpleName)
154 identifier='anyLong'
155 argument (MethodCallExpr)
156 name (SimpleName)
157 identifier='of'
158 scope (NameExpr)
159 name (SimpleName)
160 identifier='OFPort'
161 arguments
162 argument (MethodCallExpr)
163 name (SimpleName)
164 identifier='anyShort'
165 arguments
166 argument (BooleanLiteralExpr)
167 value='true'
168 statement (ExpressionStmt)
169 expression (MethodCallExpr)
170 name (SimpleName)
171 identifier='anyTimes'
172 scope (MethodCallExpr)
173 name (SimpleName)
174 identifier='andReturn'
175 scope (MethodCallExpr)
176 name (SimpleName)
177 identifier='expect'
178 arguments
179 argument (MethodCallExpr)
180 name (SimpleName)
181 identifier='isBroadcastDomainPort'
182 scope (NameExpr)
183 name (SimpleName)
184 identifier='mockTopology'
185 arguments
186 argument (MethodCallExpr)
187 name (SimpleName)
188 identifier='of'
189 scope (NameExpr)
190 name (SimpleName)
191 identifier='DatapathId'
192 arguments
193 argument (LongLiteralExpr)
194 value='1L'
195 argument (MethodCallExpr)
196 name (SimpleName)
197 identifier='of'
198 scope (NameExpr)
199 name (SimpleName)
200 identifier='OFPort'
201 arguments
202 argument (IntegerLiteralExpr)
203 value='1'
204 arguments
205 argument (BooleanLiteralExpr)
206 value='false'
207 statement (ExpressionStmt)
208 expression (MethodCallExpr)
209 name (SimpleName)
210 identifier='anyTimes'
211 scope (MethodCallExpr)
212 name (SimpleName)
213 identifier='andReturn'
214 scope (MethodCallExpr)
215 name (SimpleName)
216 identifier='expect'
217 arguments
218 argument (MethodCallExpr)
219 name (SimpleName)
220 identifier='isBroadcastDomainPort'
221 scope (NameExpr)
222 name (SimpleName)
223 identifier='mockTopology'
224 arguments
225 argument (MethodCallExpr)
226 name (SimpleName)
227 identifier='of'
228 scope (NameExpr)
229 name (SimpleName)
230 identifier='DatapathId'
231 arguments
232 argument (LongLiteralExpr)
233 value='5L'
234 argument (MethodCallExpr)
235 name (SimpleName)
236 identifier='of'
237 scope (NameExpr)
238 name (SimpleName)
239 identifier='OFPort'
240 arguments
241 argument (IntegerLiteralExpr)
242 value='1'
243 arguments
244 argument (BooleanLiteralExpr)
245 value='false'
246 statement (ExpressionStmt)
247 expression (MethodCallExpr)
248 name (SimpleName)
249 identifier='anyTimes'
250 scope (MethodCallExpr)
251 name (SimpleName)
252 identifier='andReturn'
253 scope (MethodCallExpr)
254 name (SimpleName)
255 identifier='expect'
256 arguments
257 argument (MethodCallExpr)
258 name (SimpleName)
259 identifier='getOpenflowDomainId'
260 scope (NameExpr)
261 name (SimpleName)
262 identifier='mockTopology'
263 arguments
264 argument (MethodCallExpr)
265 name (SimpleName)
266 identifier='of'
267 scope (NameExpr)
268 name (SimpleName)
269 identifier='DatapathId'
270 arguments
271 argument (LongLiteralExpr)
272 value='1L'
273 arguments
274 argument (MethodCallExpr)
275 name (SimpleName)
276 identifier='of'
277 scope (NameExpr)
278 name (SimpleName)
279 identifier='DatapathId'
280 arguments
281 argument (LongLiteralExpr)
282 value='1L'
283 statement (ExpressionStmt)
284 expression (MethodCallExpr)
285 name (SimpleName)
286 identifier='anyTimes'
287 scope (MethodCallExpr)
288 name (SimpleName)
289 identifier='andReturn'
290 scope (MethodCallExpr)
291 name (SimpleName)
292 identifier='expect'
293 arguments
294 argument (MethodCallExpr)
295 name (SimpleName)
296 identifier='getOpenflowDomainId'
297 scope (NameExpr)
298 name (SimpleName)
299 identifier='mockTopology'
300 arguments
301 argument (MethodCallExpr)
302 name (SimpleName)
303 identifier='of'
304 scope (NameExpr)
305 name (SimpleName)
306 identifier='DatapathId'
307 arguments
308 argument (LongLiteralExpr)
309 value='5L'
310 arguments
311 argument (MethodCallExpr)
312 name (SimpleName)
313 identifier='of'
314 scope (NameExpr)
315 name (SimpleName)
316 identifier='DatapathId'
317 arguments
318 argument (LongLiteralExpr)
319 value='5L'
320 statement (ExpressionStmt)
321 expression (MethodCallExpr)
322 name (SimpleName)
323 identifier='anyTimes'
324 scope (MethodCallExpr)
325 name (SimpleName)
326 identifier='andReturn'
327 scope (MethodCallExpr)
328 name (SimpleName)
329 identifier='expect'
330 arguments
331 argument (MethodCallExpr)
332 name (SimpleName)
333 identifier='isConsistent'
334 scope (NameExpr)
335 name (SimpleName)
336 identifier='mockTopology'
337 arguments
338 argument (MethodCallExpr)
339 name (SimpleName)
340 identifier='of'
341 scope (NameExpr)
342 name (SimpleName)
343 identifier='DatapathId'
344 arguments
345 argument (LongLiteralExpr)
346 value='1L'
347 argument (MethodCallExpr)
348 name (SimpleName)
349 identifier='of'
350 scope (NameExpr)
351 name (SimpleName)
352 identifier='OFPort'
353 arguments
354 argument (IntegerLiteralExpr)
355 value='1'
356 argument (MethodCallExpr)
357 name (SimpleName)
358 identifier='of'
359 scope (NameExpr)
360 name (SimpleName)
361 identifier='DatapathId'
362 arguments
363 argument (LongLiteralExpr)
364 value='5L'
365 argument (MethodCallExpr)
366 name (SimpleName)
367 identifier='of'
368 scope (NameExpr)
369 name (SimpleName)
370 identifier='OFPort'
371 arguments
372 argument (IntegerLiteralExpr)
373 value='1'
374 arguments
375 argument (BooleanLiteralExpr)
376 value='false'
377 statement (ExpressionStmt)
378 expression (VariableDeclarationExpr)
379 variables
380 variable (VariableDeclarator)
381 initializer (ObjectCreationExpr)
382 type (ClassOrInterfaceType)
383 name (SimpleName)
384 identifier='Date'
385 name (SimpleName)
386 identifier='topologyUpdateTime'
387 type (ClassOrInterfaceType)
388 name (SimpleName)
389 identifier='Date'
390 statement (ExpressionStmt)
391 expression (MethodCallExpr)
392 name (SimpleName)
393 identifier='anyTimes'
394 scope (MethodCallExpr)
395 name (SimpleName)
396 identifier='andReturn'
397 scope (MethodCallExpr)
398 name (SimpleName)
399 identifier='expect'
400 arguments
401 argument (MethodCallExpr)
402 name (SimpleName)
403 identifier='getLastUpdateTime'
404 scope (NameExpr)
405 name (SimpleName)
406 identifier='mockTopology'
407 arguments
408 argument (NameExpr)
409 name (SimpleName)
410 identifier='topologyUpdateTime'
411 statement (ExpressionStmt)
412 expression (MethodCallExpr)
413 name (SimpleName)
414 identifier='replay'
415 arguments
416 argument (NameExpr)
417 name (SimpleName)
418 identifier='mockTopology'
419 statement (ExpressionStmt)
420 expression (AssignExpr)
421 operator='ASSIGN'
422 target (FieldAccessExpr)
423 name (SimpleName)
424 identifier='topology'
425 scope (NameExpr)
426 name (SimpleName)
427 identifier='deviceManager'
428 value (NameExpr)
429 name (SimpleName)
430 identifier='mockTopology'
431 statement (ExpressionStmt)
432 expression (VariableDeclarationExpr)
433 variables
434 variable (VariableDeclarator)
435 initializer (MethodCallExpr)
436 name (SimpleName)
437 identifier='getInstance'
438 scope (NameExpr)
439 name (SimpleName)
440 identifier='Calendar'
441 name (SimpleName)
442 identifier='c'
443 type (ClassOrInterfaceType)
444 name (SimpleName)
445 identifier='Calendar'
446 statement (ExpressionStmt)
447 expression (VariableDeclarationExpr)
448 variables
449 variable (VariableDeclarator)
450 initializer (ObjectCreationExpr)
451 type (ClassOrInterfaceType)
452 name (SimpleName)
453 identifier='Entity'
454 arguments
455 argument (MethodCallExpr)
456 name (SimpleName)
457 identifier='of'
458 scope (NameExpr)
459 name (SimpleName)
460 identifier='MacAddress'
461 arguments
462 argument (LongLiteralExpr)
463 value='1L'
464 argument (FieldAccessExpr)
465 name (SimpleName)
466 identifier='ZERO'
467 scope (NameExpr)
468 name (SimpleName)
469 identifier='VlanVid'
470 argument (MethodCallExpr)
471 name (SimpleName)
472 identifier='of'
473 scope (NameExpr)
474 name (SimpleName)
475 identifier='IPv4Address'
476 arguments
477 argument (IntegerLiteralExpr)
478 value='2'
479 argument (FieldAccessExpr)
480 name (SimpleName)
481 identifier='NONE'
482 scope (NameExpr)
483 name (SimpleName)
484 identifier='IPv6Address'
485 argument (MethodCallExpr)
486 name (SimpleName)
487 identifier='of'
488 scope (NameExpr)
489 name (SimpleName)
490 identifier='DatapathId'
491 arguments
492 argument (LongLiteralExpr)
493 value='1L'
494 argument (MethodCallExpr)
495 name (SimpleName)
496 identifier='of'
497 scope (NameExpr)
498 name (SimpleName)
499 identifier='OFPort'
500 arguments
501 argument (IntegerLiteralExpr)
502 value='1'
503 argument (MethodCallExpr)
504 name (SimpleName)
505 identifier='getTime'
506 scope (NameExpr)
507 name (SimpleName)
508 identifier='c'
509 name (SimpleName)
510 identifier='entity1'
511 type (ClassOrInterfaceType)
512 name (SimpleName)
513 identifier='Entity'
514 statement (ExpressionStmt)
515 expression (MethodCallExpr)
516 name (SimpleName)
517 identifier='add'
518 scope (NameExpr)
519 name (SimpleName)
520 identifier='c'
521 arguments
522 argument (FieldAccessExpr)
523 name (SimpleName)
524 identifier='MILLISECOND'
525 scope (NameExpr)
526 name (SimpleName)
527 identifier='Calendar'
528 argument (BinaryExpr)
529 operator='MINUS'
530 left (UnaryExpr)
531 operator='MINUS'
532 expression (FieldAccessExpr)
533 name (SimpleName)
534 identifier='ENTITY_TIMEOUT'
535 scope (NameExpr)
536 name (SimpleName)
537 identifier='DeviceManagerImpl'
538 right (IntegerLiteralExpr)
539 value='1'
540 statement (ExpressionStmt)
541 expression (VariableDeclarationExpr)
542 variables
543 variable (VariableDeclarator)
544 initializer (ObjectCreationExpr)
545 type (ClassOrInterfaceType)
546 name (SimpleName)
547 identifier='Entity'
548 arguments
549 argument (MethodCallExpr)
550 name (SimpleName)
551 identifier='of'
552 scope (NameExpr)
553 name (SimpleName)
554 identifier='MacAddress'
555 arguments
556 argument (LongLiteralExpr)
557 value='1L'
558 argument (FieldAccessExpr)
559 name (SimpleName)
560 identifier='ZERO'
561 scope (NameExpr)
562 name (SimpleName)
563 identifier='VlanVid'
564 argument (MethodCallExpr)
565 name (SimpleName)
566 identifier='of'
567 scope (NameExpr)
568 name (SimpleName)
569 identifier='IPv4Address'
570 arguments
571 argument (IntegerLiteralExpr)
572 value='1'
573 argument (FieldAccessExpr)
574 name (SimpleName)
575 identifier='NONE'
576 scope (NameExpr)
577 name (SimpleName)
578 identifier='IPv6Address'
579 argument (MethodCallExpr)
580 name (SimpleName)
581 identifier='of'
582 scope (NameExpr)
583 name (SimpleName)
584 identifier='DatapathId'
585 arguments
586 argument (LongLiteralExpr)
587 value='5L'
588 argument (MethodCallExpr)
589 name (SimpleName)
590 identifier='of'
591 scope (NameExpr)
592 name (SimpleName)
593 identifier='OFPort'
594 arguments
595 argument (IntegerLiteralExpr)
596 value='1'
597 argument (MethodCallExpr)
598 name (SimpleName)
599 identifier='getTime'
600 scope (NameExpr)
601 name (SimpleName)
602 identifier='c'
603 name (SimpleName)
604 identifier='entity2'
605 type (ClassOrInterfaceType)
606 name (SimpleName)
607 identifier='Entity'
608 statement (ExpressionStmt)
609 expression (MethodCallExpr)
610 name (SimpleName)
611 identifier='learnDeviceByEntity'
612 scope (NameExpr)
613 name (SimpleName)
614 identifier='deviceManager'
615 arguments
616 argument (NameExpr)
617 name (SimpleName)
618 identifier='entity1'
619 statement (ExpressionStmt)
620 expression (VariableDeclarationExpr)
621 variables
622 variable (VariableDeclarator)
623 initializer (MethodCallExpr)
624 name (SimpleName)
625 identifier='learnDeviceByEntity'
626 scope (NameExpr)
627 name (SimpleName)
628 identifier='deviceManager'
629 arguments
630 argument (NameExpr)
631 name (SimpleName)
632 identifier='entity2'
633 name (SimpleName)
634 identifier='d'
635 type (ClassOrInterfaceType)
636 name (SimpleName)
637 identifier='IDevice'
638 statement (ExpressionStmt)
639 expression (MethodCallExpr)
640 name (SimpleName)
641 identifier='assertArrayEquals'
642 arguments
643 argument (ArrayCreationExpr)
644 elementType (ClassOrInterfaceType)
645 name (SimpleName)
646 identifier='IPv4Address'
647 initializer (ArrayInitializerExpr)
648 values
649 value (MethodCallExpr)
650 name (SimpleName)
651 identifier='of'
652 scope (NameExpr)
653 name (SimpleName)
654 identifier='IPv4Address'
655 arguments
656 argument (IntegerLiteralExpr)
657 value='1'
658 value (MethodCallExpr)
659 name (SimpleName)
660 identifier='of'
661 scope (NameExpr)
662 name (SimpleName)
663 identifier='IPv4Address'
664 arguments
665 argument (IntegerLiteralExpr)
666 value='2'
667 levels
668 level (ArrayCreationLevel)
669 argument (MethodCallExpr)
670 name (SimpleName)
671 identifier='getIPv4Addresses'
672 scope (NameExpr)
673 name (SimpleName)
674 identifier='d'
675 statement (ExpressionStmt)
676 expression (MethodCallExpr)
677 name (SimpleName)
678 identifier='assertArrayEquals'
679 arguments
680 argument (ArrayCreationExpr)
681 elementType (ClassOrInterfaceType)
682 name (SimpleName)
683 identifier='SwitchPort'
684 initializer (ArrayInitializerExpr)
685 values
686 value (ObjectCreationExpr)
687 type (ClassOrInterfaceType)
688 name (SimpleName)
689 identifier='SwitchPort'
690 arguments
691 argument (MethodCallExpr)
692 name (SimpleName)
693 identifier='of'
694 scope (NameExpr)
695 name (SimpleName)
696 identifier='DatapathId'
697 arguments
698 argument (LongLiteralExpr)
699 value='1L'
700 argument (MethodCallExpr)
701 name (SimpleName)
702 identifier='of'
703 scope (NameExpr)
704 name (SimpleName)
705 identifier='OFPort'
706 arguments
707 argument (IntegerLiteralExpr)
708 value='1'
709 value (ObjectCreationExpr)
710 type (ClassOrInterfaceType)
711 name (SimpleName)
712 identifier='SwitchPort'
713 arguments
714 argument (MethodCallExpr)
715 name (SimpleName)
716 identifier='of'
717 scope (NameExpr)
718 name (SimpleName)
719 identifier='DatapathId'
720 arguments
721 argument (LongLiteralExpr)
722 value='5L'
723 argument (MethodCallExpr)
724 name (SimpleName)
725 identifier='of'
726 scope (NameExpr)
727 name (SimpleName)
728 identifier='OFPort'
729 arguments
730 argument (IntegerLiteralExpr)
731 value='1'
732 levels
733 level (ArrayCreationLevel)
734 argument (MethodCallExpr)
735 name (SimpleName)
736 identifier='getAttachmentPoints'
737 scope (NameExpr)
738 name (SimpleName)
739 identifier='d'
740 statement (ExpressionStmt)
741 expression (VariableDeclarationExpr)
742 variables
743 variable (VariableDeclarator)
744 initializer (MethodCallExpr)
745 name (SimpleName)
746 identifier='queryClassDevices'
747 scope (NameExpr)
748 name (SimpleName)
749 identifier='deviceManager'
750 arguments
751 argument (MethodCallExpr)
752 name (SimpleName)
753 identifier='getEntityClass'
754 scope (NameExpr)
755 name (SimpleName)
756 identifier='d'
757 argument (FieldAccessExpr)
758 name (SimpleName)
759 identifier='NONE'
760 scope (NameExpr)
761 name (SimpleName)
762 identifier='MacAddress'
763 argument (FieldAccessExpr)
764 name (SimpleName)
765 identifier='ZERO'
766 scope (NameExpr)
767 name (SimpleName)
768 identifier='VlanVid'
769 argument (MethodCallExpr)
770 name (SimpleName)
771 identifier='of'
772 scope (NameExpr)
773 name (SimpleName)
774 identifier='IPv4Address'
775 arguments
776 argument (IntegerLiteralExpr)
777 value='1'
778 argument (FieldAccessExpr)
779 name (SimpleName)
780 identifier='NONE'
781 scope (NameExpr)
782 name (SimpleName)
783 identifier='IPv6Address'
784 argument (FieldAccessExpr)
785 name (SimpleName)
786 identifier='NONE'
787 scope (NameExpr)
788 name (SimpleName)
789 identifier='DatapathId'
790 argument (FieldAccessExpr)
791 name (SimpleName)
792 identifier='ZERO'
793 scope (NameExpr)
794 name (SimpleName)
795 identifier='OFPort'
796 name (SimpleName)
797 identifier='diter'
798 type (ClassOrInterfaceType)
799 name (SimpleName)
800 identifier='Iterator'
801 typeArguments
802 typeArgument (WildcardType)
803 extendedType (ClassOrInterfaceType)
804 name (SimpleName)
805 identifier='IDevice'
806 statement (ExpressionStmt)
807 expression (MethodCallExpr)
808 name (SimpleName)
809 identifier='assertTrue'
810 arguments
811 argument (MethodCallExpr)
812 name (SimpleName)
813 identifier='hasNext'
814 scope (NameExpr)
815 name (SimpleName)
816 identifier='diter'
817 statement (ExpressionStmt)
818 expression (MethodCallExpr)
819 name (SimpleName)
820 identifier='assertEquals'
821 arguments
822 argument (MethodCallExpr)
823 name (SimpleName)
824 identifier='getDeviceKey'
825 scope (NameExpr)
826 name (SimpleName)
827 identifier='d'
828 argument (MethodCallExpr)
829 name (SimpleName)
830 identifier='getDeviceKey'
831 scope (MethodCallExpr)
832 name (SimpleName)
833 identifier='next'
834 scope (NameExpr)
835 name (SimpleName)
836 identifier='diter'
837 statement (ExpressionStmt)
838 expression (AssignExpr)
839 operator='ASSIGN'
840 target (NameExpr)
841 name (SimpleName)
842 identifier='diter'
843 value (MethodCallExpr)
844 name (SimpleName)
845 identifier='queryClassDevices'
846 scope (NameExpr)
847 name (SimpleName)
848 identifier='deviceManager'
849 arguments
850 argument (MethodCallExpr)
851 name (SimpleName)
852 identifier='getEntityClass'
853 scope (NameExpr)
854 name (SimpleName)
855 identifier='d'
856 argument (FieldAccessExpr)
857 name (SimpleName)
858 identifier='NONE'
859 scope (NameExpr)
860 name (SimpleName)
861 identifier='MacAddress'
862 argument (FieldAccessExpr)
863 name (SimpleName)
864 identifier='ZERO'
865 scope (NameExpr)
866 name (SimpleName)
867 identifier='VlanVid'
868 argument (MethodCallExpr)
869 name (SimpleName)
870 identifier='of'
871 scope (NameExpr)
872 name (SimpleName)
873 identifier='IPv4Address'
874 arguments
875 argument (IntegerLiteralExpr)
876 value='2'
877 argument (FieldAccessExpr)
878 name (SimpleName)
879 identifier='NONE'
880 scope (NameExpr)
881 name (SimpleName)
882 identifier='IPv6Address'
883 argument (FieldAccessExpr)
884 name (SimpleName)
885 identifier='NONE'
886 scope (NameExpr)
887 name (SimpleName)
888 identifier='DatapathId'
889 argument (FieldAccessExpr)
890 name (SimpleName)
891 identifier='ZERO'
892 scope (NameExpr)
893 name (SimpleName)
894 identifier='OFPort'
895 statement (ExpressionStmt)
896 expression (MethodCallExpr)
897 name (SimpleName)
898 identifier='assertTrue'
899 arguments
900 argument (MethodCallExpr)
901 name (SimpleName)
902 identifier='hasNext'
903 scope (NameExpr)
904 name (SimpleName)
905 identifier='diter'
906 statement (ExpressionStmt)
907 expression (MethodCallExpr)
908 name (SimpleName)
909 identifier='assertEquals'
910 arguments
911 argument (MethodCallExpr)
912 name (SimpleName)
913 identifier='getDeviceKey'
914 scope (NameExpr)
915 name (SimpleName)
916 identifier='d'
917 argument (MethodCallExpr)
918 name (SimpleName)
919 identifier='getDeviceKey'
920 scope (MethodCallExpr)
921 name (SimpleName)
922 identifier='next'
923 scope (NameExpr)
924 name (SimpleName)
925 identifier='diter'
926 statement (ExpressionStmt)
927 expression (MethodCallExpr)
928 name (SimpleName)
929 identifier='replay'
930 arguments
931 argument (NameExpr)
932 name (SimpleName)
933 identifier='mockListener'
934 statement (ExpressionStmt)
935 expression (MethodCallExpr)
936 name (SimpleName)
937 identifier='addListener'
938 scope (NameExpr)
939 name (SimpleName)
940 identifier='deviceManager'
941 arguments
942 argument (NameExpr)
943 name (SimpleName)
944 identifier='mockListener'
945 statement (ExpressionStmt)
946 expression (MethodCallExpr)
947 name (SimpleName)
948 identifier='verify'
949 arguments
950 argument (NameExpr)
951 name (SimpleName)
952 identifier='mockListener'
953 statement (ExpressionStmt)
954 expression (MethodCallExpr)
955 name (SimpleName)
956 identifier='reset'
957 arguments
958 argument (NameExpr)
959 name (SimpleName)
960 identifier='mockListener'
961 statement (ExpressionStmt)
962 expression (MethodCallExpr)
963 name (SimpleName)
964 identifier='deviceMoved'
965 scope (NameExpr)
966 name (SimpleName)
967 identifier='mockListener'
968 arguments
969 argument (MethodCallExpr)
970 name (SimpleName)
971 identifier='isA'
972 arguments
973 argument (ClassExpr)
974 type (ClassOrInterfaceType)
975 name (SimpleName)
976 identifier='IDevice'
977 statement (ExpressionStmt)
978 expression (MethodCallExpr)
979 name (SimpleName)
980 identifier='deviceIPV4AddrChanged'
981 scope (NameExpr)
982 name (SimpleName)
983 identifier='mockListener'
984 arguments
985 argument (MethodCallExpr)
986 name (SimpleName)
987 identifier='isA'
988 arguments
989 argument (ClassExpr)
990 type (ClassOrInterfaceType)
991 name (SimpleName)
992 identifier='IDevice'
993 statement (ExpressionStmt)
994 expression (MethodCallExpr)
995 name (SimpleName)
996 identifier='replay'
997 arguments
998 argument (NameExpr)
999 name (SimpleName)
1000 identifier='mockListener'
1001 statement (ExpressionStmt)
1002 expression (MethodCallExpr)
1003 name (SimpleName)
1004 identifier='reschedule'
1005 scope (FieldAccessExpr)
1006 name (SimpleName)
1007 identifier='entityCleanupTask'
1008 scope (NameExpr)
1009 name (SimpleName)
1010 identifier='deviceManager'
1011 arguments
1012 argument (IntegerLiteralExpr)
1013 value='0'
1014 argument (NullLiteralExpr)
1015 statement (ExpressionStmt)
1016 expression (AssignExpr)
1017 operator='ASSIGN'
1018 target (NameExpr)
1019 name (SimpleName)
1020 identifier='d'
1021 value (MethodCallExpr)
1022 name (SimpleName)
1023 identifier='getDevice'
1024 scope (NameExpr)
1025 name (SimpleName)
1026 identifier='deviceManager'
1027 arguments
1028 argument (MethodCallExpr)
1029 name (SimpleName)
1030 identifier='getDeviceKey'
1031 scope (NameExpr)
1032 name (SimpleName)
1033 identifier='d'
1034 statement (ExpressionStmt)
1035 expression (MethodCallExpr)
1036 name (SimpleName)
1037 identifier='assertArrayEquals'
1038 arguments
1039 argument (ArrayCreationExpr)
1040 elementType (ClassOrInterfaceType)
1041 name (SimpleName)
1042 identifier='IPv4Address'
1043 initializer (ArrayInitializerExpr)
1044 values
1045 value (MethodCallExpr)
1046 name (SimpleName)
1047 identifier='of'
1048 scope (NameExpr)
1049 name (SimpleName)
1050 identifier='IPv4Address'
1051 arguments
1052 argument (IntegerLiteralExpr)
1053 value='2'
1054 levels
1055 level (ArrayCreationLevel)
1056 argument (MethodCallExpr)
1057 name (SimpleName)
1058 identifier='getIPv4Addresses'
1059 scope (NameExpr)
1060 name (SimpleName)
1061 identifier='d'
1062 statement (ExpressionStmt)
1063 expression (MethodCallExpr)
1064 name (SimpleName)
1065 identifier='assertArrayEquals'
1066 arguments
1067 argument (ArrayCreationExpr)
1068 elementType (ClassOrInterfaceType)
1069 name (SimpleName)
1070 identifier='SwitchPort'
1071 initializer (ArrayInitializerExpr)
1072 values
1073 value (ObjectCreationExpr)
1074 type (ClassOrInterfaceType)
1075 name (SimpleName)
1076 identifier='SwitchPort'
1077 arguments
1078 argument (MethodCallExpr)
1079 name (SimpleName)
1080 identifier='of'
1081 scope (NameExpr)
1082 name (SimpleName)
1083 identifier='DatapathId'
1084 arguments
1085 argument (LongLiteralExpr)
1086 value='1L'
1087 argument (MethodCallExpr)
1088 name (SimpleName)
1089 identifier='of'
1090 scope (NameExpr)
1091 name (SimpleName)
1092 identifier='OFPort'
1093 arguments
1094 argument (IntegerLiteralExpr)
1095 value='1'
1096 value (ObjectCreationExpr)
1097 type (ClassOrInterfaceType)
1098 name (SimpleName)
1099 identifier='SwitchPort'
1100 arguments
1101 argument (MethodCallExpr)
1102 name (SimpleName)
1103 identifier='of'
1104 scope (NameExpr)
1105 name (SimpleName)
1106 identifier='DatapathId'
1107 arguments
1108 argument (LongLiteralExpr)
1109 value='5L'
1110 argument (MethodCallExpr)
1111 name (SimpleName)
1112 identifier='of'
1113 scope (NameExpr)
1114 name (SimpleName)
1115 identifier='OFPort'
1116 arguments
1117 argument (IntegerLiteralExpr)
1118 value='1'
1119 levels
1120 level (ArrayCreationLevel)
1121 argument (MethodCallExpr)
1122 name (SimpleName)
1123 identifier='getAttachmentPoints'
1124 scope (NameExpr)
1125 name (SimpleName)
1126 identifier='d'
1127 statement (ExpressionStmt)
1128 expression (AssignExpr)
1129 operator='ASSIGN'
1130 target (NameExpr)
1131 name (SimpleName)
1132 identifier='diter'
1133 value (MethodCallExpr)
1134 name (SimpleName)
1135 identifier='queryClassDevices'
1136 scope (NameExpr)
1137 name (SimpleName)
1138 identifier='deviceManager'
1139 arguments
1140 argument (MethodCallExpr)
1141 name (SimpleName)
1142 identifier='getEntityClass'
1143 scope (NameExpr)
1144 name (SimpleName)
1145 identifier='d'
1146 argument (FieldAccessExpr)
1147 name (SimpleName)
1148 identifier='NONE'
1149 scope (NameExpr)
1150 name (SimpleName)
1151 identifier='MacAddress'
1152 argument (FieldAccessExpr)
1153 name (SimpleName)
1154 identifier='ZERO'
1155 scope (NameExpr)
1156 name (SimpleName)
1157 identifier='VlanVid'
1158 argument (MethodCallExpr)
1159 name (SimpleName)
1160 identifier='of'
1161 scope (NameExpr)
1162 name (SimpleName)
1163 identifier='IPv4Address'
1164 arguments
1165 argument (IntegerLiteralExpr)
1166 value='2'
1167 argument (FieldAccessExpr)
1168 name (SimpleName)
1169 identifier='NONE'
1170 scope (NameExpr)
1171 name (SimpleName)
1172 identifier='IPv6Address'
1173 argument (FieldAccessExpr)
1174 name (SimpleName)
1175 identifier='NONE'
1176 scope (NameExpr)
1177 name (SimpleName)
1178 identifier='DatapathId'
1179 argument (FieldAccessExpr)
1180 name (SimpleName)
1181 identifier='ZERO'
1182 scope (NameExpr)
1183 name (SimpleName)
1184 identifier='OFPort'
1185 statement (ExpressionStmt)
1186 expression (MethodCallExpr)
1187 name (SimpleName)
1188 identifier='assertTrue'
1189 arguments
1190 argument (MethodCallExpr)
1191 name (SimpleName)
1192 identifier='hasNext'
1193 scope (NameExpr)
1194 name (SimpleName)
1195 identifier='diter'
1196 statement (ExpressionStmt)
1197 expression (MethodCallExpr)
1198 name (SimpleName)
1199 identifier='assertEquals'
1200 arguments
1201 argument (MethodCallExpr)
1202 name (SimpleName)
1203 identifier='getDeviceKey'
1204 scope (NameExpr)
1205 name (SimpleName)
1206 identifier='d'
1207 argument (MethodCallExpr)
1208 name (SimpleName)
1209 identifier='getDeviceKey'
1210 scope (MethodCallExpr)
1211 name (SimpleName)
1212 identifier='next'
1213 scope (NameExpr)
1214 name (SimpleName)
1215 identifier='diter'
1216 statement (ExpressionStmt)
1217 expression (AssignExpr)
1218 operator='ASSIGN'
1219 target (NameExpr)
1220 name (SimpleName)
1221 identifier='diter'
1222 value (MethodCallExpr)
1223 name (SimpleName)
1224 identifier='queryClassDevices'
1225 scope (NameExpr)
1226 name (SimpleName)
1227 identifier='deviceManager'
1228 arguments
1229 argument (MethodCallExpr)
1230 name (SimpleName)
1231 identifier='getEntityClass'
1232 scope (NameExpr)
1233 name (SimpleName)
1234 identifier='d'
1235 argument (FieldAccessExpr)
1236 name (SimpleName)
1237 identifier='NONE'
1238 scope (NameExpr)
1239 name (SimpleName)
1240 identifier='MacAddress'
1241 argument (FieldAccessExpr)
1242 name (SimpleName)
1243 identifier='ZERO'
1244 scope (NameExpr)
1245 name (SimpleName)
1246 identifier='VlanVid'
1247 argument (MethodCallExpr)
1248 name (SimpleName)
1249 identifier='of'
1250 scope (NameExpr)
1251 name (SimpleName)
1252 identifier='IPv4Address'
1253 arguments
1254 argument (IntegerLiteralExpr)
1255 value='1'
1256 argument (FieldAccessExpr)
1257 name (SimpleName)
1258 identifier='NONE'
1259 scope (NameExpr)
1260 name (SimpleName)
1261 identifier='IPv6Address'
1262 argument (FieldAccessExpr)
1263 name (SimpleName)
1264 identifier='NONE'
1265 scope (NameExpr)
1266 name (SimpleName)
1267 identifier='DatapathId'
1268 argument (FieldAccessExpr)
1269 name (SimpleName)
1270 identifier='ZERO'
1271 scope (NameExpr)
1272 name (SimpleName)
1273 identifier='OFPort'
1274 statement (ExpressionStmt)
1275 expression (MethodCallExpr)
1276 name (SimpleName)
1277 identifier='assertFalse'
1278 arguments
1279 argument (MethodCallExpr)
1280 name (SimpleName)
1281 identifier='hasNext'
1282 scope (NameExpr)
1283 name (SimpleName)
1284 identifier='diter'
1285 statement (ExpressionStmt)
1286 expression (AssignExpr)
1287 operator='ASSIGN'
1288 target (NameExpr)
1289 name (SimpleName)
1290 identifier='d'
1291 value (MethodCallExpr)
1292 name (SimpleName)
1293 identifier='findDevice'
1294 scope (NameExpr)
1295 name (SimpleName)
1296 identifier='deviceManager'
1297 arguments
1298 argument (MethodCallExpr)
1299 name (SimpleName)
1300 identifier='of'
1301 scope (NameExpr)
1302 name (SimpleName)
1303 identifier='MacAddress'
1304 arguments
1305 argument (LongLiteralExpr)
1306 value='1L'
1307 argument (FieldAccessExpr)
1308 name (SimpleName)
1309 identifier='ZERO'
1310 scope (NameExpr)
1311 name (SimpleName)
1312 identifier='VlanVid'
1313 argument (FieldAccessExpr)
1314 name (SimpleName)
1315 identifier='NONE'
1316 scope (NameExpr)
1317 name (SimpleName)
1318 identifier='IPv4Address'
1319 argument (FieldAccessExpr)
1320 name (SimpleName)
1321 identifier='NONE'
1322 scope (NameExpr)
1323 name (SimpleName)
1324 identifier='IPv6Address'
1325 argument (FieldAccessExpr)
1326 name (SimpleName)
1327 identifier='NONE'
1328 scope (NameExpr)
1329 name (SimpleName)
1330 identifier='DatapathId'
1331 argument (FieldAccessExpr)
1332 name (SimpleName)
1333 identifier='ZERO'
1334 scope (NameExpr)
1335 name (SimpleName)
1336 identifier='OFPort'
1337 statement (ExpressionStmt)
1338 expression (MethodCallExpr)
1339 name (SimpleName)
1340 identifier='assertArrayEquals'
1341 arguments
1342 argument (ArrayCreationExpr)
1343 elementType (ClassOrInterfaceType)
1344 name (SimpleName)
1345 identifier='IPv4Address'
1346 initializer (ArrayInitializerExpr)
1347 values
1348 value (MethodCallExpr)
1349 name (SimpleName)
1350 identifier='of'
1351 scope (NameExpr)
1352 name (SimpleName)
1353 identifier='IPv4Address'
1354 arguments
1355 argument (IntegerLiteralExpr)
1356 value='2'
1357 levels
1358 level (ArrayCreationLevel)
1359 argument (MethodCallExpr)
1360 name (SimpleName)
1361 identifier='getIPv4Addresses'
1362 scope (NameExpr)
1363 name (SimpleName)
1364 identifier='d'
1365 statement (ExpressionStmt)
1366 expression (MethodCallExpr)
1367 name (SimpleName)
1368 identifier='assertArrayEquals'
1369 arguments
1370 argument (ArrayCreationExpr)
1371 elementType (ClassOrInterfaceType)
1372 name (SimpleName)
1373 identifier='SwitchPort'
1374 initializer (ArrayInitializerExpr)
1375 values
1376 value (ObjectCreationExpr)
1377 type (ClassOrInterfaceType)
1378 name (SimpleName)
1379 identifier='SwitchPort'
1380 arguments
1381 argument (MethodCallExpr)
1382 name (SimpleName)
1383 identifier='of'
1384 scope (NameExpr)
1385 name (SimpleName)
1386 identifier='DatapathId'
1387 arguments
1388 argument (LongLiteralExpr)
1389 value='1L'
1390 argument (MethodCallExpr)
1391 name (SimpleName)
1392 identifier='of'
1393 scope (NameExpr)
1394 name (SimpleName)
1395 identifier='OFPort'
1396 arguments
1397 argument (IntegerLiteralExpr)
1398 value='1'
1399 value (ObjectCreationExpr)
1400 type (ClassOrInterfaceType)
1401 name (SimpleName)
1402 identifier='SwitchPort'
1403 arguments
1404 argument (MethodCallExpr)
1405 name (SimpleName)
1406 identifier='of'
1407 scope (NameExpr)
1408 name (SimpleName)
1409 identifier='DatapathId'
1410 arguments
1411 argument (LongLiteralExpr)
1412 value='5L'
1413 argument (MethodCallExpr)
1414 name (SimpleName)
1415 identifier='of'
1416 scope (NameExpr)
1417 name (SimpleName)
1418 identifier='OFPort'
1419 arguments
1420 argument (IntegerLiteralExpr)
1421 value='1'
1422 levels
1423 level (ArrayCreationLevel)
1424 argument (MethodCallExpr)
1425 name (SimpleName)
1426 identifier='getAttachmentPoints'
1427 scope (NameExpr)
1428 name (SimpleName)
1429 identifier='d'
1430 statement (ExpressionStmt)
1431 expression (MethodCallExpr)
1432 name (SimpleName)
1433 identifier='verify'
1434 arguments
1435 argument (NameExpr)
1436 name (SimpleName)
1437 identifier='mockListener'
1438 type (VoidType)
1439 name (SimpleName)
1440 identifier='doTestEntityExpiration'
1441 thrownExceptions
1442 thrownException (ClassOrInterfaceType)
1443 name (SimpleName)
1444 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
13 14
6 15
15 16
6 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32
32 33
31 34
34 35
35 36
24 37
37 38
38 39
2 40
40 41
41 42
42 43
41 44
44 45
45 46
44 47
47 48
48 49
47 50
50 51
51 52
52 53
51 54
54 55
55 56
51 57
57 58
58 59
59 60
60 61
58 62
62 63
63 64
57 65
65 66
66 67
67 68
65 69
69 70
70 71
44 72
72 73
73 74
2 75
75 76
76 77
77 78
76 79
79 80
80 81
79 82
82 83
83 84
82 85
85 86
86 87
87 88
86 89
89 90
90 91
86 92
92 93
93 94
94 95
95 96
93 97
97 98
98 99
92 100
100 101
101 102
102 103
100 104
104 105
105 106
79 107
107 108
108 109
2 110
110 111
111 112
112 113
113 114
114 115
115 116
114 117
117 118
118 119
119 120
120 121
113 122
122 123
113 124
124 125
125 126
2 127
127 128
128 129
129 130
128 131
131 132
132 133
131 134
134 135
135 136
134 137
137 138
138 139
139 140
138 141
141 142
142 143
138 144
144 145
145 146
146 147
145 148
148 149
149 150
145 151
151 152
152 153
153 154
144 155
155 156
156 157
155 158
158 159
159 160
155 161
161 162
162 163
163 164
131 165
165 166
166 167
2 168
168 169
169 170
170 171
169 172
172 173
173 174
172 175
175 176
176 177
175 178
178 179
179 180
180 181
179 182
182 183
183 184
179 185
185 186
186 187
187 188
186 189
189 190
190 191
186 192
192 193
193 194
185 195
195 196
196 197
195 198
198 199
199 200
195 201
201 202
202 203
172 204
204 205
205 206
2 207
207 208
208 209
209 210
208 211
211 212
212 213
211 214
214 215
215 216
214 217
217 218
218 219
219 220
218 221
221 222
222 223
218 224
224 225
225 226
226 227
225 228
228 229
229 230
225 231
231 232
232 233
224 234
234 235
235 236
234 237
237 238
238 239
234 240
240 241
241 242
211 243
243 244
244 245
2 246
246 247
247 248
248 249
247 250
250 251
251 252
250 253
253 254
254 255
253 256
256 257
257 258
258 259
257 260
260 261
261 262
257 263
263 264
264 265
265 266
264 267
267 268
268 269
264 270
270 271
271 272
250 273
273 274
274 275
275 276
274 277
277 278
278 279
274 280
280 281
281 282
2 283
283 284
284 285
285 286
284 287
287 288
288 289
287 290
290 291
291 292
290 293
293 294
294 295
295 296
294 297
297 298
298 299
294 300
300 301
301 302
302 303
301 304
304 305
305 306
301 307
307 308
308 309
287 310
310 311
311 312
312 313
311 314
314 315
315 316
311 317
317 318
318 319
2 320
320 321
321 322
322 323
321 324
324 325
325 326
324 327
327 328
328 329
327 330
330 331
331 332
332 333
331 334
334 335
335 336
331 337
337 338
338 339
339 340
338 341
341 342
342 343
338 344
344 345
345 346
337 347
347 348
348 349
347 350
350 351
351 352
347 353
353 354
354 355
337 356
356 357
357 358
356 359
359 360
360 361
356 362
362 363
363 364
337 365
365 366
366 367
365 368
368 369
369 370
365 371
371 372
372 373
324 374
374 375
375 376
2 377
377 378
378 379
379 380
380 381
381 382
382 383
383 384
380 385
385 386
380 387
387 388
388 389
2 390
390 391
391 392
392 393
391 394
394 395
395 396
394 397
397 398
398 399
397 400
400 401
401 402
402 403
401 404
404 405
405 406
394 407
407 408
408 409
409 410
2 411
411 412
412 413
413 414
412 415
415 416
416 417
417 418
2 419
419 420
420 421
420 422
422 423
423 424
422 425
425 426
426 427
420 428
428 429
429 430
2 431
431 432
432 433
433 434
434 435
435 436
436 437
435 438
438 439
439 440
434 441
441 442
434 443
443 444
444 445
2 446
446 447
447 448
448 449
449 450
450 451
451 452
452 453
450 454
454 455
455 456
456 457
455 458
458 459
459 460
455 461
461 462
462 463
454 464
464 465
465 466
464 467
467 468
468 469
454 470
470 471
471 472
470 473
473 474
474 475
470 476
476 477
477 478
454 479
479 480
480 481
479 482
482 483
483 484
454 485
485 486
486 487
485 488
488 489
489 490
485 491
491 492
492 493
454 494
494 495
495 496
494 497
497 498
498 499
494 500
500 501
501 502
454 503
503 504
504 505
503 506
506 507
507 508
449 509
509 510
449 511
511 512
512 513
2 514
514 515
515 516
516 517
515 518
518 519
519 520
515 521
521 522
522 523
523 524
522 525
525 526
526 527
521 528
528 529
528 530
530 531
530 532
532 533
533 534
532 535
535 536
536 537
528 538
538 539
2 540
540 541
541 542
542 543
543 544
544 545
545 546
546 547
544 548
548 549
549 550
550 551
549 552
552 553
553 554
549 555
555 556
556 557
548 558
558 559
559 560
558 561
561 562
562 563
548 564
564 565
565 566
564 567
567 568
568 569
564 570
570 571
571 572
548 573
573 574
574 575
573 576
576 577
577 578
548 579
579 580
580 581
579 582
582 583
583 584
579 585
585 586
586 587
548 588
588 589
589 590
588 591
591 592
592 593
588 594
594 595
595 596
548 597
597 598
598 599
597 600
600 601
601 602
543 603
603 604
543 605
605 606
606 607
2 608
608 609
609 610
610 611
609 612
612 613
613 614
609 615
615 616
616 617
617 618
2 619
619 620
620 621
621 622
622 623
623 624
624 625
623 626
626 627
627 628
623 629
629 630
630 631
631 632
622 633
633 634
622 635
635 636
636 637
2 638
638 639
639 640
640 641
639 642
642 643
643 644
644 645
645 646
643 647
647 648
648 649
649 650
650 651
649 652
652 653
653 654
649 655
655 656
656 657
648 658
658 659
659 660
658 661
661 662
662 663
658 664
664 665
665 666
643 667
667 668
642 669
669 670
670 671
669 672
672 673
673 674
2 675
675 676
676 677
677 678
676 679
679 680
680 681
681 682
682 683
680 684
684 685
685 686
686 687
687 688
688 689
686 690
690 691
691 692
692 693
691 694
694 695
695 696
691 697
697 698
698 699
690 700
700 701
701 702
700 703
703 704
704 705
700 706
706 707
707 708
685 709
709 710
710 711
711 712
709 713
713 714
714 715
715 716
714 717
717 718
718 719
714 720
720 721
721 722
713 723
723 724
724 725
723 726
726 727
727 728
723 729
729 730
730 731
680 732
732 733
679 734
734 735
735 736
734 737
737 738
738 739
2 740
740 741
741 742
742 743
743 744
744 745
745 746
744 747
747 748
748 749
744 750
750 751
751 752
752 753
751 754
754 755
755 756
750 757
757 758
758 759
757 760
760 761
761 762
750 763
763 764
764 765
763 766
766 767
767 768
750 769
769 770
770 771
769 772
772 773
773 774
769 775
775 776
776 777
750 778
778 779
779 780
778 781
781 782
782 783
750 784
784 785
785 786
784 787
787 788
788 789
750 790
790 791
791 792
790 793
793 794
794 795
743 796
796 797
743 798
798 799
799 800
798 801
801 802
802 803
803 804
804 805
2 806
806 807
807 808
808 809
807 810
810 811
811 812
812 813
811 814
814 815
815 816
2 817
817 818
818 819
819 820
818 821
821 822
822 823
823 824
822 825
825 826
826 827
821 828
828 829
829 830
828 831
831 832
832 833
831 834
834 835
835 836
2 837
837 838
838 839
838 840
840 841
841 842
838 843
843 844
844 845
843 846
846 847
847 848
843 849
849 850
850 851
851 852
850 853
853 854
854 855
849 856
856 857
857 858
856 859
859 860
860 861
849 862
862 863
863 864
862 865
865 866
866 867
849 868
868 869
869 870
868 871
871 872
872 873
868 874
874 875
875 876
849 877
877 878
878 879
877 880
880 881
881 882
849 883
883 884
884 885
883 886
886 887
887 888
849 889
889 890
890 891
889 892
892 893
893 894
2 895
895 896
896 897
897 898
896 899
899 900
900 901
901 902
900 903
903 904
904 905
2 906
906 907
907 908
908 909
907 910
910 911
911 912
912 913
911 914
914 915
915 916
910 917
917 918
918 919
917 920
920 921
921 922
920 923
923 924
924 925
2 926
926 927
927 928
928 929
927 930
930 931
931 932
932 933
2 934
934 935
935 936
936 937
935 938
938 939
939 940
935 941
941 942
942 943
943 944
2 945
945 946
946 947
947 948
946 949
949 950
950 951
951 952
2 953
953 954
954 955
955 956
954 957
957 958
958 959
959 960
2 961
961 962
962 963
963 964
962 965
965 966
966 967
962 968
968 969
969 970
970 971
969 972
972 973
973 974
974 975
975 976
2 977
977 978
978 979
979 980
978 981
981 982
982 983
978 984
984 985
985 986
986 987
985 988
988 989
989 990
990 991
991 992
2 993
993 994
994 995
995 996
994 997
997 998
998 999
999 1000
2 1001
1001 1002
1002 1003
1003 1004
1002 1005
1005 1006
1006 1007
1005 1008
1008 1009
1009 1010
1002 1011
1011 1012
1012 1013
1011 1014
2 1015
1015 1016
1016 1017
1016 1018
1018 1019
1019 1020
1016 1021
1021 1022
1022 1023
1021 1024
1024 1025
1025 1026
1021 1027
1027 1028
1028 1029
1029 1030
1028 1031
1031 1032
1032 1033
2 1034
1034 1035
1035 1036
1036 1037
1035 1038
1038 1039
1039 1040
1040 1041
1041 1042
1039 1043
1043 1044
1044 1045
1045 1046
1046 1047
1045 1048
1048 1049
1049 1050
1045 1051
1051 1052
1052 1053
1039 1054
1054 1055
1038 1056
1056 1057
1057 1058
1056 1059
1059 1060
1060 1061
2 1062
1062 1063
1063 1064
1064 1065
1063 1066
1066 1067
1067 1068
1068 1069
1069 1070
1067 1071
1071 1072
1072 1073
1073 1074
1074 1075
1075 1076
1073 1077
1077 1078
1078 1079
1079 1080
1078 1081
1081 1082
1082 1083
1078 1084
1084 1085
1085 1086
1077 1087
1087 1088
1088 1089
1087 1090
1090 1091
1091 1092
1087 1093
1093 1094
1094 1095
1072 1096
1096 1097
1097 1098
1098 1099
1096 1100
1100 1101
1101 1102
1102 1103
1101 1104
1104 1105
1105 1106
1101 1107
1107 1108
1108 1109
1100 1110
1110 1111
1111 1112
1110 1113
1113 1114
1114 1115
1110 1116
1116 1117
1117 1118
1067 1119
1119 1120
1066 1121
1121 1122
1122 1123
1121 1124
1124 1125
1125 1126
2 1127
1127 1128
1128 1129
1128 1130
1130 1131
1131 1132
1128 1133
1133 1134
1134 1135
1133 1136
1136 1137
1137 1138
1133 1139
1139 1140
1140 1141
1141 1142
1140 1143
1143 1144
1144 1145
1139 1146
1146 1147
1147 1148
1146 1149
1149 1150
1150 1151
1139 1152
1152 1153
1153 1154
1152 1155
1155 1156
1156 1157
1139 1158
1158 1159
1159 1160
1158 1161
1161 1162
1162 1163
1158 1164
1164 1165
1165 1166
1139 1167
1167 1168
1168 1169
1167 1170
1170 1171
1171 1172
1139 1173
1173 1174
1174 1175
1173 1176
1176 1177
1177 1178
1139 1179
1179 1180
1180 1181
1179 1182
1182 1183
1183 1184
2 1185
1185 1186
1186 1187
1187 1188
1186 1189
1189 1190
1190 1191
1191 1192
1190 1193
1193 1194
1194 1195
2 1196
1196 1197
1197 1198
1198 1199
1197 1200
1200 1201
1201 1202
1202 1203
1201 1204
1204 1205
1205 1206
1200 1207
1207 1208
1208 1209
1207 1210
1210 1211
1211 1212
1210 1213
1213 1214
1214 1215
2 1216
1216 1217
1217 1218
1217 1219
1219 1220
1220 1221
1217 1222
1222 1223
1223 1224
1222 1225
1225 1226
1226 1227
1222 1228
1228 1229
1229 1230
1230 1231
1229 1232
1232 1233
1233 1234
1228 1235
1235 1236
1236 1237
1235 1238
1238 1239
1239 1240
1228 1241
1241 1242
1242 1243
1241 1244
1244 1245
1245 1246
1228 1247
1247 1248
1248 1249
1247 1250
1250 1251
1251 1252
1247 1253
1253 1254
1254 1255
1228 1256
1256 1257
1257 1258
1256 1259
1259 1260
1260 1261
1228 1262
1262 1263
1263 1264
1262 1265
1265 1266
1266 1267
1228 1268
1268 1269
1269 1270
1268 1271
1271 1272
1272 1273
2 1274
1274 1275
1275 1276
1276 1277
1275 1278
1278 1279
1279 1280
1280 1281
1279 1282
1282 1283
1283 1284
2 1285
1285 1286
1286 1287
1286 1288
1288 1289
1289 1290
1286 1291
1291 1292
1292 1293
1291 1294
1294 1295
1295 1296
1291 1297
1297 1298
1298 1299
1299 1300
1298 1301
1301 1302
1302 1303
1298 1304
1304 1305
1305 1306
1297 1307
1307 1308
1308 1309
1307 1310
1310 1311
1311 1312
1297 1313
1313 1314
1314 1315
1313 1316
1316 1317
1317 1318
1297 1319
1319 1320
1320 1321
1319 1322
1322 1323
1323 1324
1297 1325
1325 1326
1326 1327
1325 1328
1328 1329
1329 1330
1297 1331
1331 1332
1332 1333
1331 1334
1334 1335
1335 1336
2 1337
1337 1338
1338 1339
1339 1340
1338 1341
1341 1342
1342 1343
1343 1344
1344 1345
1342 1346
1346 1347
1347 1348
1348 1349
1349 1350
1348 1351
1351 1352
1352 1353
1348 1354
1354 1355
1355 1356
1342 1357
1357 1358
1341 1359
1359 1360
1360 1361
1359 1362
1362 1363
1363 1364
2 1365
1365 1366
1366 1367
1367 1368
1366 1369
1369 1370
1370 1371
1371 1372
1372 1373
1370 1374
1374 1375
1375 1376
1376 1377
1377 1378
1378 1379
1376 1380
1380 1381
1381 1382
1382 1383
1381 1384
1384 1385
1385 1386
1381 1387
1387 1388
1388 1389
1380 1390
1390 1391
1391 1392
1390 1393
1393 1394
1394 1395
1390 1396
1396 1397
1397 1398
1375 1399
1399 1400
1400 1401
1401 1402
1399 1403
1403 1404
1404 1405
1405 1406
1404 1407
1407 1408
1408 1409
1404 1410
1410 1411
1411 1412
1403 1413
1413 1414
1414 1415
1413 1416
1416 1417
1417 1418
1413 1419
1419 1420
1420 1421
1370 1422
1422 1423
1369 1424
1424 1425
1425 1426
1424 1427
1427 1428
1428 1429
2 1430
1430 1431
1431 1432
1432 1433
1431 1434
1434 1435
1435 1436
1436 1437
0 1438
0 1439
1439 1440
0 1441
1441 1442
1442 1443
1443 1444

Note: Entity expiration does not result in device moved notification.
