174
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Builder'
11 scope (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='ImmutableMap'
14 name (SimpleName)
15 identifier='termsBuilder'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='Builder'
19 scope (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='ImmutableMap'
22 typeArguments
23 typeArgument (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='String'
26 typeArgument (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='String'
29 statement (ExpressionStmt)
30 expression (MethodCallExpr)
31 name (SimpleName)
32 identifier='put'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='termsBuilder'
36 arguments
37 argument (MethodCallExpr)
38 name (SimpleName)
39 identifier='buildCollectionItemName'
40 scope (FieldAccessExpr)
41 name (SimpleName)
42 identifier='QuerySpecification'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='QueryTask'
46 arguments
47 argument (FieldAccessExpr)
48 name (SimpleName)
49 identifier='FIELD_NAME_NETWORKS'
50 scope (FieldAccessExpr)
51 name (SimpleName)
52 identifier='State'
53 scope (NameExpr)
54 name (SimpleName)
55 identifier='VmService'
56 argument (FieldAccessExpr)
57 name (SimpleName)
58 identifier='virtualNetworkId'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='state'
62 statement (ExpressionStmt)
63 expression (VariableDeclarationExpr)
64 variables
65 variable (VariableDeclarator)
66 initializer (MethodCallExpr)
67 name (SimpleName)
68 identifier='buildQuerySpec'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='QueryTaskUtils'
72 arguments
73 argument (ClassExpr)
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='State'
77 scope (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='VmService'
80 argument (MethodCallExpr)
81 name (SimpleName)
82 identifier='build'
83 scope (NameExpr)
84 name (SimpleName)
85 identifier='termsBuilder'
86 name (SimpleName)
87 identifier='querySpecification'
88 type (ClassOrInterfaceType)
89 name (SimpleName)
90 identifier='QuerySpecification'
91 scope (ClassOrInterfaceType)
92 name (SimpleName)
93 identifier='QueryTask'
94 statement (ExpressionStmt)
95 expression (VariableDeclarationExpr)
96 variables
97 variable (VariableDeclarator)
98 initializer (MethodCallExpr)
99 name (SimpleName)
100 identifier='setDirect'
101 scope (MethodCallExpr)
102 name (SimpleName)
103 identifier='create'
104 scope (NameExpr)
105 name (SimpleName)
106 identifier='QueryTask'
107 arguments
108 argument (NameExpr)
109 name (SimpleName)
110 identifier='querySpecification'
111 arguments
112 argument (BooleanLiteralExpr)
113 value='true'
114 name (SimpleName)
115 identifier='queryTask'
116 type (ClassOrInterfaceType)
117 name (SimpleName)
118 identifier='QueryTask'
119 statement (ExpressionStmt)
120 expression (MethodCallExpr)
121 name (SimpleName)
122 identifier='sendWith'
123 scope (MethodCallExpr)
124 name (SimpleName)
125 identifier='setCompletion'
126 scope (MethodCallExpr)
127 name (SimpleName)
128 identifier='setBody'
129 scope (MethodCallExpr)
130 name (SimpleName)
131 identifier='createBroadcastPost'
132 scope (MethodCallExpr)
133 name (SimpleName)
134 identifier='getCloudStoreHelper'
135 scope (NameExpr)
136 name (SimpleName)
137 identifier='ServiceHostUtils'
138 arguments
139 argument (MethodCallExpr)
140 name (SimpleName)
141 identifier='getHost'
142 arguments
143 argument (FieldAccessExpr)
144 name (SimpleName)
145 identifier='CORE_LOCAL_QUERY_TASKS'
146 scope (NameExpr)
147 name (SimpleName)
148 identifier='ServiceUriPaths'
149 argument (FieldAccessExpr)
150 name (SimpleName)
151 identifier='DEFAULT_NODE_SELECTOR'
152 scope (NameExpr)
153 name (SimpleName)
154 identifier='ServiceUriPaths'
155 arguments
156 argument (NameExpr)
157 name (SimpleName)
158 identifier='queryTask'
159 arguments
160 argument (NullLiteralExpr)
161 arguments
162 argument (ThisExpr)
163 type (VoidType)
164 name (SimpleName)
165 identifier='checkVmExistence'
166 parameters
167 parameter (Parameter)
168 isVarArgs='false'
169 name (SimpleName)
170 identifier='state'
171 type (ClassOrInterfaceType)
172 name (SimpleName)
173 identifier='DeleteVirtualNetworkWorkflowDocument'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
8 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
16 19
19 20
20 21
16 22
22 23
23 24
24 25
22 26
26 27
27 28
2 29
29 30
30 31
31 32
30 33
33 34
34 35
30 36
36 37
37 38
38 39
37 40
40 41
41 42
40 43
43 44
44 45
37 46
46 47
47 48
48 49
47 50
50 51
51 52
50 53
53 54
54 55
36 56
56 57
57 58
56 59
59 60
60 61
2 62
62 63
63 64
64 65
65 66
66 67
67 68
66 69
69 70
70 71
66 72
72 73
73 74
74 75
75 76
74 77
77 78
78 79
72 80
80 81
81 82
80 83
83 84
84 85
65 86
86 87
65 88
88 89
89 90
88 91
91 92
92 93
2 94
94 95
95 96
96 97
97 98
98 99
99 100
98 101
101 102
102 103
101 104
104 105
105 106
101 107
107 108
108 109
109 110
98 111
111 112
112 113
97 114
114 115
97 116
116 117
117 118
2 119
119 120
120 121
121 122
120 123
123 124
124 125
123 126
126 127
127 128
126 129
129 130
130 131
129 132
132 133
133 134
132 135
135 136
136 137
132 138
138 139
139 140
140 141
129 142
142 143
143 144
144 145
143 146
146 147
147 148
142 149
149 150
150 151
149 152
152 153
153 154
126 155
155 156
156 157
157 158
123 159
159 160
120 161
161 162
0 163
0 164
164 165
0 166
166 167
167 168
167 169
169 170
167 171
171 172
172 173

Check if any VMs still exist on this virtual network. If there are, move this virtual network to PENDING_DELETE state. If there are not, delete the related network equipments, and move the network to DELETED state.
