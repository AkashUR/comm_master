118
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='DecimalFormat'
11 name (SimpleName)
12 identifier='format'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='DecimalFormat'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setDecimalFormatSymbols'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='format'
23 arguments
24 argument (ObjectCreationExpr)
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='DecimalFormatSymbols'
28 arguments
29 argument (FieldAccessExpr)
30 name (SimpleName)
31 identifier='US'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='Locale'
35 statement (ExpressionStmt)
36 expression (MethodCallExpr)
37 name (SimpleName)
38 identifier='setMinimumIntegerDigits'
39 scope (NameExpr)
40 name (SimpleName)
41 identifier='format'
42 arguments
43 argument (IntegerLiteralExpr)
44 value='1'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='setMaximumFractionDigits'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='format'
52 arguments
53 argument (NameExpr)
54 name (SimpleName)
55 identifier='d'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='setMinimumFractionDigits'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='format'
63 arguments
64 argument (NameExpr)
65 name (SimpleName)
66 identifier='d'
67 statement (ExpressionStmt)
68 expression (MethodCallExpr)
69 name (SimpleName)
70 identifier='setGroupingUsed'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='format'
74 arguments
75 argument (BooleanLiteralExpr)
76 value='false'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='print'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='output'
85 argument (NameExpr)
86 name (SimpleName)
87 identifier='format'
88 argument (BinaryExpr)
89 operator='PLUS'
90 left (NameExpr)
91 name (SimpleName)
92 identifier='w'
93 right (IntegerLiteralExpr)
94 value='2'
95 type (VoidType)
96 name (SimpleName)
97 identifier='print'
98 parameters
99 parameter (Parameter)
100 isVarArgs='false'
101 name (SimpleName)
102 identifier='output'
103 type (ClassOrInterfaceType)
104 name (SimpleName)
105 identifier='PrintWriter'
106 parameter (Parameter)
107 isVarArgs='false'
108 name (SimpleName)
109 identifier='w'
110 type (PrimitiveType)
111 type='INT'
112 parameter (Parameter)
113 isVarArgs='false'
114 name (SimpleName)
115 identifier='d'
116 type (PrimitiveType)
117 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
26 27
24 28
28 29
29 30
30 31
29 32
32 33
33 34
2 35
35 36
36 37
37 38
36 39
39 40
40 41
36 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
46 52
52 53
53 54
54 55
2 56
56 57
57 58
58 59
57 60
60 61
61 62
57 63
63 64
64 65
65 66
2 67
67 68
68 69
69 70
68 71
71 72
72 73
68 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
83 84
81 85
85 86
86 87
81 88
88 89
88 90
90 91
91 92
88 93
93 94
0 95
0 96
96 97
0 98
98 99
99 100
99 101
101 102
99 103
103 104
104 105
98 106
106 107
106 108
108 109
106 110
110 111
98 112
112 113
112 114
114 115
112 116
116 117

Print the matrix to the output stream.   Line the elements up in columns with a Fortran-like 'Fw.d' style format.
