62
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='parent'
9 argument (BinaryExpr)
10 operator='BINARY_OR'
11 left (NameExpr)
12 name (SimpleName)
13 identifier='style'
14 right (FieldAccessExpr)
15 name (SimpleName)
16 identifier='DOUBLE_BUFFERED'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='SWT'
20 statement (ExpressionStmt)
21 expression (AssignExpr)
22 operator='ASSIGN'
23 target (NameExpr)
24 name (SimpleName)
25 identifier='items'
26 value (ObjectCreationExpr)
27 type (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='ArrayList'
30 typeArguments
31 typeArgument (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='RoundedToolItem'
34 statement (ExpressionStmt)
35 expression (AssignExpr)
36 operator='ASSIGN'
37 target (NameExpr)
38 name (SimpleName)
39 identifier='cornerRadius'
40 value (IntegerLiteralExpr)
41 value='2'
42 statement (ExpressionStmt)
43 expression (MethodCallExpr)
44 name (SimpleName)
45 identifier='addListeners'
46 name (SimpleName)
47 identifier='RoundedToolbar'
48 parameters
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='parent'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='Composite'
56 parameter (Parameter)
57 isVarArgs='false'
58 name (SimpleName)
59 identifier='style'
60 type (PrimitiveType)
61 type='INT'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
9 11
11 12
12 13
9 14
14 15
15 16
14 17
17 18
18 19
2 20
20 21
21 22
21 23
23 24
24 25
21 26
26 27
27 28
28 29
27 30
30 31
31 32
32 33
2 34
34 35
35 36
35 37
37 38
38 39
35 40
40 41
2 42
42 43
43 44
44 45
0 46
46 47
0 48
48 49
49 50
49 51
51 52
49 53
53 54
54 55
48 56
56 57
56 58
58 59
56 60
60 61

Constructs a new instance of this class given its parent and a style value describing its behavior and appearance. <p> The style value is either one of the style constants defined in class <code>SWT</code> which is applicable to instances of this class, or must be built by <em>bitwise OR</em>'ing together  (that is, using the <code>int</code> "|" operator) two or more of those <code>SWT</code> style constants. The class description lists the style constants that are applicable to the class. Style bits are also inherited from superclasses. </p>
