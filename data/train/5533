1069
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='MinimalTSC'
11 name (SimpleName)
12 identifier='tsc'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='MinimalTSC'
16 statement (ExpressionStmt)
17 expression (VariableDeclarationExpr)
18 variables
19 variable (VariableDeclarator)
20 initializer (MethodCallExpr)
21 name (SimpleName)
22 identifier='_createVariableDefinition'
23 arguments
24 argument (StringLiteralExpr)
25 value='v1'
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='TYPE_INTEGER'
29 argument (FieldAccessExpr)
30 name (SimpleName)
31 identifier='s_scope'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='tsc'
35 name (SimpleName)
36 identifier='v1'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='VariableDefinition'
40 statement (ExpressionStmt)
41 expression (VariableDeclarationExpr)
42 variables
43 variable (VariableDeclarator)
44 initializer (MethodCallExpr)
45 name (SimpleName)
46 identifier='_createLocalReaction'
47 arguments
48 argument (FieldAccessExpr)
49 name (SimpleName)
50 identifier='s1'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='tsc'
54 argument (NullLiteralExpr)
55 name (SimpleName)
56 identifier='lr1'
57 type (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='LocalReaction'
60 statement (ExpressionStmt)
61 expression (MethodCallExpr)
62 name (SimpleName)
63 identifier='_createRegularEventSpec'
64 arguments
65 argument (FieldAccessExpr)
66 name (SimpleName)
67 identifier='e1'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='tsc'
71 argument (CastExpr)
72 expression (MethodCallExpr)
73 name (SimpleName)
74 identifier='getTrigger'
75 scope (NameExpr)
76 name (SimpleName)
77 identifier='lr1'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='ReactionTrigger'
81 statement (ExpressionStmt)
82 expression (VariableDeclarationExpr)
83 variables
84 variable (VariableDeclarator)
85 initializer (MethodCallExpr)
86 name (SimpleName)
87 identifier='_createReactionEffect'
88 arguments
89 argument (NameExpr)
90 name (SimpleName)
91 identifier='lr1'
92 name (SimpleName)
93 identifier='lr1_eff'
94 type (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='ReactionEffect'
97 statement (ExpressionStmt)
98 expression (VariableDeclarationExpr)
99 variables
100 variable (VariableDeclarator)
101 initializer (MethodCallExpr)
102 name (SimpleName)
103 identifier='_createVariableAssignment'
104 arguments
105 argument (NameExpr)
106 name (SimpleName)
107 identifier='v1'
108 argument (FieldAccessExpr)
109 name (SimpleName)
110 identifier='ASSIGN'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='AssignmentOperator'
114 argument (MethodCallExpr)
115 name (SimpleName)
116 identifier='_createValue'
117 arguments
118 argument (IntegerLiteralExpr)
119 value='42'
120 argument (NameExpr)
121 name (SimpleName)
122 identifier='lr1_eff'
123 name (SimpleName)
124 identifier='assign1'
125 type (ClassOrInterfaceType)
126 name (SimpleName)
127 identifier='AssignmentExpression'
128 statement (ExpressionStmt)
129 expression (VariableDeclarationExpr)
130 variables
131 variable (VariableDeclarator)
132 initializer (MethodCallExpr)
133 name (SimpleName)
134 identifier='_createLocalReaction'
135 arguments
136 argument (FieldAccessExpr)
137 name (SimpleName)
138 identifier='s1'
139 scope (NameExpr)
140 name (SimpleName)
141 identifier='tsc'
142 argument (NullLiteralExpr)
143 name (SimpleName)
144 identifier='lr2'
145 type (ClassOrInterfaceType)
146 name (SimpleName)
147 identifier='LocalReaction'
148 statement (ExpressionStmt)
149 expression (MethodCallExpr)
150 name (SimpleName)
151 identifier='_createRegularEventSpec'
152 arguments
153 argument (FieldAccessExpr)
154 name (SimpleName)
155 identifier='e1'
156 scope (NameExpr)
157 name (SimpleName)
158 identifier='tsc'
159 argument (CastExpr)
160 expression (MethodCallExpr)
161 name (SimpleName)
162 identifier='getTrigger'
163 scope (NameExpr)
164 name (SimpleName)
165 identifier='lr2'
166 type (ClassOrInterfaceType)
167 name (SimpleName)
168 identifier='ReactionTrigger'
169 statement (ExpressionStmt)
170 expression (VariableDeclarationExpr)
171 variables
172 variable (VariableDeclarator)
173 initializer (MethodCallExpr)
174 name (SimpleName)
175 identifier='createLogicalRelationExpression'
176 scope (FieldAccessExpr)
177 name (SimpleName)
178 identifier='eINSTANCE'
179 scope (NameExpr)
180 name (SimpleName)
181 identifier='ExpressionsFactory'
182 name (SimpleName)
183 identifier='lr2_equals'
184 type (ClassOrInterfaceType)
185 name (SimpleName)
186 identifier='LogicalRelationExpression'
187 statement (ExpressionStmt)
188 expression (MethodCallExpr)
189 name (SimpleName)
190 identifier='setOperator'
191 scope (NameExpr)
192 name (SimpleName)
193 identifier='lr2_equals'
194 arguments
195 argument (FieldAccessExpr)
196 name (SimpleName)
197 identifier='EQUALS'
198 scope (NameExpr)
199 name (SimpleName)
200 identifier='RelationalOperator'
201 statement (ExpressionStmt)
202 expression (VariableDeclarationExpr)
203 variables
204 variable (VariableDeclarator)
205 initializer (MethodCallExpr)
206 name (SimpleName)
207 identifier='createElementReferenceExpression'
208 scope (FieldAccessExpr)
209 name (SimpleName)
210 identifier='eINSTANCE'
211 scope (NameExpr)
212 name (SimpleName)
213 identifier='ExpressionsFactory'
214 name (SimpleName)
215 identifier='lr2_varRef'
216 type (ClassOrInterfaceType)
217 name (SimpleName)
218 identifier='ElementReferenceExpression'
219 statement (ExpressionStmt)
220 expression (MethodCallExpr)
221 name (SimpleName)
222 identifier='setReference'
223 scope (NameExpr)
224 name (SimpleName)
225 identifier='lr2_varRef'
226 arguments
227 argument (NameExpr)
228 name (SimpleName)
229 identifier='v1'
230 statement (ExpressionStmt)
231 expression (VariableDeclarationExpr)
232 variables
233 variable (VariableDeclarator)
234 initializer (MethodCallExpr)
235 name (SimpleName)
236 identifier='_createValue'
237 arguments
238 argument (IntegerLiteralExpr)
239 value='42'
240 name (SimpleName)
241 identifier='lr2_value'
242 type (ClassOrInterfaceType)
243 name (SimpleName)
244 identifier='PrimitiveValueExpression'
245 statement (ExpressionStmt)
246 expression (MethodCallExpr)
247 name (SimpleName)
248 identifier='setLeftOperand'
249 scope (NameExpr)
250 name (SimpleName)
251 identifier='lr2_equals'
252 arguments
253 argument (NameExpr)
254 name (SimpleName)
255 identifier='lr2_varRef'
256 statement (ExpressionStmt)
257 expression (MethodCallExpr)
258 name (SimpleName)
259 identifier='setRightOperand'
260 scope (NameExpr)
261 name (SimpleName)
262 identifier='lr2_equals'
263 arguments
264 argument (NameExpr)
265 name (SimpleName)
266 identifier='lr2_value'
267 statement (ExpressionStmt)
268 expression (MethodCallExpr)
269 name (SimpleName)
270 identifier='setGuard'
271 scope (EnclosedExpr)
272 inner (CastExpr)
273 expression (MethodCallExpr)
274 name (SimpleName)
275 identifier='getTrigger'
276 scope (NameExpr)
277 name (SimpleName)
278 identifier='lr2'
279 type (ClassOrInterfaceType)
280 name (SimpleName)
281 identifier='ReactionTrigger'
282 arguments
283 argument (MethodCallExpr)
284 name (SimpleName)
285 identifier='createGuardExpression'
286 arguments
287 argument (NameExpr)
288 name (SimpleName)
289 identifier='lr2_equals'
290 statement (ExpressionStmt)
291 expression (VariableDeclarationExpr)
292 variables
293 variable (VariableDeclarator)
294 initializer (MethodCallExpr)
295 name (SimpleName)
296 identifier='_createReactionEffect'
297 arguments
298 argument (NameExpr)
299 name (SimpleName)
300 identifier='lr2'
301 name (SimpleName)
302 identifier='lr2_eff'
303 type (ClassOrInterfaceType)
304 name (SimpleName)
305 identifier='ReactionEffect'
306 statement (ExpressionStmt)
307 expression (VariableDeclarationExpr)
308 variables
309 variable (VariableDeclarator)
310 initializer (MethodCallExpr)
311 name (SimpleName)
312 identifier='_createVariableAssignment'
313 arguments
314 argument (NameExpr)
315 name (SimpleName)
316 identifier='v1'
317 argument (FieldAccessExpr)
318 name (SimpleName)
319 identifier='ASSIGN'
320 scope (NameExpr)
321 name (SimpleName)
322 identifier='AssignmentOperator'
323 argument (MethodCallExpr)
324 name (SimpleName)
325 identifier='_createValue'
326 arguments
327 argument (IntegerLiteralExpr)
328 value='0'
329 argument (NameExpr)
330 name (SimpleName)
331 identifier='lr2_eff'
332 name (SimpleName)
333 identifier='assign2'
334 type (ClassOrInterfaceType)
335 name (SimpleName)
336 identifier='AssignmentExpression'
337 statement (ExpressionStmt)
338 expression (VariableDeclarationExpr)
339 variables
340 variable (VariableDeclarator)
341 initializer (MethodCallExpr)
342 name (SimpleName)
343 identifier='_createLocalReaction'
344 arguments
345 argument (FieldAccessExpr)
346 name (SimpleName)
347 identifier='s1'
348 scope (NameExpr)
349 name (SimpleName)
350 identifier='tsc'
351 argument (NullLiteralExpr)
352 name (SimpleName)
353 identifier='lr3'
354 type (ClassOrInterfaceType)
355 name (SimpleName)
356 identifier='LocalReaction'
357 statement (ExpressionStmt)
358 expression (VariableDeclarationExpr)
359 variables
360 variable (VariableDeclarator)
361 initializer (MethodCallExpr)
362 name (SimpleName)
363 identifier='createLogicalRelationExpression'
364 scope (FieldAccessExpr)
365 name (SimpleName)
366 identifier='eINSTANCE'
367 scope (NameExpr)
368 name (SimpleName)
369 identifier='ExpressionsFactory'
370 name (SimpleName)
371 identifier='lr3_equals'
372 type (ClassOrInterfaceType)
373 name (SimpleName)
374 identifier='LogicalRelationExpression'
375 statement (ExpressionStmt)
376 expression (MethodCallExpr)
377 name (SimpleName)
378 identifier='setOperator'
379 scope (NameExpr)
380 name (SimpleName)
381 identifier='lr3_equals'
382 arguments
383 argument (FieldAccessExpr)
384 name (SimpleName)
385 identifier='EQUALS'
386 scope (NameExpr)
387 name (SimpleName)
388 identifier='RelationalOperator'
389 statement (ExpressionStmt)
390 expression (VariableDeclarationExpr)
391 variables
392 variable (VariableDeclarator)
393 initializer (MethodCallExpr)
394 name (SimpleName)
395 identifier='createElementReferenceExpression'
396 scope (FieldAccessExpr)
397 name (SimpleName)
398 identifier='eINSTANCE'
399 scope (NameExpr)
400 name (SimpleName)
401 identifier='ExpressionsFactory'
402 name (SimpleName)
403 identifier='lr3_varRef'
404 type (ClassOrInterfaceType)
405 name (SimpleName)
406 identifier='ElementReferenceExpression'
407 statement (ExpressionStmt)
408 expression (MethodCallExpr)
409 name (SimpleName)
410 identifier='setReference'
411 scope (NameExpr)
412 name (SimpleName)
413 identifier='lr3_varRef'
414 arguments
415 argument (NameExpr)
416 name (SimpleName)
417 identifier='v1'
418 statement (ExpressionStmt)
419 expression (VariableDeclarationExpr)
420 variables
421 variable (VariableDeclarator)
422 initializer (MethodCallExpr)
423 name (SimpleName)
424 identifier='_createValue'
425 arguments
426 argument (IntegerLiteralExpr)
427 value='0'
428 name (SimpleName)
429 identifier='lr3_value'
430 type (ClassOrInterfaceType)
431 name (SimpleName)
432 identifier='PrimitiveValueExpression'
433 statement (ExpressionStmt)
434 expression (MethodCallExpr)
435 name (SimpleName)
436 identifier='setLeftOperand'
437 scope (NameExpr)
438 name (SimpleName)
439 identifier='lr3_equals'
440 arguments
441 argument (NameExpr)
442 name (SimpleName)
443 identifier='lr3_varRef'
444 statement (ExpressionStmt)
445 expression (MethodCallExpr)
446 name (SimpleName)
447 identifier='setRightOperand'
448 scope (NameExpr)
449 name (SimpleName)
450 identifier='lr3_equals'
451 arguments
452 argument (NameExpr)
453 name (SimpleName)
454 identifier='lr3_value'
455 statement (ExpressionStmt)
456 expression (MethodCallExpr)
457 name (SimpleName)
458 identifier='setGuard'
459 scope (EnclosedExpr)
460 inner (CastExpr)
461 expression (MethodCallExpr)
462 name (SimpleName)
463 identifier='getTrigger'
464 scope (NameExpr)
465 name (SimpleName)
466 identifier='lr3'
467 type (ClassOrInterfaceType)
468 name (SimpleName)
469 identifier='ReactionTrigger'
470 arguments
471 argument (MethodCallExpr)
472 name (SimpleName)
473 identifier='createGuardExpression'
474 arguments
475 argument (NameExpr)
476 name (SimpleName)
477 identifier='lr3_equals'
478 statement (ExpressionStmt)
479 expression (VariableDeclarationExpr)
480 variables
481 variable (VariableDeclarator)
482 initializer (MethodCallExpr)
483 name (SimpleName)
484 identifier='_createReactionEffect'
485 arguments
486 argument (NameExpr)
487 name (SimpleName)
488 identifier='lr3'
489 name (SimpleName)
490 identifier='lr3_eff'
491 type (ClassOrInterfaceType)
492 name (SimpleName)
493 identifier='ReactionEffect'
494 statement (ExpressionStmt)
495 expression (VariableDeclarationExpr)
496 variables
497 variable (VariableDeclarator)
498 initializer (MethodCallExpr)
499 name (SimpleName)
500 identifier='_createVariableAssignment'
501 arguments
502 argument (NameExpr)
503 name (SimpleName)
504 identifier='v1'
505 argument (FieldAccessExpr)
506 name (SimpleName)
507 identifier='ASSIGN'
508 scope (NameExpr)
509 name (SimpleName)
510 identifier='AssignmentOperator'
511 argument (MethodCallExpr)
512 name (SimpleName)
513 identifier='_createValue'
514 arguments
515 argument (IntegerLiteralExpr)
516 value='1'
517 argument (NameExpr)
518 name (SimpleName)
519 identifier='lr3_eff'
520 name (SimpleName)
521 identifier='assign3'
522 type (ClassOrInterfaceType)
523 name (SimpleName)
524 identifier='AssignmentExpression'
525 statement (ExpressionStmt)
526 expression (VariableDeclarationExpr)
527 variables
528 variable (VariableDeclarator)
529 initializer (MethodCallExpr)
530 name (SimpleName)
531 identifier='transform'
532 scope (NameExpr)
533 name (SimpleName)
534 identifier='sequencer'
535 arguments
536 argument (FieldAccessExpr)
537 name (SimpleName)
538 identifier='sc'
539 scope (NameExpr)
540 name (SimpleName)
541 identifier='tsc'
542 name (SimpleName)
543 identifier='flow'
544 type (ClassOrInterfaceType)
545 name (SimpleName)
546 identifier='ExecutionFlow'
547 statement (ExpressionStmt)
548 expression (VariableDeclarationExpr)
549 variables
550 variable (VariableDeclarator)
551 initializer (MethodCallExpr)
552 name (SimpleName)
553 identifier='get'
554 scope (MethodCallExpr)
555 name (SimpleName)
556 identifier='getStates'
557 scope (NameExpr)
558 name (SimpleName)
559 identifier='flow'
560 arguments
561 argument (IntegerLiteralExpr)
562 value='0'
563 name (SimpleName)
564 identifier='s1'
565 type (ClassOrInterfaceType)
566 name (SimpleName)
567 identifier='ExecutionState'
568 statement (ExpressionStmt)
569 expression (MethodCallExpr)
570 name (SimpleName)
571 identifier='assertEquals'
572 arguments
573 argument (MethodCallExpr)
574 name (SimpleName)
575 identifier='getName'
576 scope (FieldAccessExpr)
577 name (SimpleName)
578 identifier='s1'
579 scope (NameExpr)
580 name (SimpleName)
581 identifier='tsc'
582 argument (MethodCallExpr)
583 name (SimpleName)
584 identifier='getSimpleName'
585 scope (NameExpr)
586 name (SimpleName)
587 identifier='s1'
588 statement (ExpressionStmt)
589 expression (MethodCallExpr)
590 name (SimpleName)
591 identifier='assertEquals'
592 arguments
593 argument (IntegerLiteralExpr)
594 value='3'
595 argument (MethodCallExpr)
596 name (SimpleName)
597 identifier='size'
598 scope (MethodCallExpr)
599 name (SimpleName)
600 identifier='getReactions'
601 scope (NameExpr)
602 name (SimpleName)
603 identifier='s1'
604 statement (ExpressionStmt)
605 expression (MethodCallExpr)
606 name (SimpleName)
607 identifier='assertNotNull'
608 arguments
609 argument (MethodCallExpr)
610 name (SimpleName)
611 identifier='getReactSequence'
612 scope (NameExpr)
613 name (SimpleName)
614 identifier='s1'
615 statement (ExpressionStmt)
616 expression (VariableDeclarationExpr)
617 variables
618 variable (VariableDeclarator)
619 initializer (MethodCallExpr)
620 name (SimpleName)
621 identifier='get'
622 scope (MethodCallExpr)
623 name (SimpleName)
624 identifier='getSteps'
625 scope (MethodCallExpr)
626 name (SimpleName)
627 identifier='getReactSequence'
628 scope (NameExpr)
629 name (SimpleName)
630 identifier='s1'
631 arguments
632 argument (IntegerLiteralExpr)
633 value='0'
634 name (SimpleName)
635 identifier='step'
636 type (ClassOrInterfaceType)
637 name (SimpleName)
638 identifier='Step'
639 statement (ExpressionStmt)
640 expression (VariableDeclarationExpr)
641 variables
642 variable (VariableDeclarator)
643 initializer (CastExpr)
644 expression (MethodCallExpr)
645 name (SimpleName)
646 identifier='get'
647 scope (MethodCallExpr)
648 name (SimpleName)
649 identifier='getSteps'
650 scope (MethodCallExpr)
651 name (SimpleName)
652 identifier='assertedSequence'
653 arguments
654 argument (MethodCallExpr)
655 name (SimpleName)
656 identifier='get'
657 scope (MethodCallExpr)
658 name (SimpleName)
659 identifier='getSteps'
660 scope (MethodCallExpr)
661 name (SimpleName)
662 identifier='assertedSequence'
663 arguments
664 argument (NameExpr)
665 name (SimpleName)
666 identifier='step'
667 arguments
668 argument (IntegerLiteralExpr)
669 value='0'
670 arguments
671 argument (IntegerLiteralExpr)
672 value='0'
673 type (ClassOrInterfaceType)
674 name (SimpleName)
675 identifier='Sequence'
676 name (SimpleName)
677 identifier='_seq'
678 type (ClassOrInterfaceType)
679 name (SimpleName)
680 identifier='Sequence'
681 statement (ExpressionStmt)
682 expression (MethodCallExpr)
683 name (SimpleName)
684 identifier='assertEquals'
685 arguments
686 argument (IntegerLiteralExpr)
687 value='3'
688 argument (MethodCallExpr)
689 name (SimpleName)
690 identifier='size'
691 scope (MethodCallExpr)
692 name (SimpleName)
693 identifier='getSteps'
694 scope (NameExpr)
695 name (SimpleName)
696 identifier='_seq'
697 statement (ExpressionStmt)
698 expression (VariableDeclarationExpr)
699 variables
700 variable (VariableDeclarator)
701 initializer (CastExpr)
702 expression (MethodCallExpr)
703 name (SimpleName)
704 identifier='get'
705 scope (MethodCallExpr)
706 name (SimpleName)
707 identifier='getSteps'
708 scope (NameExpr)
709 name (SimpleName)
710 identifier='_seq'
711 arguments
712 argument (IntegerLiteralExpr)
713 value='0'
714 type (ClassOrInterfaceType)
715 name (SimpleName)
716 identifier='If'
717 name (SimpleName)
718 identifier='_lr1'
719 type (ClassOrInterfaceType)
720 name (SimpleName)
721 identifier='If'
722 statement (ExpressionStmt)
723 expression (MethodCallExpr)
724 name (SimpleName)
725 identifier='assertClass'
726 arguments
727 argument (ClassExpr)
728 type (ClassOrInterfaceType)
729 name (SimpleName)
730 identifier='ElementReferenceExpression'
731 argument (MethodCallExpr)
732 name (SimpleName)
733 identifier='getCondition'
734 scope (MethodCallExpr)
735 name (SimpleName)
736 identifier='getCheck'
737 scope (NameExpr)
738 name (SimpleName)
739 identifier='_lr1'
740 statement (ExpressionStmt)
741 expression (MethodCallExpr)
742 name (SimpleName)
743 identifier='assertSame'
744 arguments
745 argument (MethodCallExpr)
746 name (SimpleName)
747 identifier='getCondition'
748 scope (MethodCallExpr)
749 name (SimpleName)
750 identifier='getCheck'
751 scope (MethodCallExpr)
752 name (SimpleName)
753 identifier='get'
754 scope (MethodCallExpr)
755 name (SimpleName)
756 identifier='getReactions'
757 scope (NameExpr)
758 name (SimpleName)
759 identifier='s1'
760 arguments
761 argument (IntegerLiteralExpr)
762 value='0'
763 argument (MethodCallExpr)
764 name (SimpleName)
765 identifier='getCondition'
766 scope (MethodCallExpr)
767 name (SimpleName)
768 identifier='getCheck'
769 scope (NameExpr)
770 name (SimpleName)
771 identifier='_lr1'
772 statement (ExpressionStmt)
773 expression (VariableDeclarationExpr)
774 variables
775 variable (VariableDeclarator)
776 initializer (CastExpr)
777 expression (MethodCallExpr)
778 name (SimpleName)
779 identifier='getThenStep'
780 scope (NameExpr)
781 name (SimpleName)
782 identifier='_lr1'
783 type (ClassOrInterfaceType)
784 name (SimpleName)
785 identifier='Call'
786 name (SimpleName)
787 identifier='_lr1_eff_call'
788 type (ClassOrInterfaceType)
789 name (SimpleName)
790 identifier='Call'
791 statement (ExpressionStmt)
792 expression (MethodCallExpr)
793 name (SimpleName)
794 identifier='assertSame'
795 arguments
796 argument (MethodCallExpr)
797 name (SimpleName)
798 identifier='getEffect'
799 scope (MethodCallExpr)
800 name (SimpleName)
801 identifier='get'
802 scope (MethodCallExpr)
803 name (SimpleName)
804 identifier='getReactions'
805 scope (NameExpr)
806 name (SimpleName)
807 identifier='s1'
808 arguments
809 argument (IntegerLiteralExpr)
810 value='0'
811 argument (MethodCallExpr)
812 name (SimpleName)
813 identifier='getStep'
814 scope (NameExpr)
815 name (SimpleName)
816 identifier='_lr1_eff_call'
817 statement (ExpressionStmt)
818 expression (VariableDeclarationExpr)
819 variables
820 variable (VariableDeclarator)
821 initializer (CastExpr)
822 expression (MethodCallExpr)
823 name (SimpleName)
824 identifier='get'
825 scope (MethodCallExpr)
826 name (SimpleName)
827 identifier='getSteps'
828 scope (NameExpr)
829 name (SimpleName)
830 identifier='_seq'
831 arguments
832 argument (IntegerLiteralExpr)
833 value='1'
834 type (ClassOrInterfaceType)
835 name (SimpleName)
836 identifier='If'
837 name (SimpleName)
838 identifier='_lr2'
839 type (ClassOrInterfaceType)
840 name (SimpleName)
841 identifier='If'
842 statement (ExpressionStmt)
843 expression (MethodCallExpr)
844 name (SimpleName)
845 identifier='assertClass'
846 arguments
847 argument (ClassExpr)
848 type (ClassOrInterfaceType)
849 name (SimpleName)
850 identifier='LogicalAndExpression'
851 argument (MethodCallExpr)
852 name (SimpleName)
853 identifier='getCondition'
854 scope (MethodCallExpr)
855 name (SimpleName)
856 identifier='getCheck'
857 scope (NameExpr)
858 name (SimpleName)
859 identifier='_lr2'
860 statement (ExpressionStmt)
861 expression (MethodCallExpr)
862 name (SimpleName)
863 identifier='assertSame'
864 arguments
865 argument (MethodCallExpr)
866 name (SimpleName)
867 identifier='getCondition'
868 scope (MethodCallExpr)
869 name (SimpleName)
870 identifier='getCheck'
871 scope (MethodCallExpr)
872 name (SimpleName)
873 identifier='get'
874 scope (MethodCallExpr)
875 name (SimpleName)
876 identifier='getReactions'
877 scope (NameExpr)
878 name (SimpleName)
879 identifier='s1'
880 arguments
881 argument (IntegerLiteralExpr)
882 value='1'
883 argument (MethodCallExpr)
884 name (SimpleName)
885 identifier='getCondition'
886 scope (MethodCallExpr)
887 name (SimpleName)
888 identifier='getCheck'
889 scope (NameExpr)
890 name (SimpleName)
891 identifier='_lr2'
892 statement (ExpressionStmt)
893 expression (VariableDeclarationExpr)
894 variables
895 variable (VariableDeclarator)
896 initializer (CastExpr)
897 expression (MethodCallExpr)
898 name (SimpleName)
899 identifier='getThenStep'
900 scope (NameExpr)
901 name (SimpleName)
902 identifier='_lr2'
903 type (ClassOrInterfaceType)
904 name (SimpleName)
905 identifier='Call'
906 name (SimpleName)
907 identifier='_lr2_eff_call'
908 type (ClassOrInterfaceType)
909 name (SimpleName)
910 identifier='Call'
911 statement (ExpressionStmt)
912 expression (MethodCallExpr)
913 name (SimpleName)
914 identifier='assertSame'
915 arguments
916 argument (MethodCallExpr)
917 name (SimpleName)
918 identifier='getEffect'
919 scope (MethodCallExpr)
920 name (SimpleName)
921 identifier='get'
922 scope (MethodCallExpr)
923 name (SimpleName)
924 identifier='getReactions'
925 scope (NameExpr)
926 name (SimpleName)
927 identifier='s1'
928 arguments
929 argument (IntegerLiteralExpr)
930 value='1'
931 argument (MethodCallExpr)
932 name (SimpleName)
933 identifier='getStep'
934 scope (NameExpr)
935 name (SimpleName)
936 identifier='_lr2_eff_call'
937 statement (ExpressionStmt)
938 expression (VariableDeclarationExpr)
939 variables
940 variable (VariableDeclarator)
941 initializer (CastExpr)
942 expression (MethodCallExpr)
943 name (SimpleName)
944 identifier='get'
945 scope (MethodCallExpr)
946 name (SimpleName)
947 identifier='getSteps'
948 scope (NameExpr)
949 name (SimpleName)
950 identifier='_seq'
951 arguments
952 argument (IntegerLiteralExpr)
953 value='2'
954 type (ClassOrInterfaceType)
955 name (SimpleName)
956 identifier='If'
957 name (SimpleName)
958 identifier='_lr3'
959 type (ClassOrInterfaceType)
960 name (SimpleName)
961 identifier='If'
962 statement (ExpressionStmt)
963 expression (MethodCallExpr)
964 name (SimpleName)
965 identifier='assertClass'
966 arguments
967 argument (ClassExpr)
968 type (ClassOrInterfaceType)
969 name (SimpleName)
970 identifier='LogicalRelationExpression'
971 argument (MethodCallExpr)
972 name (SimpleName)
973 identifier='getCondition'
974 scope (MethodCallExpr)
975 name (SimpleName)
976 identifier='getCheck'
977 scope (NameExpr)
978 name (SimpleName)
979 identifier='_lr3'
980 statement (ExpressionStmt)
981 expression (MethodCallExpr)
982 name (SimpleName)
983 identifier='assertSame'
984 arguments
985 argument (MethodCallExpr)
986 name (SimpleName)
987 identifier='getCondition'
988 scope (MethodCallExpr)
989 name (SimpleName)
990 identifier='getCheck'
991 scope (MethodCallExpr)
992 name (SimpleName)
993 identifier='get'
994 scope (MethodCallExpr)
995 name (SimpleName)
996 identifier='getReactions'
997 scope (NameExpr)
998 name (SimpleName)
999 identifier='s1'
1000 arguments
1001 argument (IntegerLiteralExpr)
1002 value='2'
1003 argument (MethodCallExpr)
1004 name (SimpleName)
1005 identifier='getCondition'
1006 scope (MethodCallExpr)
1007 name (SimpleName)
1008 identifier='getCheck'
1009 scope (NameExpr)
1010 name (SimpleName)
1011 identifier='_lr3'
1012 statement (ExpressionStmt)
1013 expression (VariableDeclarationExpr)
1014 variables
1015 variable (VariableDeclarator)
1016 initializer (CastExpr)
1017 expression (MethodCallExpr)
1018 name (SimpleName)
1019 identifier='getThenStep'
1020 scope (NameExpr)
1021 name (SimpleName)
1022 identifier='_lr3'
1023 type (ClassOrInterfaceType)
1024 name (SimpleName)
1025 identifier='Call'
1026 name (SimpleName)
1027 identifier='_lr3_eff_call'
1028 type (ClassOrInterfaceType)
1029 name (SimpleName)
1030 identifier='Call'
1031 statement (ExpressionStmt)
1032 expression (MethodCallExpr)
1033 name (SimpleName)
1034 identifier='assertSame'
1035 arguments
1036 argument (MethodCallExpr)
1037 name (SimpleName)
1038 identifier='getEffect'
1039 scope (MethodCallExpr)
1040 name (SimpleName)
1041 identifier='get'
1042 scope (MethodCallExpr)
1043 name (SimpleName)
1044 identifier='getReactions'
1045 scope (NameExpr)
1046 name (SimpleName)
1047 identifier='s1'
1048 arguments
1049 argument (IntegerLiteralExpr)
1050 value='2'
1051 argument (MethodCallExpr)
1052 name (SimpleName)
1053 identifier='getStep'
1054 scope (NameExpr)
1055 name (SimpleName)
1056 identifier='_lr3_eff_call'
1057 type (VoidType)
1058 name (SimpleName)
1059 identifier='testStateCycle_WithLocalReactionsOnly'
1060 annotations
1061 annotation (SingleMemberAnnotationExpr)
1062 memberValue (StringLiteralExpr)
1063 value='unused'
1064 name (Name)
1065 identifier='SuppressWarnings'
1066 annotation (MarkerAnnotationExpr)
1067 name (Name)
1068 identifier='Test'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
19 20
20 21
21 22
20 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
29 32
32 33
33 34
19 35
35 36
19 37
37 38
38 39
2 40
40 41
41 42
42 43
43 44
44 45
45 46
44 47
47 48
48 49
49 50
48 51
51 52
52 53
47 54
43 55
55 56
43 57
57 58
58 59
2 60
60 61
61 62
62 63
61 64
64 65
65 66
66 67
65 68
68 69
69 70
64 71
71 72
72 73
73 74
72 75
75 76
76 77
71 78
78 79
79 80
2 81
81 82
82 83
83 84
84 85
85 86
86 87
85 88
88 89
89 90
90 91
84 92
92 93
84 94
94 95
95 96
2 97
97 98
98 99
99 100
100 101
101 102
102 103
101 104
104 105
105 106
106 107
104 108
108 109
109 110
108 111
111 112
112 113
104 114
114 115
115 116
114 117
117 118
118 119
104 120
120 121
121 122
100 123
123 124
100 125
125 126
126 127
2 128
128 129
129 130
130 131
131 132
132 133
133 134
132 135
135 136
136 137
137 138
136 139
139 140
140 141
135 142
131 143
143 144
131 145
145 146
146 147
2 148
148 149
149 150
150 151
149 152
152 153
153 154
154 155
153 156
156 157
157 158
152 159
159 160
160 161
161 162
160 163
163 164
164 165
159 166
166 167
167 168
2 169
169 170
170 171
171 172
172 173
173 174
174 175
173 176
176 177
177 178
176 179
179 180
180 181
172 182
182 183
172 184
184 185
185 186
2 187
187 188
188 189
189 190
188 191
191 192
192 193
188 194
194 195
195 196
196 197
195 198
198 199
199 200
2 201
201 202
202 203
203 204
204 205
205 206
206 207
205 208
208 209
209 210
208 211
211 212
212 213
204 214
214 215
204 216
216 217
217 218
2 219
219 220
220 221
221 222
220 223
223 224
224 225
220 226
226 227
227 228
228 229
2 230
230 231
231 232
232 233
233 234
234 235
235 236
234 237
237 238
238 239
233 240
240 241
233 242
242 243
243 244
2 245
245 246
246 247
247 248
246 249
249 250
250 251
246 252
252 253
253 254
254 255
2 256
256 257
257 258
258 259
257 260
260 261
261 262
257 263
263 264
264 265
265 266
2 267
267 268
268 269
269 270
268 271
271 272
272 273
273 274
274 275
273 276
276 277
277 278
272 279
279 280
280 281
268 282
282 283
283 284
284 285
283 286
286 287
287 288
288 289
2 290
290 291
291 292
292 293
293 294
294 295
295 296
294 297
297 298
298 299
299 300
293 301
301 302
293 303
303 304
304 305
2 306
306 307
307 308
308 309
309 310
310 311
311 312
310 313
313 314
314 315
315 316
313 317
317 318
318 319
317 320
320 321
321 322
313 323
323 324
324 325
323 326
326 327
327 328
313 329
329 330
330 331
309 332
332 333
309 334
334 335
335 336
2 337
337 338
338 339
339 340
340 341
341 342
342 343
341 344
344 345
345 346
346 347
345 348
348 349
349 350
344 351
340 352
352 353
340 354
354 355
355 356
2 357
357 358
358 359
359 360
360 361
361 362
362 363
361 364
364 365
365 366
364 367
367 368
368 369
360 370
370 371
360 372
372 373
373 374
2 375
375 376
376 377
377 378
376 379
379 380
380 381
376 382
382 383
383 384
384 385
383 386
386 387
387 388
2 389
389 390
390 391
391 392
392 393
393 394
394 395
393 396
396 397
397 398
396 399
399 400
400 401
392 402
402 403
392 404
404 405
405 406
2 407
407 408
408 409
409 410
408 411
411 412
412 413
408 414
414 415
415 416
416 417
2 418
418 419
419 420
420 421
421 422
422 423
423 424
422 425
425 426
426 427
421 428
428 429
421 430
430 431
431 432
2 433
433 434
434 435
435 436
434 437
437 438
438 439
434 440
440 441
441 442
442 443
2 444
444 445
445 446
446 447
445 448
448 449
449 450
445 451
451 452
452 453
453 454
2 455
455 456
456 457
457 458
456 459
459 460
460 461
461 462
462 463
461 464
464 465
465 466
460 467
467 468
468 469
456 470
470 471
471 472
472 473
471 474
474 475
475 476
476 477
2 478
478 479
479 480
480 481
481 482
482 483
483 484
482 485
485 486
486 487
487 488
481 489
489 490
481 491
491 492
492 493
2 494
494 495
495 496
496 497
497 498
498 499
499 500
498 501
501 502
502 503
503 504
501 505
505 506
506 507
505 508
508 509
509 510
501 511
511 512
512 513
511 514
514 515
515 516
501 517
517 518
518 519
497 520
520 521
497 522
522 523
523 524
2 525
525 526
526 527
527 528
528 529
529 530
530 531
529 532
532 533
533 534
529 535
535 536
536 537
537 538
536 539
539 540
540 541
528 542
542 543
528 544
544 545
545 546
2 547
547 548
548 549
549 550
550 551
551 552
552 553
551 554
554 555
555 556
554 557
557 558
558 559
551 560
560 561
561 562
550 563
563 564
550 565
565 566
566 567
2 568
568 569
569 570
570 571
569 572
572 573
573 574
574 575
573 576
576 577
577 578
576 579
579 580
580 581
572 582
582 583
583 584
582 585
585 586
586 587
2 588
588 589
589 590
590 591
589 592
592 593
593 594
592 595
595 596
596 597
595 598
598 599
599 600
598 601
601 602
602 603
2 604
604 605
605 606
606 607
605 608
608 609
609 610
610 611
609 612
612 613
613 614
2 615
615 616
616 617
617 618
618 619
619 620
620 621
619 622
622 623
623 624
622 625
625 626
626 627
625 628
628 629
629 630
619 631
631 632
632 633
618 634
634 635
618 636
636 637
637 638
2 639
639 640
640 641
641 642
642 643
643 644
644 645
645 646
644 647
647 648
648 649
647 650
650 651
651 652
650 653
653 654
654 655
655 656
654 657
657 658
658 659
657 660
660 661
661 662
660 663
663 664
664 665
665 666
654 667
667 668
668 669
644 670
670 671
671 672
643 673
673 674
674 675
642 676
676 677
642 678
678 679
679 680
2 681
681 682
682 683
683 684
682 685
685 686
686 687
685 688
688 689
689 690
688 691
691 692
692 693
691 694
694 695
695 696
2 697
697 698
698 699
699 700
700 701
701 702
702 703
703 704
702 705
705 706
706 707
705 708
708 709
709 710
702 711
711 712
712 713
701 714
714 715
715 716
700 717
717 718
700 719
719 720
720 721
2 722
722 723
723 724
724 725
723 726
726 727
727 728
728 729
729 730
726 731
731 732
732 733
731 734
734 735
735 736
734 737
737 738
738 739
2 740
740 741
741 742
742 743
741 744
744 745
745 746
746 747
745 748
748 749
749 750
748 751
751 752
752 753
751 754
754 755
755 756
754 757
757 758
758 759
751 760
760 761
761 762
744 763
763 764
764 765
763 766
766 767
767 768
766 769
769 770
770 771
2 772
772 773
773 774
774 775
775 776
776 777
777 778
778 779
777 780
780 781
781 782
776 783
783 784
784 785
775 786
786 787
775 788
788 789
789 790
2 791
791 792
792 793
793 794
792 795
795 796
796 797
797 798
796 799
799 800
800 801
799 802
802 803
803 804
802 805
805 806
806 807
799 808
808 809
809 810
795 811
811 812
812 813
811 814
814 815
815 816
2 817
817 818
818 819
819 820
820 821
821 822
822 823
823 824
822 825
825 826
826 827
825 828
828 829
829 830
822 831
831 832
832 833
821 834
834 835
835 836
820 837
837 838
820 839
839 840
840 841
2 842
842 843
843 844
844 845
843 846
846 847
847 848
848 849
849 850
846 851
851 852
852 853
851 854
854 855
855 856
854 857
857 858
858 859
2 860
860 861
861 862
862 863
861 864
864 865
865 866
866 867
865 868
868 869
869 870
868 871
871 872
872 873
871 874
874 875
875 876
874 877
877 878
878 879
871 880
880 881
881 882
864 883
883 884
884 885
883 886
886 887
887 888
886 889
889 890
890 891
2 892
892 893
893 894
894 895
895 896
896 897
897 898
898 899
897 900
900 901
901 902
896 903
903 904
904 905
895 906
906 907
895 908
908 909
909 910
2 911
911 912
912 913
913 914
912 915
915 916
916 917
917 918
916 919
919 920
920 921
919 922
922 923
923 924
922 925
925 926
926 927
919 928
928 929
929 930
915 931
931 932
932 933
931 934
934 935
935 936
2 937
937 938
938 939
939 940
940 941
941 942
942 943
943 944
942 945
945 946
946 947
945 948
948 949
949 950
942 951
951 952
952 953
941 954
954 955
955 956
940 957
957 958
940 959
959 960
960 961
2 962
962 963
963 964
964 965
963 966
966 967
967 968
968 969
969 970
966 971
971 972
972 973
971 974
974 975
975 976
974 977
977 978
978 979
2 980
980 981
981 982
982 983
981 984
984 985
985 986
986 987
985 988
988 989
989 990
988 991
991 992
992 993
991 994
994 995
995 996
994 997
997 998
998 999
991 1000
1000 1001
1001 1002
984 1003
1003 1004
1004 1005
1003 1006
1006 1007
1007 1008
1006 1009
1009 1010
1010 1011
2 1012
1012 1013
1013 1014
1014 1015
1015 1016
1016 1017
1017 1018
1018 1019
1017 1020
1020 1021
1021 1022
1016 1023
1023 1024
1024 1025
1015 1026
1026 1027
1015 1028
1028 1029
1029 1030
2 1031
1031 1032
1032 1033
1033 1034
1032 1035
1035 1036
1036 1037
1037 1038
1036 1039
1039 1040
1040 1041
1039 1042
1042 1043
1043 1044
1042 1045
1045 1046
1046 1047
1039 1048
1048 1049
1049 1050
1035 1051
1051 1052
1052 1053
1051 1054
1054 1055
1055 1056
0 1057
0 1058
1058 1059
0 1060
1060 1061
1061 1062
1062 1063
1061 1064
1064 1065
1060 1066
1066 1067
1067 1068

The cycle sequence of a state that only consists of local reactions includes sequential processing of the local reactions.
