53
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='put'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='nestedFieldTranslations'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='attributeName'
14 argument (ArrayCreationExpr)
15 elementType (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Object'
18 initializer (ArrayInitializerExpr)
19 values
20 value (NameExpr)
21 name (SimpleName)
22 identifier='sourceField'
23 value (NameExpr)
24 name (SimpleName)
25 identifier='aggregateFieldName'
26 levels
27 level (ArrayCreationLevel)
28 type (VoidType)
29 name (SimpleName)
30 identifier='addNestedFieldTranslation'
31 parameters
32 parameter (Parameter)
33 isVarArgs='false'
34 name (SimpleName)
35 identifier='attributeName'
36 type (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='String'
39 parameter (Parameter)
40 isVarArgs='false'
41 name (SimpleName)
42 identifier='sourceField'
43 type (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='DatabaseField'
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='aggregateFieldName'
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='String'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
16 17
14 18
18 19
19 20
20 21
21 22
19 23
23 24
24 25
14 26
26 27
0 28
0 29
29 30
0 31
31 32
32 33
32 34
34 35
32 36
36 37
37 38
31 39
39 40
39 41
41 42
39 43
43 44
44 45
31 46
46 47
46 48
48 49
46 50
50 51
51 52

INTERNAL: Add a nested field translation that maps from a field in the source table to a field name in a nested aggregate descriptor. These are handled slightly different that regular field translations in that they are unique based on the attribute name. It solves the case where multiple nested embeddables have mappings to similarly named default columns.
