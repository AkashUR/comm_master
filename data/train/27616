78
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='checkValue'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='SDO_GEOMETRY'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='MDSYS'
14 arguments
15 argument (IntegerLiteralExpr)
16 value='2004'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='NULL'
20 argument (NameExpr)
21 name (SimpleName)
22 identifier='NULL'
23 argument (MethodCallExpr)
24 name (SimpleName)
25 identifier='SDO_ELEM_INFO_ARRAY'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='MDSYS'
29 arguments
30 argument (IntegerLiteralExpr)
31 value='1'
32 argument (IntegerLiteralExpr)
33 value='1'
34 argument (IntegerLiteralExpr)
35 value='3'
36 argument (IntegerLiteralExpr)
37 value='7'
38 argument (IntegerLiteralExpr)
39 value='2'
40 argument (IntegerLiteralExpr)
41 value='1'
42 argument (MethodCallExpr)
43 name (SimpleName)
44 identifier='SDO_ORDINATE_ARRAY'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='MDSYS'
48 arguments
49 argument (IntegerLiteralExpr)
50 value='1'
51 argument (IntegerLiteralExpr)
52 value='1'
53 argument (IntegerLiteralExpr)
54 value='2'
55 argument (IntegerLiteralExpr)
56 value='2'
57 argument (IntegerLiteralExpr)
58 value='3'
59 argument (IntegerLiteralExpr)
60 value='3'
61 argument (IntegerLiteralExpr)
62 value='1'
63 argument (IntegerLiteralExpr)
64 value='2'
65 argument (IntegerLiteralExpr)
66 value='2'
67 argument (IntegerLiteralExpr)
68 value='1'
69 argument (StringLiteralExpr)
70 value='GEOMETRYCOLLECTION (MULTIPOINT (1 1, 2 2, 3 3), LINESTRING (1 2, 2 1) )'
71 type (VoidType)
72 name (SimpleName)
73 identifier='testXY_GeometryCollection_MultiPoint'
74 thrownExceptions
75 thrownException (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
8 14
14 15
15 16
14 17
17 18
18 19
14 20
20 21
21 22
14 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
29 32
32 33
29 34
34 35
29 36
36 37
29 38
38 39
29 40
40 41
14 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
48 51
51 52
48 53
53 54
48 55
55 56
48 57
57 58
48 59
59 60
48 61
61 62
48 63
63 64
48 65
65 66
48 67
67 68
7 69
69 70
0 71
0 72
72 73
0 74
74 75
75 76
76 77

MultiPoints can be written directly as COLLECTION elements.
