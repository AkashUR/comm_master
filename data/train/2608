97
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setX'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='output'
10 arguments
11 argument (BinaryExpr)
12 operator='PLUS'
13 left (MethodCallExpr)
14 name (SimpleName)
15 identifier='getX'
16 right (MethodCallExpr)
17 name (SimpleName)
18 identifier='getX'
19 scope (NameExpr)
20 name (SimpleName)
21 identifier='input'
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='setY'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='output'
29 arguments
30 argument (BinaryExpr)
31 operator='PLUS'
32 left (MethodCallExpr)
33 name (SimpleName)
34 identifier='getY'
35 right (MethodCallExpr)
36 name (SimpleName)
37 identifier='getY'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='input'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='setZ'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='output'
48 arguments
49 argument (BinaryExpr)
50 operator='PLUS'
51 left (MethodCallExpr)
52 name (SimpleName)
53 identifier='getZ'
54 right (MethodCallExpr)
55 name (SimpleName)
56 identifier='getZ'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='input'
60 statement (ExpressionStmt)
61 expression (MethodCallExpr)
62 name (SimpleName)
63 identifier='setW'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='output'
67 arguments
68 argument (BinaryExpr)
69 operator='PLUS'
70 left (MethodCallExpr)
71 name (SimpleName)
72 identifier='getW'
73 right (MethodCallExpr)
74 name (SimpleName)
75 identifier='getW'
76 scope (NameExpr)
77 name (SimpleName)
78 identifier='input'
79 type (VoidType)
80 name (SimpleName)
81 identifier='addQuat'
82 parameters
83 parameter (Parameter)
84 isVarArgs='false'
85 name (SimpleName)
86 identifier='input'
87 type (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='Quaternion'
90 parameter (Parameter)
91 isVarArgs='false'
92 name (SimpleName)
93 identifier='output'
94 type (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='Quaternion'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
11 13
13 14
14 15
11 16
16 17
17 18
16 19
19 20
20 21
2 22
22 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
30 32
32 33
33 34
30 35
35 36
36 37
35 38
38 39
39 40
2 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
49 51
51 52
52 53
49 54
54 55
55 56
54 57
57 58
58 59
2 60
60 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
68 70
70 71
71 72
68 73
73 74
74 75
73 76
76 77
77 78
0 79
0 80
80 81
0 82
82 83
83 84
83 85
85 86
83 87
87 88
88 89
82 90
90 91
90 92
92 93
90 94
94 95
95 96

Add this quaternion and another quaternion together and store the result in the output quaternion
