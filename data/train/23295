84
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (StringLiteralExpr)
8 value='[\"\\u00411234\"]'
9 name (SimpleName)
10 identifier='DOC'
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='String'
14 statement (ExpressionStmt)
15 expression (VariableDeclarationExpr)
16 variables
17 variable (VariableDeclarator)
18 initializer (MethodCallExpr)
19 name (SimpleName)
20 identifier='createParserUsingReader'
21 arguments
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='DOC'
25 name (SimpleName)
26 identifier='jp'
27 type (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='JsonParser'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='assertToken'
34 arguments
35 argument (FieldAccessExpr)
36 name (SimpleName)
37 identifier='START_ARRAY'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='JsonToken'
41 argument (MethodCallExpr)
42 name (SimpleName)
43 identifier='nextToken'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='jp'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='assertToken'
51 arguments
52 argument (FieldAccessExpr)
53 name (SimpleName)
54 identifier='VALUE_STRING'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='JsonToken'
58 argument (MethodCallExpr)
59 name (SimpleName)
60 identifier='nextToken'
61 scope (NameExpr)
62 name (SimpleName)
63 identifier='jp'
64 statement (ExpressionStmt)
65 expression (MethodCallExpr)
66 name (SimpleName)
67 identifier='assertEquals'
68 arguments
69 argument (StringLiteralExpr)
70 value='A1234'
71 argument (MethodCallExpr)
72 name (SimpleName)
73 identifier='getText'
74 scope (NameExpr)
75 name (SimpleName)
76 identifier='jp'
77 type (VoidType)
78 name (SimpleName)
79 identifier='test8DigitSequence'
80 thrownExceptions
81 thrownException (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
6 11
11 12
12 13
2 14
14 15
15 16
16 17
17 18
18 19
19 20
18 21
21 22
22 23
23 24
17 25
25 26
17 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
36 37
35 38
38 39
39 40
34 41
41 42
42 43
41 44
44 45
45 46
2 47
47 48
48 49
49 50
48 51
51 52
52 53
53 54
52 55
55 56
56 57
51 58
58 59
59 60
58 61
61 62
62 63
2 64
64 65
65 66
66 67
65 68
68 69
69 70
68 71
71 72
72 73
71 74
74 75
75 76
0 77
0 78
78 79
0 80
80 81
81 82
82 83

Test to verify that decoder does not allow 8-digit escapes (non-BMP characters must be escaped using two 4-digit sequences)
