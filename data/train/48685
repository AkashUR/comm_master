97
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='writer'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='osw'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='negativeFilterNamespaces'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='negativeFilterNamespaces'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='positiveFilterNamespaces'
29 scope (ThisExpr)
30 value (NameExpr)
31 name (SimpleName)
32 identifier='positivFilterNamespaces'
33 statement (ForeachStmt)
34 body (BlockStmt)
35 statements
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='put'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='triplesPerExtractor'
43 arguments
44 argument (NameExpr)
45 name (SimpleName)
46 identifier='ex'
47 argument (ObjectCreationExpr)
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='Long'
51 arguments
52 argument (IntegerLiteralExpr)
53 value='0'
54 iterable (NameExpr)
55 name (SimpleName)
56 identifier='EXTRACTORS'
57 variable (VariableDeclarationExpr)
58 variables
59 variable (VariableDeclarator)
60 name (SimpleName)
61 identifier='ex'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='String'
65 name (SimpleName)
66 identifier='FilterableTripleHandler'
67 parameters
68 parameter (Parameter)
69 isVarArgs='false'
70 name (SimpleName)
71 identifier='osw'
72 type (ClassOrInterfaceType)
73 name (SimpleName)
74 identifier='StringBuffer'
75 parameter (Parameter)
76 isVarArgs='false'
77 name (SimpleName)
78 identifier='negativeFilterNamespaces'
79 type (ClassOrInterfaceType)
80 name (SimpleName)
81 identifier='List'
82 typeArguments
83 typeArgument (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='String'
86 parameter (Parameter)
87 isVarArgs='false'
88 name (SimpleName)
89 identifier='positivFilterNamespaces'
90 type (ClassOrInterfaceType)
91 name (SimpleName)
92 identifier='List'
93 typeArguments
94 typeArgument (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='String'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
2 33
33 34
34 35
35 36
36 37
37 38
38 39
37 40
40 41
41 42
37 43
43 44
44 45
45 46
43 47
47 48
48 49
49 50
47 51
51 52
52 53
33 54
54 55
55 56
33 57
57 58
58 59
59 60
60 61
59 62
62 63
63 64
0 65
65 66
0 67
67 68
68 69
68 70
70 71
68 72
72 73
73 74
67 75
75 76
75 77
77 78
75 79
79 80
80 81
79 82
82 83
83 84
84 85
67 86
86 87
86 88
88 89
86 90
90 91
91 92
90 93
93 94
94 95
95 96

Create a FilterableTripleHandler which allows the controlled exclusion of triples belonging to namespaces which are not wanted
