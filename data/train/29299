95
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='RSAPrivateCrtKeySpec'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='valueOf'
15 scope (NameExpr)
16 name (SimpleName)
17 identifier='BigInteger'
18 arguments
19 argument (LongLiteralExpr)
20 value='5L'
21 argument (FieldAccessExpr)
22 name (SimpleName)
23 identifier='ONE'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='BigInteger'
27 argument (FieldAccessExpr)
28 name (SimpleName)
29 identifier='ONE'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='BigInteger'
33 argument (FieldAccessExpr)
34 name (SimpleName)
35 identifier='ONE'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='BigInteger'
39 argument (FieldAccessExpr)
40 name (SimpleName)
41 identifier='ONE'
42 scope (NameExpr)
43 name (SimpleName)
44 identifier='BigInteger'
45 argument (FieldAccessExpr)
46 name (SimpleName)
47 identifier='ONE'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='BigInteger'
51 argument (FieldAccessExpr)
52 name (SimpleName)
53 identifier='ONE'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='BigInteger'
57 argument (FieldAccessExpr)
58 name (SimpleName)
59 identifier='ONE'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='BigInteger'
63 name (SimpleName)
64 identifier='ks'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='RSAPrivateCrtKeySpec'
68 statement (ExpressionStmt)
69 expression (MethodCallExpr)
70 name (SimpleName)
71 identifier='assertTrue'
72 arguments
73 argument (MethodCallExpr)
74 name (SimpleName)
75 identifier='equals'
76 scope (MethodCallExpr)
77 name (SimpleName)
78 identifier='valueOf'
79 scope (NameExpr)
80 name (SimpleName)
81 identifier='BigInteger'
82 arguments
83 argument (LongLiteralExpr)
84 value='5L'
85 arguments
86 argument (MethodCallExpr)
87 name (SimpleName)
88 identifier='getModulus'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='ks'
92 type (VoidType)
93 name (SimpleName)
94 identifier='testGetModulus'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
12 15
15 16
16 17
12 18
18 19
19 20
11 21
21 22
22 23
21 24
24 25
25 26
11 27
27 28
28 29
27 30
30 31
31 32
11 33
33 34
34 35
33 36
36 37
37 38
11 39
39 40
40 41
39 42
42 43
43 44
11 45
45 46
46 47
45 48
48 49
49 50
11 51
51 52
52 53
51 54
54 55
55 56
11 57
57 58
58 59
57 60
60 61
61 62
6 63
63 64
6 65
65 66
66 67
2 68
68 69
69 70
70 71
69 72
72 73
73 74
74 75
73 76
76 77
77 78
76 79
79 80
80 81
76 82
82 83
83 84
73 85
85 86
86 87
87 88
86 89
89 90
90 91
0 92
0 93
93 94

Test for <code>getModulus()</code> method<br> Assertion: returns modulus
