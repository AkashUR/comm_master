64
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setBody'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='optionalAttribute'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='expectedAttributeValue'
14 argument (IntegerLiteralExpr)
15 value='0'
16 argument (FieldAccessExpr)
17 name (SimpleName)
18 identifier='length'
19 scope (NameExpr)
20 name (SimpleName)
21 identifier='expectedAttributeValue'
22 statement (ExpressionStmt)
23 expression (VariableDeclarationExpr)
24 variables
25 variable (VariableDeclarator)
26 initializer (MethodCallExpr)
27 name (SimpleName)
28 identifier='encode'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='optionalAttribute'
32 name (SimpleName)
33 identifier='actualReturn'
34 type (ArrayType)
35 origin='TYPE'
36 componentType (PrimitiveType)
37 type='BYTE'
38 statement (ExpressionStmt)
39 expression (MethodCallExpr)
40 name (SimpleName)
41 identifier='assertTrue'
42 arguments
43 argument (StringLiteralExpr)
44 value='encode failed'
45 argument (MethodCallExpr)
46 name (SimpleName)
47 identifier='equals'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='Arrays'
51 arguments
52 argument (FieldAccessExpr)
53 name (SimpleName)
54 identifier='unknownOptionalAttribute'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='msgFixture'
58 argument (NameExpr)
59 name (SimpleName)
60 identifier='actualReturn'
61 type (VoidType)
62 name (SimpleName)
63 identifier='testEncode'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
10 16
16 17
17 18
16 19
19 20
20 21
2 22
22 23
23 24
24 25
25 26
26 27
27 28
26 29
29 30
30 31
25 32
32 33
25 34
34 35
34 36
36 37
2 38
38 39
39 40
40 41
39 42
42 43
43 44
42 45
45 46
46 47
45 48
48 49
49 50
45 51
51 52
52 53
53 54
52 55
55 56
56 57
51 58
58 59
59 60
0 61
0 62
62 63

Test whether attributes are properly encoded
