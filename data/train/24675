67
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='register'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='REGISTRY'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='from'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='to'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='transform'
20 type (VoidType)
21 name (SimpleName)
22 identifier='register'
23 parameters
24 parameter (Parameter)
25 isVarArgs='false'
26 name (SimpleName)
27 identifier='from'
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='Class'
31 typeArguments
32 typeArgument (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='T'
35 parameter (Parameter)
36 isVarArgs='false'
37 name (SimpleName)
38 identifier='to'
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='Class'
42 typeArguments
43 typeArgument (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='R'
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='transform'
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='Function'
53 typeArguments
54 typeArgument (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='T'
57 typeArgument (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='R'
60 typeParameters
61 typeParameter (TypeParameter)
62 name (SimpleName)
63 identifier='T'
64 typeParameter (TypeParameter)
65 name (SimpleName)
66 identifier='R'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
10 17
17 18
18 19
0 20
0 21
21 22
0 23
23 24
24 25
24 26
26 27
24 28
28 29
29 30
28 31
31 32
32 33
33 34
23 35
35 36
35 37
37 38
35 39
39 40
40 41
39 42
42 43
43 44
44 45
23 46
46 47
46 48
48 49
46 50
50 51
51 52
50 53
53 54
54 55
55 56
53 57
57 58
58 59
0 60
60 61
61 62
62 63
60 64
64 65
65 66

register a transform function for from type -* to type
