296
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getIDs'
10 arguments
11 argument (FieldAccessExpr)
12 name (SimpleName)
13 identifier='network'
14 scope (ThisExpr)
15 argument (NameExpr)
16 name (SimpleName)
17 identifier='transitRouteMode'
18 name (SimpleName)
19 identifier='routeID2linkIDs'
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='Map'
23 typeArguments
24 typeArgument (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='Id'
27 typeArguments
28 typeArgument (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='TransitRoute'
31 typeArgument (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='List'
34 typeArguments
35 typeArgument (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='Id'
38 typeArguments
39 typeArgument (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='Link'
42 statement (ExpressionStmt)
43 expression (VariableDeclarationExpr)
44 variables
45 variable (VariableDeclarator)
46 initializer (MethodCallExpr)
47 name (SimpleName)
48 identifier='getStopLinkIDs'
49 arguments
50 argument (FieldAccessExpr)
51 name (SimpleName)
52 identifier='network'
53 scope (ThisExpr)
54 argument (NameExpr)
55 name (SimpleName)
56 identifier='routeID2linkIDs'
57 argument (NameExpr)
58 name (SimpleName)
59 identifier='isBlocking'
60 name (SimpleName)
61 identifier='routeId2transitStopFacilities'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='Map'
65 typeArguments
66 typeArgument (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='Id'
69 typeArguments
70 typeArgument (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='TransitRoute'
73 typeArgument (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='List'
76 typeArguments
77 typeArgument (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='TransitStopFacility'
80 statement (ExpressionStmt)
81 expression (VariableDeclarationExpr)
82 variables
83 variable (VariableDeclarator)
84 initializer (MethodCallExpr)
85 name (SimpleName)
86 identifier='getRouteId2NetworkRoute'
87 arguments
88 argument (NameExpr)
89 name (SimpleName)
90 identifier='routeID2linkIDs'
91 name (SimpleName)
92 identifier='routeId2networkRoute'
93 type (ClassOrInterfaceType)
94 name (SimpleName)
95 identifier='Map'
96 typeArguments
97 typeArgument (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='Id'
100 typeArguments
101 typeArgument (ClassOrInterfaceType)
102 name (SimpleName)
103 identifier='TransitRoute'
104 typeArgument (ClassOrInterfaceType)
105 name (SimpleName)
106 identifier='NetworkRoute'
107 statement (ExpressionStmt)
108 expression (VariableDeclarationExpr)
109 variables
110 variable (VariableDeclarator)
111 initializer (MethodCallExpr)
112 name (SimpleName)
113 identifier='getRouteId2TransitRouteStops'
114 arguments
115 argument (NameExpr)
116 name (SimpleName)
117 identifier='stopTime_sec'
118 argument (NameExpr)
119 name (SimpleName)
120 identifier='scheduleTravelTime_sec'
121 argument (NameExpr)
122 name (SimpleName)
123 identifier='awaitDeparture'
124 argument (NameExpr)
125 name (SimpleName)
126 identifier='network'
127 argument (NameExpr)
128 name (SimpleName)
129 identifier='routeId2transitStopFacilities'
130 name (SimpleName)
131 identifier='routeId2TransitRouteStops'
132 type (ClassOrInterfaceType)
133 name (SimpleName)
134 identifier='Map'
135 typeArguments
136 typeArgument (ClassOrInterfaceType)
137 name (SimpleName)
138 identifier='Id'
139 typeArguments
140 typeArgument (ClassOrInterfaceType)
141 name (SimpleName)
142 identifier='TransitRoute'
143 typeArgument (ClassOrInterfaceType)
144 name (SimpleName)
145 identifier='List'
146 typeArguments
147 typeArgument (ClassOrInterfaceType)
148 name (SimpleName)
149 identifier='TransitRouteStop'
150 statement (ExpressionStmt)
151 expression (MethodCallExpr)
152 name (SimpleName)
153 identifier='setRouteId2TransitRoute'
154 arguments
155 argument (NameExpr)
156 name (SimpleName)
157 identifier='transitRouteMode'
158 argument (NameExpr)
159 name (SimpleName)
160 identifier='routeId2networkRoute'
161 argument (NameExpr)
162 name (SimpleName)
163 identifier='routeId2TransitRouteStops'
164 statement (ExpressionStmt)
165 expression (MethodCallExpr)
166 name (SimpleName)
167 identifier='setTransitLine'
168 arguments
169 argument (FieldAccessExpr)
170 name (SimpleName)
171 identifier='routeId2transitRoute'
172 scope (ThisExpr)
173 statement (ExpressionStmt)
174 expression (VariableDeclarationExpr)
175 variables
176 variable (VariableDeclarator)
177 initializer (BinaryExpr)
178 operator='MINUS'
179 left (MethodCallExpr)
180 name (SimpleName)
181 identifier='size'
182 scope (MethodCallExpr)
183 name (SimpleName)
184 identifier='getStops'
185 scope (MethodCallExpr)
186 name (SimpleName)
187 identifier='get'
188 scope (FieldAccessExpr)
189 name (SimpleName)
190 identifier='routeId2transitRoute'
191 scope (ThisExpr)
192 arguments
193 argument (NameExpr)
194 name (SimpleName)
195 identifier='routeId1'
196 right (IntegerLiteralExpr)
197 value='1'
198 name (SimpleName)
199 identifier='lastStop'
200 type (PrimitiveType)
201 type='INT'
202 statement (ExpressionStmt)
203 expression (AssignExpr)
204 operator='ASSIGN'
205 target (FieldAccessExpr)
206 name (SimpleName)
207 identifier='routeTravelTime'
208 scope (ThisExpr)
209 value (MethodCallExpr)
210 name (SimpleName)
211 identifier='getArrivalOffset'
212 scope (MethodCallExpr)
213 name (SimpleName)
214 identifier='get'
215 scope (MethodCallExpr)
216 name (SimpleName)
217 identifier='getStops'
218 scope (MethodCallExpr)
219 name (SimpleName)
220 identifier='get'
221 scope (FieldAccessExpr)
222 name (SimpleName)
223 identifier='routeId2transitRoute'
224 scope (ThisExpr)
225 arguments
226 argument (NameExpr)
227 name (SimpleName)
228 identifier='routeId1'
229 arguments
230 argument (NameExpr)
231 name (SimpleName)
232 identifier='lastStop'
233 statement (ExpressionStmt)
234 expression (MethodCallExpr)
235 name (SimpleName)
236 identifier='info'
237 scope (NameExpr)
238 name (SimpleName)
239 identifier='log'
240 arguments
241 argument (BinaryExpr)
242 operator='PLUS'
243 left (StringLiteralExpr)
244 value='RouteTravelTime: '
245 right (MethodCallExpr)
246 name (SimpleName)
247 identifier='writeTime'
248 scope (NameExpr)
249 name (SimpleName)
250 identifier='Time'
251 arguments
252 argument (NameExpr)
253 name (SimpleName)
254 identifier='routeTravelTime'
255 argument (FieldAccessExpr)
256 name (SimpleName)
257 identifier='TIMEFORMAT_HHMMSS'
258 scope (NameExpr)
259 name (SimpleName)
260 identifier='Time'
261 type (VoidType)
262 name (SimpleName)
263 identifier='createTransitSchedule'
264 parameters
265 parameter (Parameter)
266 isVarArgs='false'
267 name (SimpleName)
268 identifier='transitRouteMode'
269 type (ClassOrInterfaceType)
270 name (SimpleName)
271 identifier='String'
272 parameter (Parameter)
273 isVarArgs='false'
274 name (SimpleName)
275 identifier='isBlocking'
276 type (PrimitiveType)
277 type='BOOLEAN'
278 parameter (Parameter)
279 isVarArgs='false'
280 name (SimpleName)
281 identifier='awaitDeparture'
282 type (PrimitiveType)
283 type='BOOLEAN'
284 parameter (Parameter)
285 isVarArgs='false'
286 name (SimpleName)
287 identifier='scheduleTravelTime_sec'
288 type (PrimitiveType)
289 type='DOUBLE'
290 parameter (Parameter)
291 isVarArgs='false'
292 name (SimpleName)
293 identifier='stopTime_sec'
294 type (PrimitiveType)
295 type='DOUBLE'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
11 14
10 15
15 16
16 17
6 18
18 19
6 20
20 21
21 22
20 23
23 24
24 25
25 26
24 27
27 28
28 29
29 30
23 31
31 32
32 33
31 34
34 35
35 36
36 37
35 38
38 39
39 40
40 41
2 42
42 43
43 44
44 45
45 46
46 47
47 48
46 49
49 50
50 51
51 52
50 53
49 54
54 55
55 56
49 57
57 58
58 59
45 60
60 61
45 62
62 63
63 64
62 65
65 66
66 67
67 68
66 69
69 70
70 71
71 72
65 73
73 74
74 75
73 76
76 77
77 78
78 79
2 80
80 81
81 82
82 83
83 84
84 85
85 86
84 87
87 88
88 89
89 90
83 91
91 92
83 93
93 94
94 95
93 96
96 97
97 98
98 99
97 100
100 101
101 102
102 103
96 104
104 105
105 106
2 107
107 108
108 109
109 110
110 111
111 112
112 113
111 114
114 115
115 116
116 117
114 118
118 119
119 120
114 121
121 122
122 123
114 124
124 125
125 126
114 127
127 128
128 129
110 130
130 131
110 132
132 133
133 134
132 135
135 136
136 137
137 138
136 139
139 140
140 141
141 142
135 143
143 144
144 145
143 146
146 147
147 148
148 149
2 150
150 151
151 152
152 153
151 154
154 155
155 156
156 157
154 158
158 159
159 160
154 161
161 162
162 163
2 164
164 165
165 166
166 167
165 168
168 169
169 170
170 171
169 172
2 173
173 174
174 175
175 176
176 177
177 178
177 179
179 180
180 181
179 182
182 183
183 184
182 185
185 186
186 187
185 188
188 189
189 190
188 191
185 192
192 193
193 194
194 195
177 196
196 197
176 198
198 199
176 200
200 201
2 202
202 203
203 204
203 205
205 206
206 207
205 208
203 209
209 210
210 211
209 212
212 213
213 214
212 215
215 216
216 217
215 218
218 219
219 220
218 221
221 222
222 223
221 224
218 225
225 226
226 227
227 228
212 229
229 230
230 231
231 232
2 233
233 234
234 235
235 236
234 237
237 238
238 239
234 240
240 241
241 242
241 243
243 244
241 245
245 246
246 247
245 248
248 249
249 250
245 251
251 252
252 253
253 254
251 255
255 256
256 257
255 258
258 259
259 260
0 261
0 262
262 263
0 264
264 265
265 266
265 267
267 268
265 269
269 270
270 271
264 272
272 273
272 274
274 275
272 276
276 277
264 278
278 279
278 280
280 281
278 282
282 283
264 284
284 285
284 286
286 287
284 288
288 289
264 290
290 291
290 292
292 293
290 294
294 295

Creates the transit schedule without departures. Creates a transit line for a simple corridor network. The transitRouteMode indicates on which link a transit stop has to be added. The schedule speed and scheduled stop time are used for calculating arrival and departure offsets based on the length of the corridor links.
