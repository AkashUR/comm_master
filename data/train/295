80
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='wrapNetworkManager'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='player'
14 name (SimpleName)
15 identifier='wrapper'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='NetworkManagerWrapper'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='registerOutgoingListener'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='wrapper'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='type'
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='listener'
33 type (VoidType)
34 name (SimpleName)
35 identifier='registerOutListener'
36 parameters
37 parameter (Parameter)
38 isVarArgs='false'
39 name (SimpleName)
40 identifier='type'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='Class'
44 typeArguments
45 typeArgument (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='T'
48 parameter (Parameter)
49 isVarArgs='false'
50 name (SimpleName)
51 identifier='player'
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='Player'
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='listener'
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='Predicate'
62 typeArguments
63 typeArgument (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='T'
66 typeParameters
67 typeParameter (TypeParameter)
68 name (SimpleName)
69 identifier='T'
70 typeBound
71 typeBoun (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='Packet'
74 annotations
75 annotation (SingleMemberAnnotationExpr)
76 memberValue (StringLiteralExpr)
77 value='unchecked'
78 name (Name)
79 identifier='SuppressWarnings'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
26 30
30 31
31 32
0 33
0 34
34 35
0 36
36 37
37 38
37 39
39 40
37 41
41 42
42 43
41 44
44 45
45 46
46 47
36 48
48 49
48 50
50 51
48 52
52 53
53 54
36 55
55 56
55 57
57 58
55 59
59 60
60 61
59 62
62 63
63 64
64 65
0 66
66 67
67 68
68 69
67 70
70 71
71 72
72 73
0 74
74 75
75 76
76 77
75 78
78 79

Register a listener for an incoming packet type. The type may be abstract. The listeners registered will be fired in the inverse order that they were registered; last fired first, and the first fired last (with the default server handler last). Listeners that return false will not fire any other handlers afterwards. Also, remember packets are handled in a separate thread! Make sure to use schedulers if you need to call Bukkit-related code, or just synchronize your listener implementation (avoid blocking). This method also requires that the player's network manager to be wrapper first. If it is not already wrapped, this will be done first. This only works for outgoing (client-bound) packets.
