109
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='spacing'
7 statement (ExpressionStmt)
8 expression (MethodCallExpr)
9 name (SimpleName)
10 identifier='print'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='m_out'
14 arguments
15 argument (CharLiteralExpr)
16 value='<'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='print'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='m_out'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='tag'
28 statement (ExpressionStmt)
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='print'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='m_out'
35 arguments
36 argument (CharLiteralExpr)
37 value='>'
38 statement (ExpressionStmt)
39 expression (MethodCallExpr)
40 name (SimpleName)
41 identifier='escapeString'
42 arguments
43 argument (NameExpr)
44 name (SimpleName)
45 identifier='content'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='print'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='m_out'
53 arguments
54 argument (CharLiteralExpr)
55 value='<'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='print'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='m_out'
63 arguments
64 argument (CharLiteralExpr)
65 value='/'
66 statement (ExpressionStmt)
67 expression (MethodCallExpr)
68 name (SimpleName)
69 identifier='print'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='m_out'
73 arguments
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='tag'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='print'
81 scope (NameExpr)
82 name (SimpleName)
83 identifier='m_out'
84 arguments
85 argument (CharLiteralExpr)
86 value='>'
87 statement (ExpressionStmt)
88 expression (MethodCallExpr)
89 name (SimpleName)
90 identifier='println'
91 type (VoidType)
92 name (SimpleName)
93 identifier='contentTag'
94 parameters
95 parameter (Parameter)
96 isVarArgs='false'
97 name (SimpleName)
98 identifier='tag'
99 type (ClassOrInterfaceType)
100 name (SimpleName)
101 identifier='String'
102 parameter (Parameter)
103 isVarArgs='false'
104 name (SimpleName)
105 identifier='content'
106 type (ClassOrInterfaceType)
107 name (SimpleName)
108 identifier='String'
0 1
1 2
2 3
3 4
4 5
5 6
2 7
7 8
8 9
9 10
8 11
11 12
12 13
8 14
14 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
25 26
26 27
2 28
28 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
2 38
38 39
39 40
40 41
39 42
42 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
2 56
56 57
57 58
58 59
57 60
60 61
61 62
57 63
63 64
64 65
2 66
66 67
67 68
68 69
67 70
70 71
71 72
67 73
73 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
78 84
84 85
85 86
2 87
87 88
88 89
89 90
0 91
0 92
92 93
0 94
94 95
95 96
95 97
97 98
95 99
99 100
100 101
94 102
102 103
102 104
104 105
102 106
106 107
107 108

Print a new content tag with no attributes, consisting of an open tag, content text, and a closing tag, all on one line.
