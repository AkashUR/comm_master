32
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='stopThread'
7 scope (MethodCallExpr)
8 name (SimpleName)
9 identifier='getManager'
10 scope (MethodCallExpr)
11 name (SimpleName)
12 identifier='getSoftBundle'
13 scope (NameExpr)
14 name (SimpleName)
15 identifier='ReferenceBundle'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='stopThread'
20 scope (MethodCallExpr)
21 name (SimpleName)
22 identifier='getManager'
23 scope (MethodCallExpr)
24 name (SimpleName)
25 identifier='getWeakBundle'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='ReferenceBundle'
29 type (VoidType)
30 name (SimpleName)
31 identifier='stopThreadedReferenceManager'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
20 23
23 24
24 25
23 26
26 27
27 28
0 29
0 30
30 31

This method can be used to ensure that no threaded created by a reference manager will be active. This is useful if the Groovy runtime itself is loaded through a class loader which should be disposed off. Without calling this method and if a threaded reference manager is active the class loader cannot be unloaded! Per default no threaded manager will be used.
