106
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='LinkedBlockingDeque'
11 arguments
12 argument (IntegerLiteralExpr)
13 value='3'
14 name (SimpleName)
15 identifier='q'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='LinkedBlockingDeque'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='add'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='q'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='one'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='add'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='q'
37 arguments
38 argument (NameExpr)
39 name (SimpleName)
40 identifier='two'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='add'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='q'
48 arguments
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='three'
52 statement (ForStmt)
53 body (BlockStmt)
54 statements
55 statement (ExpressionStmt)
56 expression (MethodCallExpr)
57 name (SimpleName)
58 identifier='remove'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='q'
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='next'
66 scope (NameExpr)
67 name (SimpleName)
68 identifier='it'
69 compare (MethodCallExpr)
70 name (SimpleName)
71 identifier='hasNext'
72 scope (NameExpr)
73 name (SimpleName)
74 identifier='it'
75 initialization
76 initializatio (VariableDeclarationExpr)
77 variables
78 variable (VariableDeclarator)
79 initializer (MethodCallExpr)
80 name (SimpleName)
81 identifier='iterator'
82 scope (NameExpr)
83 name (SimpleName)
84 identifier='q'
85 name (SimpleName)
86 identifier='it'
87 type (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='Iterator'
90 statement (ExpressionStmt)
91 expression (MethodCallExpr)
92 name (SimpleName)
93 identifier='assertEquals'
94 arguments
95 argument (IntegerLiteralExpr)
96 value='0'
97 argument (MethodCallExpr)
98 name (SimpleName)
99 identifier='size'
100 scope (NameExpr)
101 name (SimpleName)
102 identifier='q'
103 type (VoidType)
104 name (SimpleName)
105 identifier='testWeaklyConsistentIteration'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
31 37
37 38
38 39
39 40
2 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
50 51
2 52
52 53
53 54
54 55
55 56
56 57
57 58
56 59
59 60
60 61
54 62
62 63
63 64
64 65
63 66
66 67
67 68
52 69
69 70
70 71
69 72
72 73
73 74
52 75
75 76
76 77
77 78
78 79
79 80
80 81
79 82
82 83
83 84
78 85
85 86
78 87
87 88
88 89
2 90
90 91
91 92
92 93
91 94
94 95
95 96
94 97
97 98
98 99
97 100
100 101
101 102
0 103
0 104
104 105

Modifications do not cause iterators to fail
