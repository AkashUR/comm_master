34
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='append'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='text'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='value'
14 argument (IntegerLiteralExpr)
15 value='0'
16 argument (FieldAccessExpr)
17 name (SimpleName)
18 identifier='length'
19 scope (NameExpr)
20 name (SimpleName)
21 identifier='value'
22 type (VoidType)
23 name (SimpleName)
24 identifier='append'
25 parameters
26 parameter (Parameter)
27 isVarArgs='false'
28 name (SimpleName)
29 identifier='value'
30 type (ArrayType)
31 origin='TYPE'
32 componentType (PrimitiveType)
33 type='CHAR'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
10 16
16 17
17 18
16 19
19 20
20 21
0 22
0 23
23 24
0 25
25 26
26 27
26 28
28 29
26 30
30 31
30 32
32 33

This will add a <code>char</code> array to the buffer. The buffer will not overflow with repeated uses of the  <code>append</code>, it uses an <code>ensureCapacity</code>  method which will allow the buffer to dynamically grow in  size to accommodate large character arrays.
