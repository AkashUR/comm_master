62
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 name (SimpleName)
8 identifier='i'
9 type (PrimitiveType)
10 type='INT'
11 statement (SynchronizedStmt)
12 body (BlockStmt)
13 statements
14 statement (ExpressionStmt)
15 expression (AssignExpr)
16 operator='ASSIGN'
17 target (NameExpr)
18 name (SimpleName)
19 identifier='i'
20 value (MethodCallExpr)
21 name (SimpleName)
22 identifier='indexOf'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='automats'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='a'
30 expression (NameExpr)
31 name (SimpleName)
32 identifier='automats'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='notify'
37 arguments
38 argument (StringLiteralExpr)
39 value='Count'
40 argument (NullLiteralExpr)
41 argument (MethodCallExpr)
42 name (SimpleName)
43 identifier='valueOf'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='Integer'
47 arguments
48 argument (NameExpr)
49 name (SimpleName)
50 identifier='i'
51 type (VoidType)
52 name (SimpleName)
53 identifier='loop'
54 parameters
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='a'
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='AbstractAutomaton'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
6 9
9 10
2 11
11 12
12 13
13 14
14 15
15 16
15 17
17 18
18 19
15 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
11 30
30 31
31 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
37 40
37 41
41 42
42 43
41 44
44 45
45 46
41 47
47 48
48 49
49 50
0 51
0 52
52 53
0 54
54 55
55 56
55 57
57 58
55 59
59 60
60 61

An AbstractAutomaton instance uses this method to notify interested parties that it's gone around it's handle loop again.
