73
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='registerInput'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='varName'
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='rdd'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='rlen'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='clen'
20 argument (FieldAccessExpr)
21 name (SimpleName)
22 identifier='DEFAULT_BLOCKSIZE'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='OptimizerUtils'
26 argument (FieldAccessExpr)
27 name (SimpleName)
28 identifier='DEFAULT_BLOCKSIZE'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='OptimizerUtils'
32 type (VoidType)
33 name (SimpleName)
34 identifier='registerInput'
35 parameters
36 parameter (Parameter)
37 isVarArgs='false'
38 name (SimpleName)
39 identifier='varName'
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='String'
43 parameter (Parameter)
44 isVarArgs='false'
45 name (SimpleName)
46 identifier='rdd'
47 type (ClassOrInterfaceType)
48 name (SimpleName)
49 identifier='JavaPairRDD'
50 typeArguments
51 typeArgument (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='MatrixIndexes'
54 typeArgument (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='MatrixBlock'
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='rlen'
61 type (PrimitiveType)
62 type='LONG'
63 parameter (Parameter)
64 isVarArgs='false'
65 name (SimpleName)
66 identifier='clen'
67 type (PrimitiveType)
68 type='LONG'
69 thrownExceptions
70 thrownException (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='DMLRuntimeException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
12 13
7 14
14 15
15 16
7 17
17 18
18 19
7 20
20 21
21 22
20 23
23 24
24 25
7 26
26 27
27 28
26 29
29 30
30 31
0 32
0 33
33 34
0 35
35 36
36 37
36 38
38 39
36 40
40 41
41 42
35 43
43 44
43 45
45 46
43 47
47 48
48 49
47 50
50 51
51 52
52 53
50 54
54 55
55 56
35 57
57 58
57 59
59 60
57 61
61 62
35 63
63 64
63 65
65 66
63 67
67 68
0 69
69 70
70 71
71 72

Register binary blocked RDD with given dimensions, default block sizes and no nnz <p> Marks the variable in the DML script as input variable. Note that this expects a "varName = read(...)" statement in the DML script which through non-MLContext invocation would have been created by reading a HDFS file.
