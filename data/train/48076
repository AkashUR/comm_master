49
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='seekPackageFragments'
7 scope (FieldAccessExpr)
8 name (SimpleName)
9 identifier='nameLookup'
10 scope (ThisExpr)
11 arguments
12 argument (ObjectCreationExpr)
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='String'
16 arguments
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='prefix'
20 argument (BooleanLiteralExpr)
21 value='true'
22 argument (ObjectCreationExpr)
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='SearchableEnvironmentRequestor'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='requestor'
30 type (VoidType)
31 name (SimpleName)
32 identifier='findPackages'
33 parameters
34 parameter (Parameter)
35 isVarArgs='false'
36 name (SimpleName)
37 identifier='prefix'
38 type (ArrayType)
39 origin='TYPE'
40 componentType (PrimitiveType)
41 type='CHAR'
42 parameter (Parameter)
43 isVarArgs='false'
44 name (SimpleName)
45 identifier='requestor'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='ISearchRequestor'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
4 11
11 12
12 13
13 14
14 15
12 16
16 17
17 18
18 19
11 20
20 21
11 22
22 23
23 24
24 25
22 26
26 27
27 28
28 29
0 30
0 31
31 32
0 33
33 34
34 35
34 36
36 37
34 38
38 39
38 40
40 41
33 42
42 43
42 44
44 45
42 46
46 47
47 48

Find the packages that start with the given prefix. A valid prefix is a qualified name separated by periods (ex. java.util). The packages found are passed to: ISearchRequestor.acceptPackage(char[][] packageName)
