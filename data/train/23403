41
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='registerActivityType'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='getName'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='activityClass'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='activityClass'
17 argument (ObjectCreationExpr)
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='DefaultActivityFactory'
21 arguments
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='activityClass'
25 type (VoidType)
26 name (SimpleName)
27 identifier='registerActivityType'
28 parameters
29 parameter (Parameter)
30 isVarArgs='false'
31 name (SimpleName)
32 identifier='activityClass'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='Class'
36 typeArguments
37 typeArgument (WildcardType)
38 extendedType (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='Activity'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
7 14
14 15
15 16
7 17
17 18
18 19
19 20
17 21
21 22
22 23
23 24
0 25
0 26
26 27
0 28
28 29
29 30
29 31
31 32
29 33
33 34
34 35
33 36
36 37
37 38
38 39
39 40

<p> A simplified version of <code>registerActivityType</code> in which the type name is taken to be the fully qualified classname of the  <code>activityClass</code> parameter and a <code>DefaultActivityFactory</code> instance is going to be used to create new activities of that type. </p>
