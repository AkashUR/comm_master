161
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 scope (EnclosedExpr)
9 inner (ObjectCreationExpr)
10 type (ClassOrInterfaceType)
11 name (SimpleName)
12 identifier='SpiEngUtils'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='MyProvider'
16 arguments
17 argument (StringLiteralExpr)
18 value='MyExMechProvider'
19 argument (StringLiteralExpr)
20 value='Provider for ExemptionMechanism testing'
21 argument (MethodCallExpr)
22 name (SimpleName)
23 identifier='concat'
24 scope (MethodCallExpr)
25 name (SimpleName)
26 identifier='concat'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='srvExemptionMechanism'
30 arguments
31 argument (StringLiteralExpr)
32 value='.'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='defaultAlg'
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='ExemptionMechanismProviderClass'
40 name (SimpleName)
41 identifier='mProv'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='Provider'
45 statement (ExpressionStmt)
46 expression (VariableDeclarationExpr)
47 variables
48 variable (VariableDeclarator)
49 initializer (ObjectCreationExpr)
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='ExemptionMechanism'
53 arguments
54 argument (ObjectCreationExpr)
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='MyExemptionMechanismSpi'
58 argument (NameExpr)
59 name (SimpleName)
60 identifier='mProv'
61 argument (NameExpr)
62 name (SimpleName)
63 identifier='defaultAlg'
64 name (SimpleName)
65 identifier='em'
66 type (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='ExemptionMechanism'
69 statement (ExpressionStmt)
70 expression (VariableDeclarationExpr)
71 variables
72 variable (VariableDeclarator)
73 initializer (ObjectCreationExpr)
74 scope (ObjectCreationExpr)
75 type (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='MyExemptionMechanismSpi'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='tmpKey'
81 arguments
82 argument (StringLiteralExpr)
83 value='Proba'
84 argument (ArrayCreationExpr)
85 elementType (PrimitiveType)
86 type='BYTE'
87 levels
88 level (ArrayCreationLevel)
89 dimension (IntegerLiteralExpr)
90 value='0'
91 name (SimpleName)
92 identifier='key'
93 type (ClassOrInterfaceType)
94 name (SimpleName)
95 identifier='Key'
96 statement (ExpressionStmt)
97 expression (MethodCallExpr)
98 name (SimpleName)
99 identifier='init'
100 scope (NameExpr)
101 name (SimpleName)
102 identifier='em'
103 arguments
104 argument (NameExpr)
105 name (SimpleName)
106 identifier='key'
107 statement (ExpressionStmt)
108 expression (MethodCallExpr)
109 name (SimpleName)
110 identifier='genExemptionBlob'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='em'
114 arguments
115 argument (NullLiteralExpr)
116 argument (IntegerLiteralExpr)
117 value='0'
118 statement (ExpressionStmt)
119 expression (MethodCallExpr)
120 name (SimpleName)
121 identifier='genExemptionBlob'
122 scope (NameExpr)
123 name (SimpleName)
124 identifier='em'
125 arguments
126 argument (ArrayCreationExpr)
127 elementType (PrimitiveType)
128 type='BYTE'
129 levels
130 level (ArrayCreationLevel)
131 dimension (IntegerLiteralExpr)
132 value='0'
133 argument (IntegerLiteralExpr)
134 value='0'
135 statement (ExpressionStmt)
136 expression (MethodCallExpr)
137 name (SimpleName)
138 identifier='genExemptionBlob'
139 scope (NameExpr)
140 name (SimpleName)
141 identifier='em'
142 arguments
143 argument (ArrayCreationExpr)
144 elementType (PrimitiveType)
145 type='BYTE'
146 levels
147 level (ArrayCreationLevel)
148 dimension (IntegerLiteralExpr)
149 value='10'
150 argument (UnaryExpr)
151 operator='MINUS'
152 expression (IntegerLiteralExpr)
153 value='5'
154 type (VoidType)
155 name (SimpleName)
156 identifier='testGenExemptionBlob'
157 thrownExceptions
158 thrownException (ClassOrInterfaceType)
159 name (SimpleName)
160 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
10 11
11 12
7 13
13 14
14 15
7 16
16 17
17 18
16 19
19 20
16 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
24 30
30 31
31 32
21 33
33 34
34 35
35 36
16 37
37 38
38 39
6 40
40 41
6 42
42 43
43 44
2 45
45 46
46 47
47 48
48 49
49 50
50 51
51 52
49 53
53 54
54 55
55 56
56 57
53 58
58 59
59 60
53 61
61 62
62 63
48 64
64 65
48 66
66 67
67 68
2 69
69 70
70 71
71 72
72 73
73 74
74 75
75 76
76 77
73 78
78 79
79 80
73 81
81 82
82 83
81 84
84 85
85 86
84 87
87 88
88 89
89 90
72 91
91 92
72 93
93 94
94 95
2 96
96 97
97 98
98 99
97 100
100 101
101 102
97 103
103 104
104 105
105 106
2 107
107 108
108 109
109 110
108 111
111 112
112 113
108 114
114 115
114 116
116 117
2 118
118 119
119 120
120 121
119 122
122 123
123 124
119 125
125 126
126 127
127 128
126 129
129 130
130 131
131 132
125 133
133 134
2 135
135 136
136 137
137 138
136 139
139 140
140 141
136 142
142 143
143 144
144 145
143 146
146 147
147 148
148 149
142 150
150 151
150 152
152 153
0 154
0 155
155 156
0 157
157 158
158 159
159 160

Test for <code>genExemptionBlob((byte[] output, int outputOffset)</code> method
