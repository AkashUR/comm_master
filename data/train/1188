107
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='create'
10 name (SimpleName)
11 identifier='multimap'
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='Multimap'
15 typeArguments
16 typeArgument (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='String'
19 typeArgument (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='Integer'
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='put'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='multimap'
29 arguments
30 argument (StringLiteralExpr)
31 value='foo'
32 argument (IntegerLiteralExpr)
33 value='1'
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='put'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='multimap'
41 arguments
42 argument (StringLiteralExpr)
43 value='foo'
44 argument (IntegerLiteralExpr)
45 value='3'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='assertTrue'
50 arguments
51 argument (InstanceOfExpr)
52 expression (MethodCallExpr)
53 name (SimpleName)
54 identifier='replaceValues'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='multimap'
58 arguments
59 argument (StringLiteralExpr)
60 value='foo'
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='asList'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='Arrays'
67 arguments
68 argument (IntegerLiteralExpr)
69 value='2'
70 argument (IntegerLiteralExpr)
71 value='4'
72 type (ClassOrInterfaceType)
73 name (SimpleName)
74 identifier='RandomAccess'
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='assertTrue'
79 arguments
80 argument (InstanceOfExpr)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='replaceValues'
84 scope (NameExpr)
85 name (SimpleName)
86 identifier='multimap'
87 arguments
88 argument (StringLiteralExpr)
89 value='bar'
90 argument (MethodCallExpr)
91 name (SimpleName)
92 identifier='asList'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='Arrays'
96 arguments
97 argument (IntegerLiteralExpr)
98 value='2'
99 argument (IntegerLiteralExpr)
100 value='4'
101 type (ClassOrInterfaceType)
102 name (SimpleName)
103 identifier='RandomAccess'
104 type (VoidType)
105 name (SimpleName)
106 identifier='testReplaceValuesRandomAccess'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
6 10
10 11
6 12
12 13
13 14
12 15
15 16
16 17
17 18
15 19
19 20
20 21
2 22
22 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
29 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
35 41
41 42
42 43
41 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
52 53
53 54
52 55
55 56
56 57
52 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
67 70
70 71
51 72
72 73
73 74
2 75
75 76
76 77
77 78
76 79
79 80
80 81
81 82
82 83
81 84
84 85
85 86
81 87
87 88
88 89
87 90
90 91
91 92
90 93
93 94
94 95
90 96
96 97
97 98
96 99
99 100
80 101
101 102
102 103
0 104
0 105
105 106

Confirm that replaceValues() returns a List that implements RandomAccess, even though get() doesn't.
