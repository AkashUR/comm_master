35
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='lockWithHandshake'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='schedLock'
10 statement (ExpressionStmt)
11 expression (AssignExpr)
12 operator='ASSIGN'
13 target (NameExpr)
14 name (SimpleName)
15 identifier='open'
16 value (BooleanLiteralExpr)
17 value='true'
18 statement (ExpressionStmt)
19 expression (MethodCallExpr)
20 name (SimpleName)
21 identifier='broadcast'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='schedLock'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='unlock'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='schedLock'
32 type (VoidType)
33 name (SimpleName)
34 identifier='openWithHandshake'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
11 13
13 14
14 15
11 16
16 17
2 18
18 19
19 20
20 21
19 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
0 32
0 33
33 34

Open the latch and let all of the thread(s) waiting on it through. But - if any of the threads is using waitAndClose(), then as soon as that thread awakes further threads will be blocked.
