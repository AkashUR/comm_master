38
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='init'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='instances'
11 statement (ExpressionStmt)
12 expression (MethodCallExpr)
13 name (SimpleName)
14 identifier='optimize'
15 statement (ExpressionStmt)
16 expression (MethodCallExpr)
17 name (SimpleName)
18 identifier='wrapUp'
19 type (VoidType)
20 name (SimpleName)
21 identifier='buildClassifier'
22 parameters
23 parameter (Parameter)
24 isVarArgs='false'
25 name (SimpleName)
26 identifier='instances'
27 type (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='Instances'
30 thrownExceptions
31 thrownException (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='Exception'
34 annotations
35 annotation (MarkerAnnotationExpr)
36 name (Name)
37 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
2 11
11 12
12 13
13 14
2 15
15 16
16 17
17 18
0 19
0 20
20 21
0 22
22 23
23 24
23 25
25 26
23 27
27 28
28 29
0 30
30 31
31 32
32 33
0 34
34 35
35 36
36 37

learn SVM parameters from data using Smola's SMO algorithm. Subclasses should implement something more interesting.
