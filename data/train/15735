86
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='currentTimeMillis'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='System'
13 name (SimpleName)
14 identifier='startTime'
15 type (PrimitiveType)
16 type='LONG'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='post'
21 scope (MethodCallExpr)
22 name (SimpleName)
23 identifier='getDefault'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='EventBus'
27 arguments
28 argument (ObjectCreationExpr)
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='LogTestDataEvent'
32 arguments
33 argument (UnaryExpr)
34 operator='MINUS'
35 expression (IntegerLiteralExpr)
36 value='1'
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='FRAMEWORK_NAME'
40 argument (FieldAccessExpr)
41 name (SimpleName)
42 identifier='SAVE_TIME'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='MainActivity'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='post'
50 scope (MethodCallExpr)
51 name (SimpleName)
52 identifier='getDefault'
53 scope (NameExpr)
54 name (SimpleName)
55 identifier='EventBus'
56 arguments
57 argument (ObjectCreationExpr)
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='LogTestDataEvent'
61 arguments
62 argument (UnaryExpr)
63 operator='MINUS'
64 expression (IntegerLiteralExpr)
65 value='1'
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='FRAMEWORK_NAME'
69 argument (FieldAccessExpr)
70 name (SimpleName)
71 identifier='LOAD_TIME'
72 scope (NameExpr)
73 name (SimpleName)
74 identifier='MainActivity'
75 type (VoidType)
76 name (SimpleName)
77 identifier='testAddressBooks'
78 parameters
79 parameter (Parameter)
80 isVarArgs='false'
81 name (SimpleName)
82 identifier='context'
83 type (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='Context'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
21 24
24 25
25 26
18 27
27 28
28 29
29 30
30 31
28 32
32 33
33 34
33 35
35 36
32 37
37 38
38 39
32 40
40 41
41 42
40 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
50 53
53 54
54 55
47 56
56 57
57 58
58 59
59 60
57 61
61 62
62 63
62 64
64 65
61 66
66 67
67 68
61 69
69 70
70 71
69 72
72 73
73 74
0 75
0 76
76 77
0 78
78 79
79 80
79 81
81 82
79 83
83 84
84 85

Not currently implemented but we need values to graph
