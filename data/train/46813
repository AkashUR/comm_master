93
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (MethodCallExpr)
5 name (SimpleName)
6 identifier='getType'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='action'
10 entries
11 entrie (SwitchEntryStmt)
12 label (FieldAccessExpr)
13 name (SimpleName)
14 identifier='GET_USER'
15 scope (NameExpr)
16 name (SimpleName)
17 identifier='Actions'
18 statements
19 statement (ExpressionStmt)
20 expression (VariableDeclarationExpr)
21 variables
22 variable (VariableDeclarator)
23 initializer (MethodCallExpr)
24 name (SimpleName)
25 identifier='get'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='action'
29 arguments
30 argument (FieldAccessExpr)
31 name (SimpleName)
32 identifier='USER'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='Keys'
36 name (SimpleName)
37 identifier='user'
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='GitUser'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='put'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='users'
48 arguments
49 argument (MethodCallExpr)
50 name (SimpleName)
51 identifier='getLogin'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='user'
55 argument (NameExpr)
56 name (SimpleName)
57 identifier='user'
58 statement (BreakStmt)
59 entrie (SwitchEntryStmt)
60 statements
61 statement (ReturnStmt)
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='postChange'
66 arguments
67 argument (ObjectCreationExpr)
68 type (ClassOrInterfaceType)
69 name (SimpleName)
70 identifier='RxStoreChange'
71 arguments
72 argument (NameExpr)
73 name (SimpleName)
74 identifier='ID'
75 argument (NameExpr)
76 name (SimpleName)
77 identifier='action'
78 type (VoidType)
79 name (SimpleName)
80 identifier='onRxAction'
81 parameters
82 parameter (Parameter)
83 isVarArgs='false'
84 name (SimpleName)
85 identifier='action'
86 type (ClassOrInterfaceType)
87 name (SimpleName)
88 identifier='RxAction'
89 annotations
90 annotation (MarkerAnnotationExpr)
91 name (Name)
92 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
3 10
10 11
11 12
12 13
13 14
12 15
15 16
16 17
11 18
18 19
19 20
20 21
21 22
22 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
31 32
30 33
33 34
34 35
22 36
36 37
22 38
38 39
39 40
18 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
50 51
49 52
52 53
53 54
48 55
55 56
56 57
18 58
10 59
59 60
60 61
2 62
62 63
63 64
64 65
63 66
66 67
67 68
68 69
69 70
67 71
71 72
72 73
73 74
71 75
75 76
76 77
0 78
0 79
79 80
0 81
81 82
82 83
82 84
84 85
82 86
86 87
87 88
0 89
89 90
90 91
91 92

This callback will get all the actions, each store must react on the types he want and do some logic with the model, for example add it to the list to cache it, modify fields etc.. all the logic for the models should go here and then call postChange so the view request the new data
