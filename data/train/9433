69
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='params'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='payload'
12 argument (IntegerLiteralExpr)
13 value='0'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='parent'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='setSerializer'
20 argument (NameExpr)
21 name (SimpleName)
22 identifier='length'
23 name (SimpleName)
24 identifier='Transaction'
25 parameters
26 parameter (Parameter)
27 isVarArgs='false'
28 name (SimpleName)
29 identifier='params'
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='NetworkParameters'
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='payload'
37 type (ArrayType)
38 origin='TYPE'
39 componentType (PrimitiveType)
40 type='BYTE'
41 parameter (Parameter)
42 isVarArgs='false'
43 name (SimpleName)
44 identifier='parent'
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='Message'
48 annotations
49 annotation (MarkerAnnotationExpr)
50 name (Name)
51 identifier='Nullable'
52 parameter (Parameter)
53 isVarArgs='false'
54 name (SimpleName)
55 identifier='setSerializer'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='MessageSerializer'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='length'
63 type (PrimitiveType)
64 type='INT'
65 thrownExceptions
66 thrownException (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='ProtocolException'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
5 14
14 15
15 16
5 17
17 18
18 19
5 20
20 21
21 22
0 23
23 24
0 25
25 26
26 27
26 28
28 29
26 30
30 31
31 32
25 33
33 34
33 35
35 36
33 37
37 38
37 39
39 40
25 41
41 42
41 43
43 44
41 45
45 46
46 47
41 48
48 49
49 50
50 51
25 52
52 53
52 54
54 55
52 56
56 57
57 58
25 59
59 60
59 61
61 62
59 63
63 64
0 65
65 66
66 67
67 68

Creates a transaction by reading payload. Length of a transaction is fixed.
