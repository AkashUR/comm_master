90
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='paintComponent'
7 scope (MethodCallExpr)
8 name (SimpleName)
9 identifier='getCellRendererPane'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='c'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='p'
17 arguments
18 argument (NameExpr)
19 name (SimpleName)
20 identifier='g'
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='c'
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='p'
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='x'
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='y'
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='w'
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='h'
39 argument (BooleanLiteralExpr)
40 value='false'
41 type (VoidType)
42 name (SimpleName)
43 identifier='paintComponent'
44 parameters
45 parameter (Parameter)
46 isVarArgs='false'
47 name (SimpleName)
48 identifier='g'
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='Graphics'
52 parameter (Parameter)
53 isVarArgs='false'
54 name (SimpleName)
55 identifier='c'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='Component'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='p'
63 type (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='Container'
66 parameter (Parameter)
67 isVarArgs='false'
68 name (SimpleName)
69 identifier='x'
70 type (PrimitiveType)
71 type='INT'
72 parameter (Parameter)
73 isVarArgs='false'
74 name (SimpleName)
75 identifier='y'
76 type (PrimitiveType)
77 type='INT'
78 parameter (Parameter)
79 isVarArgs='false'
80 name (SimpleName)
81 identifier='w'
82 type (PrimitiveType)
83 type='INT'
84 parameter (Parameter)
85 isVarArgs='false'
86 name (SimpleName)
87 identifier='h'
88 type (PrimitiveType)
89 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
12 13
10 14
14 15
15 16
4 17
17 18
18 19
19 20
17 21
21 22
22 23
17 24
24 25
25 26
17 27
27 28
28 29
17 30
30 31
31 32
17 33
33 34
34 35
17 36
36 37
37 38
17 39
39 40
0 41
0 42
42 43
0 44
44 45
45 46
45 47
47 48
45 49
49 50
50 51
44 52
52 53
52 54
54 55
52 56
56 57
57 58
44 59
59 60
59 61
61 62
59 63
63 64
64 65
44 66
66 67
66 68
68 69
66 70
70 71
44 72
72 73
72 74
74 75
72 76
76 77
44 78
78 79
78 80
80 81
78 82
82 83
44 84
84 85
84 86
86 87
84 88
88 89

Paints a component to the specified <code>Graphics</code>. This method is primarily useful to render <code>Component</code>s that don't exist as part of the visible containment hierarchy, but are used for rendering.  For example, if you are doing your own rendering and want to render some text (or even HTML), you could make use of <code>JLabel</code>'s text rendering support and have it paint directly by way of this method, without adding the label to the visible containment hierarchy. <p> This method makes use of <code>CellRendererPane</code> to handle the actual painting, and is only recommended if you use one component for rendering.  If you make use of multiple components to handle the rendering, as <code>JTable</code> does, use <code>CellRendererPane</code> directly.  Otherwise, as described below, you could end up with a <code>CellRendererPane</code> per <code>Component</code>. <p> If <code>c</code>'s parent is not a <code>CellRendererPane</code>, a new <code>CellRendererPane</code> is created, <code>c</code> is added to it, and the <code>CellRendererPane</code> is added to <code>p</code>.  If <code>c</code>'s parent is a <code>CellRendererPane</code> and the <code>CellRendererPane</code>s parent is not <code>p</code>, it is added to <code>p</code>. <p> The component should either descend from <code>JComponent</code> or be another kind of lightweight component. A lightweight component is one whose "lightweight" property (returned by the <code>Component</code> <code>isLightweight</code> method) is true. If the Component is not lightweight, bad things map happen: crashes, exceptions, painting problems...
