47
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='printMessage'
7 scope (MethodCallExpr)
8 name (SimpleName)
9 identifier='getMessager'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='processingEnv'
13 arguments
14 argument (FieldAccessExpr)
15 name (SimpleName)
16 identifier='ERROR'
17 scope (FieldAccessExpr)
18 name (SimpleName)
19 identifier='Kind'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='Diagnostic'
23 argument (NameExpr)
24 name (SimpleName)
25 identifier='msg'
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='e'
29 type (VoidType)
30 name (SimpleName)
31 identifier='reportError'
32 parameters
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='msg'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='String'
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='e'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='Element'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
4 13
13 14
14 15
15 16
14 17
17 18
18 19
17 20
20 21
21 22
13 23
23 24
24 25
13 26
26 27
27 28
0 29
0 30
30 31
0 32
32 33
33 34
33 35
35 36
33 37
37 38
38 39
32 40
40 41
40 42
42 43
40 44
44 45
45 46

Issue a compilation error. This method does not throw an exception, since we want to continue processing and perhaps report other errors. It is a good idea to introduce a test case in CompilationErrorsTest for any new call to reportError(...) to ensure that we continue correctly after an error.
