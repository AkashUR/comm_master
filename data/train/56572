38
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='notNull'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='A'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='lsnr'
14 argument (StringLiteralExpr)
15 value='lsnr'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='add'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='lsnrs'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='lsnr'
27 type (VoidType)
28 name (SimpleName)
29 identifier='addListener'
30 parameters
31 parameter (Parameter)
32 isVarArgs='false'
33 name (SimpleName)
34 identifier='lsnr'
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='IgnitionListener'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
0 27
0 28
28 29
0 30
30 31
31 32
31 33
33 34
31 35
35 36
36 37

Adds a lsnr for grid life cycle events. <p> Note that unlike other listeners in Ignite this listener will be notified from the same thread that triggers the state change. Because of that it is the responsibility of the user to make sure that listener logic is light-weight and properly handles (catches) any runtime exceptions, if any are expected.
