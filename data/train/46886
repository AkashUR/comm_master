68
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='ensureCapacity'
7 arguments
8 argument (BinaryExpr)
9 operator='PLUS'
10 left (NameExpr)
11 name (SimpleName)
12 identifier='count'
13 right (NameExpr)
14 name (SimpleName)
15 identifier='len'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='getChars'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='str'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='off'
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='len'
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='buf'
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='count'
36 statement (ExpressionStmt)
37 expression (AssignExpr)
38 operator='PLUS'
39 target (NameExpr)
40 name (SimpleName)
41 identifier='count'
42 value (NameExpr)
43 name (SimpleName)
44 identifier='len'
45 type (VoidType)
46 name (SimpleName)
47 identifier='append'
48 parameters
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='str'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='String'
56 parameter (Parameter)
57 isVarArgs='false'
58 name (SimpleName)
59 identifier='off'
60 type (PrimitiveType)
61 type='INT'
62 parameter (Parameter)
63 isVarArgs='false'
64 name (SimpleName)
65 identifier='len'
66 type (PrimitiveType)
67 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
8 10
10 11
11 12
8 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
23 27
27 28
28 29
23 30
30 31
31 32
23 33
33 34
34 35
2 36
36 37
37 38
37 39
39 40
40 41
37 42
42 43
43 44
0 45
0 46
46 47
0 48
48 49
49 50
49 51
51 52
49 53
53 54
54 55
48 56
56 57
56 58
58 59
56 60
60 61
48 62
62 63
62 64
64 65
62 66
66 67

This will add a <code>String</code> to the end of the buffer. The buffer will not overflow with repeated uses of the  <code>append</code>, it uses an <code>ensureCapacity</code> method which will allow the buffer to dynamically grow in  size to accomodate large <code>String</code> objects.
