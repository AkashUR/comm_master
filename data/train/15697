38
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (ConditionalExpr)
7 condition (BinaryExpr)
8 operator='EQUALS'
9 left (NameExpr)
10 name (SimpleName)
11 identifier='cause'
12 right (NullLiteralExpr)
13 elseExpr (MethodCallExpr)
14 name (SimpleName)
15 identifier='toString'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='cause'
19 thenExpr (NullLiteralExpr)
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='initCause'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='cause'
28 name (SimpleName)
29 identifier='SSLException'
30 parameters
31 parameter (Parameter)
32 isVarArgs='false'
33 name (SimpleName)
34 identifier='cause'
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='Throwable'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
7 9
9 10
10 11
7 12
6 13
13 14
14 15
13 16
16 17
17 18
6 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
26 27
0 28
28 29
0 30
30 31
31 32
31 33
33 34
31 35
35 36
36 37

Creates a <code>SSLException</code> with the specified cause and a detail message of <tt>(cause==null ? null : cause.toString())</tt> (which typically contains the class and detail message of <tt>cause</tt>).
