82
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='syntax'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='s'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (NameExpr)
17 name (SimpleName)
18 identifier='tokens'
19 value (MethodCallExpr)
20 name (SimpleName)
21 identifier='tokenize'
22 statement (ExpressionStmt)
23 expression (AssignExpr)
24 operator='ASSIGN'
25 target (NameExpr)
26 name (SimpleName)
27 identifier='index'
28 value (IntegerLiteralExpr)
29 value='0'
30 statement (ExpressionStmt)
31 expression (VariableDeclarationExpr)
32 variables
33 variable (VariableDeclarator)
34 initializer (MethodCallExpr)
35 name (SimpleName)
36 identifier='parseRule'
37 name (SimpleName)
38 identifier='rule'
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='Rule'
42 statement (ExpressionStmt)
43 expression (MethodCallExpr)
44 name (SimpleName)
45 identifier='setLinks'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='rule'
49 arguments
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='ruleMap'
53 statement (ExpressionStmt)
54 expression (MethodCallExpr)
55 name (SimpleName)
56 identifier='accept'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='rule'
60 arguments
61 argument (NameExpr)
62 name (SimpleName)
63 identifier='visitor'
64 type (VoidType)
65 name (SimpleName)
66 identifier='visit'
67 parameters
68 parameter (Parameter)
69 isVarArgs='false'
70 name (SimpleName)
71 identifier='visitor'
72 type (ClassOrInterfaceType)
73 name (SimpleName)
74 identifier='BnfVisitor'
75 parameter (Parameter)
76 isVarArgs='false'
77 name (SimpleName)
78 identifier='s'
79 type (ClassOrInterfaceType)
80 name (SimpleName)
81 identifier='String'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
14 19
19 20
20 21
2 22
22 23
23 24
23 25
25 26
26 27
23 28
28 29
2 30
30 31
31 32
32 33
33 34
34 35
35 36
33 37
37 38
33 39
39 40
40 41
2 42
42 43
43 44
44 45
43 46
46 47
47 48
43 49
49 50
50 51
51 52
2 53
53 54
54 55
55 56
54 57
57 58
58 59
54 60
60 61
61 62
62 63
0 64
0 65
65 66
0 67
67 68
68 69
68 70
70 71
68 72
72 73
73 74
67 75
75 76
75 77
77 78
75 79
79 80
80 81

Parse the syntax and let the rule call the visitor.
