85
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getFiniteStringsRecursive'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='AutomatonTestUtil'
13 arguments
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='automaton'
17 argument (UnaryExpr)
18 operator='MINUS'
19 expression (IntegerLiteralExpr)
20 value='1'
21 name (SimpleName)
22 identifier='expected'
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='Set'
26 typeArguments
27 typeArgument (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='IntsRef'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='assertEquals'
34 arguments
35 argument (MethodCallExpr)
36 name (SimpleName)
37 identifier='size'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='expected'
41 argument (MethodCallExpr)
42 name (SimpleName)
43 identifier='size'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='actual'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='assertEquals'
51 arguments
52 argument (NameExpr)
53 name (SimpleName)
54 identifier='expected'
55 argument (ObjectCreationExpr)
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='HashSet'
59 arguments
60 argument (NameExpr)
61 name (SimpleName)
62 identifier='actual'
63 type (VoidType)
64 name (SimpleName)
65 identifier='assertFiniteStringsRecursive'
66 parameters
67 parameter (Parameter)
68 isVarArgs='false'
69 name (SimpleName)
70 identifier='automaton'
71 type (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='Automaton'
74 parameter (Parameter)
75 isVarArgs='false'
76 name (SimpleName)
77 identifier='actual'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='List'
81 typeArguments
82 typeArgument (ClassOrInterfaceType)
83 name (SimpleName)
84 identifier='IntsRef'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
13 17
17 18
17 19
19 20
6 21
21 22
6 23
23 24
24 25
23 26
26 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
36 37
35 38
38 39
39 40
34 41
41 42
42 43
41 44
44 45
45 46
2 47
47 48
48 49
49 50
48 51
51 52
52 53
53 54
51 55
55 56
56 57
57 58
55 59
59 60
60 61
61 62
0 63
0 64
64 65
0 66
66 67
67 68
67 69
69 70
67 71
71 72
72 73
66 74
74 75
74 76
76 77
74 78
78 79
79 80
78 81
81 82
82 83
83 84

Check that strings the automaton returns are as expected.
