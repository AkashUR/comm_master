82
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (BinaryExpr)
7 operator='PLUS'
8 left (BinaryExpr)
9 operator='PLUS'
10 left (BinaryExpr)
11 operator='PLUS'
12 left (BinaryExpr)
13 operator='PLUS'
14 left (BinaryExpr)
15 operator='PLUS'
16 left (StringLiteralExpr)
17 value='Illegal sides '
18 right (NameExpr)
19 name (SimpleName)
20 identifier='side1'
21 right (StringLiteralExpr)
22 value=' '
23 right (NameExpr)
24 name (SimpleName)
25 identifier='side2'
26 right (StringLiteralExpr)
27 value=' '
28 right (NameExpr)
29 name (SimpleName)
30 identifier='side3'
31 statement (ExpressionStmt)
32 expression (AssignExpr)
33 operator='ASSIGN'
34 target (FieldAccessExpr)
35 name (SimpleName)
36 identifier='side1'
37 scope (ThisExpr)
38 value (NameExpr)
39 name (SimpleName)
40 identifier='side1'
41 statement (ExpressionStmt)
42 expression (AssignExpr)
43 operator='ASSIGN'
44 target (FieldAccessExpr)
45 name (SimpleName)
46 identifier='side2'
47 scope (ThisExpr)
48 value (NameExpr)
49 name (SimpleName)
50 identifier='side2'
51 statement (ExpressionStmt)
52 expression (AssignExpr)
53 operator='ASSIGN'
54 target (FieldAccessExpr)
55 name (SimpleName)
56 identifier='side3'
57 scope (ThisExpr)
58 value (NameExpr)
59 name (SimpleName)
60 identifier='side3'
61 name (SimpleName)
62 identifier='IllegalTriangleException'
63 parameters
64 parameter (Parameter)
65 isVarArgs='false'
66 name (SimpleName)
67 identifier='side1'
68 type (PrimitiveType)
69 type='DOUBLE'
70 parameter (Parameter)
71 isVarArgs='false'
72 name (SimpleName)
73 identifier='side2'
74 type (PrimitiveType)
75 type='DOUBLE'
76 parameter (Parameter)
77 isVarArgs='false'
78 name (SimpleName)
79 identifier='side3'
80 type (PrimitiveType)
81 type='DOUBLE'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
6 8
8 9
8 10
10 11
10 12
12 13
12 14
14 15
14 16
16 17
14 18
18 19
19 20
12 21
21 22
10 23
23 24
24 25
8 26
26 27
6 28
28 29
29 30
2 31
31 32
32 33
32 34
34 35
35 36
34 37
32 38
38 39
39 40
2 41
41 42
42 43
42 44
44 45
45 46
44 47
42 48
48 49
49 50
2 51
51 52
52 53
52 54
54 55
55 56
54 57
52 58
58 59
59 60
0 61
61 62
0 63
63 64
64 65
64 66
66 67
64 68
68 69
63 70
70 71
70 72
72 73
70 74
74 75
63 76
76 77
76 78
78 79
76 80
80 81

Construct an IllegalTriangleException
