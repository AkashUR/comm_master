17
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='moveToInsertRow'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='crsInternal'
10 type (VoidType)
11 name (SimpleName)
12 identifier='moveToInsertRow'
13 thrownExceptions
14 thrownException (ClassOrInterfaceType)
15 name (SimpleName)
16 identifier='SQLException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
0 10
0 11
11 12
0 13
13 14
14 15
15 16

Moves the cursor for this <code>JoinRowSetImpl</code> object to the insert row.  The current row in the rowset is remembered while the cursor is on the insert row. <P> The insert row is a special row associated with an updatable rowset.  It is essentially a buffer where a new row may be constructed by calling the appropriate <code>updateXXX</code> methods to assign a value to each column in the row.  A complete row must be constructed; that is, every column that is not nullable must be assigned a value.  In order for the new row to become part of this rowset, the method <code>insertRow</code> must be called before the cursor is moved back to the rowset. <P> Only certain methods may be invoked while the cursor is on the insert row; many methods throw an exception if they are called while the cursor is there.  In addition to the <code>updateXXX</code> and <code>insertRow</code> methods, only the <code>getXXX</code> methods may be called when the cursor is on the insert row.  A <code>getXXX</code> method should be called on a column only after an <code>updateXXX</code> method has been called on that column; otherwise, the value returned is undetermined.
