237
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='createAnimatedNode'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='mNativeAnimatedNodesManager'
10 arguments
11 argument (IntegerLiteralExpr)
12 value='1'
13 argument (MethodCallExpr)
14 name (SimpleName)
15 identifier='of'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='JavaOnlyMap'
19 arguments
20 argument (StringLiteralExpr)
21 value='type'
22 argument (StringLiteralExpr)
23 value='value'
24 argument (StringLiteralExpr)
25 value='value'
26 argument (DoubleLiteralExpr)
27 value='100d'
28 statement (ExpressionStmt)
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='createAnimatedNode'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='mNativeAnimatedNodesManager'
35 arguments
36 argument (IntegerLiteralExpr)
37 value='2'
38 argument (MethodCallExpr)
39 name (SimpleName)
40 identifier='of'
41 scope (NameExpr)
42 name (SimpleName)
43 identifier='JavaOnlyMap'
44 arguments
45 argument (StringLiteralExpr)
46 value='type'
47 argument (StringLiteralExpr)
48 value='value'
49 argument (StringLiteralExpr)
50 value='value'
51 argument (DoubleLiteralExpr)
52 value='1000d'
53 statement (ExpressionStmt)
54 expression (MethodCallExpr)
55 name (SimpleName)
56 identifier='createAnimatedNode'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='mNativeAnimatedNodesManager'
60 arguments
61 argument (IntegerLiteralExpr)
62 value='3'
63 argument (MethodCallExpr)
64 name (SimpleName)
65 identifier='of'
66 scope (NameExpr)
67 name (SimpleName)
68 identifier='JavaOnlyMap'
69 arguments
70 argument (StringLiteralExpr)
71 value='type'
72 argument (StringLiteralExpr)
73 value='addition'
74 argument (StringLiteralExpr)
75 value='input'
76 argument (MethodCallExpr)
77 name (SimpleName)
78 identifier='of'
79 scope (NameExpr)
80 name (SimpleName)
81 identifier='JavaOnlyArray'
82 arguments
83 argument (IntegerLiteralExpr)
84 value='1'
85 argument (IntegerLiteralExpr)
86 value='2'
87 statement (ExpressionStmt)
88 expression (MethodCallExpr)
89 name (SimpleName)
90 identifier='createAnimatedNode'
91 scope (NameExpr)
92 name (SimpleName)
93 identifier='mNativeAnimatedNodesManager'
94 arguments
95 argument (IntegerLiteralExpr)
96 value='4'
97 argument (MethodCallExpr)
98 name (SimpleName)
99 identifier='of'
100 scope (NameExpr)
101 name (SimpleName)
102 identifier='JavaOnlyMap'
103 arguments
104 argument (StringLiteralExpr)
105 value='type'
106 argument (StringLiteralExpr)
107 value='style'
108 argument (StringLiteralExpr)
109 value='style'
110 argument (MethodCallExpr)
111 name (SimpleName)
112 identifier='of'
113 scope (NameExpr)
114 name (SimpleName)
115 identifier='JavaOnlyMap'
116 arguments
117 argument (StringLiteralExpr)
118 value='translateX'
119 argument (IntegerLiteralExpr)
120 value='3'
121 statement (ExpressionStmt)
122 expression (MethodCallExpr)
123 name (SimpleName)
124 identifier='createAnimatedNode'
125 scope (NameExpr)
126 name (SimpleName)
127 identifier='mNativeAnimatedNodesManager'
128 arguments
129 argument (IntegerLiteralExpr)
130 value='5'
131 argument (MethodCallExpr)
132 name (SimpleName)
133 identifier='of'
134 scope (NameExpr)
135 name (SimpleName)
136 identifier='JavaOnlyMap'
137 arguments
138 argument (StringLiteralExpr)
139 value='type'
140 argument (StringLiteralExpr)
141 value='props'
142 argument (StringLiteralExpr)
143 value='props'
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='of'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='JavaOnlyMap'
150 arguments
151 argument (StringLiteralExpr)
152 value='style'
153 argument (IntegerLiteralExpr)
154 value='4'
155 statement (ExpressionStmt)
156 expression (MethodCallExpr)
157 name (SimpleName)
158 identifier='connectAnimatedNodes'
159 scope (NameExpr)
160 name (SimpleName)
161 identifier='mNativeAnimatedNodesManager'
162 arguments
163 argument (IntegerLiteralExpr)
164 value='1'
165 argument (IntegerLiteralExpr)
166 value='3'
167 statement (ExpressionStmt)
168 expression (MethodCallExpr)
169 name (SimpleName)
170 identifier='connectAnimatedNodes'
171 scope (NameExpr)
172 name (SimpleName)
173 identifier='mNativeAnimatedNodesManager'
174 arguments
175 argument (IntegerLiteralExpr)
176 value='2'
177 argument (IntegerLiteralExpr)
178 value='3'
179 statement (ExpressionStmt)
180 expression (MethodCallExpr)
181 name (SimpleName)
182 identifier='connectAnimatedNodes'
183 scope (NameExpr)
184 name (SimpleName)
185 identifier='mNativeAnimatedNodesManager'
186 arguments
187 argument (IntegerLiteralExpr)
188 value='3'
189 argument (IntegerLiteralExpr)
190 value='4'
191 statement (ExpressionStmt)
192 expression (MethodCallExpr)
193 name (SimpleName)
194 identifier='connectAnimatedNodes'
195 scope (NameExpr)
196 name (SimpleName)
197 identifier='mNativeAnimatedNodesManager'
198 arguments
199 argument (IntegerLiteralExpr)
200 value='4'
201 argument (IntegerLiteralExpr)
202 value='5'
203 statement (ExpressionStmt)
204 expression (MethodCallExpr)
205 name (SimpleName)
206 identifier='connectAnimatedNodeToView'
207 scope (NameExpr)
208 name (SimpleName)
209 identifier='mNativeAnimatedNodesManager'
210 arguments
211 argument (IntegerLiteralExpr)
212 value='5'
213 argument (IntegerLiteralExpr)
214 value='50'
215 type (VoidType)
216 name (SimpleName)
217 identifier='createAnimatedGraphWithAdditionNode'
218 parameters
219 parameter (Parameter)
220 isVarArgs='false'
221 name (SimpleName)
222 identifier='viewTag'
223 type (PrimitiveType)
224 type='INT'
225 parameter (Parameter)
226 isVarArgs='false'
227 name (SimpleName)
228 identifier='firstValue'
229 type (PrimitiveType)
230 type='DOUBLE'
231 parameter (Parameter)
232 isVarArgs='false'
233 name (SimpleName)
234 identifier='secondValue'
235 type (PrimitiveType)
236 type='DOUBLE'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
14 15
13 16
16 17
17 18
13 19
19 20
20 21
19 22
22 23
19 24
24 25
19 26
26 27
2 28
28 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
35 38
38 39
39 40
38 41
41 42
42 43
38 44
44 45
45 46
44 47
47 48
44 49
49 50
44 51
51 52
2 53
53 54
54 55
55 56
54 57
57 58
58 59
54 60
60 61
61 62
60 63
63 64
64 65
63 66
66 67
67 68
63 69
69 70
70 71
69 72
72 73
69 74
74 75
69 76
76 77
77 78
76 79
79 80
80 81
76 82
82 83
83 84
82 85
85 86
2 87
87 88
88 89
89 90
88 91
91 92
92 93
88 94
94 95
95 96
94 97
97 98
98 99
97 100
100 101
101 102
97 103
103 104
104 105
103 106
106 107
103 108
108 109
103 110
110 111
111 112
110 113
113 114
114 115
110 116
116 117
117 118
116 119
119 120
2 121
121 122
122 123
123 124
122 125
125 126
126 127
122 128
128 129
129 130
128 131
131 132
132 133
131 134
134 135
135 136
131 137
137 138
138 139
137 140
140 141
137 142
142 143
137 144
144 145
145 146
144 147
147 148
148 149
144 150
150 151
151 152
150 153
153 154
2 155
155 156
156 157
157 158
156 159
159 160
160 161
156 162
162 163
163 164
162 165
165 166
2 167
167 168
168 169
169 170
168 171
171 172
172 173
168 174
174 175
175 176
174 177
177 178
2 179
179 180
180 181
181 182
180 183
183 184
184 185
180 186
186 187
187 188
186 189
189 190
2 191
191 192
192 193
193 194
192 195
195 196
196 197
192 198
198 199
199 200
198 201
201 202
2 203
203 204
204 205
205 206
204 207
207 208
208 209
204 210
210 211
211 212
210 213
213 214
0 215
0 216
216 217
0 218
218 219
219 220
219 221
221 222
219 223
223 224
218 225
225 226
225 227
227 228
225 229
229 230
218 231
231 232
231 233
233 234
231 235
235 236

Creates a following graph of nodes: Value(1, firstValue) ----> Add(3) ---> Style(4) ---> Props(5) ---> View(viewTag) | Value(2, secondValue) --+ Add(3) node maps to a "translateX" attribute of the Style(4) node.
