32
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='m_isTopLevel'
9 value (BinaryExpr)
10 operator='EQUALS'
11 left (MethodCallExpr)
12 name (SimpleName)
13 identifier='getLocationPathDepth'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='compiler'
17 right (UnaryExpr)
18 operator='MINUS'
19 expression (IntegerLiteralExpr)
20 value='1'
21 type (VoidType)
22 name (SimpleName)
23 identifier='postCompileStep'
24 parameters
25 parameter (Parameter)
26 isVarArgs='false'
27 name (SimpleName)
28 identifier='compiler'
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='Compiler'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
9 11
11 12
12 13
11 14
14 15
15 16
9 17
17 18
17 19
19 20
0 21
0 22
22 23
0 24
24 25
25 26
25 27
27 28
25 29
29 30
30 31

Figure out if we're executing a toplevel expression. If so, we can't be inside of a predicate.
