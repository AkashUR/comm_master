61
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='in'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='in'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='memoryLimit'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='memoryLimit'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='xzIn'
29 scope (ThisExpr)
30 value (ObjectCreationExpr)
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='SingleXZInputStream'
34 arguments
35 argument (NameExpr)
36 name (SimpleName)
37 identifier='in'
38 argument (NameExpr)
39 name (SimpleName)
40 identifier='memoryLimit'
41 name (SimpleName)
42 identifier='XZInputStream'
43 parameters
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='in'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='InputStream'
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='memoryLimit'
55 type (PrimitiveType)
56 type='INT'
57 thrownExceptions
58 thrownException (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
32 33
30 34
34 35
35 36
36 37
34 38
38 39
39 40
0 41
41 42
0 43
43 44
44 45
44 46
46 47
44 48
48 49
49 50
43 51
51 52
51 53
53 54
51 55
55 56
0 57
57 58
58 59
59 60

Creates a new XZ decompressor with an optional memory usage limit. <p> This is identical to <code>XZInputStream(InputStream)</code> except that this takes also the <code>memoryLimit</code> argument.
