102
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='reset'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='MatsimRandom'
10 statement (ExpressionStmt)
11 expression (VariableDeclarationExpr)
12 variables
13 variable (VariableDeclarator)
14 initializer (MethodCallExpr)
15 name (SimpleName)
16 identifier='getLocalInstance'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='MatsimRandom'
20 name (SimpleName)
21 identifier='local1a'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='Random'
25 statement (ExpressionStmt)
26 expression (VariableDeclarationExpr)
27 variables
28 variable (VariableDeclarator)
29 initializer (MethodCallExpr)
30 name (SimpleName)
31 identifier='getLocalInstance'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='MatsimRandom'
35 name (SimpleName)
36 identifier='local1b'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='Random'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='reset'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='MatsimRandom'
47 statement (ExpressionStmt)
48 expression (VariableDeclarationExpr)
49 variables
50 variable (VariableDeclarator)
51 initializer (MethodCallExpr)
52 name (SimpleName)
53 identifier='getLocalInstance'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='MatsimRandom'
57 name (SimpleName)
58 identifier='local2a'
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='Random'
62 statement (ExpressionStmt)
63 expression (VariableDeclarationExpr)
64 variables
65 variable (VariableDeclarator)
66 initializer (MethodCallExpr)
67 name (SimpleName)
68 identifier='getLocalInstance'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='MatsimRandom'
72 name (SimpleName)
73 identifier='local2b'
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='Random'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='assertEqualRandomNumberGenerators'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='local1a'
85 argument (NameExpr)
86 name (SimpleName)
87 identifier='local2a'
88 statement (ExpressionStmt)
89 expression (MethodCallExpr)
90 name (SimpleName)
91 identifier='assertEqualRandomNumberGenerators'
92 arguments
93 argument (NameExpr)
94 name (SimpleName)
95 identifier='local1b'
96 argument (NameExpr)
97 name (SimpleName)
98 identifier='local2b'
99 type (VoidType)
100 name (SimpleName)
101 identifier='testLocalInstances_deterministic'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
12 13
13 14
14 15
15 16
14 17
17 18
18 19
13 20
20 21
13 22
22 23
23 24
2 25
25 26
26 27
27 28
28 29
29 30
30 31
29 32
32 33
33 34
28 35
35 36
28 37
37 38
38 39
2 40
40 41
41 42
42 43
41 44
44 45
45 46
2 47
47 48
48 49
49 50
50 51
51 52
52 53
51 54
54 55
55 56
50 57
57 58
50 59
59 60
60 61
2 62
62 63
63 64
64 65
65 66
66 67
67 68
66 69
69 70
70 71
65 72
72 73
65 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
83 84
81 85
85 86
86 87
2 88
88 89
89 90
90 91
89 92
92 93
93 94
94 95
92 96
96 97
97 98
0 99
0 100
100 101

Tests that local instances can be recreated (=are deterministic) if the same random seed is used to generate them.
