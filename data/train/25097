50
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='mongo'
9 value (MethodCallExpr)
10 name (SimpleName)
11 identifier='createShared'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='MongoClient'
15 arguments
16 argument (NameExpr)
17 name (SimpleName)
18 identifier='vertx'
19 argument (MethodCallExpr)
20 name (SimpleName)
21 identifier='config'
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='createSomeData'
26 arguments
27 argument (NullLiteralExpr)
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='fut'
31 type (VoidType)
32 name (SimpleName)
33 identifier='start'
34 parameters
35 parameter (Parameter)
36 isVarArgs='false'
37 name (SimpleName)
38 identifier='fut'
39 type (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='Future'
42 typeArguments
43 typeArgument (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='Void'
46 annotations
47 annotation (MarkerAnnotationExpr)
48 name (Name)
49 identifier='Override'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
9 15
15 16
16 17
17 18
15 19
19 20
20 21
2 22
22 23
23 24
24 25
23 26
26 27
26 28
28 29
29 30
0 31
0 32
32 33
0 34
34 35
35 36
35 37
37 38
35 39
39 40
40 41
39 42
42 43
43 44
44 45
0 46
46 47
47 48
48 49

This method is called when the verticle is deployed. It creates a HTTP server and registers a simple request handler. <p/> Notice the `listen` method. It passes a lambda checking the port binding result. When the HTTP server has been bound on the port, it call the `complete` method to inform that the starting has completed. Else it reports the error.
