223
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='defaultInstance'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='TypeFactory'
13 name (SimpleName)
14 identifier='tf'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='TypeFactory'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (MethodCallExpr)
23 name (SimpleName)
24 identifier='getDeclaredField'
25 scope (ClassExpr)
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='SneakyBean'
29 arguments
30 argument (StringLiteralExpr)
31 value='intMap'
32 name (SimpleName)
33 identifier='field'
34 type (ClassOrInterfaceType)
35 name (SimpleName)
36 identifier='Field'
37 statement (ExpressionStmt)
38 expression (VariableDeclarationExpr)
39 variables
40 variable (VariableDeclarator)
41 initializer (MethodCallExpr)
42 name (SimpleName)
43 identifier='constructType'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='tf'
47 arguments
48 argument (MethodCallExpr)
49 name (SimpleName)
50 identifier='getGenericType'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='field'
54 name (SimpleName)
55 identifier='type'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='JavaType'
59 statement (ExpressionStmt)
60 expression (MethodCallExpr)
61 name (SimpleName)
62 identifier='assertTrue'
63 arguments
64 argument (InstanceOfExpr)
65 expression (NameExpr)
66 name (SimpleName)
67 identifier='type'
68 type (ClassOrInterfaceType)
69 name (SimpleName)
70 identifier='MapType'
71 statement (ExpressionStmt)
72 expression (VariableDeclarationExpr)
73 variables
74 variable (VariableDeclarator)
75 initializer (CastExpr)
76 expression (NameExpr)
77 name (SimpleName)
78 identifier='type'
79 type (ClassOrInterfaceType)
80 name (SimpleName)
81 identifier='MapType'
82 name (SimpleName)
83 identifier='mapType'
84 type (ClassOrInterfaceType)
85 name (SimpleName)
86 identifier='MapType'
87 statement (ExpressionStmt)
88 expression (MethodCallExpr)
89 name (SimpleName)
90 identifier='assertEquals'
91 arguments
92 argument (MethodCallExpr)
93 name (SimpleName)
94 identifier='constructType'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='tf'
98 arguments
99 argument (ClassExpr)
100 type (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='Integer'
103 argument (MethodCallExpr)
104 name (SimpleName)
105 identifier='getKeyType'
106 scope (NameExpr)
107 name (SimpleName)
108 identifier='mapType'
109 statement (ExpressionStmt)
110 expression (MethodCallExpr)
111 name (SimpleName)
112 identifier='assertEquals'
113 arguments
114 argument (MethodCallExpr)
115 name (SimpleName)
116 identifier='constructType'
117 scope (NameExpr)
118 name (SimpleName)
119 identifier='tf'
120 arguments
121 argument (ClassExpr)
122 type (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='Long'
125 argument (MethodCallExpr)
126 name (SimpleName)
127 identifier='getContentType'
128 scope (NameExpr)
129 name (SimpleName)
130 identifier='mapType'
131 statement (ExpressionStmt)
132 expression (AssignExpr)
133 operator='ASSIGN'
134 target (NameExpr)
135 name (SimpleName)
136 identifier='field'
137 value (MethodCallExpr)
138 name (SimpleName)
139 identifier='getDeclaredField'
140 scope (ClassExpr)
141 type (ClassOrInterfaceType)
142 name (SimpleName)
143 identifier='SneakyBean'
144 arguments
145 argument (StringLiteralExpr)
146 value='longList'
147 statement (ExpressionStmt)
148 expression (AssignExpr)
149 operator='ASSIGN'
150 target (NameExpr)
151 name (SimpleName)
152 identifier='type'
153 value (MethodCallExpr)
154 name (SimpleName)
155 identifier='constructType'
156 scope (NameExpr)
157 name (SimpleName)
158 identifier='tf'
159 arguments
160 argument (MethodCallExpr)
161 name (SimpleName)
162 identifier='getGenericType'
163 scope (NameExpr)
164 name (SimpleName)
165 identifier='field'
166 statement (ExpressionStmt)
167 expression (MethodCallExpr)
168 name (SimpleName)
169 identifier='assertTrue'
170 arguments
171 argument (InstanceOfExpr)
172 expression (NameExpr)
173 name (SimpleName)
174 identifier='type'
175 type (ClassOrInterfaceType)
176 name (SimpleName)
177 identifier='CollectionType'
178 statement (ExpressionStmt)
179 expression (VariableDeclarationExpr)
180 variables
181 variable (VariableDeclarator)
182 initializer (CastExpr)
183 expression (NameExpr)
184 name (SimpleName)
185 identifier='type'
186 type (ClassOrInterfaceType)
187 name (SimpleName)
188 identifier='CollectionType'
189 name (SimpleName)
190 identifier='collectionType'
191 type (ClassOrInterfaceType)
192 name (SimpleName)
193 identifier='CollectionType'
194 statement (ExpressionStmt)
195 expression (MethodCallExpr)
196 name (SimpleName)
197 identifier='assertEquals'
198 arguments
199 argument (MethodCallExpr)
200 name (SimpleName)
201 identifier='constructType'
202 scope (NameExpr)
203 name (SimpleName)
204 identifier='tf'
205 arguments
206 argument (ClassExpr)
207 type (ClassOrInterfaceType)
208 name (SimpleName)
209 identifier='Long'
210 argument (MethodCallExpr)
211 name (SimpleName)
212 identifier='getContentType'
213 scope (NameExpr)
214 name (SimpleName)
215 identifier='collectionType'
216 type (VoidType)
217 name (SimpleName)
218 identifier='testSneakyFieldTypes'
219 thrownExceptions
220 thrownException (ClassOrInterfaceType)
221 name (SimpleName)
222 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
27 28
22 29
29 30
30 31
21 32
32 33
21 34
34 35
35 36
2 37
37 38
38 39
39 40
40 41
41 42
42 43
41 44
44 45
45 46
41 47
47 48
48 49
49 50
48 51
51 52
52 53
40 54
54 55
40 56
56 57
57 58
2 59
59 60
60 61
61 62
60 63
63 64
64 65
65 66
66 67
64 68
68 69
69 70
2 71
71 72
72 73
73 74
74 75
75 76
76 77
77 78
75 79
79 80
80 81
74 82
82 83
74 84
84 85
85 86
2 87
87 88
88 89
89 90
88 91
91 92
92 93
93 94
92 95
95 96
96 97
92 98
98 99
99 100
100 101
101 102
91 103
103 104
104 105
103 106
106 107
107 108
2 109
109 110
110 111
111 112
110 113
113 114
114 115
115 116
114 117
117 118
118 119
114 120
120 121
121 122
122 123
123 124
113 125
125 126
126 127
125 128
128 129
129 130
2 131
131 132
132 133
132 134
134 135
135 136
132 137
137 138
138 139
137 140
140 141
141 142
142 143
137 144
144 145
145 146
2 147
147 148
148 149
148 150
150 151
151 152
148 153
153 154
154 155
153 156
156 157
157 158
153 159
159 160
160 161
161 162
160 163
163 164
164 165
2 166
166 167
167 168
168 169
167 170
170 171
171 172
172 173
173 174
171 175
175 176
176 177
2 178
178 179
179 180
180 181
181 182
182 183
183 184
184 185
182 186
186 187
187 188
181 189
189 190
181 191
191 192
192 193
2 194
194 195
195 196
196 197
195 198
198 199
199 200
200 201
199 202
202 203
203 204
199 205
205 206
206 207
207 208
208 209
198 210
210 211
211 212
210 213
213 214
214 215
0 216
0 217
217 218
0 219
219 220
220 221
221 222

Plus sneaky types may be found via introspection as well.
