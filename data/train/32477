63
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (BinaryExpr)
7 operator='PLUS'
8 left (BinaryExpr)
9 operator='PLUS'
10 left (BinaryExpr)
11 operator='PLUS'
12 left (BinaryExpr)
13 operator='PLUS'
14 left (StringLiteralExpr)
15 value='Expected '
16 right (NameExpr)
17 name (SimpleName)
18 identifier='expected'
19 right (StringLiteralExpr)
20 value=' but was '
21 right (NameExpr)
22 name (SimpleName)
23 identifier='actual'
24 right (StringLiteralExpr)
25 value='.'
26 statement (ExpressionStmt)
27 expression (AssignExpr)
28 operator='ASSIGN'
29 target (FieldAccessExpr)
30 name (SimpleName)
31 identifier='expected'
32 scope (ThisExpr)
33 value (NameExpr)
34 name (SimpleName)
35 identifier='expected'
36 statement (ExpressionStmt)
37 expression (AssignExpr)
38 operator='ASSIGN'
39 target (FieldAccessExpr)
40 name (SimpleName)
41 identifier='actual'
42 scope (ThisExpr)
43 value (NameExpr)
44 name (SimpleName)
45 identifier='actual'
46 name (SimpleName)
47 identifier='JCalParseException'
48 parameters
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='expected'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='JsonToken'
56 parameter (Parameter)
57 isVarArgs='false'
58 name (SimpleName)
59 identifier='actual'
60 type (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='JsonToken'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
6 8
8 9
8 10
10 11
10 12
12 13
12 14
14 15
12 16
16 17
17 18
10 19
19 20
8 21
21 22
22 23
6 24
24 25
2 26
26 27
27 28
27 29
29 30
30 31
29 32
27 33
33 34
34 35
2 36
36 37
37 38
37 39
39 40
40 41
39 42
37 43
43 44
44 45
0 46
46 47
0 48
48 49
49 50
49 51
51 52
49 53
53 54
54 55
48 56
56 57
56 58
58 59
56 60
60 61
61 62

Creates a jCal parse exception.
