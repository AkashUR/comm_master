106
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='zzReader'
9 value (NameExpr)
10 name (SimpleName)
11 identifier='reader'
12 statement (ExpressionStmt)
13 expression (AssignExpr)
14 operator='ASSIGN'
15 target (NameExpr)
16 name (SimpleName)
17 identifier='zzAtBOL'
18 value (BooleanLiteralExpr)
19 value='true'
20 statement (ExpressionStmt)
21 expression (AssignExpr)
22 operator='ASSIGN'
23 target (NameExpr)
24 name (SimpleName)
25 identifier='zzAtEOF'
26 value (BooleanLiteralExpr)
27 value='false'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (NameExpr)
32 name (SimpleName)
33 identifier='zzEOFDone'
34 value (BooleanLiteralExpr)
35 value='false'
36 statement (ExpressionStmt)
37 expression (AssignExpr)
38 operator='ASSIGN'
39 target (NameExpr)
40 name (SimpleName)
41 identifier='zzEndRead'
42 value (AssignExpr)
43 operator='ASSIGN'
44 target (NameExpr)
45 name (SimpleName)
46 identifier='zzStartRead'
47 value (IntegerLiteralExpr)
48 value='0'
49 statement (ExpressionStmt)
50 expression (AssignExpr)
51 operator='ASSIGN'
52 target (NameExpr)
53 name (SimpleName)
54 identifier='zzCurrentPos'
55 value (AssignExpr)
56 operator='ASSIGN'
57 target (NameExpr)
58 name (SimpleName)
59 identifier='zzMarkedPos'
60 value (IntegerLiteralExpr)
61 value='0'
62 statement (ExpressionStmt)
63 expression (AssignExpr)
64 operator='ASSIGN'
65 target (NameExpr)
66 name (SimpleName)
67 identifier='yyline'
68 value (AssignExpr)
69 operator='ASSIGN'
70 target (NameExpr)
71 name (SimpleName)
72 identifier='yychar'
73 value (AssignExpr)
74 operator='ASSIGN'
75 target (NameExpr)
76 name (SimpleName)
77 identifier='yycolumn'
78 value (IntegerLiteralExpr)
79 value='0'
80 statement (ExpressionStmt)
81 expression (AssignExpr)
82 operator='ASSIGN'
83 target (NameExpr)
84 name (SimpleName)
85 identifier='zzLexicalState'
86 value (NameExpr)
87 name (SimpleName)
88 identifier='YYINITIAL'
89 type (VoidType)
90 name (SimpleName)
91 identifier='yyreset'
92 parameters
93 parameter (Parameter)
94 isVarArgs='false'
95 name (SimpleName)
96 identifier='reader'
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='Reader'
100 scope (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='io'
103 scope (ClassOrInterfaceType)
104 name (SimpleName)
105 identifier='java'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
2 12
12 13
13 14
13 15
15 16
16 17
13 18
18 19
2 20
20 21
21 22
21 23
23 24
24 25
21 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
29 34
34 35
2 36
36 37
37 38
37 39
39 40
40 41
37 42
42 43
42 44
44 45
45 46
42 47
47 48
2 49
49 50
50 51
50 52
52 53
53 54
50 55
55 56
55 57
57 58
58 59
55 60
60 61
2 62
62 63
63 64
63 65
65 66
66 67
63 68
68 69
68 70
70 71
71 72
68 73
73 74
73 75
75 76
76 77
73 78
78 79
2 80
80 81
81 82
81 83
83 84
84 85
81 86
86 87
87 88
0 89
0 90
90 91
0 92
92 93
93 94
93 95
95 96
93 97
97 98
98 99
97 100
100 101
101 102
100 103
103 104
104 105

Resets the scanner to read from a new input stream. Does not close the old reader. All internal variables are reset, the old input stream  <b>cannot</b> be reused (internal buffer is discarded and lost). Lexical state is set to <tt>ZZ_INITIAL</tt>.
