154
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ObjectMapper'
11 name (SimpleName)
12 identifier='m'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='ObjectMapper'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='enableDefaultTyping'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='m'
23 statement (ExpressionStmt)
24 expression (MethodCallExpr)
25 name (SimpleName)
26 identifier='assertEquals'
27 arguments
28 argument (StringLiteralExpr)
29 value='[123]'
30 argument (MethodCallExpr)
31 name (SimpleName)
32 identifier='writeValueAsString'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='m'
36 arguments
37 argument (ArrayCreationExpr)
38 elementType (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='Object'
41 initializer (ArrayInitializerExpr)
42 values
43 value (MethodCallExpr)
44 name (SimpleName)
45 identifier='valueOf'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='Integer'
49 arguments
50 argument (IntegerLiteralExpr)
51 value='123'
52 levels
53 level (ArrayCreationLevel)
54 statement (ExpressionStmt)
55 expression (MethodCallExpr)
56 name (SimpleName)
57 identifier='assertEquals'
58 arguments
59 argument (StringLiteralExpr)
60 value='[[\"java.lang.Long\",37]]'
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='writeValueAsString'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='m'
67 arguments
68 argument (ArrayCreationExpr)
69 elementType (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='Object'
72 initializer (ArrayInitializerExpr)
73 values
74 value (MethodCallExpr)
75 name (SimpleName)
76 identifier='valueOf'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='Long'
80 arguments
81 argument (IntegerLiteralExpr)
82 value='37'
83 levels
84 level (ArrayCreationLevel)
85 statement (ExpressionStmt)
86 expression (MethodCallExpr)
87 name (SimpleName)
88 identifier='assertEquals'
89 arguments
90 argument (StringLiteralExpr)
91 value='[0.25]'
92 argument (MethodCallExpr)
93 name (SimpleName)
94 identifier='writeValueAsString'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='m'
98 arguments
99 argument (ArrayCreationExpr)
100 elementType (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='Object'
103 initializer (ArrayInitializerExpr)
104 values
105 value (MethodCallExpr)
106 name (SimpleName)
107 identifier='valueOf'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='Double'
111 arguments
112 argument (DoubleLiteralExpr)
113 value='0.25'
114 levels
115 level (ArrayCreationLevel)
116 statement (ExpressionStmt)
117 expression (MethodCallExpr)
118 name (SimpleName)
119 identifier='assertEquals'
120 arguments
121 argument (StringLiteralExpr)
122 value='[[\"java.lang.Float\",0.5]]'
123 argument (MethodCallExpr)
124 name (SimpleName)
125 identifier='writeValueAsString'
126 scope (NameExpr)
127 name (SimpleName)
128 identifier='m'
129 arguments
130 argument (ArrayCreationExpr)
131 elementType (ClassOrInterfaceType)
132 name (SimpleName)
133 identifier='Object'
134 initializer (ArrayInitializerExpr)
135 values
136 value (MethodCallExpr)
137 name (SimpleName)
138 identifier='valueOf'
139 scope (NameExpr)
140 name (SimpleName)
141 identifier='Float'
142 arguments
143 argument (DoubleLiteralExpr)
144 value='0.5f'
145 levels
146 level (ArrayCreationLevel)
147 type (VoidType)
148 name (SimpleName)
149 identifier='testNumericScalars'
150 thrownExceptions
151 thrownException (ClassOrInterfaceType)
152 name (SimpleName)
153 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
2 23
23 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32
30 33
33 34
34 35
30 36
36 37
37 38
38 39
39 40
37 41
41 42
42 43
43 44
44 45
43 46
46 47
47 48
43 49
49 50
50 51
37 52
52 53
2 54
54 55
55 56
56 57
55 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
69 70
70 71
68 72
72 73
73 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
68 83
83 84
2 85
85 86
86 87
87 88
86 89
89 90
90 91
89 92
92 93
93 94
92 95
95 96
96 97
92 98
98 99
99 100
100 101
101 102
99 103
103 104
104 105
105 106
106 107
105 108
108 109
109 110
105 111
111 112
112 113
99 114
114 115
2 116
116 117
117 118
118 119
117 120
120 121
121 122
120 123
123 124
124 125
123 126
126 127
127 128
123 129
129 130
130 131
131 132
132 133
130 134
134 135
135 136
136 137
137 138
136 139
139 140
140 141
136 142
142 143
143 144
130 145
145 146
0 147
0 148
148 149
0 150
150 151
151 152
152 153

Unit test to verify that limited number of core types do NOT include type information, even if declared as Object. This is only done for types that JSON scalar values natively map to: String, Integer and Boolean (and nulls never have type information)
