75
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (ArrayAccessExpr)
7 index (IntegerLiteralExpr)
8 value='0'
9 name (NameExpr)
10 name (SimpleName)
11 identifier='size'
12 value (MethodCallExpr)
13 name (SimpleName)
14 identifier='startRow'
15 scope (NameExpr)
16 name (SimpleName)
17 identifier='cells'
18 statement (ExpressionStmt)
19 expression (AssignExpr)
20 operator='ASSIGN'
21 target (ArrayAccessExpr)
22 index (IntegerLiteralExpr)
23 value='1'
24 name (NameExpr)
25 name (SimpleName)
26 identifier='size'
27 value (MethodCallExpr)
28 name (SimpleName)
29 identifier='startColumn'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='cells'
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (ArrayAccessExpr)
37 index (IntegerLiteralExpr)
38 value='2'
39 name (NameExpr)
40 name (SimpleName)
41 identifier='size'
42 value (MethodCallExpr)
43 name (SimpleName)
44 identifier='endRow'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='cells'
48 statement (ExpressionStmt)
49 expression (AssignExpr)
50 operator='ASSIGN'
51 target (ArrayAccessExpr)
52 index (IntegerLiteralExpr)
53 value='3'
54 name (NameExpr)
55 name (SimpleName)
56 identifier='size'
57 value (MethodCallExpr)
58 name (SimpleName)
59 identifier='endColumn'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='cells'
63 type (VoidType)
64 name (SimpleName)
65 identifier='size'
66 parameters
67 parameter (Parameter)
68 isVarArgs='false'
69 name (SimpleName)
70 identifier='size'
71 type (ArrayType)
72 origin='TYPE'
73 componentType (PrimitiveType)
74 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
9 10
10 11
4 12
12 13
13 14
12 15
15 16
16 17
2 18
18 19
19 20
19 21
21 22
22 23
21 24
24 25
25 26
19 27
27 28
28 29
27 30
30 31
31 32
2 33
33 34
34 35
34 36
36 37
37 38
36 39
39 40
40 41
34 42
42 43
43 44
42 45
45 46
46 47
2 48
48 49
49 50
49 51
51 52
52 53
51 54
54 55
55 56
49 57
57 58
58 59
57 60
60 61
61 62
0 63
0 64
64 65
0 66
66 67
67 68
67 69
69 70
67 71
71 72
71 73
73 74

Fillst the array with {startRow, startColumn, endRow, endColumn}
