52
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='async'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='context'
13 name (SimpleName)
14 identifier='async'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Async'
18 statement (ExpressionStmt)
19 expression (MethodCallExpr)
20 name (SimpleName)
21 identifier='end'
22 scope (MethodCallExpr)
23 name (SimpleName)
24 identifier='putHeader'
25 scope (MethodCallExpr)
26 name (SimpleName)
27 identifier='get'
28 scope (MethodCallExpr)
29 name (SimpleName)
30 identifier='client'
31 arguments
32 argument (StringLiteralExpr)
33 value='/throttling/dog'
34 argument (NullLiteralExpr)
35 arguments
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='ACCEPT'
39 argument (StringLiteralExpr)
40 value='application/json'
41 type (VoidType)
42 name (SimpleName)
43 identifier='testAndWait'
44 parameters
45 parameter (Parameter)
46 isVarArgs='false'
47 name (SimpleName)
48 identifier='context'
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='TestContext'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
19 22
22 23
23 24
22 25
25 26
26 27
25 28
28 29
29 30
25 31
31 32
32 33
31 34
22 35
35 36
36 37
37 38
35 39
39 40
0 41
0 42
42 43
0 44
44 45
45 46
45 47
47 48
45 49
49 50
50 51

TODO : this must be the perfect example for using a testsuite instead of nested lambdas ??
