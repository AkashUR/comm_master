57
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='AnonymousClassTest'
11 name (SimpleName)
12 identifier='act'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='AnonymousClassTest'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='returnTypePass'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='act'
23 statement (ExpressionStmt)
24 expression (MethodCallExpr)
25 name (SimpleName)
26 identifier='argumentTypePass'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='act'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='argumentTypeFail'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='act'
37 statement (ExpressionStmt)
38 expression (MethodCallExpr)
39 name (SimpleName)
40 identifier='returnTypeFail'
41 scope (NameExpr)
42 name (SimpleName)
43 identifier='act'
44 type (VoidType)
45 name (SimpleName)
46 identifier='main'
47 parameters
48 parameter (Parameter)
49 isVarArgs='false'
50 name (SimpleName)
51 identifier='args'
52 type (ArrayType)
53 origin='TYPE'
54 componentType (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='String'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
2 23
23 24
24 25
25 26
24 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
2 37
37 38
38 39
39 40
38 41
41 42
42 43
0 44
0 45
45 46
0 47
47 48
48 49
48 50
50 51
48 52
52 53
52 54
54 55
55 56

To build/run outside of the JUnit tests: Build with $CHECKERFRAMEWOKR/framework/tests/build/ on the classpath. Need to either use Java 8 or the langtools compiler, because annotations on cast are used. java AnonymousClassTest MyClass$1.getSib1() MyClass$1.setSib1() MyClass$1.setSib1() MyClass$1.setSib2() MyClass$1.setSib2() MyClass$1.getSib2()
