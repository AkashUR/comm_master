71
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (CastExpr)
8 expression (NameExpr)
9 name (SimpleName)
10 identifier='value'
11 type (ArrayType)
12 origin='TYPE'
13 componentType (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='Object'
16 name (SimpleName)
17 identifier='array'
18 type (ArrayType)
19 origin='TYPE'
20 componentType (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='Object'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='PLUS'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='count'
29 scope (ThisExpr)
30 value (MethodCallExpr)
31 name (SimpleName)
32 identifier='intValue'
33 scope (EnclosedExpr)
34 inner (CastExpr)
35 expression (ArrayAccessExpr)
36 index (IntegerLiteralExpr)
37 value='0'
38 name (NameExpr)
39 name (SimpleName)
40 identifier='array'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='Integer'
44 statement (ExpressionStmt)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='accumulate'
48 scope (SuperExpr)
49 arguments
50 argument (ArrayAccessExpr)
51 index (IntegerLiteralExpr)
52 value='1'
53 name (NameExpr)
54 name (SimpleName)
55 identifier='array'
56 type (VoidType)
57 name (SimpleName)
58 identifier='accumulate'
59 parameters
60 parameter (Parameter)
61 isVarArgs='false'
62 name (SimpleName)
63 identifier='value'
64 type (ClassOrInterfaceType)
65 name (SimpleName)
66 identifier='Object'
67 annotations
68 annotation (MarkerAnnotationExpr)
69 name (Name)
70 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
11 13
13 14
14 15
6 16
16 17
6 18
18 19
18 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
30 33
33 34
34 35
35 36
36 37
35 38
38 39
39 40
34 41
41 42
42 43
2 44
44 45
45 46
46 47
45 48
45 49
49 50
50 51
51 52
50 53
53 54
54 55
0 56
0 57
57 58
0 59
59 60
60 61
60 62
62 63
60 64
64 65
65 66
0 67
67 68
68 69
69 70

Takes the input of data received from bucket nodes. The data is of the form of two element array. The first element is the number of values, while the second element is the sum of the values.
