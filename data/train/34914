147
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='notNull'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='Validate'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='invokeInsnNode'
14 statement (ExpressionStmt)
15 expression (VariableDeclarationExpr)
16 variables
17 variable (VariableDeclarator)
18 initializer (MethodCallExpr)
19 name (SimpleName)
20 identifier='getReturnTypeOfInvocation'
21 arguments
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='invokeInsnNode'
25 name (SimpleName)
26 identifier='returnType'
27 type (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='Type'
30 statement (ExpressionStmt)
31 expression (VariableDeclarationExpr)
32 variables
33 variable (VariableDeclarator)
34 initializer (ObjectCreationExpr)
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='InsnList'
38 name (SimpleName)
39 identifier='ret'
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='InsnList'
43 statement (SwitchStmt)
44 selector (MethodCallExpr)
45 name (SimpleName)
46 identifier='getSort'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='returnType'
50 entries
51 entrie (SwitchEntryStmt)
52 label (FieldAccessExpr)
53 name (SimpleName)
54 identifier='LONG'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='Type'
58 entrie (SwitchEntryStmt)
59 label (FieldAccessExpr)
60 name (SimpleName)
61 identifier='DOUBLE'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='Type'
65 statements
66 statement (ExpressionStmt)
67 expression (MethodCallExpr)
68 name (SimpleName)
69 identifier='add'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='ret'
73 arguments
74 argument (ObjectCreationExpr)
75 type (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='InsnNode'
78 arguments
79 argument (FieldAccessExpr)
80 name (SimpleName)
81 identifier='POP2'
82 scope (NameExpr)
83 name (SimpleName)
84 identifier='Opcodes'
85 statement (BreakStmt)
86 entrie (SwitchEntryStmt)
87 label (FieldAccessExpr)
88 name (SimpleName)
89 identifier='VOID'
90 scope (NameExpr)
91 name (SimpleName)
92 identifier='Type'
93 statements
94 statement (BreakStmt)
95 entrie (SwitchEntryStmt)
96 label (FieldAccessExpr)
97 name (SimpleName)
98 identifier='METHOD'
99 scope (NameExpr)
100 name (SimpleName)
101 identifier='Type'
102 statements
103 statement (ThrowStmt)
104 expression (ObjectCreationExpr)
105 type (ClassOrInterfaceType)
106 name (SimpleName)
107 identifier='IllegalStateException'
108 entrie (SwitchEntryStmt)
109 statements
110 statement (ExpressionStmt)
111 expression (MethodCallExpr)
112 name (SimpleName)
113 identifier='add'
114 scope (NameExpr)
115 name (SimpleName)
116 identifier='ret'
117 arguments
118 argument (ObjectCreationExpr)
119 type (ClassOrInterfaceType)
120 name (SimpleName)
121 identifier='InsnNode'
122 arguments
123 argument (FieldAccessExpr)
124 name (SimpleName)
125 identifier='POP'
126 scope (NameExpr)
127 name (SimpleName)
128 identifier='Opcodes'
129 statement (BreakStmt)
130 statement (ReturnStmt)
131 expression (NameExpr)
132 name (SimpleName)
133 identifier='ret'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='InsnList'
137 name (SimpleName)
138 identifier='popMethodResult'
139 parameters
140 parameter (Parameter)
141 isVarArgs='false'
142 name (SimpleName)
143 identifier='invokeInsnNode'
144 type (ClassOrInterfaceType)
145 name (SimpleName)
146 identifier='AbstractInsnNode'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
2 14
14 15
15 16
16 17
17 18
18 19
19 20
18 21
21 22
22 23
23 24
17 25
25 26
17 27
27 28
28 29
2 30
30 31
31 32
32 33
33 34
34 35
35 36
36 37
33 38
38 39
33 40
40 41
41 42
2 43
43 44
44 45
45 46
44 47
47 48
48 49
43 50
50 51
51 52
52 53
53 54
52 55
55 56
56 57
50 58
58 59
59 60
60 61
59 62
62 63
63 64
58 65
65 66
66 67
67 68
68 69
67 70
70 71
71 72
67 73
73 74
74 75
75 76
76 77
74 78
78 79
79 80
80 81
79 82
82 83
83 84
65 85
50 86
86 87
87 88
88 89
87 90
90 91
91 92
86 93
93 94
50 95
95 96
96 97
97 98
96 99
99 100
100 101
95 102
102 103
103 104
104 105
105 106
106 107
50 108
108 109
109 110
110 111
111 112
112 113
111 114
114 115
115 116
111 117
117 118
118 119
119 120
120 121
118 122
122 123
123 124
124 125
123 126
126 127
127 128
109 129
2 130
130 131
131 132
132 133
0 134
134 135
135 136
0 137
137 138
0 139
139 140
140 141
140 142
142 143
140 144
144 145
145 146

Generates instructions to pop the result of the method off the stack. This will only generate instructions if the method being invoked generates a return value.
