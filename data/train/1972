34
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='message'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='Debug'
10 arguments
11 argument (StringLiteralExpr)
12 value='dndlistener'
13 argument (StringLiteralExpr)
14 value='dragDropEnd(source)'
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (NameExpr)
19 name (SimpleName)
20 identifier='startDrag'
21 value (BooleanLiteralExpr)
22 value='true'
23 type (VoidType)
24 name (SimpleName)
25 identifier='dragDropEnd'
26 parameters
27 parameter (Parameter)
28 isVarArgs='false'
29 name (SimpleName)
30 identifier='dsde'
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='DragSourceDropEvent'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
2 15
15 16
16 17
16 18
18 19
19 20
16 21
21 22
0 23
0 24
24 25
0 26
26 27
27 28
27 29
29 30
27 31
31 32
32 33

This method is invoked to signify that the Drag and Drop operation is complete. The getDropSuccess() method of the <code>DragSourceDropEvent</code> can be used to determine the termination state. The getDropAction() method returns the operation that the <code>DropTarget</code> selected (via the DropTargetDropEvent acceptDrop() parameter) to apply to the Drop operation. Once this method is complete, the current <code>DragSourceContext</code> and associated resources become invalid. <P>
