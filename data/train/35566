62
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='containsPattern'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Predicates'
13 arguments
14 argument (StringLiteralExpr)
15 value='^Fo.*o.*bar$'
16 name (SimpleName)
17 identifier='isFoobar'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='Predicate'
21 typeArguments
22 typeArgument (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='CharSequence'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='assertTrue'
29 arguments
30 argument (MethodCallExpr)
31 name (SimpleName)
32 identifier='test'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='isFoobar'
36 arguments
37 argument (StringLiteralExpr)
38 value='Foxyzoabcbar'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='assertFalse'
43 arguments
44 argument (MethodCallExpr)
45 name (SimpleName)
46 identifier='test'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='isFoobar'
50 arguments
51 argument (StringLiteralExpr)
52 value='Foobarx'
53 type (VoidType)
54 name (SimpleName)
55 identifier='testContainsPattern_apply'
56 annotations
57 annotation (SingleMemberAnnotationExpr)
58 memberValue (StringLiteralExpr)
59 value='Predicates.containsPattern'
60 name (Name)
61 identifier='GwtIncompatible'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
6 16
16 17
6 18
18 19
19 20
18 21
21 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
31 32
30 33
33 34
34 35
30 36
36 37
37 38
2 39
39 40
40 41
41 42
40 43
43 44
44 45
45 46
44 47
47 48
48 49
44 50
50 51
51 52
0 53
0 54
54 55
0 56
56 57
57 58
58 59
57 60
60 61

Tests for Predicates.contains(Pattern) and .containsPattern(String). We assume the regex level works, so there are only trivial tests of that aspect. TODO: Fix comment style once annotation stripper is fixed.
