235
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (NullLiteralExpr)
8 name (SimpleName)
9 identifier='keyGen'
10 type (ClassOrInterfaceType)
11 name (SimpleName)
12 identifier='KeyPairGenerator'
13 statement (ExpressionStmt)
14 expression (VariableDeclarationExpr)
15 variables
16 variable (VariableDeclarator)
17 initializer (NullLiteralExpr)
18 name (SimpleName)
19 identifier='keys'
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='KeyPair'
23 statement (ExpressionStmt)
24 expression (VariableDeclarationExpr)
25 variables
26 variable (VariableDeclarator)
27 initializer (NullLiteralExpr)
28 name (SimpleName)
29 identifier='priv'
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='DSAPrivateKey'
33 statement (ExpressionStmt)
34 expression (VariableDeclarationExpr)
35 variables
36 variable (VariableDeclarator)
37 initializer (NullLiteralExpr)
38 name (SimpleName)
39 identifier='publ'
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='DSAPublicKey'
43 statement (ExpressionStmt)
44 expression (AssignExpr)
45 operator='ASSIGN'
46 target (NameExpr)
47 name (SimpleName)
48 identifier='keyGen'
49 value (MethodCallExpr)
50 name (SimpleName)
51 identifier='getInstance'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='KeyPairGenerator'
55 arguments
56 argument (StringLiteralExpr)
57 value='DSA'
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='initialize'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='keyGen'
65 arguments
66 argument (ObjectCreationExpr)
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='DSAParameterSpec'
70 arguments
71 argument (FieldAccessExpr)
72 name (SimpleName)
73 identifier='P'
74 scope (NameExpr)
75 name (SimpleName)
76 identifier='Util'
77 argument (FieldAccessExpr)
78 name (SimpleName)
79 identifier='Q'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='Util'
83 argument (FieldAccessExpr)
84 name (SimpleName)
85 identifier='G'
86 scope (NameExpr)
87 name (SimpleName)
88 identifier='Util'
89 argument (ObjectCreationExpr)
90 type (ClassOrInterfaceType)
91 name (SimpleName)
92 identifier='SecureRandom'
93 arguments
94 argument (ObjectCreationExpr)
95 type (ClassOrInterfaceType)
96 name (SimpleName)
97 identifier='MySecureRandomSpi'
98 argument (NullLiteralExpr)
99 statement (ExpressionStmt)
100 expression (AssignExpr)
101 operator='ASSIGN'
102 target (NameExpr)
103 name (SimpleName)
104 identifier='keys'
105 value (MethodCallExpr)
106 name (SimpleName)
107 identifier='generateKeyPair'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='keyGen'
111 statement (ExpressionStmt)
112 expression (AssignExpr)
113 operator='ASSIGN'
114 target (NameExpr)
115 name (SimpleName)
116 identifier='priv'
117 value (CastExpr)
118 expression (MethodCallExpr)
119 name (SimpleName)
120 identifier='getPrivate'
121 scope (NameExpr)
122 name (SimpleName)
123 identifier='keys'
124 type (ClassOrInterfaceType)
125 name (SimpleName)
126 identifier='DSAPrivateKey'
127 statement (ExpressionStmt)
128 expression (AssignExpr)
129 operator='ASSIGN'
130 target (NameExpr)
131 name (SimpleName)
132 identifier='publ'
133 value (CastExpr)
134 expression (MethodCallExpr)
135 name (SimpleName)
136 identifier='getPublic'
137 scope (NameExpr)
138 name (SimpleName)
139 identifier='keys'
140 type (ClassOrInterfaceType)
141 name (SimpleName)
142 identifier='DSAPublicKey'
143 statement (ExpressionStmt)
144 expression (MethodCallExpr)
145 name (SimpleName)
146 identifier='assertNotNull'
147 arguments
148 argument (StringLiteralExpr)
149 value='Invalid Y value'
150 argument (MethodCallExpr)
151 name (SimpleName)
152 identifier='getY'
153 scope (NameExpr)
154 name (SimpleName)
155 identifier='publ'
156 statement (ExpressionStmt)
157 expression (AssignExpr)
158 operator='ASSIGN'
159 target (NameExpr)
160 name (SimpleName)
161 identifier='keyGen'
162 value (MethodCallExpr)
163 name (SimpleName)
164 identifier='getInstance'
165 scope (NameExpr)
166 name (SimpleName)
167 identifier='KeyPairGenerator'
168 arguments
169 argument (StringLiteralExpr)
170 value='DSA'
171 statement (ExpressionStmt)
172 expression (AssignExpr)
173 operator='ASSIGN'
174 target (NameExpr)
175 name (SimpleName)
176 identifier='keys'
177 value (MethodCallExpr)
178 name (SimpleName)
179 identifier='generateKeyPair'
180 scope (NameExpr)
181 name (SimpleName)
182 identifier='keyGen'
183 statement (ExpressionStmt)
184 expression (AssignExpr)
185 operator='ASSIGN'
186 target (NameExpr)
187 name (SimpleName)
188 identifier='priv'
189 value (CastExpr)
190 expression (MethodCallExpr)
191 name (SimpleName)
192 identifier='getPrivate'
193 scope (NameExpr)
194 name (SimpleName)
195 identifier='keys'
196 type (ClassOrInterfaceType)
197 name (SimpleName)
198 identifier='DSAPrivateKey'
199 statement (ExpressionStmt)
200 expression (AssignExpr)
201 operator='ASSIGN'
202 target (NameExpr)
203 name (SimpleName)
204 identifier='publ'
205 value (CastExpr)
206 expression (MethodCallExpr)
207 name (SimpleName)
208 identifier='getPublic'
209 scope (NameExpr)
210 name (SimpleName)
211 identifier='keys'
212 type (ClassOrInterfaceType)
213 name (SimpleName)
214 identifier='DSAPublicKey'
215 statement (ExpressionStmt)
216 expression (MethodCallExpr)
217 name (SimpleName)
218 identifier='assertNotNull'
219 arguments
220 argument (StringLiteralExpr)
221 value='Invalid Y value'
222 argument (MethodCallExpr)
223 name (SimpleName)
224 identifier='getY'
225 scope (NameExpr)
226 name (SimpleName)
227 identifier='publ'
228 type (VoidType)
229 name (SimpleName)
230 identifier='test_getY'
231 thrownExceptions
232 thrownException (ClassOrInterfaceType)
233 name (SimpleName)
234 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
6 8
8 9
6 10
10 11
11 12
2 13
13 14
14 15
15 16
16 17
16 18
18 19
16 20
20 21
21 22
2 23
23 24
24 25
25 26
26 27
26 28
28 29
26 30
30 31
31 32
2 33
33 34
34 35
35 36
36 37
36 38
38 39
36 40
40 41
41 42
2 43
43 44
44 45
44 46
46 47
47 48
44 49
49 50
50 51
49 52
52 53
53 54
49 55
55 56
56 57
2 58
58 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
68 69
66 70
70 71
71 72
72 73
71 74
74 75
75 76
70 77
77 78
78 79
77 80
80 81
81 82
70 83
83 84
84 85
83 86
86 87
87 88
65 89
89 90
90 91
91 92
89 93
93 94
94 95
95 96
96 97
93 98
2 99
99 100
100 101
100 102
102 103
103 104
100 105
105 106
106 107
105 108
108 109
109 110
2 111
111 112
112 113
112 114
114 115
115 116
112 117
117 118
118 119
119 120
118 121
121 122
122 123
117 124
124 125
125 126
2 127
127 128
128 129
128 130
130 131
131 132
128 133
133 134
134 135
135 136
134 137
137 138
138 139
133 140
140 141
141 142
2 143
143 144
144 145
145 146
144 147
147 148
148 149
147 150
150 151
151 152
150 153
153 154
154 155
2 156
156 157
157 158
157 159
159 160
160 161
157 162
162 163
163 164
162 165
165 166
166 167
162 168
168 169
169 170
2 171
171 172
172 173
172 174
174 175
175 176
172 177
177 178
178 179
177 180
180 181
181 182
2 183
183 184
184 185
184 186
186 187
187 188
184 189
189 190
190 191
191 192
190 193
193 194
194 195
189 196
196 197
197 198
2 199
199 200
200 201
200 202
202 203
203 204
200 205
205 206
206 207
207 208
206 209
209 210
210 211
205 212
212 213
213 214
2 215
215 216
216 217
217 218
216 219
219 220
220 221
219 222
222 223
223 224
222 225
225 226
226 227
0 228
0 229
229 230
0 231
231 232
232 233
233 234

java.security.interfaces.DSAPublicKey #getY() test covers following use cases Case 1: check with predefined p, q, g, x Case 2: check with random p, q, g, x. It takes some time (up to minute)
