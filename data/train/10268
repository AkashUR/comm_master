33
0 root (MethodDeclaration)
1 body (BlockStmt)
2 type (VoidType)
3 name (SimpleName)
4 identifier='startPrefixMapping'
5 parameters
6 parameter (Parameter)
7 isVarArgs='false'
8 name (SimpleName)
9 identifier='prefix'
10 type (ClassOrInterfaceType)
11 name (SimpleName)
12 identifier='String'
13 parameter (Parameter)
14 isVarArgs='false'
15 name (SimpleName)
16 identifier='uri'
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='String'
20 thrownExceptions
21 thrownException (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='SAXException'
24 scope (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='sax'
27 scope (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='xml'
30 scope (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='org'
0 1
0 2
0 3
3 4
0 5
5 6
6 7
6 8
8 9
6 10
10 11
11 12
5 13
13 14
13 15
15 16
13 17
17 18
18 19
0 20
20 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32

Begin the scope of a prefix-URI Namespace mapping. <p> The information from this event is not necessary for normal Namespace processing: the SAX XML reader will automatically replace prefixes for element and attribute names when the http://xml.org/sax/features/namespaces feature is true (the default). </p> <p> There are cases, however, when applications need to use prefixes in character data or in attribute values, where they cannot safely be expanded automatically; the start/endPrefixMapping event supplies the information to the application to expand prefixes in those contexts itself, if necessary. </p> <p> Note that start/endPrefixMapping events are not guaranteed to be properly nested relative to each-other: all startPrefixMapping events will occur before the corresponding startElement event, and all endPrefixMapping events will occur after the corresponding endElement event, but their order is not guaranteed. </p>
