104
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='DefaultCodenvyClient'
11 name (SimpleName)
12 identifier='defaultCodenvyClient'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='DefaultCodenvyClient'
16 statement (ExpressionStmt)
17 expression (AssignExpr)
18 operator='ASSIGN'
19 target (FieldAccessExpr)
20 name (SimpleName)
21 identifier='previous'
22 scope (ThisExpr)
23 value (MethodCallExpr)
24 name (SimpleName)
25 identifier='setClient'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='CodenvyAPI'
29 arguments
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='defaultCodenvyClient'
33 statement (ExpressionStmt)
34 expression (VariableDeclarationExpr)
35 variables
36 variable (VariableDeclarator)
37 initializer (ObjectCreationExpr)
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='Properties'
41 name (SimpleName)
42 identifier='props'
43 type (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='Dictionary'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='put'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='props'
53 arguments
54 argument (MethodCallExpr)
55 name (SimpleName)
56 identifier='getName'
57 scope (ClassExpr)
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='CodenvyClient'
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='getName'
64 scope (ClassExpr)
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='DefaultCodenvyClient'
68 statement (ExpressionStmt)
69 expression (MethodCallExpr)
70 name (SimpleName)
71 identifier='registerService'
72 scope (NameExpr)
73 name (SimpleName)
74 identifier='context'
75 arguments
76 argument (MethodCallExpr)
77 name (SimpleName)
78 identifier='getName'
79 scope (ClassExpr)
80 type (ClassOrInterfaceType)
81 name (SimpleName)
82 identifier='CodenvyClient'
83 argument (NameExpr)
84 name (SimpleName)
85 identifier='defaultCodenvyClient'
86 argument (NameExpr)
87 name (SimpleName)
88 identifier='props'
89 type (VoidType)
90 name (SimpleName)
91 identifier='start'
92 parameters
93 parameter (Parameter)
94 isVarArgs='false'
95 name (SimpleName)
96 identifier='context'
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='BundleContext'
100 thrownExceptions
101 thrownException (ClassOrInterfaceType)
102 name (SimpleName)
103 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
17 19
19 20
20 21
19 22
17 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
31 32
2 33
33 34
34 35
35 36
36 37
37 38
38 39
39 40
36 41
41 42
36 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
55 56
54 57
57 58
58 59
59 60
53 61
61 62
62 63
61 64
64 65
65 66
66 67
2 68
68 69
69 70
70 71
69 72
72 73
73 74
69 75
75 76
76 77
77 78
76 79
79 80
80 81
81 82
75 83
83 84
84 85
75 86
86 87
87 88
0 89
0 90
90 91
0 92
92 93
93 94
93 95
95 96
93 97
97 98
98 99
0 100
100 101
101 102
102 103

Called when this bundle is started so the Framework can perform the bundle-specific activities necessary to start this bundle. This method can be used to register services or to allocate any resources that this bundle needs. <p/> <p/> This method must complete and return to its caller in a timely manner.
