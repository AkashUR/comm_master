56
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (ConditionalExpr)
7 condition (BinaryExpr)
8 operator='LESS'
9 left (MethodCallExpr)
10 name (SimpleName)
11 identifier='size'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='map'
15 right (IntegerLiteralExpr)
16 value='6'
17 elseExpr (BinaryExpr)
18 operator='MULTIPLY'
19 left (MethodCallExpr)
20 name (SimpleName)
21 identifier='size'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='map'
25 right (IntegerLiteralExpr)
26 value='2'
27 thenExpr (IntegerLiteralExpr)
28 value='11'
29 statement (ExpressionStmt)
30 expression (MethodCallExpr)
31 name (SimpleName)
32 identifier='putAllImpl'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='map'
37 name (SimpleName)
38 identifier='IdentityHashMap'
39 parameters
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='map'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='Map'
47 typeArguments
48 typeArgument (WildcardType)
49 extendedType (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='K'
52 typeArgument (WildcardType)
53 extendedType (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='V'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
7 9
9 10
10 11
9 12
12 13
13 14
7 15
15 16
6 17
17 18
17 19
19 20
20 21
19 22
22 23
23 24
17 25
25 26
6 27
27 28
2 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
0 37
37 38
0 39
39 40
40 41
40 42
42 43
40 44
44 45
45 46
44 47
47 48
48 49
49 50
50 51
47 52
52 53
53 54
54 55

Creates an IdentityHashMap using the given map as initial values.
