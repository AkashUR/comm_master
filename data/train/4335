133
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ArrayCreationExpr)
8 elementType (PrimitiveType)
9 type='BYTE'
10 levels
11 level (ArrayCreationLevel)
12 dimension (IntegerLiteralExpr)
13 value='4'
14 name (SimpleName)
15 identifier='b'
16 type (ArrayType)
17 origin='TYPE'
18 componentType (PrimitiveType)
19 type='BYTE'
20 statement (ExpressionStmt)
21 expression (AssignExpr)
22 operator='ASSIGN'
23 target (ArrayAccessExpr)
24 index (IntegerLiteralExpr)
25 value='0'
26 name (NameExpr)
27 name (SimpleName)
28 identifier='b'
29 value (CastExpr)
30 expression (EnclosedExpr)
31 inner (BinaryExpr)
32 operator='BINARY_AND'
33 left (EnclosedExpr)
34 inner (BinaryExpr)
35 operator='UNSIGNED_RIGHT_SHIFT'
36 left (NameExpr)
37 name (SimpleName)
38 identifier='val'
39 right (IntegerLiteralExpr)
40 value='24'
41 right (IntegerLiteralExpr)
42 value='0xff'
43 type (PrimitiveType)
44 type='BYTE'
45 statement (ExpressionStmt)
46 expression (AssignExpr)
47 operator='ASSIGN'
48 target (ArrayAccessExpr)
49 index (IntegerLiteralExpr)
50 value='1'
51 name (NameExpr)
52 name (SimpleName)
53 identifier='b'
54 value (CastExpr)
55 expression (EnclosedExpr)
56 inner (BinaryExpr)
57 operator='BINARY_AND'
58 left (EnclosedExpr)
59 inner (BinaryExpr)
60 operator='UNSIGNED_RIGHT_SHIFT'
61 left (NameExpr)
62 name (SimpleName)
63 identifier='val'
64 right (IntegerLiteralExpr)
65 value='16'
66 right (IntegerLiteralExpr)
67 value='0xff'
68 type (PrimitiveType)
69 type='BYTE'
70 statement (ExpressionStmt)
71 expression (AssignExpr)
72 operator='ASSIGN'
73 target (ArrayAccessExpr)
74 index (IntegerLiteralExpr)
75 value='2'
76 name (NameExpr)
77 name (SimpleName)
78 identifier='b'
79 value (CastExpr)
80 expression (EnclosedExpr)
81 inner (BinaryExpr)
82 operator='BINARY_AND'
83 left (EnclosedExpr)
84 inner (BinaryExpr)
85 operator='UNSIGNED_RIGHT_SHIFT'
86 left (NameExpr)
87 name (SimpleName)
88 identifier='val'
89 right (IntegerLiteralExpr)
90 value='8'
91 right (IntegerLiteralExpr)
92 value='0xff'
93 type (PrimitiveType)
94 type='BYTE'
95 statement (ExpressionStmt)
96 expression (AssignExpr)
97 operator='ASSIGN'
98 target (ArrayAccessExpr)
99 index (IntegerLiteralExpr)
100 value='3'
101 name (NameExpr)
102 name (SimpleName)
103 identifier='b'
104 value (CastExpr)
105 expression (EnclosedExpr)
106 inner (BinaryExpr)
107 operator='BINARY_AND'
108 left (NameExpr)
109 name (SimpleName)
110 identifier='val'
111 right (IntegerLiteralExpr)
112 value='0xff'
113 type (PrimitiveType)
114 type='BYTE'
115 statement (ExpressionStmt)
116 expression (MethodCallExpr)
117 name (SimpleName)
118 identifier='update'
119 arguments
120 argument (NameExpr)
121 name (SimpleName)
122 identifier='b'
123 type (VoidType)
124 name (SimpleName)
125 identifier='update'
126 parameters
127 parameter (Parameter)
128 isVarArgs='false'
129 name (SimpleName)
130 identifier='val'
131 type (PrimitiveType)
132 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
6 14
14 15
6 16
16 17
16 18
18 19
2 20
20 21
21 22
21 23
23 24
24 25
23 26
26 27
27 28
21 29
29 30
30 31
31 32
31 33
33 34
34 35
34 36
36 37
37 38
34 39
39 40
31 41
41 42
29 43
43 44
2 45
45 46
46 47
46 48
48 49
49 50
48 51
51 52
52 53
46 54
54 55
55 56
56 57
56 58
58 59
59 60
59 61
61 62
62 63
59 64
64 65
56 66
66 67
54 68
68 69
2 70
70 71
71 72
71 73
73 74
74 75
73 76
76 77
77 78
71 79
79 80
80 81
81 82
81 83
83 84
84 85
84 86
86 87
87 88
84 89
89 90
81 91
91 92
79 93
93 94
2 95
95 96
96 97
96 98
98 99
99 100
98 101
101 102
102 103
96 104
104 105
105 106
106 107
106 108
108 109
109 110
106 111
111 112
104 113
113 114
2 115
115 116
116 117
117 118
116 119
119 120
120 121
121 122
0 123
0 124
124 125
0 126
126 127
127 128
127 129
129 130
127 131
131 132

Updates the CRC32 value from each byte of the given int value. The bytes are used in the big endian order.
