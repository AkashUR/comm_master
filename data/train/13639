72
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='getLineSegment'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='mc1'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='start1'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='overlapSeg1'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='getLineSegment'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='mc2'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='start2'
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='overlapSeg2'
31 statement (ExpressionStmt)
32 expression (MethodCallExpr)
33 name (SimpleName)
34 identifier='overlap'
35 arguments
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='overlapSeg1'
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='overlapSeg2'
42 type (VoidType)
43 name (SimpleName)
44 identifier='overlap'
45 parameters
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='mc1'
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='MonotoneChain'
53 parameter (Parameter)
54 isVarArgs='false'
55 name (SimpleName)
56 identifier='start1'
57 type (PrimitiveType)
58 type='INT'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='mc2'
63 type (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='MonotoneChain'
66 parameter (Parameter)
67 isVarArgs='false'
68 name (SimpleName)
69 identifier='start2'
70 type (PrimitiveType)
71 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
25 26
26 27
24 28
28 29
29 30
2 31
31 32
32 33
33 34
32 35
35 36
36 37
37 38
35 39
39 40
40 41
0 42
0 43
43 44
0 45
45 46
46 47
46 48
48 49
46 50
50 51
51 52
45 53
53 54
53 55
55 56
53 57
57 58
45 59
59 60
59 61
61 62
59 63
63 64
64 65
45 66
66 67
66 68
68 69
66 70
70 71

This function can be overridden if the original chains are needed
