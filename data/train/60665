44
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='lock'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='keyChainGroupLock'
10 statement (TryStmt)
11 finallyBlock (BlockStmt)
12 statements
13 statement (ExpressionStmt)
14 expression (MethodCallExpr)
15 name (SimpleName)
16 identifier='unlock'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='keyChainGroupLock'
20 tryBlock (BlockStmt)
21 statements
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='addAndActivateHDChain'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='keyChainGroup'
29 arguments
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='chain'
33 type (VoidType)
34 name (SimpleName)
35 identifier='addAndActivateHDChain'
36 parameters
37 parameter (Parameter)
38 isVarArgs='false'
39 name (SimpleName)
40 identifier='chain'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='DeterministicKeyChain'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
12 13
13 14
14 15
15 16
14 17
17 18
18 19
10 20
20 21
21 22
22 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
31 32
0 33
0 34
34 35
0 36
36 37
37 38
37 39
39 40
37 41
41 42
42 43

Add a pre-configured keychain to the wallet.  Useful for setting up a complex keychain, such as for a married wallet.  For example: <pre> MarriedKeyChain chain = MarriedKeyChain.builder() .random(new SecureRandom()) .followingKeys(followingKeys) .threshold(2).build(); wallet.addAndActivateHDChain(chain); </p>
