59
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setCapacity'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='len'
11 argument (BooleanLiteralExpr)
12 value='false'
13 statement (ExpressionStmt)
14 expression (MethodCallExpr)
15 name (SimpleName)
16 identifier='readFully'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='in'
20 arguments
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='bytes'
24 argument (IntegerLiteralExpr)
25 value='0'
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='len'
29 statement (ExpressionStmt)
30 expression (AssignExpr)
31 operator='ASSIGN'
32 target (NameExpr)
33 name (SimpleName)
34 identifier='length'
35 value (NameExpr)
36 name (SimpleName)
37 identifier='len'
38 type (VoidType)
39 name (SimpleName)
40 identifier='readWithKnownLength'
41 parameters
42 parameter (Parameter)
43 isVarArgs='false'
44 name (SimpleName)
45 identifier='in'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='DataInput'
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='len'
53 type (PrimitiveType)
54 type='INT'
55 thrownExceptions
56 thrownException (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
2 13
13 14
14 15
15 16
14 17
17 18
18 19
14 20
20 21
21 22
22 23
20 24
24 25
20 26
26 27
27 28
2 29
29 30
30 31
30 32
32 33
33 34
30 35
35 36
36 37
0 38
0 39
39 40
0 41
41 42
42 43
42 44
44 45
42 46
46 47
47 48
41 49
49 50
49 51
51 52
49 53
53 54
0 55
55 56
56 57
57 58

Read a Text object whose length is already known. This allows creating Text from a stream which uses a different serialization format.
