65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='checkValidity'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='mapping'
11 statement (ExpressionStmt)
12 expression (AssignExpr)
13 operator='ASSIGN'
14 target (NameExpr)
15 name (SimpleName)
16 identifier='m_doubleStats'
17 value (MethodCallExpr)
18 name (SimpleName)
19 identifier='applyResultMapping'
20 arguments
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='m_doubleStats'
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='mapping'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (NameExpr)
31 name (SimpleName)
32 identifier='m_stringStats'
33 value (MethodCallExpr)
34 name (SimpleName)
35 identifier='applyResultMapping'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='m_stringStats'
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='mapping'
43 type (VoidType)
44 name (SimpleName)
45 identifier='applyResultMapping'
46 parameters
47 parameter (Parameter)
48 isVarArgs='false'
49 name (SimpleName)
50 identifier='mapping'
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='SortedMap'
54 typeArguments
55 typeArgument (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='String'
58 typeArgument (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='String'
61 thrownExceptions
62 thrownException (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='AdeUsageException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
2 11
11 12
12 13
12 14
14 15
15 16
12 17
17 18
18 19
17 20
20 21
21 22
22 23
20 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
28 33
33 34
34 35
33 36
36 37
37 38
38 39
36 40
40 41
41 42
0 43
0 44
44 45
0 46
46 47
47 48
47 49
49 50
47 51
51 52
52 53
51 54
54 55
55 56
56 57
54 58
58 59
59 60
0 61
61 62
62 63
63 64

Replaces the statistics names according to the given map. A statistic that does not exist in the map is removed.
