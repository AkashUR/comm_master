624
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='isEqualTo'
7 scope (MethodCallExpr)
8 name (SimpleName)
9 identifier='assertThat'
10 arguments
11 argument (CastExpr)
12 expression (MethodCallExpr)
13 name (SimpleName)
14 identifier='emptyAggregationFor'
15 arguments
16 argument (MethodCallExpr)
17 name (SimpleName)
18 identifier='field'
19 arguments
20 argument (StringLiteralExpr)
21 value='immutableSet'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='ImmutableSet'
25 typeArguments
26 typeArgument (WildcardType)
27 arguments
28 argument (MethodCallExpr)
29 name (SimpleName)
30 identifier='of'
31 scope (NameExpr)
32 name (SimpleName)
33 identifier='ImmutableSet'
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='isEqualTo'
38 scope (MethodCallExpr)
39 name (SimpleName)
40 identifier='assertThat'
41 arguments
42 argument (CastExpr)
43 expression (MethodCallExpr)
44 name (SimpleName)
45 identifier='emptyAggregationFor'
46 arguments
47 argument (MethodCallExpr)
48 name (SimpleName)
49 identifier='field'
50 arguments
51 argument (StringLiteralExpr)
52 value='set'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='Set'
56 typeArguments
57 typeArgument (WildcardType)
58 arguments
59 argument (MethodCallExpr)
60 name (SimpleName)
61 identifier='of'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='ImmutableSet'
65 statement (ExpressionStmt)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='isEqualTo'
69 scope (MethodCallExpr)
70 name (SimpleName)
71 identifier='assertThat'
72 arguments
73 argument (CastExpr)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='emptyAggregationFor'
77 arguments
78 argument (MethodCallExpr)
79 name (SimpleName)
80 identifier='field'
81 arguments
82 argument (StringLiteralExpr)
83 value='collection'
84 type (ClassOrInterfaceType)
85 name (SimpleName)
86 identifier='Collection'
87 typeArguments
88 typeArgument (WildcardType)
89 arguments
90 argument (MethodCallExpr)
91 name (SimpleName)
92 identifier='of'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='ImmutableSet'
96 statement (ExpressionStmt)
97 expression (MethodCallExpr)
98 name (SimpleName)
99 identifier='isEqualTo'
100 scope (MethodCallExpr)
101 name (SimpleName)
102 identifier='assertThat'
103 arguments
104 argument (CastExpr)
105 expression (MethodCallExpr)
106 name (SimpleName)
107 identifier='emptyAggregationFor'
108 arguments
109 argument (MethodCallExpr)
110 name (SimpleName)
111 identifier='field'
112 arguments
113 argument (StringLiteralExpr)
114 value='iterable'
115 type (ClassOrInterfaceType)
116 name (SimpleName)
117 identifier='Iterable'
118 typeArguments
119 typeArgument (WildcardType)
120 arguments
121 argument (MethodCallExpr)
122 name (SimpleName)
123 identifier='of'
124 scope (NameExpr)
125 name (SimpleName)
126 identifier='ImmutableSet'
127 statement (ExpressionStmt)
128 expression (MethodCallExpr)
129 name (SimpleName)
130 identifier='isEqualTo'
131 scope (MethodCallExpr)
132 name (SimpleName)
133 identifier='assertThat'
134 arguments
135 argument (CastExpr)
136 expression (MethodCallExpr)
137 name (SimpleName)
138 identifier='emptyAggregationFor'
139 arguments
140 argument (MethodCallExpr)
141 name (SimpleName)
142 identifier='field'
143 arguments
144 argument (StringLiteralExpr)
145 value='immutableList'
146 type (ClassOrInterfaceType)
147 name (SimpleName)
148 identifier='ImmutableList'
149 typeArguments
150 typeArgument (WildcardType)
151 arguments
152 argument (MethodCallExpr)
153 name (SimpleName)
154 identifier='of'
155 scope (NameExpr)
156 name (SimpleName)
157 identifier='ImmutableList'
158 statement (ExpressionStmt)
159 expression (MethodCallExpr)
160 name (SimpleName)
161 identifier='isEqualTo'
162 scope (MethodCallExpr)
163 name (SimpleName)
164 identifier='assertThat'
165 arguments
166 argument (CastExpr)
167 expression (MethodCallExpr)
168 name (SimpleName)
169 identifier='emptyAggregationFor'
170 arguments
171 argument (MethodCallExpr)
172 name (SimpleName)
173 identifier='field'
174 arguments
175 argument (StringLiteralExpr)
176 value='list'
177 type (ClassOrInterfaceType)
178 name (SimpleName)
179 identifier='List'
180 typeArguments
181 typeArgument (WildcardType)
182 arguments
183 argument (MethodCallExpr)
184 name (SimpleName)
185 identifier='of'
186 scope (NameExpr)
187 name (SimpleName)
188 identifier='ImmutableList'
189 statement (ExpressionStmt)
190 expression (MethodCallExpr)
191 name (SimpleName)
192 identifier='isEqualTo'
193 scope (MethodCallExpr)
194 name (SimpleName)
195 identifier='assertThat'
196 arguments
197 argument (CastExpr)
198 expression (MethodCallExpr)
199 name (SimpleName)
200 identifier='emptyAggregationFor'
201 arguments
202 argument (MethodCallExpr)
203 name (SimpleName)
204 identifier='field'
205 arguments
206 argument (StringLiteralExpr)
207 value='immutableMap'
208 type (ClassOrInterfaceType)
209 name (SimpleName)
210 identifier='ImmutableMap'
211 typeArguments
212 typeArgument (WildcardType)
213 typeArgument (WildcardType)
214 arguments
215 argument (MethodCallExpr)
216 name (SimpleName)
217 identifier='of'
218 scope (NameExpr)
219 name (SimpleName)
220 identifier='ImmutableMap'
221 statement (ExpressionStmt)
222 expression (MethodCallExpr)
223 name (SimpleName)
224 identifier='isEqualTo'
225 scope (MethodCallExpr)
226 name (SimpleName)
227 identifier='assertThat'
228 arguments
229 argument (CastExpr)
230 expression (MethodCallExpr)
231 name (SimpleName)
232 identifier='emptyAggregationFor'
233 arguments
234 argument (MethodCallExpr)
235 name (SimpleName)
236 identifier='field'
237 arguments
238 argument (StringLiteralExpr)
239 value='map'
240 type (ClassOrInterfaceType)
241 name (SimpleName)
242 identifier='Map'
243 typeArguments
244 typeArgument (WildcardType)
245 typeArgument (WildcardType)
246 arguments
247 argument (MethodCallExpr)
248 name (SimpleName)
249 identifier='of'
250 scope (NameExpr)
251 name (SimpleName)
252 identifier='ImmutableMap'
253 statement (ExpressionStmt)
254 expression (MethodCallExpr)
255 name (SimpleName)
256 identifier='isEqualTo'
257 scope (MethodCallExpr)
258 name (SimpleName)
259 identifier='assertThat'
260 arguments
261 argument (CastExpr)
262 expression (MethodCallExpr)
263 name (SimpleName)
264 identifier='emptyAggregationFor'
265 arguments
266 argument (MethodCallExpr)
267 name (SimpleName)
268 identifier='field'
269 arguments
270 argument (StringLiteralExpr)
271 value='immutableMultimap'
272 type (ClassOrInterfaceType)
273 name (SimpleName)
274 identifier='ImmutableMultimap'
275 typeArguments
276 typeArgument (WildcardType)
277 typeArgument (WildcardType)
278 arguments
279 argument (MethodCallExpr)
280 name (SimpleName)
281 identifier='of'
282 scope (NameExpr)
283 name (SimpleName)
284 identifier='ImmutableMultimap'
285 statement (ExpressionStmt)
286 expression (MethodCallExpr)
287 name (SimpleName)
288 identifier='isEqualTo'
289 scope (MethodCallExpr)
290 name (SimpleName)
291 identifier='assertThat'
292 arguments
293 argument (CastExpr)
294 expression (MethodCallExpr)
295 name (SimpleName)
296 identifier='emptyAggregationFor'
297 arguments
298 argument (MethodCallExpr)
299 name (SimpleName)
300 identifier='field'
301 arguments
302 argument (StringLiteralExpr)
303 value='multimap'
304 type (ClassOrInterfaceType)
305 name (SimpleName)
306 identifier='Multimap'
307 typeArguments
308 typeArgument (WildcardType)
309 typeArgument (WildcardType)
310 arguments
311 argument (MethodCallExpr)
312 name (SimpleName)
313 identifier='of'
314 scope (NameExpr)
315 name (SimpleName)
316 identifier='ImmutableMultimap'
317 statement (ExpressionStmt)
318 expression (MethodCallExpr)
319 name (SimpleName)
320 identifier='isEqualTo'
321 scope (MethodCallExpr)
322 name (SimpleName)
323 identifier='assertThat'
324 arguments
325 argument (CastExpr)
326 expression (MethodCallExpr)
327 name (SimpleName)
328 identifier='emptyAggregationFor'
329 arguments
330 argument (MethodCallExpr)
331 name (SimpleName)
332 identifier='field'
333 arguments
334 argument (StringLiteralExpr)
335 value='immutableListMultimap'
336 type (ClassOrInterfaceType)
337 name (SimpleName)
338 identifier='ImmutableListMultimap'
339 typeArguments
340 typeArgument (WildcardType)
341 typeArgument (WildcardType)
342 arguments
343 argument (MethodCallExpr)
344 name (SimpleName)
345 identifier='of'
346 scope (NameExpr)
347 name (SimpleName)
348 identifier='ImmutableListMultimap'
349 statement (ExpressionStmt)
350 expression (MethodCallExpr)
351 name (SimpleName)
352 identifier='isEqualTo'
353 scope (MethodCallExpr)
354 name (SimpleName)
355 identifier='assertThat'
356 arguments
357 argument (CastExpr)
358 expression (MethodCallExpr)
359 name (SimpleName)
360 identifier='emptyAggregationFor'
361 arguments
362 argument (MethodCallExpr)
363 name (SimpleName)
364 identifier='field'
365 arguments
366 argument (StringLiteralExpr)
367 value='listMultimap'
368 type (ClassOrInterfaceType)
369 name (SimpleName)
370 identifier='ListMultimap'
371 typeArguments
372 typeArgument (WildcardType)
373 typeArgument (WildcardType)
374 arguments
375 argument (MethodCallExpr)
376 name (SimpleName)
377 identifier='of'
378 scope (NameExpr)
379 name (SimpleName)
380 identifier='ImmutableListMultimap'
381 statement (ExpressionStmt)
382 expression (MethodCallExpr)
383 name (SimpleName)
384 identifier='isEqualTo'
385 scope (MethodCallExpr)
386 name (SimpleName)
387 identifier='assertThat'
388 arguments
389 argument (CastExpr)
390 expression (MethodCallExpr)
391 name (SimpleName)
392 identifier='emptyAggregationFor'
393 arguments
394 argument (MethodCallExpr)
395 name (SimpleName)
396 identifier='field'
397 arguments
398 argument (StringLiteralExpr)
399 value='immutableSetMultimap'
400 type (ClassOrInterfaceType)
401 name (SimpleName)
402 identifier='ImmutableSetMultimap'
403 typeArguments
404 typeArgument (WildcardType)
405 typeArgument (WildcardType)
406 arguments
407 argument (MethodCallExpr)
408 name (SimpleName)
409 identifier='of'
410 scope (NameExpr)
411 name (SimpleName)
412 identifier='ImmutableSetMultimap'
413 statement (ExpressionStmt)
414 expression (MethodCallExpr)
415 name (SimpleName)
416 identifier='isEqualTo'
417 scope (MethodCallExpr)
418 name (SimpleName)
419 identifier='assertThat'
420 arguments
421 argument (CastExpr)
422 expression (MethodCallExpr)
423 name (SimpleName)
424 identifier='emptyAggregationFor'
425 arguments
426 argument (MethodCallExpr)
427 name (SimpleName)
428 identifier='field'
429 arguments
430 argument (StringLiteralExpr)
431 value='setMultimap'
432 type (ClassOrInterfaceType)
433 name (SimpleName)
434 identifier='SetMultimap'
435 typeArguments
436 typeArgument (WildcardType)
437 typeArgument (WildcardType)
438 arguments
439 argument (MethodCallExpr)
440 name (SimpleName)
441 identifier='of'
442 scope (NameExpr)
443 name (SimpleName)
444 identifier='ImmutableSetMultimap'
445 statement (ExpressionStmt)
446 expression (MethodCallExpr)
447 name (SimpleName)
448 identifier='isEqualTo'
449 scope (MethodCallExpr)
450 name (SimpleName)
451 identifier='assertThat'
452 arguments
453 argument (CastExpr)
454 expression (MethodCallExpr)
455 name (SimpleName)
456 identifier='emptyAggregationFor'
457 arguments
458 argument (MethodCallExpr)
459 name (SimpleName)
460 identifier='field'
461 arguments
462 argument (StringLiteralExpr)
463 value='arrayList'
464 type (ClassOrInterfaceType)
465 name (SimpleName)
466 identifier='ArrayList'
467 typeArguments
468 typeArgument (WildcardType)
469 arguments
470 argument (ObjectCreationExpr)
471 type (ClassOrInterfaceType)
472 name (SimpleName)
473 identifier='ArrayList'
474 statement (ExpressionStmt)
475 expression (MethodCallExpr)
476 name (SimpleName)
477 identifier='isEqualTo'
478 scope (MethodCallExpr)
479 name (SimpleName)
480 identifier='assertThat'
481 arguments
482 argument (CastExpr)
483 expression (MethodCallExpr)
484 name (SimpleName)
485 identifier='emptyAggregationFor'
486 arguments
487 argument (MethodCallExpr)
488 name (SimpleName)
489 identifier='field'
490 arguments
491 argument (StringLiteralExpr)
492 value='linkedList'
493 type (ClassOrInterfaceType)
494 name (SimpleName)
495 identifier='LinkedList'
496 typeArguments
497 typeArgument (WildcardType)
498 arguments
499 argument (ObjectCreationExpr)
500 type (ClassOrInterfaceType)
501 name (SimpleName)
502 identifier='LinkedList'
503 statement (ExpressionStmt)
504 expression (MethodCallExpr)
505 name (SimpleName)
506 identifier='isEqualTo'
507 scope (MethodCallExpr)
508 name (SimpleName)
509 identifier='assertThat'
510 arguments
511 argument (CastExpr)
512 expression (MethodCallExpr)
513 name (SimpleName)
514 identifier='emptyAggregationFor'
515 arguments
516 argument (MethodCallExpr)
517 name (SimpleName)
518 identifier='field'
519 arguments
520 argument (StringLiteralExpr)
521 value='hashSet'
522 type (ClassOrInterfaceType)
523 name (SimpleName)
524 identifier='HashSet'
525 typeArguments
526 typeArgument (WildcardType)
527 arguments
528 argument (ObjectCreationExpr)
529 type (ClassOrInterfaceType)
530 name (SimpleName)
531 identifier='HashSet'
532 statement (ExpressionStmt)
533 expression (MethodCallExpr)
534 name (SimpleName)
535 identifier='isEqualTo'
536 scope (MethodCallExpr)
537 name (SimpleName)
538 identifier='assertThat'
539 arguments
540 argument (CastExpr)
541 expression (MethodCallExpr)
542 name (SimpleName)
543 identifier='emptyAggregationFor'
544 arguments
545 argument (MethodCallExpr)
546 name (SimpleName)
547 identifier='field'
548 arguments
549 argument (StringLiteralExpr)
550 value='treeSet'
551 type (ClassOrInterfaceType)
552 name (SimpleName)
553 identifier='TreeSet'
554 typeArguments
555 typeArgument (WildcardType)
556 arguments
557 argument (ObjectCreationExpr)
558 type (ClassOrInterfaceType)
559 name (SimpleName)
560 identifier='TreeSet'
561 statement (ExpressionStmt)
562 expression (MethodCallExpr)
563 name (SimpleName)
564 identifier='isEqualTo'
565 scope (MethodCallExpr)
566 name (SimpleName)
567 identifier='assertThat'
568 arguments
569 argument (CastExpr)
570 expression (MethodCallExpr)
571 name (SimpleName)
572 identifier='emptyAggregationFor'
573 arguments
574 argument (MethodCallExpr)
575 name (SimpleName)
576 identifier='field'
577 arguments
578 argument (StringLiteralExpr)
579 value='hashMap'
580 type (ClassOrInterfaceType)
581 name (SimpleName)
582 identifier='HashMap'
583 typeArguments
584 typeArgument (WildcardType)
585 typeArgument (WildcardType)
586 arguments
587 argument (ObjectCreationExpr)
588 type (ClassOrInterfaceType)
589 name (SimpleName)
590 identifier='HashMap'
591 statement (ExpressionStmt)
592 expression (MethodCallExpr)
593 name (SimpleName)
594 identifier='isEqualTo'
595 scope (MethodCallExpr)
596 name (SimpleName)
597 identifier='assertThat'
598 arguments
599 argument (CastExpr)
600 expression (MethodCallExpr)
601 name (SimpleName)
602 identifier='emptyAggregationFor'
603 arguments
604 argument (MethodCallExpr)
605 name (SimpleName)
606 identifier='field'
607 arguments
608 argument (StringLiteralExpr)
609 value='treeMap'
610 type (ClassOrInterfaceType)
611 name (SimpleName)
612 identifier='TreeMap'
613 typeArguments
614 typeArgument (WildcardType)
615 typeArgument (WildcardType)
616 arguments
617 argument (ObjectCreationExpr)
618 type (ClassOrInterfaceType)
619 name (SimpleName)
620 identifier='TreeMap'
621 type (VoidType)
622 name (SimpleName)
623 identifier='testEmptyCollections'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
7 10
10 11
11 12
12 13
13 14
12 15
15 16
16 17
17 18
16 19
19 20
20 21
11 22
22 23
23 24
22 25
25 26
4 27
27 28
28 29
29 30
28 31
31 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
38 41
41 42
42 43
43 44
44 45
43 46
46 47
47 48
48 49
47 50
50 51
51 52
42 53
53 54
54 55
53 56
56 57
35 58
58 59
59 60
60 61
59 62
62 63
63 64
2 65
65 66
66 67
67 68
66 69
69 70
70 71
69 72
72 73
73 74
74 75
75 76
74 77
77 78
78 79
79 80
78 81
81 82
82 83
73 84
84 85
85 86
84 87
87 88
66 89
89 90
90 91
91 92
90 93
93 94
94 95
2 96
96 97
97 98
98 99
97 100
100 101
101 102
100 103
103 104
104 105
105 106
106 107
105 108
108 109
109 110
110 111
109 112
112 113
113 114
104 115
115 116
116 117
115 118
118 119
97 120
120 121
121 122
122 123
121 124
124 125
125 126
2 127
127 128
128 129
129 130
128 131
131 132
132 133
131 134
134 135
135 136
136 137
137 138
136 139
139 140
140 141
141 142
140 143
143 144
144 145
135 146
146 147
147 148
146 149
149 150
128 151
151 152
152 153
153 154
152 155
155 156
156 157
2 158
158 159
159 160
160 161
159 162
162 163
163 164
162 165
165 166
166 167
167 168
168 169
167 170
170 171
171 172
172 173
171 174
174 175
175 176
166 177
177 178
178 179
177 180
180 181
159 182
182 183
183 184
184 185
183 186
186 187
187 188
2 189
189 190
190 191
191 192
190 193
193 194
194 195
193 196
196 197
197 198
198 199
199 200
198 201
201 202
202 203
203 204
202 205
205 206
206 207
197 208
208 209
209 210
208 211
211 212
211 213
190 214
214 215
215 216
216 217
215 218
218 219
219 220
2 221
221 222
222 223
223 224
222 225
225 226
226 227
225 228
228 229
229 230
230 231
231 232
230 233
233 234
234 235
235 236
234 237
237 238
238 239
229 240
240 241
241 242
240 243
243 244
243 245
222 246
246 247
247 248
248 249
247 250
250 251
251 252
2 253
253 254
254 255
255 256
254 257
257 258
258 259
257 260
260 261
261 262
262 263
263 264
262 265
265 266
266 267
267 268
266 269
269 270
270 271
261 272
272 273
273 274
272 275
275 276
275 277
254 278
278 279
279 280
280 281
279 282
282 283
283 284
2 285
285 286
286 287
287 288
286 289
289 290
290 291
289 292
292 293
293 294
294 295
295 296
294 297
297 298
298 299
299 300
298 301
301 302
302 303
293 304
304 305
305 306
304 307
307 308
307 309
286 310
310 311
311 312
312 313
311 314
314 315
315 316
2 317
317 318
318 319
319 320
318 321
321 322
322 323
321 324
324 325
325 326
326 327
327 328
326 329
329 330
330 331
331 332
330 333
333 334
334 335
325 336
336 337
337 338
336 339
339 340
339 341
318 342
342 343
343 344
344 345
343 346
346 347
347 348
2 349
349 350
350 351
351 352
350 353
353 354
354 355
353 356
356 357
357 358
358 359
359 360
358 361
361 362
362 363
363 364
362 365
365 366
366 367
357 368
368 369
369 370
368 371
371 372
371 373
350 374
374 375
375 376
376 377
375 378
378 379
379 380
2 381
381 382
382 383
383 384
382 385
385 386
386 387
385 388
388 389
389 390
390 391
391 392
390 393
393 394
394 395
395 396
394 397
397 398
398 399
389 400
400 401
401 402
400 403
403 404
403 405
382 406
406 407
407 408
408 409
407 410
410 411
411 412
2 413
413 414
414 415
415 416
414 417
417 418
418 419
417 420
420 421
421 422
422 423
423 424
422 425
425 426
426 427
427 428
426 429
429 430
430 431
421 432
432 433
433 434
432 435
435 436
435 437
414 438
438 439
439 440
440 441
439 442
442 443
443 444
2 445
445 446
446 447
447 448
446 449
449 450
450 451
449 452
452 453
453 454
454 455
455 456
454 457
457 458
458 459
459 460
458 461
461 462
462 463
453 464
464 465
465 466
464 467
467 468
446 469
469 470
470 471
471 472
472 473
2 474
474 475
475 476
476 477
475 478
478 479
479 480
478 481
481 482
482 483
483 484
484 485
483 486
486 487
487 488
488 489
487 490
490 491
491 492
482 493
493 494
494 495
493 496
496 497
475 498
498 499
499 500
500 501
501 502
2 503
503 504
504 505
505 506
504 507
507 508
508 509
507 510
510 511
511 512
512 513
513 514
512 515
515 516
516 517
517 518
516 519
519 520
520 521
511 522
522 523
523 524
522 525
525 526
504 527
527 528
528 529
529 530
530 531
2 532
532 533
533 534
534 535
533 536
536 537
537 538
536 539
539 540
540 541
541 542
542 543
541 544
544 545
545 546
546 547
545 548
548 549
549 550
540 551
551 552
552 553
551 554
554 555
533 556
556 557
557 558
558 559
559 560
2 561
561 562
562 563
563 564
562 565
565 566
566 567
565 568
568 569
569 570
570 571
571 572
570 573
573 574
574 575
575 576
574 577
577 578
578 579
569 580
580 581
581 582
580 583
583 584
583 585
562 586
586 587
587 588
588 589
589 590
2 591
591 592
592 593
593 594
592 595
595 596
596 597
595 598
598 599
599 600
600 601
601 602
600 603
603 604
604 605
605 606
604 607
607 608
608 609
599 610
610 611
611 612
610 613
613 614
613 615
592 616
616 617
617 618
618 619
619 620
0 621
0 622
622 623

Tests the mappings from given types to specific concrete instances of an empty collection, preferring immutable types where possible.  The tests take a cast, just to ensure the type is assignable to the concrete type, since in collections various sub-types can be considered equal even if they're different concrete types.
