106
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='renderHtml'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='tree'
14 name (SimpleName)
15 identifier='asHtml'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='String'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='assertIdenticalStructure'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='tree'
27 argument (MethodCallExpr)
28 name (SimpleName)
29 identifier='html'
30 arguments
31 argument (NameExpr)
32 name (SimpleName)
33 identifier='asHtml'
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='assertIdenticalStructure'
38 arguments
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='tree'
42 argument (MethodCallExpr)
43 name (SimpleName)
44 identifier='xml'
45 arguments
46 argument (NameExpr)
47 name (SimpleName)
48 identifier='asHtml'
49 statement (ExpressionStmt)
50 expression (VariableDeclarationExpr)
51 variables
52 variable (VariableDeclarator)
53 initializer (MethodCallExpr)
54 name (SimpleName)
55 identifier='renderXml'
56 arguments
57 argument (NameExpr)
58 name (SimpleName)
59 identifier='tree'
60 name (SimpleName)
61 identifier='asXml'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='String'
65 statement (ExpressionStmt)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='assertIdenticalStructure'
69 arguments
70 argument (NameExpr)
71 name (SimpleName)
72 identifier='tree'
73 argument (MethodCallExpr)
74 name (SimpleName)
75 identifier='html'
76 arguments
77 argument (NameExpr)
78 name (SimpleName)
79 identifier='asXml'
80 statement (ExpressionStmt)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='assertIdenticalStructure'
84 arguments
85 argument (NameExpr)
86 name (SimpleName)
87 identifier='tree'
88 argument (MethodCallExpr)
89 name (SimpleName)
90 identifier='xml'
91 arguments
92 argument (NameExpr)
93 name (SimpleName)
94 identifier='asXml'
95 type (VoidType)
96 name (SimpleName)
97 identifier='robust'
98 parameters
99 parameter (Parameter)
100 isVarArgs='false'
101 name (SimpleName)
102 identifier='tree'
103 type (ClassOrInterfaceType)
104 name (SimpleName)
105 identifier='Node'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
25 26
23 27
27 28
28 29
27 30
30 31
31 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
40 41
38 42
42 43
43 44
42 45
45 46
46 47
47 48
2 49
49 50
50 51
51 52
52 53
53 54
54 55
53 56
56 57
57 58
58 59
52 60
60 61
52 62
62 63
63 64
2 65
65 66
66 67
67 68
66 69
69 70
70 71
71 72
69 73
73 74
74 75
73 76
76 77
77 78
78 79
2 80
80 81
81 82
82 83
81 84
84 85
85 86
86 87
84 88
88 89
89 90
88 91
91 92
92 93
93 94
0 95
0 96
96 97
0 98
98 99
99 100
99 101
101 102
99 103
103 104
104 105

Check that our rendering of a DOM tree has the same structure, whether the rendering is parsed as HTML or as XML. <p> Differences in text content are ignored, but differences in attributes and attribute values are significant. <p> Basically, we want to make sure that when an HTML output string is interpreted as XML or vice versa, that the misinterpretation does not turn inactive text into active script.
