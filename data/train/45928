92
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='_spec'
9 value (NameExpr)
10 name (SimpleName)
11 identifier='spec'
12 statement (ExpressionStmt)
13 expression (VariableDeclarationExpr)
14 variables
15 variable (VariableDeclarator)
16 initializer (MethodCallExpr)
17 name (SimpleName)
18 identifier='createAssertion'
19 name (SimpleName)
20 identifier='assertion'
21 type (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='Document'
24 statement (ExpressionStmt)
25 expression (MethodCallExpr)
26 name (SimpleName)
27 identifier='signMessage'
28 arguments
29 argument (MethodCallExpr)
30 name (SimpleName)
31 identifier='getDocumentElement'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='assertion'
35 argument (BinaryExpr)
36 operator='PLUS'
37 left (StringLiteralExpr)
38 value='#'
39 right (NameExpr)
40 name (SimpleName)
41 identifier='ASSERTION_ID'
42 argument (NameExpr)
43 name (SimpleName)
44 identifier='key'
45 argument (NameExpr)
46 name (SimpleName)
47 identifier='stsCert'
48 statement (ExpressionStmt)
49 expression (AssignExpr)
50 operator='ASSIGN'
51 target (NameExpr)
52 name (SimpleName)
53 identifier='samlToken'
54 value (MethodCallExpr)
55 name (SimpleName)
56 identifier='serializeToString'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='Util'
60 arguments
61 argument (NameExpr)
62 name (SimpleName)
63 identifier='assertion'
64 name (SimpleName)
65 identifier='SamlTokenCreator'
66 parameters
67 parameter (Parameter)
68 isVarArgs='false'
69 name (SimpleName)
70 identifier='spec'
71 type (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='SamlToken'
74 parameter (Parameter)
75 isVarArgs='false'
76 name (SimpleName)
77 identifier='stsCert'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='Certificate'
81 parameter (Parameter)
82 isVarArgs='false'
83 name (SimpleName)
84 identifier='key'
85 type (ClassOrInterfaceType)
86 name (SimpleName)
87 identifier='Key'
88 thrownExceptions
89 thrownException (ClassOrInterfaceType)
90 name (SimpleName)
91 identifier='ParserException'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
2 12
12 13
13 14
14 15
15 16
16 17
17 18
15 19
19 20
15 21
21 22
22 23
2 24
24 25
25 26
26 27
25 28
28 29
29 30
30 31
29 32
32 33
33 34
28 35
35 36
35 37
37 38
35 39
39 40
40 41
28 42
42 43
43 44
28 45
45 46
46 47
2 48
48 49
49 50
49 51
51 52
52 53
49 54
54 55
55 56
54 57
57 58
58 59
54 60
60 61
61 62
62 63
0 64
64 65
0 66
66 67
67 68
67 69
69 70
67 71
71 72
72 73
66 74
74 75
74 76
76 77
74 78
78 79
79 80
66 81
81 82
81 83
83 84
81 85
85 86
86 87
0 88
88 89
89 90
90 91

Create new SAML token. Needed data: token specification, certificate and private key to sign the new token.
