68
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ProximalGradient'
11 name (SimpleName)
12 identifier='pg'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='ProximalGradient'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setParams'
20 arguments
21 argument (ObjectCreationExpr)
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='MGMParams'
25 arguments
26 argument (MethodCallExpr)
27 name (SimpleName)
28 identifier='learnBackTrack'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='pg'
32 arguments
33 argument (ThisExpr)
34 argument (MethodCallExpr)
35 name (SimpleName)
36 identifier='toMatrix1D'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='params'
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='epsilon'
43 argument (NameExpr)
44 name (SimpleName)
45 identifier='iterLimit'
46 argument (NameExpr)
47 name (SimpleName)
48 identifier='p'
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='lsum'
52 type (VoidType)
53 name (SimpleName)
54 identifier='learn'
55 parameters
56 parameter (Parameter)
57 isVarArgs='false'
58 name (SimpleName)
59 identifier='epsilon'
60 type (PrimitiveType)
61 type='DOUBLE'
62 parameter (Parameter)
63 isVarArgs='false'
64 name (SimpleName)
65 identifier='iterLimit'
66 type (PrimitiveType)
67 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
22 23
23 24
21 25
25 26
26 27
27 28
26 29
29 30
30 31
26 32
32 33
32 34
34 35
35 36
34 37
37 38
38 39
32 40
40 41
41 42
32 43
43 44
44 45
25 46
46 47
47 48
25 49
49 50
50 51
0 52
0 53
53 54
0 55
55 56
56 57
56 58
58 59
56 60
60 61
55 62
62 63
62 64
64 65
62 66
66 67

Learn MGM traditional way with objective function tolerance. Recommended for inference applications that need accurate pseudolikelihood
