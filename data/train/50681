102
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='clear'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='m_tuples'
10 statement (ExpressionStmt)
11 expression (AssignExpr)
12 operator='ASSIGN'
13 target (NameExpr)
14 name (SimpleName)
15 identifier='m_cmp'
16 value (NameExpr)
17 name (SimpleName)
18 identifier='c'
19 statement (WhileStmt)
20 body (BlockStmt)
21 statements
22 statement (ExpressionStmt)
23 expression (VariableDeclarationExpr)
24 variables
25 variable (VariableDeclarator)
26 initializer (CastExpr)
27 expression (MethodCallExpr)
28 name (SimpleName)
29 identifier='next'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='iter'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='Tuple'
36 name (SimpleName)
37 identifier='t'
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='Tuple'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='add'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='m_tuples'
48 arguments
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='t'
52 condition (MethodCallExpr)
53 name (SimpleName)
54 identifier='hasNext'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='iter'
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='sort'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='Collections'
65 arguments
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='m_tuples'
69 argument (NameExpr)
70 name (SimpleName)
71 identifier='m_cmp'
72 statement (ExpressionStmt)
73 expression (AssignExpr)
74 operator='ASSIGN'
75 target (NameExpr)
76 name (SimpleName)
77 identifier='m_iter'
78 value (MethodCallExpr)
79 name (SimpleName)
80 identifier='iterator'
81 scope (NameExpr)
82 name (SimpleName)
83 identifier='m_tuples'
84 type (VoidType)
85 name (SimpleName)
86 identifier='init'
87 parameters
88 parameter (Parameter)
89 isVarArgs='false'
90 name (SimpleName)
91 identifier='iter'
92 type (ClassOrInterfaceType)
93 name (SimpleName)
94 identifier='Iterator'
95 parameter (Parameter)
96 isVarArgs='false'
97 name (SimpleName)
98 identifier='c'
99 type (ClassOrInterfaceType)
100 name (SimpleName)
101 identifier='Comparator'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
11 13
13 14
14 15
11 16
16 17
17 18
2 19
19 20
20 21
21 22
22 23
23 24
24 25
25 26
26 27
27 28
28 29
27 30
30 31
31 32
26 33
33 34
34 35
25 36
36 37
25 38
38 39
39 40
21 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
50 51
19 52
52 53
53 54
52 55
55 56
56 57
2 58
58 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
65 69
69 70
70 71
2 72
72 73
73 74
73 75
75 76
76 77
73 78
78 79
79 80
78 81
81 82
82 83
0 84
0 85
85 86
0 87
87 88
88 89
88 90
90 91
88 92
92 93
93 94
87 95
95 96
95 97
97 98
95 99
99 100
100 101

Initialize this iterator for the given source iterator and comparator.
