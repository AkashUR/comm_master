76
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertNotNull'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='key1'
11 statement (ExpressionStmt)
12 expression (MethodCallExpr)
13 name (SimpleName)
14 identifier='assertNotNull'
15 arguments
16 argument (NameExpr)
17 name (SimpleName)
18 identifier='key2'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='assertEquals'
23 arguments
24 argument (MethodCallExpr)
25 name (SimpleName)
26 identifier='hashCode'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='key1'
30 argument (MethodCallExpr)
31 name (SimpleName)
32 identifier='hashCode'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='key2'
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='assertEquals'
40 arguments
41 argument (NameExpr)
42 name (SimpleName)
43 identifier='key1'
44 argument (NameExpr)
45 name (SimpleName)
46 identifier='key2'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='assertEquals'
51 arguments
52 argument (NameExpr)
53 name (SimpleName)
54 identifier='key2'
55 argument (NameExpr)
56 name (SimpleName)
57 identifier='key1'
58 type (VoidType)
59 name (SimpleName)
60 identifier='assertKeyEquals'
61 parameters
62 parameter (Parameter)
63 isVarArgs='false'
64 name (SimpleName)
65 identifier='key1'
66 type (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='QueryResultKey'
69 parameter (Parameter)
70 isVarArgs='false'
71 name (SimpleName)
72 identifier='key2'
73 type (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='QueryResultKey'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
2 11
11 12
12 13
13 14
12 15
15 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
25 26
24 27
27 28
28 29
23 30
30 31
31 32
30 33
33 34
34 35
2 36
36 37
37 38
38 39
37 40
40 41
41 42
42 43
40 44
44 45
45 46
2 47
47 48
48 49
49 50
48 51
51 52
52 53
53 54
51 55
55 56
56 57
0 58
0 59
59 60
0 61
61 62
62 63
62 64
64 65
62 66
66 67
67 68
61 69
69 70
69 71
71 72
69 73
73 74
74 75

does bi-directional equality check as well as verifying hashCode
