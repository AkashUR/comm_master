175
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='CharacterRunAutomaton'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='toAutomaton'
15 scope (ObjectCreationExpr)
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='RegExp'
19 arguments
20 argument (StringLiteralExpr)
21 value='[A-Z][a-z]*'
22 name (SimpleName)
23 identifier='single'
24 type (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='CharacterRunAutomaton'
27 statement (ExpressionStmt)
28 expression (VariableDeclarationExpr)
29 variables
30 variable (VariableDeclarator)
31 initializer (ObjectCreationExpr)
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='MockAnalyzer'
35 arguments
36 argument (MethodCallExpr)
37 name (SimpleName)
38 identifier='random'
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='single'
42 argument (BooleanLiteralExpr)
43 value='false'
44 name (SimpleName)
45 identifier='a'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='Analyzer'
49 statement (ExpressionStmt)
50 expression (MethodCallExpr)
51 name (SimpleName)
52 identifier='assertAnalyzesTo'
53 arguments
54 argument (NameExpr)
55 name (SimpleName)
56 identifier='a'
57 argument (StringLiteralExpr)
58 value='FooBarBAZ'
59 argument (ArrayCreationExpr)
60 elementType (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='String'
63 initializer (ArrayInitializerExpr)
64 values
65 value (StringLiteralExpr)
66 value='Foo'
67 value (StringLiteralExpr)
68 value='Bar'
69 value (StringLiteralExpr)
70 value='B'
71 value (StringLiteralExpr)
72 value='A'
73 value (StringLiteralExpr)
74 value='Z'
75 levels
76 level (ArrayCreationLevel)
77 argument (ArrayCreationExpr)
78 elementType (PrimitiveType)
79 type='INT'
80 initializer (ArrayInitializerExpr)
81 values
82 value (IntegerLiteralExpr)
83 value='0'
84 value (IntegerLiteralExpr)
85 value='3'
86 value (IntegerLiteralExpr)
87 value='6'
88 value (IntegerLiteralExpr)
89 value='7'
90 value (IntegerLiteralExpr)
91 value='8'
92 levels
93 level (ArrayCreationLevel)
94 argument (ArrayCreationExpr)
95 elementType (PrimitiveType)
96 type='INT'
97 initializer (ArrayInitializerExpr)
98 values
99 value (IntegerLiteralExpr)
100 value='3'
101 value (IntegerLiteralExpr)
102 value='6'
103 value (IntegerLiteralExpr)
104 value='7'
105 value (IntegerLiteralExpr)
106 value='8'
107 value (IntegerLiteralExpr)
108 value='9'
109 levels
110 level (ArrayCreationLevel)
111 statement (ExpressionStmt)
112 expression (MethodCallExpr)
113 name (SimpleName)
114 identifier='assertAnalyzesTo'
115 arguments
116 argument (NameExpr)
117 name (SimpleName)
118 identifier='a'
119 argument (StringLiteralExpr)
120 value='aFooBar'
121 argument (ArrayCreationExpr)
122 elementType (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='String'
125 initializer (ArrayInitializerExpr)
126 values
127 value (StringLiteralExpr)
128 value='Foo'
129 value (StringLiteralExpr)
130 value='Bar'
131 levels
132 level (ArrayCreationLevel)
133 argument (ArrayCreationExpr)
134 elementType (PrimitiveType)
135 type='INT'
136 initializer (ArrayInitializerExpr)
137 values
138 value (IntegerLiteralExpr)
139 value='1'
140 value (IntegerLiteralExpr)
141 value='4'
142 levels
143 level (ArrayCreationLevel)
144 argument (ArrayCreationExpr)
145 elementType (PrimitiveType)
146 type='INT'
147 initializer (ArrayInitializerExpr)
148 values
149 value (IntegerLiteralExpr)
150 value='4'
151 value (IntegerLiteralExpr)
152 value='7'
153 levels
154 level (ArrayCreationLevel)
155 statement (ExpressionStmt)
156 expression (MethodCallExpr)
157 name (SimpleName)
158 identifier='checkRandomData'
159 arguments
160 argument (MethodCallExpr)
161 name (SimpleName)
162 identifier='random'
163 argument (NameExpr)
164 name (SimpleName)
165 identifier='a'
166 argument (IntegerLiteralExpr)
167 value='100'
168 type (VoidType)
169 name (SimpleName)
170 identifier='testUppercase'
171 thrownExceptions
172 thrownException (ClassOrInterfaceType)
173 name (SimpleName)
174 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
12 15
15 16
16 17
17 18
15 19
19 20
20 21
6 22
22 23
6 24
24 25
25 26
2 27
27 28
28 29
29 30
30 31
31 32
32 33
33 34
31 35
35 36
36 37
37 38
35 39
39 40
40 41
35 42
42 43
30 44
44 45
30 46
46 47
47 48
2 49
49 50
50 51
51 52
50 53
53 54
54 55
55 56
53 57
57 58
53 59
59 60
60 61
61 62
59 63
63 64
64 65
65 66
64 67
67 68
64 69
69 70
64 71
71 72
64 73
73 74
59 75
75 76
53 77
77 78
78 79
77 80
80 81
81 82
82 83
81 84
84 85
81 86
86 87
81 88
88 89
81 90
90 91
77 92
92 93
53 94
94 95
95 96
94 97
97 98
98 99
99 100
98 101
101 102
98 103
103 104
98 105
105 106
98 107
107 108
94 109
109 110
2 111
111 112
112 113
113 114
112 115
115 116
116 117
117 118
115 119
119 120
115 121
121 122
122 123
123 124
121 125
125 126
126 127
127 128
126 129
129 130
121 131
131 132
115 133
133 134
134 135
133 136
136 137
137 138
138 139
137 140
140 141
133 142
142 143
115 144
144 145
145 146
144 147
147 148
148 149
149 150
148 151
151 152
144 153
153 154
2 155
155 156
156 157
157 158
156 159
159 160
160 161
161 162
159 163
163 164
164 165
159 166
166 167
0 168
0 169
169 170
0 171
171 172
172 173
173 174

Test a configuration where word starts with one uppercase
