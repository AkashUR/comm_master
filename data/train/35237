988
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='createMock'
10 arguments
11 argument (ClassExpr)
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='IDeviceListener'
15 name (SimpleName)
16 identifier='mockListener'
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='IDeviceListener'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='anyTimes'
24 scope (MethodCallExpr)
25 name (SimpleName)
26 identifier='andReturn'
27 scope (MethodCallExpr)
28 name (SimpleName)
29 identifier='expect'
30 arguments
31 argument (MethodCallExpr)
32 name (SimpleName)
33 identifier='getName'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='mockListener'
37 arguments
38 argument (StringLiteralExpr)
39 value='mockListener'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='atLeastOnce'
44 scope (MethodCallExpr)
45 name (SimpleName)
46 identifier='andReturn'
47 scope (MethodCallExpr)
48 name (SimpleName)
49 identifier='expect'
50 arguments
51 argument (MethodCallExpr)
52 name (SimpleName)
53 identifier='isCallbackOrderingPostreq'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='mockListener'
57 arguments
58 argument (CastExpr)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='anyObject'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='String'
65 argument (CastExpr)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='anyObject'
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='String'
72 arguments
73 argument (BooleanLiteralExpr)
74 value='false'
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='atLeastOnce'
79 scope (MethodCallExpr)
80 name (SimpleName)
81 identifier='andReturn'
82 scope (MethodCallExpr)
83 name (SimpleName)
84 identifier='expect'
85 arguments
86 argument (MethodCallExpr)
87 name (SimpleName)
88 identifier='isCallbackOrderingPrereq'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='mockListener'
92 arguments
93 argument (CastExpr)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='anyObject'
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='String'
100 argument (CastExpr)
101 expression (MethodCallExpr)
102 name (SimpleName)
103 identifier='anyObject'
104 type (ClassOrInterfaceType)
105 name (SimpleName)
106 identifier='String'
107 arguments
108 argument (BooleanLiteralExpr)
109 value='false'
110 statement (ExpressionStmt)
111 expression (VariableDeclarationExpr)
112 variables
113 variable (VariableDeclarator)
114 initializer (MethodCallExpr)
115 name (SimpleName)
116 identifier='createMock'
117 arguments
118 argument (ClassExpr)
119 type (ClassOrInterfaceType)
120 name (SimpleName)
121 identifier='ITopologyService'
122 name (SimpleName)
123 identifier='mockTopology'
124 type (ClassOrInterfaceType)
125 name (SimpleName)
126 identifier='ITopologyService'
127 statement (ExpressionStmt)
128 expression (MethodCallExpr)
129 name (SimpleName)
130 identifier='anyTimes'
131 scope (MethodCallExpr)
132 name (SimpleName)
133 identifier='andReturn'
134 scope (MethodCallExpr)
135 name (SimpleName)
136 identifier='expect'
137 arguments
138 argument (MethodCallExpr)
139 name (SimpleName)
140 identifier='isAttachmentPointPort'
141 scope (NameExpr)
142 name (SimpleName)
143 identifier='mockTopology'
144 arguments
145 argument (MethodCallExpr)
146 name (SimpleName)
147 identifier='anyLong'
148 argument (MethodCallExpr)
149 name (SimpleName)
150 identifier='anyShort'
151 arguments
152 argument (BooleanLiteralExpr)
153 value='true'
154 statement (ExpressionStmt)
155 expression (MethodCallExpr)
156 name (SimpleName)
157 identifier='anyTimes'
158 scope (MethodCallExpr)
159 name (SimpleName)
160 identifier='andReturn'
161 scope (MethodCallExpr)
162 name (SimpleName)
163 identifier='expect'
164 arguments
165 argument (MethodCallExpr)
166 name (SimpleName)
167 identifier='isBroadcastDomainPort'
168 scope (NameExpr)
169 name (SimpleName)
170 identifier='mockTopology'
171 arguments
172 argument (LongLiteralExpr)
173 value='1L'
174 argument (CastExpr)
175 expression (IntegerLiteralExpr)
176 value='1'
177 type (PrimitiveType)
178 type='SHORT'
179 arguments
180 argument (BooleanLiteralExpr)
181 value='false'
182 statement (ExpressionStmt)
183 expression (MethodCallExpr)
184 name (SimpleName)
185 identifier='anyTimes'
186 scope (MethodCallExpr)
187 name (SimpleName)
188 identifier='andReturn'
189 scope (MethodCallExpr)
190 name (SimpleName)
191 identifier='expect'
192 arguments
193 argument (MethodCallExpr)
194 name (SimpleName)
195 identifier='isBroadcastDomainPort'
196 scope (NameExpr)
197 name (SimpleName)
198 identifier='mockTopology'
199 arguments
200 argument (LongLiteralExpr)
201 value='5L'
202 argument (CastExpr)
203 expression (IntegerLiteralExpr)
204 value='1'
205 type (PrimitiveType)
206 type='SHORT'
207 arguments
208 argument (BooleanLiteralExpr)
209 value='false'
210 statement (ExpressionStmt)
211 expression (MethodCallExpr)
212 name (SimpleName)
213 identifier='anyTimes'
214 scope (MethodCallExpr)
215 name (SimpleName)
216 identifier='andReturn'
217 scope (MethodCallExpr)
218 name (SimpleName)
219 identifier='expect'
220 arguments
221 argument (MethodCallExpr)
222 name (SimpleName)
223 identifier='getL2DomainId'
224 scope (NameExpr)
225 name (SimpleName)
226 identifier='mockTopology'
227 arguments
228 argument (LongLiteralExpr)
229 value='1L'
230 arguments
231 argument (LongLiteralExpr)
232 value='1L'
233 statement (ExpressionStmt)
234 expression (MethodCallExpr)
235 name (SimpleName)
236 identifier='anyTimes'
237 scope (MethodCallExpr)
238 name (SimpleName)
239 identifier='andReturn'
240 scope (MethodCallExpr)
241 name (SimpleName)
242 identifier='expect'
243 arguments
244 argument (MethodCallExpr)
245 name (SimpleName)
246 identifier='getL2DomainId'
247 scope (NameExpr)
248 name (SimpleName)
249 identifier='mockTopology'
250 arguments
251 argument (LongLiteralExpr)
252 value='5L'
253 arguments
254 argument (LongLiteralExpr)
255 value='5L'
256 statement (ExpressionStmt)
257 expression (MethodCallExpr)
258 name (SimpleName)
259 identifier='anyTimes'
260 scope (MethodCallExpr)
261 name (SimpleName)
262 identifier='andReturn'
263 scope (MethodCallExpr)
264 name (SimpleName)
265 identifier='expect'
266 arguments
267 argument (MethodCallExpr)
268 name (SimpleName)
269 identifier='isConsistent'
270 scope (NameExpr)
271 name (SimpleName)
272 identifier='mockTopology'
273 arguments
274 argument (LongLiteralExpr)
275 value='1L'
276 argument (CastExpr)
277 expression (IntegerLiteralExpr)
278 value='1'
279 type (PrimitiveType)
280 type='SHORT'
281 argument (LongLiteralExpr)
282 value='5L'
283 argument (CastExpr)
284 expression (IntegerLiteralExpr)
285 value='1'
286 type (PrimitiveType)
287 type='SHORT'
288 arguments
289 argument (BooleanLiteralExpr)
290 value='false'
291 statement (ExpressionStmt)
292 expression (VariableDeclarationExpr)
293 variables
294 variable (VariableDeclarator)
295 initializer (ObjectCreationExpr)
296 type (ClassOrInterfaceType)
297 name (SimpleName)
298 identifier='Date'
299 name (SimpleName)
300 identifier='topologyUpdateTime'
301 type (ClassOrInterfaceType)
302 name (SimpleName)
303 identifier='Date'
304 statement (ExpressionStmt)
305 expression (MethodCallExpr)
306 name (SimpleName)
307 identifier='anyTimes'
308 scope (MethodCallExpr)
309 name (SimpleName)
310 identifier='andReturn'
311 scope (MethodCallExpr)
312 name (SimpleName)
313 identifier='expect'
314 arguments
315 argument (MethodCallExpr)
316 name (SimpleName)
317 identifier='getLastUpdateTime'
318 scope (NameExpr)
319 name (SimpleName)
320 identifier='mockTopology'
321 arguments
322 argument (NameExpr)
323 name (SimpleName)
324 identifier='topologyUpdateTime'
325 statement (ExpressionStmt)
326 expression (MethodCallExpr)
327 name (SimpleName)
328 identifier='replay'
329 arguments
330 argument (NameExpr)
331 name (SimpleName)
332 identifier='mockTopology'
333 statement (ExpressionStmt)
334 expression (AssignExpr)
335 operator='ASSIGN'
336 target (FieldAccessExpr)
337 name (SimpleName)
338 identifier='topology'
339 scope (NameExpr)
340 name (SimpleName)
341 identifier='deviceManager'
342 value (NameExpr)
343 name (SimpleName)
344 identifier='mockTopology'
345 statement (ExpressionStmt)
346 expression (VariableDeclarationExpr)
347 variables
348 variable (VariableDeclarator)
349 initializer (MethodCallExpr)
350 name (SimpleName)
351 identifier='getInstance'
352 scope (NameExpr)
353 name (SimpleName)
354 identifier='Calendar'
355 name (SimpleName)
356 identifier='c'
357 type (ClassOrInterfaceType)
358 name (SimpleName)
359 identifier='Calendar'
360 statement (ExpressionStmt)
361 expression (VariableDeclarationExpr)
362 variables
363 variable (VariableDeclarator)
364 initializer (ObjectCreationExpr)
365 type (ClassOrInterfaceType)
366 name (SimpleName)
367 identifier='Entity'
368 arguments
369 argument (LongLiteralExpr)
370 value='1L'
371 argument (NullLiteralExpr)
372 argument (IntegerLiteralExpr)
373 value='2'
374 argument (LongLiteralExpr)
375 value='1L'
376 argument (IntegerLiteralExpr)
377 value='1'
378 argument (MethodCallExpr)
379 name (SimpleName)
380 identifier='getTime'
381 scope (NameExpr)
382 name (SimpleName)
383 identifier='c'
384 name (SimpleName)
385 identifier='entity1'
386 type (ClassOrInterfaceType)
387 name (SimpleName)
388 identifier='Entity'
389 statement (ExpressionStmt)
390 expression (MethodCallExpr)
391 name (SimpleName)
392 identifier='add'
393 scope (NameExpr)
394 name (SimpleName)
395 identifier='c'
396 arguments
397 argument (FieldAccessExpr)
398 name (SimpleName)
399 identifier='MILLISECOND'
400 scope (NameExpr)
401 name (SimpleName)
402 identifier='Calendar'
403 argument (BinaryExpr)
404 operator='MINUS'
405 left (UnaryExpr)
406 operator='MINUS'
407 expression (FieldAccessExpr)
408 name (SimpleName)
409 identifier='ENTITY_TIMEOUT'
410 scope (NameExpr)
411 name (SimpleName)
412 identifier='DeviceManagerImpl'
413 right (IntegerLiteralExpr)
414 value='1'
415 statement (ExpressionStmt)
416 expression (VariableDeclarationExpr)
417 variables
418 variable (VariableDeclarator)
419 initializer (ObjectCreationExpr)
420 type (ClassOrInterfaceType)
421 name (SimpleName)
422 identifier='Entity'
423 arguments
424 argument (LongLiteralExpr)
425 value='1L'
426 argument (NullLiteralExpr)
427 argument (IntegerLiteralExpr)
428 value='1'
429 argument (LongLiteralExpr)
430 value='5L'
431 argument (IntegerLiteralExpr)
432 value='1'
433 argument (MethodCallExpr)
434 name (SimpleName)
435 identifier='getTime'
436 scope (NameExpr)
437 name (SimpleName)
438 identifier='c'
439 name (SimpleName)
440 identifier='entity2'
441 type (ClassOrInterfaceType)
442 name (SimpleName)
443 identifier='Entity'
444 statement (ExpressionStmt)
445 expression (MethodCallExpr)
446 name (SimpleName)
447 identifier='learnDeviceByEntity'
448 scope (NameExpr)
449 name (SimpleName)
450 identifier='deviceManager'
451 arguments
452 argument (NameExpr)
453 name (SimpleName)
454 identifier='entity1'
455 statement (ExpressionStmt)
456 expression (VariableDeclarationExpr)
457 variables
458 variable (VariableDeclarator)
459 initializer (MethodCallExpr)
460 name (SimpleName)
461 identifier='learnDeviceByEntity'
462 scope (NameExpr)
463 name (SimpleName)
464 identifier='deviceManager'
465 arguments
466 argument (NameExpr)
467 name (SimpleName)
468 identifier='entity2'
469 name (SimpleName)
470 identifier='d'
471 type (ClassOrInterfaceType)
472 name (SimpleName)
473 identifier='IDevice'
474 statement (ExpressionStmt)
475 expression (MethodCallExpr)
476 name (SimpleName)
477 identifier='assertArrayEquals'
478 arguments
479 argument (ArrayCreationExpr)
480 elementType (ClassOrInterfaceType)
481 name (SimpleName)
482 identifier='Integer'
483 initializer (ArrayInitializerExpr)
484 values
485 value (IntegerLiteralExpr)
486 value='1'
487 value (IntegerLiteralExpr)
488 value='2'
489 levels
490 level (ArrayCreationLevel)
491 argument (MethodCallExpr)
492 name (SimpleName)
493 identifier='getIPv4Addresses'
494 scope (NameExpr)
495 name (SimpleName)
496 identifier='d'
497 statement (ExpressionStmt)
498 expression (MethodCallExpr)
499 name (SimpleName)
500 identifier='assertArrayEquals'
501 arguments
502 argument (ArrayCreationExpr)
503 elementType (ClassOrInterfaceType)
504 name (SimpleName)
505 identifier='SwitchPort'
506 initializer (ArrayInitializerExpr)
507 values
508 value (ObjectCreationExpr)
509 type (ClassOrInterfaceType)
510 name (SimpleName)
511 identifier='SwitchPort'
512 arguments
513 argument (LongLiteralExpr)
514 value='1L'
515 argument (IntegerLiteralExpr)
516 value='1'
517 value (ObjectCreationExpr)
518 type (ClassOrInterfaceType)
519 name (SimpleName)
520 identifier='SwitchPort'
521 arguments
522 argument (LongLiteralExpr)
523 value='5L'
524 argument (IntegerLiteralExpr)
525 value='1'
526 levels
527 level (ArrayCreationLevel)
528 argument (MethodCallExpr)
529 name (SimpleName)
530 identifier='getAttachmentPoints'
531 scope (NameExpr)
532 name (SimpleName)
533 identifier='d'
534 statement (ExpressionStmt)
535 expression (VariableDeclarationExpr)
536 variables
537 variable (VariableDeclarator)
538 initializer (MethodCallExpr)
539 name (SimpleName)
540 identifier='queryClassDevices'
541 scope (NameExpr)
542 name (SimpleName)
543 identifier='deviceManager'
544 arguments
545 argument (MethodCallExpr)
546 name (SimpleName)
547 identifier='getEntityClass'
548 scope (NameExpr)
549 name (SimpleName)
550 identifier='d'
551 argument (NullLiteralExpr)
552 argument (NullLiteralExpr)
553 argument (IntegerLiteralExpr)
554 value='1'
555 argument (NullLiteralExpr)
556 argument (NullLiteralExpr)
557 name (SimpleName)
558 identifier='diter'
559 type (ClassOrInterfaceType)
560 name (SimpleName)
561 identifier='Iterator'
562 typeArguments
563 typeArgument (WildcardType)
564 extendedType (ClassOrInterfaceType)
565 name (SimpleName)
566 identifier='IDevice'
567 statement (ExpressionStmt)
568 expression (MethodCallExpr)
569 name (SimpleName)
570 identifier='assertTrue'
571 arguments
572 argument (MethodCallExpr)
573 name (SimpleName)
574 identifier='hasNext'
575 scope (NameExpr)
576 name (SimpleName)
577 identifier='diter'
578 statement (ExpressionStmt)
579 expression (MethodCallExpr)
580 name (SimpleName)
581 identifier='assertEquals'
582 arguments
583 argument (MethodCallExpr)
584 name (SimpleName)
585 identifier='getDeviceKey'
586 scope (NameExpr)
587 name (SimpleName)
588 identifier='d'
589 argument (MethodCallExpr)
590 name (SimpleName)
591 identifier='getDeviceKey'
592 scope (MethodCallExpr)
593 name (SimpleName)
594 identifier='next'
595 scope (NameExpr)
596 name (SimpleName)
597 identifier='diter'
598 statement (ExpressionStmt)
599 expression (AssignExpr)
600 operator='ASSIGN'
601 target (NameExpr)
602 name (SimpleName)
603 identifier='diter'
604 value (MethodCallExpr)
605 name (SimpleName)
606 identifier='queryClassDevices'
607 scope (NameExpr)
608 name (SimpleName)
609 identifier='deviceManager'
610 arguments
611 argument (MethodCallExpr)
612 name (SimpleName)
613 identifier='getEntityClass'
614 scope (NameExpr)
615 name (SimpleName)
616 identifier='d'
617 argument (NullLiteralExpr)
618 argument (NullLiteralExpr)
619 argument (IntegerLiteralExpr)
620 value='2'
621 argument (NullLiteralExpr)
622 argument (NullLiteralExpr)
623 statement (ExpressionStmt)
624 expression (MethodCallExpr)
625 name (SimpleName)
626 identifier='assertTrue'
627 arguments
628 argument (MethodCallExpr)
629 name (SimpleName)
630 identifier='hasNext'
631 scope (NameExpr)
632 name (SimpleName)
633 identifier='diter'
634 statement (ExpressionStmt)
635 expression (MethodCallExpr)
636 name (SimpleName)
637 identifier='assertEquals'
638 arguments
639 argument (MethodCallExpr)
640 name (SimpleName)
641 identifier='getDeviceKey'
642 scope (NameExpr)
643 name (SimpleName)
644 identifier='d'
645 argument (MethodCallExpr)
646 name (SimpleName)
647 identifier='getDeviceKey'
648 scope (MethodCallExpr)
649 name (SimpleName)
650 identifier='next'
651 scope (NameExpr)
652 name (SimpleName)
653 identifier='diter'
654 statement (ExpressionStmt)
655 expression (MethodCallExpr)
656 name (SimpleName)
657 identifier='replay'
658 arguments
659 argument (NameExpr)
660 name (SimpleName)
661 identifier='mockListener'
662 statement (ExpressionStmt)
663 expression (MethodCallExpr)
664 name (SimpleName)
665 identifier='addListener'
666 scope (NameExpr)
667 name (SimpleName)
668 identifier='deviceManager'
669 arguments
670 argument (NameExpr)
671 name (SimpleName)
672 identifier='mockListener'
673 statement (ExpressionStmt)
674 expression (MethodCallExpr)
675 name (SimpleName)
676 identifier='verify'
677 arguments
678 argument (NameExpr)
679 name (SimpleName)
680 identifier='mockListener'
681 statement (ExpressionStmt)
682 expression (MethodCallExpr)
683 name (SimpleName)
684 identifier='reset'
685 arguments
686 argument (NameExpr)
687 name (SimpleName)
688 identifier='mockListener'
689 statement (ExpressionStmt)
690 expression (MethodCallExpr)
691 name (SimpleName)
692 identifier='deviceIPV4AddrChanged'
693 scope (NameExpr)
694 name (SimpleName)
695 identifier='mockListener'
696 arguments
697 argument (MethodCallExpr)
698 name (SimpleName)
699 identifier='isA'
700 arguments
701 argument (ClassExpr)
702 type (ClassOrInterfaceType)
703 name (SimpleName)
704 identifier='IDevice'
705 statement (ExpressionStmt)
706 expression (MethodCallExpr)
707 name (SimpleName)
708 identifier='replay'
709 arguments
710 argument (NameExpr)
711 name (SimpleName)
712 identifier='mockListener'
713 statement (ExpressionStmt)
714 expression (MethodCallExpr)
715 name (SimpleName)
716 identifier='reschedule'
717 scope (FieldAccessExpr)
718 name (SimpleName)
719 identifier='entityCleanupTask'
720 scope (NameExpr)
721 name (SimpleName)
722 identifier='deviceManager'
723 arguments
724 argument (IntegerLiteralExpr)
725 value='0'
726 argument (NullLiteralExpr)
727 statement (ExpressionStmt)
728 expression (AssignExpr)
729 operator='ASSIGN'
730 target (NameExpr)
731 name (SimpleName)
732 identifier='d'
733 value (MethodCallExpr)
734 name (SimpleName)
735 identifier='getDevice'
736 scope (NameExpr)
737 name (SimpleName)
738 identifier='deviceManager'
739 arguments
740 argument (MethodCallExpr)
741 name (SimpleName)
742 identifier='getDeviceKey'
743 scope (NameExpr)
744 name (SimpleName)
745 identifier='d'
746 statement (ExpressionStmt)
747 expression (MethodCallExpr)
748 name (SimpleName)
749 identifier='assertArrayEquals'
750 arguments
751 argument (ArrayCreationExpr)
752 elementType (ClassOrInterfaceType)
753 name (SimpleName)
754 identifier='Integer'
755 initializer (ArrayInitializerExpr)
756 values
757 value (IntegerLiteralExpr)
758 value='2'
759 levels
760 level (ArrayCreationLevel)
761 argument (MethodCallExpr)
762 name (SimpleName)
763 identifier='getIPv4Addresses'
764 scope (NameExpr)
765 name (SimpleName)
766 identifier='d'
767 statement (ExpressionStmt)
768 expression (MethodCallExpr)
769 name (SimpleName)
770 identifier='assertArrayEquals'
771 arguments
772 argument (ArrayCreationExpr)
773 elementType (ClassOrInterfaceType)
774 name (SimpleName)
775 identifier='SwitchPort'
776 initializer (ArrayInitializerExpr)
777 values
778 value (ObjectCreationExpr)
779 type (ClassOrInterfaceType)
780 name (SimpleName)
781 identifier='SwitchPort'
782 arguments
783 argument (LongLiteralExpr)
784 value='1L'
785 argument (IntegerLiteralExpr)
786 value='1'
787 value (ObjectCreationExpr)
788 type (ClassOrInterfaceType)
789 name (SimpleName)
790 identifier='SwitchPort'
791 arguments
792 argument (LongLiteralExpr)
793 value='5L'
794 argument (IntegerLiteralExpr)
795 value='1'
796 levels
797 level (ArrayCreationLevel)
798 argument (MethodCallExpr)
799 name (SimpleName)
800 identifier='getAttachmentPoints'
801 scope (NameExpr)
802 name (SimpleName)
803 identifier='d'
804 statement (ExpressionStmt)
805 expression (AssignExpr)
806 operator='ASSIGN'
807 target (NameExpr)
808 name (SimpleName)
809 identifier='diter'
810 value (MethodCallExpr)
811 name (SimpleName)
812 identifier='queryClassDevices'
813 scope (NameExpr)
814 name (SimpleName)
815 identifier='deviceManager'
816 arguments
817 argument (MethodCallExpr)
818 name (SimpleName)
819 identifier='getEntityClass'
820 scope (NameExpr)
821 name (SimpleName)
822 identifier='d'
823 argument (NullLiteralExpr)
824 argument (NullLiteralExpr)
825 argument (IntegerLiteralExpr)
826 value='2'
827 argument (NullLiteralExpr)
828 argument (NullLiteralExpr)
829 statement (ExpressionStmt)
830 expression (MethodCallExpr)
831 name (SimpleName)
832 identifier='assertTrue'
833 arguments
834 argument (MethodCallExpr)
835 name (SimpleName)
836 identifier='hasNext'
837 scope (NameExpr)
838 name (SimpleName)
839 identifier='diter'
840 statement (ExpressionStmt)
841 expression (MethodCallExpr)
842 name (SimpleName)
843 identifier='assertEquals'
844 arguments
845 argument (MethodCallExpr)
846 name (SimpleName)
847 identifier='getDeviceKey'
848 scope (NameExpr)
849 name (SimpleName)
850 identifier='d'
851 argument (MethodCallExpr)
852 name (SimpleName)
853 identifier='getDeviceKey'
854 scope (MethodCallExpr)
855 name (SimpleName)
856 identifier='next'
857 scope (NameExpr)
858 name (SimpleName)
859 identifier='diter'
860 statement (ExpressionStmt)
861 expression (AssignExpr)
862 operator='ASSIGN'
863 target (NameExpr)
864 name (SimpleName)
865 identifier='diter'
866 value (MethodCallExpr)
867 name (SimpleName)
868 identifier='queryClassDevices'
869 scope (NameExpr)
870 name (SimpleName)
871 identifier='deviceManager'
872 arguments
873 argument (MethodCallExpr)
874 name (SimpleName)
875 identifier='getEntityClass'
876 scope (NameExpr)
877 name (SimpleName)
878 identifier='d'
879 argument (NullLiteralExpr)
880 argument (NullLiteralExpr)
881 argument (IntegerLiteralExpr)
882 value='1'
883 argument (NullLiteralExpr)
884 argument (NullLiteralExpr)
885 statement (ExpressionStmt)
886 expression (MethodCallExpr)
887 name (SimpleName)
888 identifier='assertFalse'
889 arguments
890 argument (MethodCallExpr)
891 name (SimpleName)
892 identifier='hasNext'
893 scope (NameExpr)
894 name (SimpleName)
895 identifier='diter'
896 statement (ExpressionStmt)
897 expression (AssignExpr)
898 operator='ASSIGN'
899 target (NameExpr)
900 name (SimpleName)
901 identifier='d'
902 value (MethodCallExpr)
903 name (SimpleName)
904 identifier='findDevice'
905 scope (NameExpr)
906 name (SimpleName)
907 identifier='deviceManager'
908 arguments
909 argument (LongLiteralExpr)
910 value='1L'
911 argument (NullLiteralExpr)
912 argument (NullLiteralExpr)
913 argument (NullLiteralExpr)
914 argument (NullLiteralExpr)
915 statement (ExpressionStmt)
916 expression (MethodCallExpr)
917 name (SimpleName)
918 identifier='assertArrayEquals'
919 arguments
920 argument (ArrayCreationExpr)
921 elementType (ClassOrInterfaceType)
922 name (SimpleName)
923 identifier='Integer'
924 initializer (ArrayInitializerExpr)
925 values
926 value (IntegerLiteralExpr)
927 value='2'
928 levels
929 level (ArrayCreationLevel)
930 argument (MethodCallExpr)
931 name (SimpleName)
932 identifier='getIPv4Addresses'
933 scope (NameExpr)
934 name (SimpleName)
935 identifier='d'
936 statement (ExpressionStmt)
937 expression (MethodCallExpr)
938 name (SimpleName)
939 identifier='assertArrayEquals'
940 arguments
941 argument (ArrayCreationExpr)
942 elementType (ClassOrInterfaceType)
943 name (SimpleName)
944 identifier='SwitchPort'
945 initializer (ArrayInitializerExpr)
946 values
947 value (ObjectCreationExpr)
948 type (ClassOrInterfaceType)
949 name (SimpleName)
950 identifier='SwitchPort'
951 arguments
952 argument (LongLiteralExpr)
953 value='1L'
954 argument (IntegerLiteralExpr)
955 value='1'
956 value (ObjectCreationExpr)
957 type (ClassOrInterfaceType)
958 name (SimpleName)
959 identifier='SwitchPort'
960 arguments
961 argument (LongLiteralExpr)
962 value='5L'
963 argument (IntegerLiteralExpr)
964 value='1'
965 levels
966 level (ArrayCreationLevel)
967 argument (MethodCallExpr)
968 name (SimpleName)
969 identifier='getAttachmentPoints'
970 scope (NameExpr)
971 name (SimpleName)
972 identifier='d'
973 statement (ExpressionStmt)
974 expression (MethodCallExpr)
975 name (SimpleName)
976 identifier='verify'
977 arguments
978 argument (NameExpr)
979 name (SimpleName)
980 identifier='mockListener'
981 type (VoidType)
982 name (SimpleName)
983 identifier='doTestEntityExpiration'
984 thrownExceptions
985 thrownException (ClassOrInterfaceType)
986 name (SimpleName)
987 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
13 14
6 15
15 16
6 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32
32 33
31 34
34 35
35 36
24 37
37 38
38 39
2 40
40 41
41 42
42 43
41 44
44 45
45 46
44 47
47 48
48 49
47 50
50 51
51 52
52 53
51 54
54 55
55 56
51 57
57 58
58 59
59 60
60 61
58 62
62 63
63 64
57 65
65 66
66 67
67 68
65 69
69 70
70 71
44 72
72 73
73 74
2 75
75 76
76 77
77 78
76 79
79 80
80 81
79 82
82 83
83 84
82 85
85 86
86 87
87 88
86 89
89 90
90 91
86 92
92 93
93 94
94 95
95 96
93 97
97 98
98 99
92 100
100 101
101 102
102 103
100 104
104 105
105 106
79 107
107 108
108 109
2 110
110 111
111 112
112 113
113 114
114 115
115 116
114 117
117 118
118 119
119 120
120 121
113 122
122 123
113 124
124 125
125 126
2 127
127 128
128 129
129 130
128 131
131 132
132 133
131 134
134 135
135 136
134 137
137 138
138 139
139 140
138 141
141 142
142 143
138 144
144 145
145 146
146 147
144 148
148 149
149 150
131 151
151 152
152 153
2 154
154 155
155 156
156 157
155 158
158 159
159 160
158 161
161 162
162 163
161 164
164 165
165 166
166 167
165 168
168 169
169 170
165 171
171 172
172 173
171 174
174 175
175 176
174 177
177 178
158 179
179 180
180 181
2 182
182 183
183 184
184 185
183 186
186 187
187 188
186 189
189 190
190 191
189 192
192 193
193 194
194 195
193 196
196 197
197 198
193 199
199 200
200 201
199 202
202 203
203 204
202 205
205 206
186 207
207 208
208 209
2 210
210 211
211 212
212 213
211 214
214 215
215 216
214 217
217 218
218 219
217 220
220 221
221 222
222 223
221 224
224 225
225 226
221 227
227 228
228 229
214 230
230 231
231 232
2 233
233 234
234 235
235 236
234 237
237 238
238 239
237 240
240 241
241 242
240 243
243 244
244 245
245 246
244 247
247 248
248 249
244 250
250 251
251 252
237 253
253 254
254 255
2 256
256 257
257 258
258 259
257 260
260 261
261 262
260 263
263 264
264 265
263 266
266 267
267 268
268 269
267 270
270 271
271 272
267 273
273 274
274 275
273 276
276 277
277 278
276 279
279 280
273 281
281 282
273 283
283 284
284 285
283 286
286 287
260 288
288 289
289 290
2 291
291 292
292 293
293 294
294 295
295 296
296 297
297 298
294 299
299 300
294 301
301 302
302 303
2 304
304 305
305 306
306 307
305 308
308 309
309 310
308 311
311 312
312 313
311 314
314 315
315 316
316 317
315 318
318 319
319 320
308 321
321 322
322 323
323 324
2 325
325 326
326 327
327 328
326 329
329 330
330 331
331 332
2 333
333 334
334 335
334 336
336 337
337 338
336 339
339 340
340 341
334 342
342 343
343 344
2 345
345 346
346 347
347 348
348 349
349 350
350 351
349 352
352 353
353 354
348 355
355 356
348 357
357 358
358 359
2 360
360 361
361 362
362 363
363 364
364 365
365 366
366 367
364 368
368 369
369 370
368 371
368 372
372 373
368 374
374 375
368 376
376 377
368 378
378 379
379 380
378 381
381 382
382 383
363 384
384 385
363 386
386 387
387 388
2 389
389 390
390 391
391 392
390 393
393 394
394 395
390 396
396 397
397 398
398 399
397 400
400 401
401 402
396 403
403 404
403 405
405 406
405 407
407 408
408 409
407 410
410 411
411 412
403 413
413 414
2 415
415 416
416 417
417 418
418 419
419 420
420 421
421 422
419 423
423 424
424 425
423 426
423 427
427 428
423 429
429 430
423 431
431 432
423 433
433 434
434 435
433 436
436 437
437 438
418 439
439 440
418 441
441 442
442 443
2 444
444 445
445 446
446 447
445 448
448 449
449 450
445 451
451 452
452 453
453 454
2 455
455 456
456 457
457 458
458 459
459 460
460 461
459 462
462 463
463 464
459 465
465 466
466 467
467 468
458 469
469 470
458 471
471 472
472 473
2 474
474 475
475 476
476 477
475 478
478 479
479 480
480 481
481 482
479 483
483 484
484 485
485 486
484 487
487 488
479 489
489 490
478 491
491 492
492 493
491 494
494 495
495 496
2 497
497 498
498 499
499 500
498 501
501 502
502 503
503 504
504 505
502 506
506 507
507 508
508 509
509 510
510 511
508 512
512 513
513 514
512 515
515 516
507 517
517 518
518 519
519 520
517 521
521 522
522 523
521 524
524 525
502 526
526 527
501 528
528 529
529 530
528 531
531 532
532 533
2 534
534 535
535 536
536 537
537 538
538 539
539 540
538 541
541 542
542 543
538 544
544 545
545 546
546 547
545 548
548 549
549 550
544 551
544 552
544 553
553 554
544 555
544 556
537 557
557 558
537 559
559 560
560 561
559 562
562 563
563 564
564 565
565 566
2 567
567 568
568 569
569 570
568 571
571 572
572 573
573 574
572 575
575 576
576 577
2 578
578 579
579 580
580 581
579 582
582 583
583 584
584 585
583 586
586 587
587 588
582 589
589 590
590 591
589 592
592 593
593 594
592 595
595 596
596 597
2 598
598 599
599 600
599 601
601 602
602 603
599 604
604 605
605 606
604 607
607 608
608 609
604 610
610 611
611 612
612 613
611 614
614 615
615 616
610 617
610 618
610 619
619 620
610 621
610 622
2 623
623 624
624 625
625 626
624 627
627 628
628 629
629 630
628 631
631 632
632 633
2 634
634 635
635 636
636 637
635 638
638 639
639 640
640 641
639 642
642 643
643 644
638 645
645 646
646 647
645 648
648 649
649 650
648 651
651 652
652 653
2 654
654 655
655 656
656 657
655 658
658 659
659 660
660 661
2 662
662 663
663 664
664 665
663 666
666 667
667 668
663 669
669 670
670 671
671 672
2 673
673 674
674 675
675 676
674 677
677 678
678 679
679 680
2 681
681 682
682 683
683 684
682 685
685 686
686 687
687 688
2 689
689 690
690 691
691 692
690 693
693 694
694 695
690 696
696 697
697 698
698 699
697 700
700 701
701 702
702 703
703 704
2 705
705 706
706 707
707 708
706 709
709 710
710 711
711 712
2 713
713 714
714 715
715 716
714 717
717 718
718 719
717 720
720 721
721 722
714 723
723 724
724 725
723 726
2 727
727 728
728 729
728 730
730 731
731 732
728 733
733 734
734 735
733 736
736 737
737 738
733 739
739 740
740 741
741 742
740 743
743 744
744 745
2 746
746 747
747 748
748 749
747 750
750 751
751 752
752 753
753 754
751 755
755 756
756 757
757 758
751 759
759 760
750 761
761 762
762 763
761 764
764 765
765 766
2 767
767 768
768 769
769 770
768 771
771 772
772 773
773 774
774 775
772 776
776 777
777 778
778 779
779 780
780 781
778 782
782 783
783 784
782 785
785 786
777 787
787 788
788 789
789 790
787 791
791 792
792 793
791 794
794 795
772 796
796 797
771 798
798 799
799 800
798 801
801 802
802 803
2 804
804 805
805 806
805 807
807 808
808 809
805 810
810 811
811 812
810 813
813 814
814 815
810 816
816 817
817 818
818 819
817 820
820 821
821 822
816 823
816 824
816 825
825 826
816 827
816 828
2 829
829 830
830 831
831 832
830 833
833 834
834 835
835 836
834 837
837 838
838 839
2 840
840 841
841 842
842 843
841 844
844 845
845 846
846 847
845 848
848 849
849 850
844 851
851 852
852 853
851 854
854 855
855 856
854 857
857 858
858 859
2 860
860 861
861 862
861 863
863 864
864 865
861 866
866 867
867 868
866 869
869 870
870 871
866 872
872 873
873 874
874 875
873 876
876 877
877 878
872 879
872 880
872 881
881 882
872 883
872 884
2 885
885 886
886 887
887 888
886 889
889 890
890 891
891 892
890 893
893 894
894 895
2 896
896 897
897 898
897 899
899 900
900 901
897 902
902 903
903 904
902 905
905 906
906 907
902 908
908 909
909 910
908 911
908 912
908 913
908 914
2 915
915 916
916 917
917 918
916 919
919 920
920 921
921 922
922 923
920 924
924 925
925 926
926 927
920 928
928 929
919 930
930 931
931 932
930 933
933 934
934 935
2 936
936 937
937 938
938 939
937 940
940 941
941 942
942 943
943 944
941 945
945 946
946 947
947 948
948 949
949 950
947 951
951 952
952 953
951 954
954 955
946 956
956 957
957 958
958 959
956 960
960 961
961 962
960 963
963 964
941 965
965 966
940 967
967 968
968 969
967 970
970 971
971 972
2 973
973 974
974 975
975 976
974 977
977 978
978 979
979 980
0 981
0 982
982 983
0 984
984 985
985 986
986 987

Note: Entity expiration does not result in device moved notification.
