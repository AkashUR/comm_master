72
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='T'
9 value (MethodCallExpr)
10 name (SimpleName)
11 identifier='transform'
12 arguments
13 argument (NameExpr)
14 name (SimpleName)
15 identifier='D'
16 statement (ExpressionStmt)
17 expression (AssignExpr)
18 operator='ASSIGN'
19 target (NameExpr)
20 name (SimpleName)
21 identifier='h'
22 value (MethodCallExpr)
23 name (SimpleName)
24 identifier='makeCopy'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='AbstractClassifier'
28 arguments
29 argument (NameExpr)
30 name (SimpleName)
31 identifier='H'
32 statement (ExpressionStmt)
33 expression (MethodCallExpr)
34 name (SimpleName)
35 identifier='buildClassifier'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='h'
39 arguments
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='T'
43 statement (ExpressionStmt)
44 expression (MethodCallExpr)
45 name (SimpleName)
46 identifier='clear'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='T'
50 type (VoidType)
51 name (SimpleName)
52 identifier='build'
53 parameters
54 parameter (Parameter)
55 isVarArgs='false'
56 name (SimpleName)
57 identifier='D'
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='Instances'
61 parameter (Parameter)
62 isVarArgs='false'
63 name (SimpleName)
64 identifier='H'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='Classifier'
68 thrownExceptions
69 thrownException (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
14 15
2 16
16 17
17 18
17 19
19 20
20 21
17 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
30 31
2 32
32 33
33 34
34 35
33 36
36 37
37 38
33 39
39 40
40 41
41 42
2 43
43 44
44 45
45 46
44 47
47 48
48 49
0 50
0 51
51 52
0 53
53 54
54 55
54 56
56 57
54 58
58 59
59 60
53 61
61 62
61 63
63 64
61 65
65 66
66 67
0 68
68 69
69 70
70 71

Build - Create transformation for this node, and train classifier of type H upon it. The dataset should have class as index 'j', and remove all indices less than L *not* in paY.
