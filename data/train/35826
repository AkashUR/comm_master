90
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='log'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='log'
10 arguments
11 argument (FieldAccessExpr)
12 name (SimpleName)
13 identifier='FINE'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='Level'
17 argument (StringLiteralExpr)
18 value='writeCharacters({0}, {1}, {2})'
19 argument (ArrayCreationExpr)
20 elementType (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='Object'
23 initializer (ArrayInitializerExpr)
24 values
25 value (NameExpr)
26 name (SimpleName)
27 identifier='text'
28 value (NameExpr)
29 name (SimpleName)
30 identifier='start'
31 value (NameExpr)
32 name (SimpleName)
33 identifier='len'
34 levels
35 level (ArrayCreationLevel)
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='writeCharsInternal'
40 arguments
41 argument (ObjectCreationExpr)
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='String'
45 arguments
46 argument (NameExpr)
47 name (SimpleName)
48 identifier='text'
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='start'
52 argument (NameExpr)
53 name (SimpleName)
54 identifier='len'
55 argument (NameExpr)
56 name (SimpleName)
57 identifier='skipSpaces'
58 type (VoidType)
59 name (SimpleName)
60 identifier='writeCharacters'
61 parameters
62 parameter (Parameter)
63 isVarArgs='false'
64 name (SimpleName)
65 identifier='text'
66 type (ArrayType)
67 origin='TYPE'
68 componentType (PrimitiveType)
69 type='CHAR'
70 parameter (Parameter)
71 isVarArgs='false'
72 name (SimpleName)
73 identifier='start'
74 type (PrimitiveType)
75 type='INT'
76 parameter (Parameter)
77 isVarArgs='false'
78 name (SimpleName)
79 identifier='len'
80 type (PrimitiveType)
81 type='INT'
82 thrownExceptions
83 thrownException (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='XMLStreamException'
86 annotations
87 annotation (MarkerAnnotationExpr)
88 name (Name)
89 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
11 14
14 15
15 16
10 17
17 18
10 19
19 20
20 21
21 22
19 23
23 24
24 25
25 26
26 27
24 28
28 29
29 30
24 31
31 32
32 33
19 34
34 35
2 36
36 37
37 38
38 39
37 40
40 41
41 42
42 43
43 44
41 45
45 46
46 47
47 48
45 49
49 50
50 51
45 52
52 53
53 54
40 55
55 56
56 57
0 58
0 59
59 60
0 61
61 62
62 63
62 64
64 65
62 66
66 67
66 68
68 69
61 70
70 71
70 72
72 73
70 74
74 75
61 76
76 77
76 78
78 79
76 80
80 81
0 82
82 83
83 84
84 85
0 86
86 87
87 88
88 89

Write text to the output
