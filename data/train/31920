281
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='defaultInstance'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='TypeFactory'
13 name (SimpleName)
14 identifier='tf'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='TypeFactory'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (MethodCallExpr)
23 name (SimpleName)
24 identifier='constructType'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='tf'
28 arguments
29 argument (ClassExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='Calendar'
33 scope (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='util'
36 scope (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='java'
39 name (SimpleName)
40 identifier='t'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='JavaType'
44 statement (ExpressionStmt)
45 expression (VariableDeclarationExpr)
46 variables
47 variable (VariableDeclarator)
48 initializer (MethodCallExpr)
49 name (SimpleName)
50 identifier='toCanonical'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='t'
54 name (SimpleName)
55 identifier='can'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='String'
59 statement (ExpressionStmt)
60 expression (MethodCallExpr)
61 name (SimpleName)
62 identifier='assertEquals'
63 arguments
64 argument (StringLiteralExpr)
65 value='java.util.Calendar'
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='can'
69 statement (ExpressionStmt)
70 expression (MethodCallExpr)
71 name (SimpleName)
72 identifier='assertEquals'
73 arguments
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='t'
77 argument (MethodCallExpr)
78 name (SimpleName)
79 identifier='fromCanonical'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='TypeFactory'
83 arguments
84 argument (NameExpr)
85 name (SimpleName)
86 identifier='can'
87 statement (ExpressionStmt)
88 expression (AssignExpr)
89 operator='ASSIGN'
90 target (NameExpr)
91 name (SimpleName)
92 identifier='t'
93 value (MethodCallExpr)
94 name (SimpleName)
95 identifier='constructType'
96 scope (NameExpr)
97 name (SimpleName)
98 identifier='tf'
99 arguments
100 argument (ClassExpr)
101 type (ClassOrInterfaceType)
102 name (SimpleName)
103 identifier='ArrayList'
104 scope (ClassOrInterfaceType)
105 name (SimpleName)
106 identifier='util'
107 scope (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='java'
110 statement (ExpressionStmt)
111 expression (AssignExpr)
112 operator='ASSIGN'
113 target (NameExpr)
114 name (SimpleName)
115 identifier='can'
116 value (MethodCallExpr)
117 name (SimpleName)
118 identifier='toCanonical'
119 scope (NameExpr)
120 name (SimpleName)
121 identifier='t'
122 statement (ExpressionStmt)
123 expression (MethodCallExpr)
124 name (SimpleName)
125 identifier='assertEquals'
126 arguments
127 argument (StringLiteralExpr)
128 value='java.util.ArrayList<java.lang.Object>'
129 argument (NameExpr)
130 name (SimpleName)
131 identifier='can'
132 statement (ExpressionStmt)
133 expression (MethodCallExpr)
134 name (SimpleName)
135 identifier='assertEquals'
136 arguments
137 argument (NameExpr)
138 name (SimpleName)
139 identifier='t'
140 argument (MethodCallExpr)
141 name (SimpleName)
142 identifier='fromCanonical'
143 scope (NameExpr)
144 name (SimpleName)
145 identifier='TypeFactory'
146 arguments
147 argument (NameExpr)
148 name (SimpleName)
149 identifier='can'
150 statement (ExpressionStmt)
151 expression (AssignExpr)
152 operator='ASSIGN'
153 target (NameExpr)
154 name (SimpleName)
155 identifier='t'
156 value (MethodCallExpr)
157 name (SimpleName)
158 identifier='constructType'
159 scope (NameExpr)
160 name (SimpleName)
161 identifier='tf'
162 arguments
163 argument (ClassExpr)
164 type (ClassOrInterfaceType)
165 name (SimpleName)
166 identifier='TreeMap'
167 scope (ClassOrInterfaceType)
168 name (SimpleName)
169 identifier='util'
170 scope (ClassOrInterfaceType)
171 name (SimpleName)
172 identifier='java'
173 statement (ExpressionStmt)
174 expression (AssignExpr)
175 operator='ASSIGN'
176 target (NameExpr)
177 name (SimpleName)
178 identifier='can'
179 value (MethodCallExpr)
180 name (SimpleName)
181 identifier='toCanonical'
182 scope (NameExpr)
183 name (SimpleName)
184 identifier='t'
185 statement (ExpressionStmt)
186 expression (MethodCallExpr)
187 name (SimpleName)
188 identifier='assertEquals'
189 arguments
190 argument (StringLiteralExpr)
191 value='java.util.TreeMap<java.lang.Object,java.lang.Object>'
192 argument (NameExpr)
193 name (SimpleName)
194 identifier='can'
195 statement (ExpressionStmt)
196 expression (MethodCallExpr)
197 name (SimpleName)
198 identifier='assertEquals'
199 arguments
200 argument (NameExpr)
201 name (SimpleName)
202 identifier='t'
203 argument (MethodCallExpr)
204 name (SimpleName)
205 identifier='fromCanonical'
206 scope (NameExpr)
207 name (SimpleName)
208 identifier='TypeFactory'
209 arguments
210 argument (NameExpr)
211 name (SimpleName)
212 identifier='can'
213 statement (ExpressionStmt)
214 expression (AssignExpr)
215 operator='ASSIGN'
216 target (NameExpr)
217 name (SimpleName)
218 identifier='t'
219 value (MethodCallExpr)
220 name (SimpleName)
221 identifier='constructMapType'
222 scope (NameExpr)
223 name (SimpleName)
224 identifier='tf'
225 arguments
226 argument (ClassExpr)
227 type (ClassOrInterfaceType)
228 name (SimpleName)
229 identifier='EnumMap'
230 argument (ClassExpr)
231 type (ClassOrInterfaceType)
232 name (SimpleName)
233 identifier='EnumForCanonical'
234 argument (ClassExpr)
235 type (ClassOrInterfaceType)
236 name (SimpleName)
237 identifier='String'
238 statement (ExpressionStmt)
239 expression (AssignExpr)
240 operator='ASSIGN'
241 target (NameExpr)
242 name (SimpleName)
243 identifier='can'
244 value (MethodCallExpr)
245 name (SimpleName)
246 identifier='toCanonical'
247 scope (NameExpr)
248 name (SimpleName)
249 identifier='t'
250 statement (ExpressionStmt)
251 expression (MethodCallExpr)
252 name (SimpleName)
253 identifier='assertEquals'
254 arguments
255 argument (StringLiteralExpr)
256 value='java.util.EnumMap<org.codehaus.jackson.map.type.TestTypeFactory$EnumForCanonical,java.lang.String>'
257 argument (NameExpr)
258 name (SimpleName)
259 identifier='can'
260 statement (ExpressionStmt)
261 expression (MethodCallExpr)
262 name (SimpleName)
263 identifier='assertEquals'
264 arguments
265 argument (NameExpr)
266 name (SimpleName)
267 identifier='t'
268 argument (MethodCallExpr)
269 name (SimpleName)
270 identifier='fromCanonical'
271 scope (NameExpr)
272 name (SimpleName)
273 identifier='TypeFactory'
274 arguments
275 argument (NameExpr)
276 name (SimpleName)
277 identifier='can'
278 type (VoidType)
279 name (SimpleName)
280 identifier='testCanonicalNames'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
30 31
31 32
30 33
33 34
34 35
33 36
36 37
37 38
21 39
39 40
21 41
41 42
42 43
2 44
44 45
45 46
46 47
47 48
48 49
49 50
48 51
51 52
52 53
47 54
54 55
47 56
56 57
57 58
2 59
59 60
60 61
61 62
60 63
63 64
64 65
63 66
66 67
67 68
2 69
69 70
70 71
71 72
70 73
73 74
74 75
75 76
73 77
77 78
78 79
77 80
80 81
81 82
77 83
83 84
84 85
85 86
2 87
87 88
88 89
88 90
90 91
91 92
88 93
93 94
94 95
93 96
96 97
97 98
93 99
99 100
100 101
101 102
102 103
101 104
104 105
105 106
104 107
107 108
108 109
2 110
110 111
111 112
111 113
113 114
114 115
111 116
116 117
117 118
116 119
119 120
120 121
2 122
122 123
123 124
124 125
123 126
126 127
127 128
126 129
129 130
130 131
2 132
132 133
133 134
134 135
133 136
136 137
137 138
138 139
136 140
140 141
141 142
140 143
143 144
144 145
140 146
146 147
147 148
148 149
2 150
150 151
151 152
151 153
153 154
154 155
151 156
156 157
157 158
156 159
159 160
160 161
156 162
162 163
163 164
164 165
165 166
164 167
167 168
168 169
167 170
170 171
171 172
2 173
173 174
174 175
174 176
176 177
177 178
174 179
179 180
180 181
179 182
182 183
183 184
2 185
185 186
186 187
187 188
186 189
189 190
190 191
189 192
192 193
193 194
2 195
195 196
196 197
197 198
196 199
199 200
200 201
201 202
199 203
203 204
204 205
203 206
206 207
207 208
203 209
209 210
210 211
211 212
2 213
213 214
214 215
214 216
216 217
217 218
214 219
219 220
220 221
219 222
222 223
223 224
219 225
225 226
226 227
227 228
228 229
225 230
230 231
231 232
232 233
225 234
234 235
235 236
236 237
2 238
238 239
239 240
239 241
241 242
242 243
239 244
244 245
245 246
244 247
247 248
248 249
2 250
250 251
251 252
252 253
251 254
254 255
255 256
254 257
257 258
258 259
2 260
260 261
261 262
262 263
261 264
264 265
265 266
266 267
264 268
268 269
269 270
268 271
271 272
272 273
268 274
274 275
275 276
276 277
0 278
0 279
279 280

Test for checking that canonical name handling works ok
