95
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='x'
9 value (MethodCallExpr)
10 name (SimpleName)
11 identifier='lerp'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='PApplet'
15 arguments
16 argument (NameExpr)
17 name (SimpleName)
18 identifier='x'
19 argument (FieldAccessExpr)
20 name (SimpleName)
21 identifier='x'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='v'
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='amt'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (NameExpr)
32 name (SimpleName)
33 identifier='y'
34 value (MethodCallExpr)
35 name (SimpleName)
36 identifier='lerp'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='PApplet'
40 arguments
41 argument (NameExpr)
42 name (SimpleName)
43 identifier='y'
44 argument (FieldAccessExpr)
45 name (SimpleName)
46 identifier='y'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='v'
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='amt'
53 statement (ExpressionStmt)
54 expression (AssignExpr)
55 operator='ASSIGN'
56 target (NameExpr)
57 name (SimpleName)
58 identifier='z'
59 value (MethodCallExpr)
60 name (SimpleName)
61 identifier='lerp'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='PApplet'
65 arguments
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='z'
69 argument (FieldAccessExpr)
70 name (SimpleName)
71 identifier='z'
72 scope (NameExpr)
73 name (SimpleName)
74 identifier='v'
75 argument (NameExpr)
76 name (SimpleName)
77 identifier='amt'
78 type (VoidType)
79 name (SimpleName)
80 identifier='lerp'
81 parameters
82 parameter (Parameter)
83 isVarArgs='false'
84 name (SimpleName)
85 identifier='v'
86 type (ClassOrInterfaceType)
87 name (SimpleName)
88 identifier='PVector'
89 parameter (Parameter)
90 isVarArgs='false'
91 name (SimpleName)
92 identifier='amt'
93 type (PrimitiveType)
94 type='FLOAT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
9 15
15 16
16 17
17 18
15 19
19 20
20 21
19 22
22 23
23 24
15 25
25 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
29 34
34 35
35 36
34 37
37 38
38 39
34 40
40 41
41 42
42 43
40 44
44 45
45 46
44 47
47 48
48 49
40 50
50 51
51 52
2 53
53 54
54 55
54 56
56 57
57 58
54 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
65 69
69 70
70 71
69 72
72 73
73 74
65 75
75 76
76 77
0 78
0 79
79 80
0 81
81 82
82 83
82 84
84 85
82 86
86 87
87 88
81 89
89 90
89 91
91 92
89 93
93 94

( begin auto-generated from PVector_rotate.xml ) Linear interpolate the vector to another vector ( end auto-generated )
