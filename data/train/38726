81
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='allocateElements'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='size'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='c'
14 statement (ExpressionStmt)
15 expression (MethodCallExpr)
16 name (SimpleName)
17 identifier='addAll'
18 arguments
19 argument (NameExpr)
20 name (SimpleName)
21 identifier='c'
22 name (SimpleName)
23 identifier='ArrayDeque'
24 parameters
25 parameter (Parameter)
26 isVarArgs='false'
27 name (SimpleName)
28 identifier='c'
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='Collection'
32 typeArguments
33 typeArgument (WildcardType)
34 extendedType (ClassOrInterfaceType)
35 name (SimpleName)
36 identifier='E'
37 annotations
38 annotation (SingleMemberAnnotationExpr)
39 memberValue (StringLiteralExpr)
40 value='constructor'
41 name (Name)
42 identifier='DSComment'
43 annotation (SingleMemberAnnotationExpr)
44 memberValue (FieldAccessExpr)
45 name (SimpleName)
46 identifier='SAFE_OTHERS'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='DSCat'
50 name (Name)
51 identifier='DSSafe'
52 annotation (NormalAnnotationExpr)
53 name (Name)
54 identifier='DSGenerator'
55 pairs
56 pair (MemberValuePair)
57 name (SimpleName)
58 identifier='tool_name'
59 value (StringLiteralExpr)
60 value='Doppelganger'
61 pair (MemberValuePair)
62 name (SimpleName)
63 identifier='tool_version'
64 value (StringLiteralExpr)
65 value='2.0'
66 pair (MemberValuePair)
67 name (SimpleName)
68 identifier='generated_on'
69 value (StringLiteralExpr)
70 value='2013-12-30 12:57:43.416 -0500'
71 pair (MemberValuePair)
72 name (SimpleName)
73 identifier='hash_original_method'
74 value (StringLiteralExpr)
75 value='5E7B6C878951D7CA458070D073F03065'
76 pair (MemberValuePair)
77 name (SimpleName)
78 identifier='hash_generated_method'
79 value (StringLiteralExpr)
80 value='AA1896D162B72EAE3EDE1B373974C833'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
2 14
14 15
15 16
16 17
15 18
18 19
19 20
20 21
0 22
22 23
0 24
24 25
25 26
25 27
27 28
25 29
29 30
30 31
29 32
32 33
33 34
34 35
35 36
0 37
37 38
38 39
39 40
38 41
41 42
37 43
43 44
44 45
45 46
44 47
47 48
48 49
43 50
50 51
37 52
52 53
53 54
52 55
55 56
56 57
57 58
56 59
59 60
55 61
61 62
62 63
61 64
64 65
55 66
66 67
67 68
66 69
69 70
55 71
71 72
72 73
71 74
74 75
55 76
76 77
77 78
76 79
79 80

Constructs a deque containing the elements of the specified collection, in the order they are returned by the collection's iterator.  (The first element returned by the collection's iterator becomes the first element, or <i>front</i> of the deque.)
