148
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='createClientCache'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='getServerHostName'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='NetworkUtils'
14 arguments
15 argument (MethodCallExpr)
16 name (SimpleName)
17 identifier='getHost'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='Host'
21 arguments
22 argument (IntegerLiteralExpr)
23 value='0'
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='PORT1'
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='PORT2'
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='PORT3'
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='PORT4'
36 argument (IntegerLiteralExpr)
37 value='1'
38 argument (IntegerLiteralExpr)
39 value='250'
40 argument (IntegerLiteralExpr)
41 value='500'
42 statement (ExpressionStmt)
43 expression (MethodCallExpr)
44 name (SimpleName)
45 identifier='waitConnectedServers'
46 arguments
47 argument (IntegerLiteralExpr)
48 value='4'
49 statement (ExpressionStmt)
50 expression (MethodCallExpr)
51 name (SimpleName)
52 identifier='assertEquals'
53 arguments
54 argument (IntegerLiteralExpr)
55 value='1'
56 argument (MethodCallExpr)
57 name (SimpleName)
58 identifier='size'
59 scope (MethodCallExpr)
60 name (SimpleName)
61 identifier='getRedundantNames'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='pool'
65 statement (ExpressionStmt)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='assertTrue'
69 arguments
70 argument (MethodCallExpr)
71 name (SimpleName)
72 identifier='contains'
73 scope (MethodCallExpr)
74 name (SimpleName)
75 identifier='getRedundantNames'
76 scope (NameExpr)
77 name (SimpleName)
78 identifier='pool'
79 arguments
80 argument (NameExpr)
81 name (SimpleName)
82 identifier='SERVER4'
83 statement (ExpressionStmt)
84 expression (MethodCallExpr)
85 name (SimpleName)
86 identifier='verifyOrderOfEndpoints'
87 statement (ExpressionStmt)
88 expression (MethodCallExpr)
89 name (SimpleName)
90 identifier='invoke'
91 scope (NameExpr)
92 name (SimpleName)
93 identifier='server2'
94 arguments
95 argument (NullLiteralExpr)
96 statement (ExpressionStmt)
97 expression (MethodCallExpr)
98 name (SimpleName)
99 identifier='createEntriesK1andK2'
100 statement (ExpressionStmt)
101 expression (MethodCallExpr)
102 name (SimpleName)
103 identifier='registerK1AndK2'
104 statement (ExpressionStmt)
105 expression (MethodCallExpr)
106 name (SimpleName)
107 identifier='verifyDeadServers'
108 arguments
109 argument (IntegerLiteralExpr)
110 value='1'
111 statement (ExpressionStmt)
112 expression (MethodCallExpr)
113 name (SimpleName)
114 identifier='verifyRedundantServersContain'
115 arguments
116 argument (NameExpr)
117 name (SimpleName)
118 identifier='SERVER4'
119 statement (ExpressionStmt)
120 expression (MethodCallExpr)
121 name (SimpleName)
122 identifier='verifyLiveAndRedundantServers'
123 arguments
124 argument (IntegerLiteralExpr)
125 value='3'
126 argument (IntegerLiteralExpr)
127 value='1'
128 statement (ExpressionStmt)
129 expression (MethodCallExpr)
130 name (SimpleName)
131 identifier='verifyOrderOfEndpoints'
132 type (VoidType)
133 name (SimpleName)
134 identifier='testRedundancySpecifiedNonFailoverEPFailsDetectionByRegisterInterest'
135 thrownExceptions
136 thrownException (ClassOrInterfaceType)
137 name (SimpleName)
138 identifier='Exception'
139 annotations
140 annotation (SingleMemberAnnotationExpr)
141 memberValue (StringLiteralExpr)
142 value='TODO'
143 name (Name)
144 identifier='Ignore'
145 annotation (MarkerAnnotationExpr)
146 name (Name)
147 identifier='Test'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
8 14
14 15
15 16
16 17
15 18
18 19
19 20
15 21
21 22
22 23
7 24
24 25
25 26
7 27
27 28
28 29
7 30
30 31
31 32
7 33
33 34
34 35
7 36
36 37
7 38
38 39
7 40
40 41
2 42
42 43
43 44
44 45
43 46
46 47
47 48
2 49
49 50
50 51
51 52
50 53
53 54
54 55
53 56
56 57
57 58
56 59
59 60
60 61
59 62
62 63
63 64
2 65
65 66
66 67
67 68
66 69
69 70
70 71
71 72
70 73
73 74
74 75
73 76
76 77
77 78
70 79
79 80
80 81
81 82
2 83
83 84
84 85
85 86
2 87
87 88
88 89
89 90
88 91
91 92
92 93
88 94
94 95
2 96
96 97
97 98
98 99
2 100
100 101
101 102
102 103
2 104
104 105
105 106
106 107
105 108
108 109
109 110
2 111
111 112
112 113
113 114
112 115
115 116
116 117
117 118
2 119
119 120
120 121
121 122
120 123
123 124
124 125
123 126
126 127
2 128
128 129
129 130
130 131
0 132
0 133
133 134
0 135
135 136
136 137
137 138
0 139
139 140
140 141
141 142
140 143
143 144
139 145
145 146
146 147

Redundancy level specified & less than total Eps. If an EP dies & was not part of the fail over list , then it should be removed from Live Server Map & added to dead server map. It should not change the current failover set. Failover detection by Register Interest
