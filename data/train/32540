62
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (ConditionalExpr)
7 condition (BinaryExpr)
8 operator='NOT_EQUALS'
9 left (NameExpr)
10 name (SimpleName)
11 identifier='cause'
12 right (NullLiteralExpr)
13 elseExpr (NullLiteralExpr)
14 thenExpr (MethodCallExpr)
15 name (SimpleName)
16 identifier='toString'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='cause'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='initCause'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='cause'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (FieldAccessExpr)
32 name (SimpleName)
33 identifier='failedProperties'
34 scope (ThisExpr)
35 value (NameExpr)
36 name (SimpleName)
37 identifier='failedProperties'
38 name (SimpleName)
39 identifier='SQLClientInfoException'
40 parameters
41 parameter (Parameter)
42 isVarArgs='false'
43 name (SimpleName)
44 identifier='failedProperties'
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='Map'
48 typeArguments
49 typeArgument (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='String'
52 typeArgument (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='ClientInfoStatus'
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='cause'
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='Throwable'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
7 9
9 10
10 11
7 12
6 13
6 14
14 15
15 16
14 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
31 34
29 35
35 36
36 37
0 38
38 39
0 40
40 41
41 42
41 43
43 44
41 45
45 46
46 47
45 48
48 49
49 50
50 51
48 52
52 53
53 54
40 55
55 56
55 57
57 58
55 59
59 60
60 61

Constructs a <code>SQLClientInfoException</code> object initialized with a given <code>cause</code> and <code>failedProperties</code>. The <code>reason</code>  is initialized to <code>null</code> if <code>cause==null</code> or to <code>cause.toString()</code> if <code>cause!=null</code> and the vendor code is initialized to 0. <p>
