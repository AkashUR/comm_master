145
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ObjectMapper'
11 name (SimpleName)
12 identifier='m'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='ObjectMapper'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='enableDefaultTyping'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='m'
23 arguments
24 argument (FieldAccessExpr)
25 name (SimpleName)
26 identifier='JAVA_LANG_OBJECT'
27 scope (FieldAccessExpr)
28 name (SimpleName)
29 identifier='DefaultTyping'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='ObjectMapper'
33 statement (ExpressionStmt)
34 expression (VariableDeclarationExpr)
35 variables
36 variable (VariableDeclarator)
37 initializer (ArrayCreationExpr)
38 elementType (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='Object'
41 initializer (ArrayInitializerExpr)
42 values
43 value (StringLiteralExpr)
44 value='abc'
45 value (ObjectCreationExpr)
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='Date'
49 arguments
50 argument (IntegerLiteralExpr)
51 value='1234567'
52 value (NullLiteralExpr)
53 value (MethodCallExpr)
54 name (SimpleName)
55 identifier='valueOf'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='Integer'
59 arguments
60 argument (IntegerLiteralExpr)
61 value='456'
62 levels
63 level (ArrayCreationLevel)
64 name (SimpleName)
65 identifier='input'
66 type (ArrayType)
67 origin='TYPE'
68 componentType (ClassOrInterfaceType)
69 name (SimpleName)
70 identifier='Object'
71 statement (ExpressionStmt)
72 expression (VariableDeclarationExpr)
73 variables
74 variable (VariableDeclarator)
75 initializer (MethodCallExpr)
76 name (SimpleName)
77 identifier='writeValueAsString'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='m'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='input'
85 name (SimpleName)
86 identifier='json'
87 type (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='String'
90 statement (ExpressionStmt)
91 expression (MethodCallExpr)
92 name (SimpleName)
93 identifier='assertEquals'
94 arguments
95 argument (StringLiteralExpr)
96 value='[\"abc\",[\"java.util.Date\",1234567],null,456]'
97 argument (NameExpr)
98 name (SimpleName)
99 identifier='json'
100 statement (ExpressionStmt)
101 expression (VariableDeclarationExpr)
102 variables
103 variable (VariableDeclarator)
104 initializer (MethodCallExpr)
105 name (SimpleName)
106 identifier='readValue'
107 scope (NameExpr)
108 name (SimpleName)
109 identifier='m'
110 arguments
111 argument (NameExpr)
112 name (SimpleName)
113 identifier='json'
114 argument (ClassExpr)
115 type (ArrayType)
116 origin='TYPE'
117 componentType (ClassOrInterfaceType)
118 name (SimpleName)
119 identifier='Object'
120 name (SimpleName)
121 identifier='output'
122 type (ArrayType)
123 origin='TYPE'
124 componentType (ClassOrInterfaceType)
125 name (SimpleName)
126 identifier='Object'
127 statement (ExpressionStmt)
128 expression (MethodCallExpr)
129 name (SimpleName)
130 identifier='assertArrayEquals'
131 arguments
132 argument (NameExpr)
133 name (SimpleName)
134 identifier='input'
135 argument (NameExpr)
136 name (SimpleName)
137 identifier='output'
138 type (VoidType)
139 name (SimpleName)
140 identifier='testScalarArrays'
141 thrownExceptions
142 thrownException (ClassOrInterfaceType)
143 name (SimpleName)
144 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
24 27
27 28
28 29
27 30
30 31
31 32
2 33
33 34
34 35
35 36
36 37
37 38
38 39
39 40
37 41
41 42
42 43
43 44
42 45
45 46
46 47
47 48
45 49
49 50
50 51
42 52
42 53
53 54
54 55
53 56
56 57
57 58
53 59
59 60
60 61
37 62
62 63
36 64
64 65
36 66
66 67
66 68
68 69
69 70
2 71
71 72
72 73
73 74
74 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
82 83
83 84
74 85
85 86
74 87
87 88
88 89
2 90
90 91
91 92
92 93
91 94
94 95
95 96
94 97
97 98
98 99
2 100
100 101
101 102
102 103
103 104
104 105
105 106
104 107
107 108
108 109
104 110
110 111
111 112
112 113
110 114
114 115
115 116
115 117
117 118
118 119
103 120
120 121
103 122
122 123
122 124
124 125
125 126
2 127
127 128
128 129
129 130
128 131
131 132
132 133
133 134
131 135
135 136
136 137
0 138
0 139
139 140
0 141
141 142
142 143
143 144

Test for verifying that contents of "untyped" homogenous arrays are properly handled,
