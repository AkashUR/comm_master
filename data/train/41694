110
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (AssertStmt)
4 check (BinaryExpr)
5 operator='AND'
6 left (BinaryExpr)
7 operator='GREATER'
8 left (NameExpr)
9 name (SimpleName)
10 identifier='blockBits'
11 right (IntegerLiteralExpr)
12 value='0'
13 right (BinaryExpr)
14 operator='LESS_EQUALS'
15 left (NameExpr)
16 name (SimpleName)
17 identifier='blockBits'
18 right (IntegerLiteralExpr)
19 value='31'
20 message (NameExpr)
21 name (SimpleName)
22 identifier='blockBits'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='blockSize'
29 scope (ThisExpr)
30 value (BinaryExpr)
31 operator='LEFT_SHIFT'
32 left (IntegerLiteralExpr)
33 value='1'
34 right (NameExpr)
35 name (SimpleName)
36 identifier='blockBits'
37 statement (ExpressionStmt)
38 expression (AssignExpr)
39 operator='ASSIGN'
40 target (FieldAccessExpr)
41 name (SimpleName)
42 identifier='blockBits'
43 scope (ThisExpr)
44 value (NameExpr)
45 name (SimpleName)
46 identifier='blockBits'
47 statement (ExpressionStmt)
48 expression (AssignExpr)
49 operator='ASSIGN'
50 target (NameExpr)
51 name (SimpleName)
52 identifier='blockMask'
53 value (BinaryExpr)
54 operator='MINUS'
55 left (NameExpr)
56 name (SimpleName)
57 identifier='blockSize'
58 right (IntegerLiteralExpr)
59 value='1'
60 statement (ExpressionStmt)
61 expression (AssignExpr)
62 operator='ASSIGN'
63 target (NameExpr)
64 name (SimpleName)
65 identifier='upto'
66 value (NameExpr)
67 name (SimpleName)
68 identifier='blockSize'
69 statement (ExpressionStmt)
70 expression (AssignExpr)
71 operator='ASSIGN'
72 target (NameExpr)
73 name (SimpleName)
74 identifier='bytesUsedPerBlock'
75 value (MethodCallExpr)
76 name (SimpleName)
77 identifier='alignObjectSize'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='RamUsageEstimator'
81 arguments
82 argument (BinaryExpr)
83 operator='PLUS'
84 left (NameExpr)
85 name (SimpleName)
86 identifier='blockSize'
87 right (FieldAccessExpr)
88 name (SimpleName)
89 identifier='NUM_BYTES_ARRAY_HEADER'
90 scope (NameExpr)
91 name (SimpleName)
92 identifier='RamUsageEstimator'
93 statement (ExpressionStmt)
94 expression (AssignExpr)
95 operator='ASSIGN'
96 target (NameExpr)
97 name (SimpleName)
98 identifier='numBlocks'
99 value (IntegerLiteralExpr)
100 value='0'
101 name (SimpleName)
102 identifier='PagedBytes'
103 parameters
104 parameter (Parameter)
105 isVarArgs='false'
106 name (SimpleName)
107 identifier='blockBits'
108 type (PrimitiveType)
109 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
6 8
8 9
9 10
6 11
11 12
4 13
13 14
13 15
15 16
16 17
13 18
18 19
3 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
30 32
32 33
30 34
34 35
35 36
2 37
37 38
38 39
38 40
40 41
41 42
40 43
38 44
44 45
45 46
2 47
47 48
48 49
48 50
50 51
51 52
48 53
53 54
53 55
55 56
56 57
53 58
58 59
2 60
60 61
61 62
61 63
63 64
64 65
61 66
66 67
67 68
2 69
69 70
70 71
70 72
72 73
73 74
70 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
82 83
82 84
84 85
85 86
82 87
87 88
88 89
87 90
90 91
91 92
2 93
93 94
94 95
94 96
96 97
97 98
94 99
99 100
0 101
101 102
0 103
103 104
104 105
104 106
106 107
104 108
108 109

1&lt;&lt;blockBits must be bigger than biggest single BytesRef slice that will be pulled
