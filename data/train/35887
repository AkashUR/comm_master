178
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertEquals'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='newSetQuery'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='IntPoint'
14 arguments
15 argument (StringLiteralExpr)
16 value='foo'
17 argument (IntegerLiteralExpr)
18 value='1'
19 argument (IntegerLiteralExpr)
20 value='2'
21 argument (IntegerLiteralExpr)
22 value='3'
23 argument (MethodCallExpr)
24 name (SimpleName)
25 identifier='newSetQuery'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='IntPoint'
29 arguments
30 argument (StringLiteralExpr)
31 value='foo'
32 argument (MethodCallExpr)
33 name (SimpleName)
34 identifier='asList'
35 scope (NameExpr)
36 name (SimpleName)
37 identifier='Arrays'
38 arguments
39 argument (IntegerLiteralExpr)
40 value='1'
41 argument (IntegerLiteralExpr)
42 value='2'
43 argument (IntegerLiteralExpr)
44 value='3'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='assertEquals'
49 arguments
50 argument (MethodCallExpr)
51 name (SimpleName)
52 identifier='newSetQuery'
53 scope (NameExpr)
54 name (SimpleName)
55 identifier='FloatPoint'
56 arguments
57 argument (StringLiteralExpr)
58 value='foo'
59 argument (DoubleLiteralExpr)
60 value='1F'
61 argument (DoubleLiteralExpr)
62 value='2F'
63 argument (DoubleLiteralExpr)
64 value='3F'
65 argument (MethodCallExpr)
66 name (SimpleName)
67 identifier='newSetQuery'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='FloatPoint'
71 arguments
72 argument (StringLiteralExpr)
73 value='foo'
74 argument (MethodCallExpr)
75 name (SimpleName)
76 identifier='asList'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='Arrays'
80 arguments
81 argument (DoubleLiteralExpr)
82 value='1F'
83 argument (DoubleLiteralExpr)
84 value='2F'
85 argument (DoubleLiteralExpr)
86 value='3F'
87 statement (ExpressionStmt)
88 expression (MethodCallExpr)
89 name (SimpleName)
90 identifier='assertEquals'
91 arguments
92 argument (MethodCallExpr)
93 name (SimpleName)
94 identifier='newSetQuery'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='LongPoint'
98 arguments
99 argument (StringLiteralExpr)
100 value='foo'
101 argument (LongLiteralExpr)
102 value='1L'
103 argument (LongLiteralExpr)
104 value='2L'
105 argument (LongLiteralExpr)
106 value='3L'
107 argument (MethodCallExpr)
108 name (SimpleName)
109 identifier='newSetQuery'
110 scope (NameExpr)
111 name (SimpleName)
112 identifier='LongPoint'
113 arguments
114 argument (StringLiteralExpr)
115 value='foo'
116 argument (MethodCallExpr)
117 name (SimpleName)
118 identifier='asList'
119 scope (NameExpr)
120 name (SimpleName)
121 identifier='Arrays'
122 arguments
123 argument (LongLiteralExpr)
124 value='1L'
125 argument (LongLiteralExpr)
126 value='2L'
127 argument (LongLiteralExpr)
128 value='3L'
129 statement (ExpressionStmt)
130 expression (MethodCallExpr)
131 name (SimpleName)
132 identifier='assertEquals'
133 arguments
134 argument (MethodCallExpr)
135 name (SimpleName)
136 identifier='newSetQuery'
137 scope (NameExpr)
138 name (SimpleName)
139 identifier='DoublePoint'
140 arguments
141 argument (StringLiteralExpr)
142 value='foo'
143 argument (DoubleLiteralExpr)
144 value='1D'
145 argument (DoubleLiteralExpr)
146 value='2D'
147 argument (DoubleLiteralExpr)
148 value='3D'
149 argument (MethodCallExpr)
150 name (SimpleName)
151 identifier='newSetQuery'
152 scope (NameExpr)
153 name (SimpleName)
154 identifier='DoublePoint'
155 arguments
156 argument (StringLiteralExpr)
157 value='foo'
158 argument (MethodCallExpr)
159 name (SimpleName)
160 identifier='asList'
161 scope (NameExpr)
162 name (SimpleName)
163 identifier='Arrays'
164 arguments
165 argument (DoubleLiteralExpr)
166 value='1D'
167 argument (DoubleLiteralExpr)
168 value='2D'
169 argument (DoubleLiteralExpr)
170 value='3D'
171 type (VoidType)
172 name (SimpleName)
173 identifier='testPointIntSetBoxed'
174 thrownExceptions
175 thrownException (ClassOrInterfaceType)
176 name (SimpleName)
177 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
8 14
14 15
15 16
14 17
17 18
14 19
19 20
14 21
21 22
7 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
29 32
32 33
33 34
32 35
35 36
36 37
32 38
38 39
39 40
38 41
41 42
38 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
51 52
50 53
53 54
54 55
50 56
56 57
57 58
56 59
59 60
56 61
61 62
56 63
63 64
49 65
65 66
66 67
65 68
68 69
69 70
65 71
71 72
72 73
71 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
80 83
83 84
80 85
85 86
2 87
87 88
88 89
89 90
88 91
91 92
92 93
93 94
92 95
95 96
96 97
92 98
98 99
99 100
98 101
101 102
98 103
103 104
98 105
105 106
91 107
107 108
108 109
107 110
110 111
111 112
107 113
113 114
114 115
113 116
116 117
117 118
116 119
119 120
120 121
116 122
122 123
123 124
122 125
125 126
122 127
127 128
2 129
129 130
130 131
131 132
130 133
133 134
134 135
135 136
134 137
137 138
138 139
134 140
140 141
141 142
140 143
143 144
140 145
145 146
140 147
147 148
133 149
149 150
150 151
149 152
152 153
153 154
149 155
155 156
156 157
155 158
158 159
159 160
158 161
161 162
162 163
158 164
164 165
165 166
164 167
167 168
164 169
169 170
0 171
0 172
172 173
0 174
174 175
175 176
176 177

Boxed methods for primitive types should behave the same as unboxed: just sugar
