81
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='registerInput'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='varName'
11 argument (MethodCallExpr)
12 name (SimpleName)
13 identifier='mapToPair'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='rdd'
17 arguments
18 argument (ObjectCreationExpr)
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='ConvertStringToLongTextPair'
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='format'
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='rlen'
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='clen'
31 argument (UnaryExpr)
32 operator='MINUS'
33 expression (IntegerLiteralExpr)
34 value='1'
35 argument (NullLiteralExpr)
36 type (VoidType)
37 name (SimpleName)
38 identifier='registerInput'
39 parameters
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='varName'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='String'
47 parameter (Parameter)
48 isVarArgs='false'
49 name (SimpleName)
50 identifier='rdd'
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='JavaRDD'
54 typeArguments
55 typeArgument (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='String'
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='format'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='String'
65 parameter (Parameter)
66 isVarArgs='false'
67 name (SimpleName)
68 identifier='rlen'
69 type (PrimitiveType)
70 type='LONG'
71 parameter (Parameter)
72 isVarArgs='false'
73 name (SimpleName)
74 identifier='clen'
75 type (PrimitiveType)
76 type='LONG'
77 thrownExceptions
78 thrownException (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='DMLRuntimeException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
15 16
11 17
17 18
18 19
19 20
20 21
7 22
22 23
23 24
7 25
25 26
26 27
7 28
28 29
29 30
7 31
31 32
31 33
33 34
7 35
0 36
0 37
37 38
0 39
39 40
40 41
40 42
42 43
40 44
44 45
45 46
39 47
47 48
47 49
49 50
47 51
51 52
52 53
51 54
54 55
55 56
56 57
39 58
58 59
58 60
60 61
58 62
62 63
63 64
39 65
65 66
65 67
67 68
65 69
69 70
39 71
71 72
71 73
73 74
71 75
75 76
0 77
77 78
78 79
79 80

Register CSV/Text as inputs: Convenience method with dimensions and but no nnz. It uses default file properties (example: delim, fill, ..) <p> Marks the variable in the DML script as input variable. Note that this expects a "varName = read(...)" statement in the DML script which through non-MLContext invocation would have been created by reading a HDFS file.
