68
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Matrix'
11 name (SimpleName)
12 identifier='trans'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='Matrix'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setTranslate'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='trans'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='x'
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='y'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='preConcat'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='line'
37 arguments
38 argument (NameExpr)
39 name (SimpleName)
40 identifier='trans'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='set'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='cur'
48 arguments
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='line'
52 type (VoidType)
53 name (SimpleName)
54 identifier='carriageReturn'
55 parameters
56 parameter (Parameter)
57 isVarArgs='false'
58 name (SimpleName)
59 identifier='x'
60 type (PrimitiveType)
61 type='FLOAT'
62 parameter (Parameter)
63 isVarArgs='false'
64 name (SimpleName)
65 identifier='y'
66 type (PrimitiveType)
67 type='FLOAT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
23 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
31 37
37 38
38 39
39 40
2 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
50 51
0 52
0 53
53 54
0 55
55 56
56 57
56 58
58 59
56 60
60 61
55 62
62 63
62 64
64 65
62 66
66 67

perform a carriage return by translating by x and y.  The next carriage return will be relative to the new location.
