258
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='rotateX'
10 scope (ObjectCreationExpr)
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='Quaternionf'
14 arguments
15 argument (CastExpr)
16 expression (MethodCallExpr)
17 name (SimpleName)
18 identifier='toRadians'
19 scope (NameExpr)
20 name (SimpleName)
21 identifier='Math'
22 arguments
23 argument (IntegerLiteralExpr)
24 value='90'
25 type (PrimitiveType)
26 type='FLOAT'
27 name (SimpleName)
28 identifier='q0'
29 type (ClassOrInterfaceType)
30 name (SimpleName)
31 identifier='Quaternionf'
32 statement (ExpressionStmt)
33 expression (VariableDeclarationExpr)
34 variables
35 variable (VariableDeclarator)
36 initializer (MethodCallExpr)
37 name (SimpleName)
38 identifier='rotateY'
39 scope (ObjectCreationExpr)
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='Quaternionf'
43 arguments
44 argument (CastExpr)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='toRadians'
48 scope (NameExpr)
49 name (SimpleName)
50 identifier='Math'
51 arguments
52 argument (IntegerLiteralExpr)
53 value='90'
54 type (PrimitiveType)
55 type='FLOAT'
56 name (SimpleName)
57 identifier='q1'
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='Quaternionf'
61 statement (ExpressionStmt)
62 expression (VariableDeclarationExpr)
63 variables
64 variable (VariableDeclarator)
65 initializer (MethodCallExpr)
66 name (SimpleName)
67 identifier='rotateZ'
68 scope (ObjectCreationExpr)
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='Quaternionf'
72 arguments
73 argument (CastExpr)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='toRadians'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='Math'
80 arguments
81 argument (IntegerLiteralExpr)
82 value='90'
83 type (PrimitiveType)
84 type='FLOAT'
85 name (SimpleName)
86 identifier='q2'
87 type (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='Quaternionf'
90 statement (ExpressionStmt)
91 expression (VariableDeclarationExpr)
92 variables
93 variable (VariableDeclarator)
94 initializer (ObjectCreationExpr)
95 type (ClassOrInterfaceType)
96 name (SimpleName)
97 identifier='Quaternionf'
98 name (SimpleName)
99 identifier='dest'
100 type (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='Quaternionf'
103 statement (ExpressionStmt)
104 expression (VariableDeclarationExpr)
105 variables
106 variable (VariableDeclarator)
107 initializer (ObjectCreationExpr)
108 type (ClassOrInterfaceType)
109 name (SimpleName)
110 identifier='QuaternionfInterpolator'
111 name (SimpleName)
112 identifier='inter'
113 type (ClassOrInterfaceType)
114 name (SimpleName)
115 identifier='QuaternionfInterpolator'
116 statement (ExpressionStmt)
117 expression (MethodCallExpr)
118 name (SimpleName)
119 identifier='computeWeightedAverage'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='inter'
123 arguments
124 argument (ArrayCreationExpr)
125 elementType (ClassOrInterfaceType)
126 name (SimpleName)
127 identifier='Quaternionf'
128 initializer (ArrayInitializerExpr)
129 values
130 value (NameExpr)
131 name (SimpleName)
132 identifier='q0'
133 value (NameExpr)
134 name (SimpleName)
135 identifier='q1'
136 value (NameExpr)
137 name (SimpleName)
138 identifier='q2'
139 levels
140 level (ArrayCreationLevel)
141 argument (ArrayCreationExpr)
142 elementType (PrimitiveType)
143 type='FLOAT'
144 initializer (ArrayInitializerExpr)
145 values
146 value (BinaryExpr)
147 operator='DIVIDE'
148 left (DoubleLiteralExpr)
149 value='1.0f'
150 right (DoubleLiteralExpr)
151 value='3.0f'
152 value (BinaryExpr)
153 operator='DIVIDE'
154 left (DoubleLiteralExpr)
155 value='1.0f'
156 right (DoubleLiteralExpr)
157 value='3.0f'
158 value (BinaryExpr)
159 operator='DIVIDE'
160 left (DoubleLiteralExpr)
161 value='1.0f'
162 right (DoubleLiteralExpr)
163 value='3.0f'
164 levels
165 level (ArrayCreationLevel)
166 argument (IntegerLiteralExpr)
167 value='30'
168 argument (NameExpr)
169 name (SimpleName)
170 identifier='dest'
171 statement (ExpressionStmt)
172 expression (VariableDeclarationExpr)
173 variables
174 variable (VariableDeclarator)
175 initializer (ObjectCreationExpr)
176 type (ClassOrInterfaceType)
177 name (SimpleName)
178 identifier='Vector3f'
179 arguments
180 argument (IntegerLiteralExpr)
181 value='0'
182 argument (IntegerLiteralExpr)
183 value='0'
184 argument (IntegerLiteralExpr)
185 value='1'
186 name (SimpleName)
187 identifier='v'
188 type (ClassOrInterfaceType)
189 name (SimpleName)
190 identifier='Vector3f'
191 statement (ExpressionStmt)
192 expression (MethodCallExpr)
193 name (SimpleName)
194 identifier='transform'
195 scope (NameExpr)
196 name (SimpleName)
197 identifier='dest'
198 arguments
199 argument (NameExpr)
200 name (SimpleName)
201 identifier='v'
202 statement (ExpressionStmt)
203 expression (MethodCallExpr)
204 name (SimpleName)
205 identifier='assertEquals'
206 arguments
207 argument (DoubleLiteralExpr)
208 value='1.0f'
209 argument (MethodCallExpr)
210 name (SimpleName)
211 identifier='length'
212 scope (NameExpr)
213 name (SimpleName)
214 identifier='v'
215 argument (DoubleLiteralExpr)
216 value='1E-6f'
217 statement (ExpressionStmt)
218 expression (MethodCallExpr)
219 name (SimpleName)
220 identifier='assertVector3fEquals'
221 scope (NameExpr)
222 name (SimpleName)
223 identifier='TestUtil'
224 arguments
225 argument (ObjectCreationExpr)
226 type (ClassOrInterfaceType)
227 name (SimpleName)
228 identifier='Vector3f'
229 arguments
230 argument (BinaryExpr)
231 operator='DIVIDE'
232 left (DoubleLiteralExpr)
233 value='2.0f'
234 right (DoubleLiteralExpr)
235 value='3.0f'
236 argument (BinaryExpr)
237 operator='DIVIDE'
238 left (UnaryExpr)
239 operator='MINUS'
240 expression (DoubleLiteralExpr)
241 value='1.0f'
242 right (DoubleLiteralExpr)
243 value='3.0f'
244 argument (BinaryExpr)
245 operator='DIVIDE'
246 left (DoubleLiteralExpr)
247 value='2.0f'
248 right (DoubleLiteralExpr)
249 value='3.0f'
250 argument (NameExpr)
251 name (SimpleName)
252 identifier='v'
253 argument (DoubleLiteralExpr)
254 value='1E-6f'
255 type (VoidType)
256 name (SimpleName)
257 identifier='testOneThird'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
7 14
14 15
15 16
16 17
17 18
16 19
19 20
20 21
16 22
22 23
23 24
15 25
25 26
6 27
27 28
6 29
29 30
30 31
2 32
32 33
33 34
34 35
35 36
36 37
37 38
36 39
39 40
40 41
41 42
36 43
43 44
44 45
45 46
46 47
45 48
48 49
49 50
45 51
51 52
52 53
44 54
54 55
35 56
56 57
35 58
58 59
59 60
2 61
61 62
62 63
63 64
64 65
65 66
66 67
65 68
68 69
69 70
70 71
65 72
72 73
73 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
73 83
83 84
64 85
85 86
64 87
87 88
88 89
2 90
90 91
91 92
92 93
93 94
94 95
95 96
96 97
93 98
98 99
93 100
100 101
101 102
2 103
103 104
104 105
105 106
106 107
107 108
108 109
109 110
106 111
111 112
106 113
113 114
114 115
2 116
116 117
117 118
118 119
117 120
120 121
121 122
117 123
123 124
124 125
125 126
126 127
124 128
128 129
129 130
130 131
131 132
129 133
133 134
134 135
129 136
136 137
137 138
124 139
139 140
123 141
141 142
142 143
141 144
144 145
145 146
146 147
146 148
148 149
146 150
150 151
145 152
152 153
152 154
154 155
152 156
156 157
145 158
158 159
158 160
160 161
158 162
162 163
141 164
164 165
123 166
166 167
123 168
168 169
169 170
2 171
171 172
172 173
173 174
174 175
175 176
176 177
177 178
175 179
179 180
180 181
179 182
182 183
179 184
184 185
174 186
186 187
174 188
188 189
189 190
2 191
191 192
192 193
193 194
192 195
195 196
196 197
192 198
198 199
199 200
200 201
2 202
202 203
203 204
204 205
203 206
206 207
207 208
206 209
209 210
210 211
209 212
212 213
213 214
206 215
215 216
2 217
217 218
218 219
219 220
218 221
221 222
222 223
218 224
224 225
225 226
226 227
227 228
225 229
229 230
230 231
230 232
232 233
230 234
234 235
229 236
236 237
236 238
238 239
238 240
240 241
236 242
242 243
229 244
244 245
244 246
246 247
244 248
248 249
224 250
250 251
251 252
224 253
253 254
0 255
0 256
256 257

Average between three quaternions, each with a weight of 1/3.
