103
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='clazz'
9 value (NameExpr)
10 name (SimpleName)
11 identifier='clz'
12 statement (ExpressionStmt)
13 expression (AssignExpr)
14 operator='ASSIGN'
15 target (NameExpr)
16 name (SimpleName)
17 identifier='methods'
18 value (ObjectCreationExpr)
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='SootMethodList'
22 statement (ExpressionStmt)
23 expression (AssignExpr)
24 operator='ASSIGN'
25 target (FieldAccessExpr)
26 name (SimpleName)
27 identifier='cloneAllMethods'
28 scope (ThisExpr)
29 value (NameExpr)
30 name (SimpleName)
31 identifier='allMethods'
32 statement (ExpressionStmt)
33 expression (AssignExpr)
34 operator='ASSIGN'
35 target (FieldAccessExpr)
36 name (SimpleName)
37 identifier='clonedToOriginal'
38 scope (ThisExpr)
39 value (MethodCallExpr)
40 name (SimpleName)
41 identifier='create'
42 scope (NameExpr)
43 name (SimpleName)
44 identifier='HashBiMap'
45 statement (ExpressionStmt)
46 expression (AssignExpr)
47 operator='ASSIGN'
48 target (FieldAccessExpr)
49 name (SimpleName)
50 identifier='copyClassifications'
51 scope (ThisExpr)
52 value (NameExpr)
53 name (SimpleName)
54 identifier='copyClassifications'
55 statement (ForeachStmt)
56 body (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='addMethod'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='methods'
63 arguments
64 argument (NameExpr)
65 name (SimpleName)
66 identifier='method'
67 iterable (MethodCallExpr)
68 name (SimpleName)
69 identifier='getMethods'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='clazz'
73 variable (VariableDeclarationExpr)
74 variables
75 variable (VariableDeclarator)
76 name (SimpleName)
77 identifier='method'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='SootMethod'
81 name (SimpleName)
82 identifier='CloneInheritedMethods'
83 parameters
84 parameter (Parameter)
85 isVarArgs='false'
86 name (SimpleName)
87 identifier='clz'
88 type (ClassOrInterfaceType)
89 name (SimpleName)
90 identifier='SootClass'
91 parameter (Parameter)
92 isVarArgs='false'
93 name (SimpleName)
94 identifier='allMethods'
95 type (PrimitiveType)
96 type='BOOLEAN'
97 parameter (Parameter)
98 isVarArgs='false'
99 name (SimpleName)
100 identifier='copyClassifications'
101 type (PrimitiveType)
102 type='BOOLEAN'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
2 12
12 13
13 14
13 15
15 16
16 17
13 18
18 19
19 20
20 21
2 22
22 23
23 24
23 25
25 26
26 27
25 28
23 29
29 30
30 31
2 32
32 33
33 34
33 35
35 36
36 37
35 38
33 39
39 40
40 41
39 42
42 43
43 44
2 45
45 46
46 47
46 48
48 49
49 50
48 51
46 52
52 53
53 54
2 55
55 56
56 57
57 58
58 59
57 60
60 61
61 62
57 63
63 64
64 65
65 66
55 67
67 68
68 69
67 70
70 71
71 72
55 73
73 74
74 75
75 76
76 77
75 78
78 79
79 80
0 81
81 82
0 83
83 84
84 85
84 86
86 87
84 88
88 89
89 90
83 91
91 92
91 93
93 94
91 95
95 96
83 97
97 98
97 99
99 100
97 101
101 102

Clone inherited method and fix up code.   If allMethods == true, then clone all methods, otherwise, just clone reachable methods If copyClassifications == true, then copy the classifications (spec, ban, safe, system)  from the original method to the clone
