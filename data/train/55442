69
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='applyMatrix'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='g'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='n00'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='n01'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='n02'
20 argument (NameExpr)
21 name (SimpleName)
22 identifier='n10'
23 argument (NameExpr)
24 name (SimpleName)
25 identifier='n11'
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='n12'
29 type (VoidType)
30 name (SimpleName)
31 identifier='applyMatrix'
32 parameters
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='n00'
37 type (PrimitiveType)
38 type='FLOAT'
39 parameter (Parameter)
40 isVarArgs='false'
41 name (SimpleName)
42 identifier='n01'
43 type (PrimitiveType)
44 type='FLOAT'
45 parameter (Parameter)
46 isVarArgs='false'
47 name (SimpleName)
48 identifier='n02'
49 type (PrimitiveType)
50 type='FLOAT'
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='n10'
55 type (PrimitiveType)
56 type='FLOAT'
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='n11'
61 type (PrimitiveType)
62 type='FLOAT'
63 parameter (Parameter)
64 isVarArgs='false'
65 name (SimpleName)
66 identifier='n12'
67 type (PrimitiveType)
68 type='FLOAT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
10 17
17 18
18 19
10 20
20 21
21 22
10 23
23 24
24 25
10 26
26 27
27 28
0 29
0 30
30 31
0 32
32 33
33 34
33 35
35 36
33 37
37 38
32 39
39 40
39 41
41 42
39 43
43 44
32 45
45 46
45 47
47 48
45 49
49 50
32 51
51 52
51 53
53 54
51 55
55 56
32 57
57 58
57 59
59 60
57 61
61 62
32 63
63 64
63 65
65 66
63 67
67 68

Apply a 3x2 affine transformation matrix.
