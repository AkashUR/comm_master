139
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (NameExpr)
5 name (SimpleName)
6 identifier='damageType'
7 entries
8 entrie (SwitchEntryStmt)
9 label (FieldAccessExpr)
10 name (SimpleName)
11 identifier='WEAPON_BURST_1D6'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='WeaponType'
15 statements
16 statement (ExpressionStmt)
17 expression (AssignExpr)
18 operator='ASSIGN'
19 target (NameExpr)
20 name (SimpleName)
21 identifier='damage'
22 value (MethodCallExpr)
23 name (SimpleName)
24 identifier='d6'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='Compute'
28 statement (BreakStmt)
29 entrie (SwitchEntryStmt)
30 label (FieldAccessExpr)
31 name (SimpleName)
32 identifier='WEAPON_BURST_3D6'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='WeaponType'
36 statements
37 statement (ExpressionStmt)
38 expression (AssignExpr)
39 operator='ASSIGN'
40 target (NameExpr)
41 name (SimpleName)
42 identifier='damage'
43 value (MethodCallExpr)
44 name (SimpleName)
45 identifier='d6'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='Compute'
49 arguments
50 argument (IntegerLiteralExpr)
51 value='3'
52 statement (BreakStmt)
53 entrie (SwitchEntryStmt)
54 label (FieldAccessExpr)
55 name (SimpleName)
56 identifier='WEAPON_PLASMA'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='WeaponType'
60 statements
61 statement (IfStmt)
62 condition (UnaryExpr)
63 operator='LOGICAL_COMPLEMENT'
64 expression (MethodCallExpr)
65 name (SimpleName)
66 identifier='isFireResistant'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='target'
70 thenStmt (BlockStmt)
71 statements
72 statement (ExpressionStmt)
73 expression (AssignExpr)
74 operator='ASSIGN'
75 target (NameExpr)
76 name (SimpleName)
77 identifier='damage'
78 value (BinaryExpr)
79 operator='PLUS'
80 left (IntegerLiteralExpr)
81 value='1'
82 right (MethodCallExpr)
83 name (SimpleName)
84 identifier='d6'
85 scope (NameExpr)
86 name (SimpleName)
87 identifier='Compute'
88 arguments
89 argument (IntegerLiteralExpr)
90 value='1'
91 statement (BreakStmt)
92 statement (ExpressionStmt)
93 expression (AssignExpr)
94 operator='ASSIGN'
95 target (NameExpr)
96 name (SimpleName)
97 identifier='damage'
98 value (MethodCallExpr)
99 name (SimpleName)
100 identifier='ceil'
101 scope (NameExpr)
102 name (SimpleName)
103 identifier='Math'
104 arguments
105 argument (NameExpr)
106 name (SimpleName)
107 identifier='damage'
108 statement (ReturnStmt)
109 expression (CastExpr)
110 expression (NameExpr)
111 name (SimpleName)
112 identifier='damage'
113 type (PrimitiveType)
114 type='INT'
115 type (PrimitiveType)
116 type='INT'
117 name (SimpleName)
118 identifier='directBlowBADamage'
119 parameters
120 parameter (Parameter)
121 isVarArgs='false'
122 name (SimpleName)
123 identifier='damage'
124 type (PrimitiveType)
125 type='DOUBLE'
126 parameter (Parameter)
127 isVarArgs='false'
128 name (SimpleName)
129 identifier='damageType'
130 type (PrimitiveType)
131 type='INT'
132 parameter (Parameter)
133 isVarArgs='false'
134 name (SimpleName)
135 identifier='target'
136 type (ClassOrInterfaceType)
137 name (SimpleName)
138 identifier='BattleArmor'
0 1
1 2
2 3
3 4
4 5
5 6
3 7
7 8
8 9
9 10
10 11
9 12
12 13
13 14
8 15
15 16
16 17
17 18
17 19
19 20
20 21
17 22
22 23
23 24
22 25
25 26
26 27
15 28
7 29
29 30
30 31
31 32
30 33
33 34
34 35
29 36
36 37
37 38
38 39
38 40
40 41
41 42
38 43
43 44
44 45
43 46
46 47
47 48
43 49
49 50
50 51
36 52
7 53
53 54
54 55
55 56
54 57
57 58
58 59
53 60
60 61
61 62
62 63
62 64
64 65
65 66
64 67
67 68
68 69
61 70
70 71
71 72
72 73
73 74
73 75
75 76
76 77
73 78
78 79
78 80
80 81
78 82
82 83
83 84
82 85
85 86
86 87
82 88
88 89
89 90
60 91
2 92
92 93
93 94
93 95
95 96
96 97
93 98
98 99
99 100
98 101
101 102
102 103
98 104
104 105
105 106
106 107
2 108
108 109
109 110
110 111
111 112
109 113
113 114
0 115
115 116
0 117
117 118
0 119
119 120
120 121
120 122
122 123
120 124
124 125
119 126
126 127
126 128
128 129
126 130
130 131
119 132
132 133
132 134
134 135
132 136
136 137
137 138

Returns how much damage a weapon will do against against a BattleArmor target if the BattleArmor vs BattleArmor rules on TO pg 109 are in effect.
