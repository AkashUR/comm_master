135
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getMetaData'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='con'
13 name (SimpleName)
14 identifier='dbmd'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='DatabaseMetaData'
18 statement (ExpressionStmt)
19 expression (MethodCallExpr)
20 name (SimpleName)
21 identifier='assertTrue'
22 arguments
23 argument (StringLiteralExpr)
24 value='getDatabaseMajorVersion'
25 argument (BinaryExpr)
26 operator='GREATER_EQUALS'
27 left (MethodCallExpr)
28 name (SimpleName)
29 identifier='getDatabaseMajorVersion'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='dbmd'
33 right (IntegerLiteralExpr)
34 value='0'
35 statement (ExpressionStmt)
36 expression (MethodCallExpr)
37 name (SimpleName)
38 identifier='assertTrue'
39 arguments
40 argument (StringLiteralExpr)
41 value='getDatabaseMinorVersion'
42 argument (BinaryExpr)
43 operator='GREATER_EQUALS'
44 left (MethodCallExpr)
45 name (SimpleName)
46 identifier='getDatabaseMinorVersion'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='dbmd'
50 right (IntegerLiteralExpr)
51 value='0'
52 statement (ExpressionStmt)
53 expression (MethodCallExpr)
54 name (SimpleName)
55 identifier='assertEquals'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='Assert'
59 arguments
60 argument (StringLiteralExpr)
61 value='getResultSetHoldability'
62 argument (FieldAccessExpr)
63 name (SimpleName)
64 identifier='HOLD_CURSORS_OVER_COMMIT'
65 scope (NameExpr)
66 name (SimpleName)
67 identifier='ResultSet'
68 argument (MethodCallExpr)
69 name (SimpleName)
70 identifier='getResultSetHoldability'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='dbmd'
74 statement (ExpressionStmt)
75 expression (MethodCallExpr)
76 name (SimpleName)
77 identifier='assertEquals'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='Assert'
81 arguments
82 argument (StringLiteralExpr)
83 value='getSQLStateType'
84 argument (IntegerLiteralExpr)
85 value='1'
86 argument (MethodCallExpr)
87 name (SimpleName)
88 identifier='getSQLStateType'
89 scope (NameExpr)
90 name (SimpleName)
91 identifier='dbmd'
92 statement (ExpressionStmt)
93 expression (MethodCallExpr)
94 name (SimpleName)
95 identifier='assertEquals'
96 scope (NameExpr)
97 name (SimpleName)
98 identifier='Assert'
99 arguments
100 argument (StringLiteralExpr)
101 value='getJDBCMajorVersion'
102 argument (IntegerLiteralExpr)
103 value='3'
104 argument (MethodCallExpr)
105 name (SimpleName)
106 identifier='getJDBCMajorVersion'
107 scope (NameExpr)
108 name (SimpleName)
109 identifier='dbmd'
110 statement (ExpressionStmt)
111 expression (MethodCallExpr)
112 name (SimpleName)
113 identifier='assertEquals'
114 scope (NameExpr)
115 name (SimpleName)
116 identifier='Assert'
117 arguments
118 argument (StringLiteralExpr)
119 value='getJDBCMinorVersion'
120 argument (IntegerLiteralExpr)
121 value='0'
122 argument (MethodCallExpr)
123 name (SimpleName)
124 identifier='getJDBCMinorVersion'
125 scope (NameExpr)
126 name (SimpleName)
127 identifier='dbmd'
128 type (VoidType)
129 name (SimpleName)
130 identifier='testIntOptions'
131 thrownExceptions
132 thrownException (ClassOrInterfaceType)
133 name (SimpleName)
134 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
19 22
22 23
23 24
22 25
25 26
25 27
27 28
28 29
27 30
30 31
31 32
25 33
33 34
2 35
35 36
36 37
37 38
36 39
39 40
40 41
39 42
42 43
42 44
44 45
45 46
44 47
47 48
48 49
42 50
50 51
2 52
52 53
53 54
54 55
53 56
56 57
57 58
53 59
59 60
60 61
59 62
62 63
63 64
62 65
65 66
66 67
59 68
68 69
69 70
68 71
71 72
72 73
2 74
74 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
82 83
81 84
84 85
81 86
86 87
87 88
86 89
89 90
90 91
2 92
92 93
93 94
94 95
93 96
96 97
97 98
93 99
99 100
100 101
99 102
102 103
99 104
104 105
105 106
104 107
107 108
108 109
2 110
110 111
111 112
112 113
111 114
114 115
115 116
111 117
117 118
118 119
117 120
120 121
117 122
122 123
123 124
122 125
125 126
126 127
0 128
0 129
129 130
0 131
131 132
132 133
133 134

Test meta data function that return integer values.
