254
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='cmd'
9 argument (NullLiteralExpr)
10 argument (NameExpr)
11 name (SimpleName)
12 identifier='port'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='host'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='hostName'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='version'
29 scope (ThisExpr)
30 value (NameExpr)
31 name (SimpleName)
32 identifier='SOCKS_VERSION'
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (NameExpr)
37 name (SimpleName)
38 identifier='addrType'
39 value (NameExpr)
40 name (SimpleName)
41 identifier='SOCKS_ATYP_DOMAINNAME'
42 statement (ExpressionStmt)
43 expression (VariableDeclarationExpr)
44 variables
45 variable (VariableDeclarator)
46 initializer (MethodCallExpr)
47 name (SimpleName)
48 identifier='getBytes'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='hostName'
52 name (SimpleName)
53 identifier='addr'
54 type (ArrayType)
55 origin='NAME'
56 componentType (PrimitiveType)
57 type='BYTE'
58 statement (ExpressionStmt)
59 expression (AssignExpr)
60 operator='ASSIGN'
61 target (NameExpr)
62 name (SimpleName)
63 identifier='data'
64 value (ArrayCreationExpr)
65 elementType (PrimitiveType)
66 type='BYTE'
67 levels
68 level (ArrayCreationLevel)
69 dimension (BinaryExpr)
70 operator='PLUS'
71 left (IntegerLiteralExpr)
72 value='7'
73 right (FieldAccessExpr)
74 name (SimpleName)
75 identifier='length'
76 scope (NameExpr)
77 name (SimpleName)
78 identifier='addr'
79 statement (ExpressionStmt)
80 expression (AssignExpr)
81 operator='ASSIGN'
82 target (ArrayAccessExpr)
83 index (IntegerLiteralExpr)
84 value='0'
85 name (NameExpr)
86 name (SimpleName)
87 identifier='data'
88 value (CastExpr)
89 expression (NameExpr)
90 name (SimpleName)
91 identifier='SOCKS_VERSION'
92 type (PrimitiveType)
93 type='BYTE'
94 statement (ExpressionStmt)
95 expression (AssignExpr)
96 operator='ASSIGN'
97 target (ArrayAccessExpr)
98 index (IntegerLiteralExpr)
99 value='1'
100 name (NameExpr)
101 name (SimpleName)
102 identifier='data'
103 value (CastExpr)
104 expression (NameExpr)
105 name (SimpleName)
106 identifier='command'
107 type (PrimitiveType)
108 type='BYTE'
109 statement (ExpressionStmt)
110 expression (AssignExpr)
111 operator='ASSIGN'
112 target (ArrayAccessExpr)
113 index (IntegerLiteralExpr)
114 value='2'
115 name (NameExpr)
116 name (SimpleName)
117 identifier='data'
118 value (CastExpr)
119 expression (IntegerLiteralExpr)
120 value='0'
121 type (PrimitiveType)
122 type='BYTE'
123 statement (ExpressionStmt)
124 expression (AssignExpr)
125 operator='ASSIGN'
126 target (ArrayAccessExpr)
127 index (IntegerLiteralExpr)
128 value='3'
129 name (NameExpr)
130 name (SimpleName)
131 identifier='data'
132 value (CastExpr)
133 expression (NameExpr)
134 name (SimpleName)
135 identifier='SOCKS_ATYP_DOMAINNAME'
136 type (PrimitiveType)
137 type='BYTE'
138 statement (ExpressionStmt)
139 expression (AssignExpr)
140 operator='ASSIGN'
141 target (ArrayAccessExpr)
142 index (IntegerLiteralExpr)
143 value='4'
144 name (NameExpr)
145 name (SimpleName)
146 identifier='data'
147 value (CastExpr)
148 expression (FieldAccessExpr)
149 name (SimpleName)
150 identifier='length'
151 scope (NameExpr)
152 name (SimpleName)
153 identifier='addr'
154 type (PrimitiveType)
155 type='BYTE'
156 statement (ExpressionStmt)
157 expression (MethodCallExpr)
158 name (SimpleName)
159 identifier='arraycopy'
160 scope (NameExpr)
161 name (SimpleName)
162 identifier='System'
163 arguments
164 argument (NameExpr)
165 name (SimpleName)
166 identifier='addr'
167 argument (IntegerLiteralExpr)
168 value='0'
169 argument (NameExpr)
170 name (SimpleName)
171 identifier='data'
172 argument (IntegerLiteralExpr)
173 value='5'
174 argument (FieldAccessExpr)
175 name (SimpleName)
176 identifier='length'
177 scope (NameExpr)
178 name (SimpleName)
179 identifier='addr'
180 statement (ExpressionStmt)
181 expression (AssignExpr)
182 operator='ASSIGN'
183 target (ArrayAccessExpr)
184 index (BinaryExpr)
185 operator='MINUS'
186 left (FieldAccessExpr)
187 name (SimpleName)
188 identifier='length'
189 scope (NameExpr)
190 name (SimpleName)
191 identifier='data'
192 right (IntegerLiteralExpr)
193 value='2'
194 name (NameExpr)
195 name (SimpleName)
196 identifier='data'
197 value (CastExpr)
198 expression (EnclosedExpr)
199 inner (BinaryExpr)
200 operator='SIGNED_RIGHT_SHIFT'
201 left (NameExpr)
202 name (SimpleName)
203 identifier='port'
204 right (IntegerLiteralExpr)
205 value='8'
206 type (PrimitiveType)
207 type='BYTE'
208 statement (ExpressionStmt)
209 expression (AssignExpr)
210 operator='ASSIGN'
211 target (ArrayAccessExpr)
212 index (BinaryExpr)
213 operator='MINUS'
214 left (FieldAccessExpr)
215 name (SimpleName)
216 identifier='length'
217 scope (NameExpr)
218 name (SimpleName)
219 identifier='data'
220 right (IntegerLiteralExpr)
221 value='1'
222 name (NameExpr)
223 name (SimpleName)
224 identifier='data'
225 value (CastExpr)
226 expression (EnclosedExpr)
227 inner (NameExpr)
228 name (SimpleName)
229 identifier='port'
230 type (PrimitiveType)
231 type='BYTE'
232 name (SimpleName)
233 identifier='Socks5Message'
234 parameters
235 parameter (Parameter)
236 isVarArgs='false'
237 name (SimpleName)
238 identifier='cmd'
239 type (PrimitiveType)
240 type='INT'
241 parameter (Parameter)
242 isVarArgs='false'
243 name (SimpleName)
244 identifier='hostName'
245 type (ClassOrInterfaceType)
246 name (SimpleName)
247 identifier='String'
248 parameter (Parameter)
249 isVarArgs='false'
250 name (SimpleName)
251 identifier='port'
252 type (PrimitiveType)
253 type='INT'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
5 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
2 33
33 34
34 35
34 36
36 37
37 38
34 39
39 40
40 41
2 42
42 43
43 44
44 45
45 46
46 47
47 48
46 49
49 50
50 51
45 52
52 53
45 54
54 55
54 56
56 57
2 58
58 59
59 60
59 61
61 62
62 63
59 64
64 65
65 66
64 67
67 68
68 69
69 70
69 71
71 72
69 73
73 74
74 75
73 76
76 77
77 78
2 79
79 80
80 81
80 82
82 83
83 84
82 85
85 86
86 87
80 88
88 89
89 90
90 91
88 92
92 93
2 94
94 95
95 96
95 97
97 98
98 99
97 100
100 101
101 102
95 103
103 104
104 105
105 106
103 107
107 108
2 109
109 110
110 111
110 112
112 113
113 114
112 115
115 116
116 117
110 118
118 119
119 120
118 121
121 122
2 123
123 124
124 125
124 126
126 127
127 128
126 129
129 130
130 131
124 132
132 133
133 134
134 135
132 136
136 137
2 138
138 139
139 140
139 141
141 142
142 143
141 144
144 145
145 146
139 147
147 148
148 149
149 150
148 151
151 152
152 153
147 154
154 155
2 156
156 157
157 158
158 159
157 160
160 161
161 162
157 163
163 164
164 165
165 166
163 167
167 168
163 169
169 170
170 171
163 172
172 173
163 174
174 175
175 176
174 177
177 178
178 179
2 180
180 181
181 182
181 183
183 184
184 185
184 186
186 187
187 188
186 189
189 190
190 191
184 192
192 193
183 194
194 195
195 196
181 197
197 198
198 199
199 200
199 201
201 202
202 203
199 204
204 205
197 206
206 207
2 208
208 209
209 210
209 211
211 212
212 213
212 214
214 215
215 216
214 217
217 218
218 219
212 220
220 221
211 222
222 223
223 224
209 225
225 226
226 227
227 228
228 229
225 230
230 231
0 232
232 233
0 234
234 235
235 236
235 237
237 238
235 239
239 240
234 241
241 242
241 243
243 244
241 245
245 246
246 247
234 248
248 249
248 250
250 251
248 252
252 253

Construct client request or server response.
