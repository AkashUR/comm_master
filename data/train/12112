67
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 statement (ExpressionStmt)
6 expression (AssignExpr)
7 operator='ASSIGN'
8 target (FieldAccessExpr)
9 name (SimpleName)
10 identifier='numEntries'
11 scope (ThisExpr)
12 value (IntegerLiteralExpr)
13 value='0'
14 statement (ExpressionStmt)
15 expression (AssignExpr)
16 operator='ASSIGN'
17 target (FieldAccessExpr)
18 name (SimpleName)
19 identifier='entries'
20 scope (ThisExpr)
21 value (ArrayCreationExpr)
22 elementType (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='Entry'
25 levels
26 level (ArrayCreationLevel)
27 dimension (NameExpr)
28 name (SimpleName)
29 identifier='capacity'
30 statement (ExpressionStmt)
31 expression (AssignExpr)
32 operator='ASSIGN'
33 target (FieldAccessExpr)
34 name (SimpleName)
35 identifier='isLeaf'
36 scope (ThisExpr)
37 value (NameExpr)
38 name (SimpleName)
39 identifier='isLeaf'
40 name (SimpleName)
41 identifier='AbstractNode'
42 parameters
43 parameter (Parameter)
44 isVarArgs='false'
45 name (SimpleName)
46 identifier='capacity'
47 type (PrimitiveType)
48 type='INT'
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='isLeaf'
53 type (PrimitiveType)
54 type='BOOLEAN'
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='eclass'
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='Class'
62 typeArguments
63 typeArgument (WildcardType)
64 superType (ClassOrInterfaceType)
65 name (SimpleName)
66 identifier='E'
0 1
1 2
2 3
3 4
2 5
5 6
6 7
6 8
8 9
9 10
8 11
6 12
12 13
2 14
14 15
15 16
15 17
17 18
18 19
17 20
15 21
21 22
22 23
23 24
21 25
25 26
26 27
27 28
28 29
2 30
30 31
31 32
31 33
33 34
34 35
33 36
31 37
37 38
38 39
0 40
40 41
0 42
42 43
43 44
43 45
45 46
43 47
47 48
42 49
49 50
49 51
51 52
49 53
53 54
42 55
55 56
55 57
57 58
55 59
59 60
60 61
59 62
62 63
63 64
64 65
65 66

Creates a new Node with the specified parameters.
