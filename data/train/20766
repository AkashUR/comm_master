116
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='g'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='g'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='nev'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='nev'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='sourceMap'
29 scope (ThisExpr)
30 value (ObjectCreationExpr)
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='HashMap'
34 typeArguments
35 typeArgument (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='V'
38 typeArgument (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='SourceData'
41 statement (ExpressionStmt)
42 expression (AssignExpr)
43 operator='ASSIGN'
44 target (FieldAccessExpr)
45 name (SimpleName)
46 identifier='cached'
47 scope (ThisExpr)
48 value (NameExpr)
49 name (SimpleName)
50 identifier='cached'
51 statement (ExpressionStmt)
52 expression (AssignExpr)
53 operator='ASSIGN'
54 target (FieldAccessExpr)
55 name (SimpleName)
56 identifier='max_distance'
57 scope (ThisExpr)
58 value (FieldAccessExpr)
59 name (SimpleName)
60 identifier='POSITIVE_INFINITY'
61 scope (NameExpr)
62 name (SimpleName)
63 identifier='Double'
64 statement (ExpressionStmt)
65 expression (AssignExpr)
66 operator='ASSIGN'
67 target (FieldAccessExpr)
68 name (SimpleName)
69 identifier='max_targets'
70 scope (ThisExpr)
71 value (FieldAccessExpr)
72 name (SimpleName)
73 identifier='MAX_VALUE'
74 scope (NameExpr)
75 name (SimpleName)
76 identifier='Integer'
77 name (SimpleName)
78 identifier='DijkstraDistance'
79 parameters
80 parameter (Parameter)
81 isVarArgs='false'
82 name (SimpleName)
83 identifier='g'
84 type (ClassOrInterfaceType)
85 name (SimpleName)
86 identifier='Hypergraph'
87 typeArguments
88 typeArgument (ClassOrInterfaceType)
89 name (SimpleName)
90 identifier='V'
91 typeArgument (ClassOrInterfaceType)
92 name (SimpleName)
93 identifier='E'
94 parameter (Parameter)
95 isVarArgs='false'
96 name (SimpleName)
97 identifier='nev'
98 type (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='Function'
101 typeArguments
102 typeArgument (WildcardType)
103 superType (ClassOrInterfaceType)
104 name (SimpleName)
105 identifier='E'
106 typeArgument (WildcardType)
107 extendedType (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='Number'
110 parameter (Parameter)
111 isVarArgs='false'
112 name (SimpleName)
113 identifier='cached'
114 type (PrimitiveType)
115 type='BOOLEAN'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
32 33
31 34
34 35
35 36
36 37
34 38
38 39
39 40
2 41
41 42
42 43
42 44
44 45
45 46
44 47
42 48
48 49
49 50
2 51
51 52
52 53
52 54
54 55
55 56
54 57
52 58
58 59
59 60
58 61
61 62
62 63
2 64
64 65
65 66
65 67
67 68
68 69
67 70
65 71
71 72
72 73
71 74
74 75
75 76
0 77
77 78
0 79
79 80
80 81
80 82
82 83
80 84
84 85
85 86
84 87
87 88
88 89
89 90
87 91
91 92
92 93
79 94
94 95
94 96
96 97
94 98
98 99
99 100
98 101
101 102
102 103
103 104
104 105
101 106
106 107
107 108
108 109
79 110
110 111
110 112
112 113
110 114
114 115

<p>Creates an instance of <code>DijkstraShortestPath</code> for  the specified graph and the specified method of extracting weights  from edges, which caches results locally if and only if  <code>cached</code> is <code>true</code>.
