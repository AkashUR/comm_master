101
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='defaultInstance'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='TypeFactory'
13 name (SimpleName)
14 identifier='tf'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='TypeFactory'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (MethodCallExpr)
23 name (SimpleName)
24 identifier='constructType'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='tf'
28 arguments
29 argument (ClassExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='IntLongMap'
33 name (SimpleName)
34 identifier='type'
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='JavaType'
38 statement (ExpressionStmt)
39 expression (VariableDeclarationExpr)
40 variables
41 variable (VariableDeclarator)
42 initializer (CastExpr)
43 expression (NameExpr)
44 name (SimpleName)
45 identifier='type'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='MapType'
49 name (SimpleName)
50 identifier='mapType'
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='MapType'
54 statement (ExpressionStmt)
55 expression (MethodCallExpr)
56 name (SimpleName)
57 identifier='assertEquals'
58 arguments
59 argument (MethodCallExpr)
60 name (SimpleName)
61 identifier='constructType'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='tf'
65 arguments
66 argument (ClassExpr)
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='Integer'
70 argument (MethodCallExpr)
71 name (SimpleName)
72 identifier='getKeyType'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='mapType'
76 statement (ExpressionStmt)
77 expression (MethodCallExpr)
78 name (SimpleName)
79 identifier='assertEquals'
80 arguments
81 argument (MethodCallExpr)
82 name (SimpleName)
83 identifier='constructType'
84 scope (NameExpr)
85 name (SimpleName)
86 identifier='tf'
87 arguments
88 argument (ClassExpr)
89 type (ClassOrInterfaceType)
90 name (SimpleName)
91 identifier='Long'
92 argument (MethodCallExpr)
93 name (SimpleName)
94 identifier='getContentType'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='mapType'
98 type (VoidType)
99 name (SimpleName)
100 identifier='testMapTypesSneaky'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
30 31
31 32
21 33
33 34
21 35
35 36
36 37
2 38
38 39
39 40
40 41
41 42
42 43
43 44
44 45
42 46
46 47
47 48
41 49
49 50
41 51
51 52
52 53
2 54
54 55
55 56
56 57
55 58
58 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
68 69
58 70
70 71
71 72
70 73
73 74
74 75
2 76
76 77
77 78
78 79
77 80
80 81
81 82
82 83
81 84
84 85
85 86
81 87
87 88
88 89
89 90
90 91
80 92
92 93
93 94
92 95
95 96
96 97
0 98
0 99
99 100

Specific test to verify that complicate name mangling schemes do not fool type resolver
