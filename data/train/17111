129
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='items'
9 statement (ExpressionStmt)
10 expression (MethodCallExpr)
11 name (SimpleName)
12 identifier='initTable'
13 statement (ExpressionStmt)
14 expression (MethodCallExpr)
15 name (SimpleName)
16 identifier='initCells'
17 statement (ExpressionStmt)
18 expression (AssignExpr)
19 operator='ASSIGN'
20 target (FieldAccessExpr)
21 name (SimpleName)
22 identifier='allItems'
23 scope (ThisExpr)
24 value (NameExpr)
25 name (SimpleName)
26 identifier='items'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (FieldAccessExpr)
31 name (SimpleName)
32 identifier='skippedKeys'
33 scope (ThisExpr)
34 value (NameExpr)
35 name (SimpleName)
36 identifier='skipKeys'
37 statement (ExpressionStmt)
38 expression (MethodCallExpr)
39 name (SimpleName)
40 identifier='setKeyMaxWidth'
41 arguments
42 argument (ConditionalExpr)
43 condition (BinaryExpr)
44 operator='EQUALS'
45 left (NameExpr)
46 name (SimpleName)
47 identifier='keyMaxWidth'
48 right (NullLiteralExpr)
49 elseExpr (NameExpr)
50 name (SimpleName)
51 identifier='keyMaxWidth'
52 thenExpr (FieldAccessExpr)
53 name (SimpleName)
54 identifier='MIN_VALUE'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='Double'
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='setValueMaxWidth'
62 arguments
63 argument (ConditionalExpr)
64 condition (BinaryExpr)
65 operator='EQUALS'
66 left (NameExpr)
67 name (SimpleName)
68 identifier='valueMaxWidth'
69 right (NullLiteralExpr)
70 elseExpr (NameExpr)
71 name (SimpleName)
72 identifier='valueMaxWidth'
73 thenExpr (FieldAccessExpr)
74 name (SimpleName)
75 identifier='MIN_VALUE'
76 scope (NameExpr)
77 name (SimpleName)
78 identifier='Double'
79 statement (ExpressionStmt)
80 expression (MethodCallExpr)
81 name (SimpleName)
82 identifier='filterItems'
83 name (SimpleName)
84 identifier='KeyValueTableView'
85 parameters
86 parameter (Parameter)
87 isVarArgs='false'
88 name (SimpleName)
89 identifier='items'
90 type (ClassOrInterfaceType)
91 name (SimpleName)
92 identifier='ObservableList'
93 typeArguments
94 typeArgument (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='Pair'
97 typeArguments
98 typeArgument (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='K'
101 typeArgument (ClassOrInterfaceType)
102 name (SimpleName)
103 identifier='V'
104 parameter (Parameter)
105 isVarArgs='false'
106 name (SimpleName)
107 identifier='skipKeys'
108 type (ClassOrInterfaceType)
109 name (SimpleName)
110 identifier='ObservableList'
111 typeArguments
112 typeArgument (ClassOrInterfaceType)
113 name (SimpleName)
114 identifier='K'
115 parameter (Parameter)
116 isVarArgs='false'
117 name (SimpleName)
118 identifier='keyMaxWidth'
119 type (ClassOrInterfaceType)
120 name (SimpleName)
121 identifier='Double'
122 parameter (Parameter)
123 isVarArgs='false'
124 name (SimpleName)
125 identifier='valueMaxWidth'
126 type (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='Double'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
2 9
9 10
10 11
11 12
2 13
13 14
14 15
15 16
2 17
17 18
18 19
18 20
20 21
21 22
20 23
18 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
30 33
28 34
34 35
35 36
2 37
37 38
38 39
39 40
38 41
41 42
42 43
43 44
43 45
45 46
46 47
43 48
42 49
49 50
50 51
42 52
52 53
53 54
52 55
55 56
56 57
2 58
58 59
59 60
60 61
59 62
62 63
63 64
64 65
64 66
66 67
67 68
64 69
63 70
70 71
71 72
63 73
73 74
74 75
73 76
76 77
77 78
2 79
79 80
80 81
81 82
0 83
83 84
0 85
85 86
86 87
86 88
88 89
86 90
90 91
91 92
90 93
93 94
94 95
95 96
94 97
97 98
98 99
99 100
97 101
101 102
102 103
85 104
104 105
104 106
106 107
104 108
108 109
109 110
108 111
111 112
112 113
113 114
85 115
115 116
115 117
117 118
115 119
119 120
120 121
85 122
122 123
122 124
124 125
122 126
126 127
127 128

Create a key value table view.
