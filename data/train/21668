236
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 scope (EnclosedExpr)
9 inner (ObjectCreationExpr)
10 type (ClassOrInterfaceType)
11 name (SimpleName)
12 identifier='SpiEngUtils'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='MyProvider'
16 arguments
17 argument (StringLiteralExpr)
18 value='MyExMechProvider'
19 argument (StringLiteralExpr)
20 value='Provider for ExemptionMechanism testing'
21 argument (MethodCallExpr)
22 name (SimpleName)
23 identifier='concat'
24 scope (MethodCallExpr)
25 name (SimpleName)
26 identifier='concat'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='srvExemptionMechanism'
30 arguments
31 argument (StringLiteralExpr)
32 value='.'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='defaultAlg'
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='ExemptionMechanismProviderClass'
40 name (SimpleName)
41 identifier='mProv'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='Provider'
45 statement (ExpressionStmt)
46 expression (VariableDeclarationExpr)
47 variables
48 variable (VariableDeclarator)
49 initializer (ObjectCreationExpr)
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='ExemptionMechanism'
53 arguments
54 argument (ObjectCreationExpr)
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='MyExemptionMechanismSpi'
58 argument (NameExpr)
59 name (SimpleName)
60 identifier='mProv'
61 argument (NameExpr)
62 name (SimpleName)
63 identifier='defaultAlg'
64 name (SimpleName)
65 identifier='em'
66 type (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='ExemptionMechanism'
69 statement (ExpressionStmt)
70 expression (VariableDeclarationExpr)
71 variables
72 variable (VariableDeclarator)
73 initializer (ObjectCreationExpr)
74 scope (ObjectCreationExpr)
75 type (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='MyExemptionMechanismSpi'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='tmpKey'
81 arguments
82 argument (StringLiteralExpr)
83 value='Proba'
84 argument (ArrayCreationExpr)
85 elementType (PrimitiveType)
86 type='BYTE'
87 levels
88 level (ArrayCreationLevel)
89 dimension (IntegerLiteralExpr)
90 value='0'
91 name (SimpleName)
92 identifier='key'
93 type (ClassOrInterfaceType)
94 name (SimpleName)
95 identifier='Key'
96 statement (ExpressionStmt)
97 expression (MethodCallExpr)
98 name (SimpleName)
99 identifier='assertFalse'
100 arguments
101 argument (MethodCallExpr)
102 name (SimpleName)
103 identifier='isCryptoAllowed'
104 scope (NameExpr)
105 name (SimpleName)
106 identifier='em'
107 arguments
108 argument (NameExpr)
109 name (SimpleName)
110 identifier='key'
111 statement (ExpressionStmt)
112 expression (MethodCallExpr)
113 name (SimpleName)
114 identifier='init'
115 scope (NameExpr)
116 name (SimpleName)
117 identifier='em'
118 arguments
119 argument (NameExpr)
120 name (SimpleName)
121 identifier='key'
122 statement (ExpressionStmt)
123 expression (MethodCallExpr)
124 name (SimpleName)
125 identifier='assertFalse'
126 arguments
127 argument (MethodCallExpr)
128 name (SimpleName)
129 identifier='isCryptoAllowed'
130 scope (NameExpr)
131 name (SimpleName)
132 identifier='em'
133 arguments
134 argument (NameExpr)
135 name (SimpleName)
136 identifier='key'
137 statement (ExpressionStmt)
138 expression (MethodCallExpr)
139 name (SimpleName)
140 identifier='genExemptionBlob'
141 scope (NameExpr)
142 name (SimpleName)
143 identifier='em'
144 statement (ExpressionStmt)
145 expression (MethodCallExpr)
146 name (SimpleName)
147 identifier='assertTrue'
148 arguments
149 argument (MethodCallExpr)
150 name (SimpleName)
151 identifier='isCryptoAllowed'
152 scope (NameExpr)
153 name (SimpleName)
154 identifier='em'
155 arguments
156 argument (NameExpr)
157 name (SimpleName)
158 identifier='key'
159 statement (ExpressionStmt)
160 expression (VariableDeclarationExpr)
161 variables
162 variable (VariableDeclarator)
163 initializer (ObjectCreationExpr)
164 scope (ObjectCreationExpr)
165 type (ClassOrInterfaceType)
166 name (SimpleName)
167 identifier='MyExemptionMechanismSpi'
168 type (ClassOrInterfaceType)
169 name (SimpleName)
170 identifier='tmpKey'
171 arguments
172 argument (StringLiteralExpr)
173 value='Proba'
174 argument (ArrayCreationExpr)
175 elementType (PrimitiveType)
176 type='BYTE'
177 initializer (ArrayInitializerExpr)
178 values
179 value (IntegerLiteralExpr)
180 value='1'
181 levels
182 level (ArrayCreationLevel)
183 name (SimpleName)
184 identifier='key1'
185 type (ClassOrInterfaceType)
186 name (SimpleName)
187 identifier='Key'
188 statement (ExpressionStmt)
189 expression (MethodCallExpr)
190 name (SimpleName)
191 identifier='assertFalse'
192 arguments
193 argument (MethodCallExpr)
194 name (SimpleName)
195 identifier='isCryptoAllowed'
196 scope (NameExpr)
197 name (SimpleName)
198 identifier='em'
199 arguments
200 argument (NameExpr)
201 name (SimpleName)
202 identifier='key1'
203 statement (ExpressionStmt)
204 expression (MethodCallExpr)
205 name (SimpleName)
206 identifier='init'
207 scope (NameExpr)
208 name (SimpleName)
209 identifier='em'
210 arguments
211 argument (NameExpr)
212 name (SimpleName)
213 identifier='key1'
214 statement (ExpressionStmt)
215 expression (MethodCallExpr)
216 name (SimpleName)
217 identifier='assertFalse'
218 arguments
219 argument (MethodCallExpr)
220 name (SimpleName)
221 identifier='isCryptoAllowed'
222 scope (NameExpr)
223 name (SimpleName)
224 identifier='em'
225 arguments
226 argument (NameExpr)
227 name (SimpleName)
228 identifier='key'
229 type (VoidType)
230 name (SimpleName)
231 identifier='testIsCryptoAllowed'
232 thrownExceptions
233 thrownException (ClassOrInterfaceType)
234 name (SimpleName)
235 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
10 11
11 12
7 13
13 14
14 15
7 16
16 17
17 18
16 19
19 20
16 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
24 30
30 31
31 32
21 33
33 34
34 35
35 36
16 37
37 38
38 39
6 40
40 41
6 42
42 43
43 44
2 45
45 46
46 47
47 48
48 49
49 50
50 51
51 52
49 53
53 54
54 55
55 56
56 57
53 58
58 59
59 60
53 61
61 62
62 63
48 64
64 65
48 66
66 67
67 68
2 69
69 70
70 71
71 72
72 73
73 74
74 75
75 76
76 77
73 78
78 79
79 80
73 81
81 82
82 83
81 84
84 85
85 86
84 87
87 88
88 89
89 90
72 91
91 92
72 93
93 94
94 95
2 96
96 97
97 98
98 99
97 100
100 101
101 102
102 103
101 104
104 105
105 106
101 107
107 108
108 109
109 110
2 111
111 112
112 113
113 114
112 115
115 116
116 117
112 118
118 119
119 120
120 121
2 122
122 123
123 124
124 125
123 126
126 127
127 128
128 129
127 130
130 131
131 132
127 133
133 134
134 135
135 136
2 137
137 138
138 139
139 140
138 141
141 142
142 143
2 144
144 145
145 146
146 147
145 148
148 149
149 150
150 151
149 152
152 153
153 154
149 155
155 156
156 157
157 158
2 159
159 160
160 161
161 162
162 163
163 164
164 165
165 166
166 167
163 168
168 169
169 170
163 171
171 172
172 173
171 174
174 175
175 176
174 177
177 178
178 179
179 180
174 181
181 182
162 183
183 184
162 185
185 186
186 187
2 188
188 189
189 190
190 191
189 192
192 193
193 194
194 195
193 196
196 197
197 198
193 199
199 200
200 201
201 202
2 203
203 204
204 205
205 206
204 207
207 208
208 209
204 210
210 211
211 212
212 213
2 214
214 215
215 216
216 217
215 218
218 219
219 220
220 221
219 222
222 223
223 224
219 225
225 226
226 227
227 228
0 229
0 230
230 231
0 232
232 233
233 234
234 235

Test for <code>isCryptoAllowed(Key key)</code> method
