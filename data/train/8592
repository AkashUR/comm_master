154
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (ArrayAccessExpr)
7 index (IntegerLiteralExpr)
8 value='0'
9 name (NameExpr)
10 name (SimpleName)
11 identifier='vo'
12 value (BinaryExpr)
13 operator='MINUS'
14 left (EnclosedExpr)
15 inner (BinaryExpr)
16 operator='MULTIPLY'
17 left (ArrayAccessExpr)
18 index (IntegerLiteralExpr)
19 value='1'
20 name (NameExpr)
21 name (SimpleName)
22 identifier='v1'
23 right (ArrayAccessExpr)
24 index (IntegerLiteralExpr)
25 value='2'
26 name (NameExpr)
27 name (SimpleName)
28 identifier='v2'
29 right (EnclosedExpr)
30 inner (BinaryExpr)
31 operator='MULTIPLY'
32 left (ArrayAccessExpr)
33 index (IntegerLiteralExpr)
34 value='2'
35 name (NameExpr)
36 name (SimpleName)
37 identifier='v1'
38 right (ArrayAccessExpr)
39 index (IntegerLiteralExpr)
40 value='1'
41 name (NameExpr)
42 name (SimpleName)
43 identifier='v2'
44 statement (ExpressionStmt)
45 expression (AssignExpr)
46 operator='ASSIGN'
47 target (ArrayAccessExpr)
48 index (IntegerLiteralExpr)
49 value='1'
50 name (NameExpr)
51 name (SimpleName)
52 identifier='vo'
53 value (BinaryExpr)
54 operator='MINUS'
55 left (EnclosedExpr)
56 inner (BinaryExpr)
57 operator='MULTIPLY'
58 left (ArrayAccessExpr)
59 index (IntegerLiteralExpr)
60 value='2'
61 name (NameExpr)
62 name (SimpleName)
63 identifier='v1'
64 right (ArrayAccessExpr)
65 index (IntegerLiteralExpr)
66 value='0'
67 name (NameExpr)
68 name (SimpleName)
69 identifier='v2'
70 right (EnclosedExpr)
71 inner (BinaryExpr)
72 operator='MULTIPLY'
73 left (ArrayAccessExpr)
74 index (IntegerLiteralExpr)
75 value='0'
76 name (NameExpr)
77 name (SimpleName)
78 identifier='v1'
79 right (ArrayAccessExpr)
80 index (IntegerLiteralExpr)
81 value='2'
82 name (NameExpr)
83 name (SimpleName)
84 identifier='v2'
85 statement (ExpressionStmt)
86 expression (AssignExpr)
87 operator='ASSIGN'
88 target (ArrayAccessExpr)
89 index (IntegerLiteralExpr)
90 value='2'
91 name (NameExpr)
92 name (SimpleName)
93 identifier='vo'
94 value (BinaryExpr)
95 operator='MINUS'
96 left (EnclosedExpr)
97 inner (BinaryExpr)
98 operator='MULTIPLY'
99 left (ArrayAccessExpr)
100 index (IntegerLiteralExpr)
101 value='0'
102 name (NameExpr)
103 name (SimpleName)
104 identifier='v1'
105 right (ArrayAccessExpr)
106 index (IntegerLiteralExpr)
107 value='1'
108 name (NameExpr)
109 name (SimpleName)
110 identifier='v2'
111 right (EnclosedExpr)
112 inner (BinaryExpr)
113 operator='MULTIPLY'
114 left (ArrayAccessExpr)
115 index (IntegerLiteralExpr)
116 value='1'
117 name (NameExpr)
118 name (SimpleName)
119 identifier='v1'
120 right (ArrayAccessExpr)
121 index (IntegerLiteralExpr)
122 value='0'
123 name (NameExpr)
124 name (SimpleName)
125 identifier='v2'
126 type (VoidType)
127 name (SimpleName)
128 identifier='cross3D'
129 parameters
130 parameter (Parameter)
131 isVarArgs='false'
132 name (SimpleName)
133 identifier='vo'
134 type (ArrayType)
135 origin='TYPE'
136 componentType (PrimitiveType)
137 type='DOUBLE'
138 parameter (Parameter)
139 isVarArgs='false'
140 name (SimpleName)
141 identifier='v1'
142 type (ArrayType)
143 origin='TYPE'
144 componentType (PrimitiveType)
145 type='DOUBLE'
146 parameter (Parameter)
147 isVarArgs='false'
148 name (SimpleName)
149 identifier='v2'
150 type (ArrayType)
151 origin='TYPE'
152 componentType (PrimitiveType)
153 type='DOUBLE'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
9 10
10 11
4 12
12 13
12 14
14 15
15 16
15 17
17 18
18 19
17 20
20 21
21 22
15 23
23 24
24 25
23 26
26 27
27 28
12 29
29 30
30 31
30 32
32 33
33 34
32 35
35 36
36 37
30 38
38 39
39 40
38 41
41 42
42 43
2 44
44 45
45 46
45 47
47 48
48 49
47 50
50 51
51 52
45 53
53 54
53 55
55 56
56 57
56 58
58 59
59 60
58 61
61 62
62 63
56 64
64 65
65 66
64 67
67 68
68 69
53 70
70 71
71 72
71 73
73 74
74 75
73 76
76 77
77 78
71 79
79 80
80 81
79 82
82 83
83 84
2 85
85 86
86 87
86 88
88 89
89 90
88 91
91 92
92 93
86 94
94 95
94 96
96 97
97 98
97 99
99 100
100 101
99 102
102 103
103 104
97 105
105 106
106 107
105 108
108 109
109 110
94 111
111 112
112 113
112 114
114 115
115 116
114 117
117 118
118 119
112 120
120 121
121 122
120 123
123 124
124 125
0 126
0 127
127 128
0 129
129 130
130 131
130 132
132 133
130 134
134 135
134 136
136 137
129 138
138 139
138 140
140 141
138 142
142 143
142 144
144 145
129 146
146 147
146 148
148 149
146 150
150 151
150 152
152 153

Cross product for 3d vectors, i.e. <code>vo = v1 x v2</code>
