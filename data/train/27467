83
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setProgrammerManager'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='InstanceManager'
10 arguments
11 argument (ObjectCreationExpr)
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='DebugProgrammerManager'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (MethodCallExpr)
20 name (SimpleName)
21 identifier='getAddressedProgrammer'
22 scope (MethodCallExpr)
23 name (SimpleName)
24 identifier='getDefault'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='InstanceManager'
28 arguments
29 argument (ClassExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='ProgrammerManager'
33 scope (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='jmri'
36 arguments
37 argument (BooleanLiteralExpr)
38 value='true'
39 argument (IntegerLiteralExpr)
40 value='777'
41 name (SimpleName)
42 identifier='p'
43 type (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='Programmer'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='assertTrue'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='Assert'
53 arguments
54 argument (StringLiteralExpr)
55 value='got ops mode'
56 argument (BinaryExpr)
57 operator='NOT_EQUALS'
58 left (NameExpr)
59 name (SimpleName)
60 identifier='p'
61 right (NullLiteralExpr)
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='assertTrue'
66 scope (NameExpr)
67 name (SimpleName)
68 identifier='Assert'
69 arguments
70 argument (StringLiteralExpr)
71 value='correct type'
72 argument (EnclosedExpr)
73 inner (InstanceOfExpr)
74 expression (NameExpr)
75 name (SimpleName)
76 identifier='p'
77 type (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='ProgDebugger'
80 type (VoidType)
81 name (SimpleName)
82 identifier='testOpsModeRequest'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
19 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
30 31
31 32
30 33
33 34
34 35
19 36
36 37
37 38
36 39
39 40
18 41
41 42
18 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
53 56
56 57
56 58
58 59
59 60
56 61
2 62
62 63
63 64
64 65
63 66
66 67
67 68
63 69
69 70
70 71
69 72
72 73
73 74
74 75
75 76
73 77
77 78
78 79
0 80
0 81
81 82

ops mode request returns a programmer
