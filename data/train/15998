65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='in'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='in'
13 statement (AssertStmt)
14 check (BinaryExpr)
15 operator='GREATER_EQUALS'
16 left (NameExpr)
17 name (SimpleName)
18 identifier='valueCount'
19 right (IntegerLiteralExpr)
20 value='0'
21 statement (ExpressionStmt)
22 expression (AssignExpr)
23 operator='ASSIGN'
24 target (FieldAccessExpr)
25 name (SimpleName)
26 identifier='valueCount'
27 scope (ThisExpr)
28 value (NameExpr)
29 name (SimpleName)
30 identifier='valueCount'
31 statement (ExpressionStmt)
32 expression (AssignExpr)
33 operator='ASSIGN'
34 target (NameExpr)
35 name (SimpleName)
36 identifier='off'
37 value (NameExpr)
38 name (SimpleName)
39 identifier='blockSize'
40 statement (ExpressionStmt)
41 expression (AssignExpr)
42 operator='ASSIGN'
43 target (NameExpr)
44 name (SimpleName)
45 identifier='ord'
46 value (IntegerLiteralExpr)
47 value='0'
48 type (VoidType)
49 name (SimpleName)
50 identifier='reset'
51 parameters
52 parameter (Parameter)
53 isVarArgs='false'
54 name (SimpleName)
55 identifier='in'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='DataInput'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='valueCount'
63 type (PrimitiveType)
64 type='LONG'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
14 19
19 20
2 21
21 22
22 23
22 24
24 25
25 26
24 27
22 28
28 29
29 30
2 31
31 32
32 33
32 34
34 35
35 36
32 37
37 38
38 39
2 40
40 41
41 42
41 43
43 44
44 45
41 46
46 47
0 48
0 49
49 50
0 51
51 52
52 53
52 54
54 55
52 56
56 57
57 58
51 59
59 60
59 61
61 62
59 63
63 64

Reset the current reader to wrap a stream of <code>valueCount</code> values contained in <code>in</code>. The block size remains unchanged.
