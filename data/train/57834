69
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='findSegmentMeta'
10 arguments
11 argument (MethodCallExpr)
12 name (SimpleName)
13 identifier='length'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='segment'
17 name (SimpleName)
18 identifier='segmentMeta'
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='SegmentMeta'
22 statement (ExpressionStmt)
23 expression (MethodCallExpr)
24 name (SimpleName)
25 identifier='remove'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='segmentMeta'
29 arguments
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='segment'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='close'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='segment'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='addFree'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='segmentMeta'
47 arguments
48 argument (MethodCallExpr)
49 name (SimpleName)
50 identifier='extent'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='segment'
54 type (VoidType)
55 name (SimpleName)
56 identifier='freeSegment'
57 parameters
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='segment'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='SegmentKelp'
65 thrownExceptions
66 thrownException (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
11 14
14 15
15 16
6 17
17 18
6 19
19 20
20 21
2 22
22 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
31 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
2 40
40 41
41 42
42 43
41 44
44 45
45 46
41 47
47 48
48 49
49 50
48 51
51 52
52 53
0 54
0 55
55 56
0 57
57 58
58 59
58 60
60 61
58 62
62 63
63 64
0 65
65 66
66 67
67 68

Frees a segment to be reused. Called by the segment-gc service.
