194
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='CircuitBreaker'
11 name (SimpleName)
12 identifier='breaker'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='CircuitBreaker'
16 statement (ExpressionStmt)
17 expression (VariableDeclarationExpr)
18 variables
19 variable (VariableDeclarator)
20 initializer (MethodCallExpr)
21 name (SimpleName)
22 identifier='stateFor'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='Testing'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='breaker'
30 name (SimpleName)
31 identifier='state'
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='ClosedState'
35 statement (ExpressionStmt)
36 expression (MethodCallExpr)
37 name (SimpleName)
38 identifier='recordSuccess'
39 scope (NameExpr)
40 name (SimpleName)
41 identifier='state'
42 statement (ExpressionStmt)
43 expression (MethodCallExpr)
44 name (SimpleName)
45 identifier='assertTrue'
46 arguments
47 argument (MethodCallExpr)
48 name (SimpleName)
49 identifier='isClosed'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='breaker'
53 statement (ExpressionStmt)
54 expression (MethodCallExpr)
55 name (SimpleName)
56 identifier='withFailureThreshold'
57 scope (NameExpr)
58 name (SimpleName)
59 identifier='breaker'
60 arguments
61 argument (IntegerLiteralExpr)
62 value='2'
63 statement (ExpressionStmt)
64 expression (MethodCallExpr)
65 name (SimpleName)
66 identifier='recordFailure'
67 scope (NameExpr)
68 name (SimpleName)
69 identifier='state'
70 statement (ExpressionStmt)
71 expression (MethodCallExpr)
72 name (SimpleName)
73 identifier='assertTrue'
74 arguments
75 argument (MethodCallExpr)
76 name (SimpleName)
77 identifier='isClosed'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='breaker'
81 statement (ExpressionStmt)
82 expression (MethodCallExpr)
83 name (SimpleName)
84 identifier='recordFailure'
85 scope (NameExpr)
86 name (SimpleName)
87 identifier='state'
88 statement (ExpressionStmt)
89 expression (MethodCallExpr)
90 name (SimpleName)
91 identifier='assertTrue'
92 arguments
93 argument (MethodCallExpr)
94 name (SimpleName)
95 identifier='isOpen'
96 scope (NameExpr)
97 name (SimpleName)
98 identifier='breaker'
99 statement (ExpressionStmt)
100 expression (AssignExpr)
101 operator='ASSIGN'
102 target (NameExpr)
103 name (SimpleName)
104 identifier='breaker'
105 value (ObjectCreationExpr)
106 type (ClassOrInterfaceType)
107 name (SimpleName)
108 identifier='CircuitBreaker'
109 statement (ExpressionStmt)
110 expression (AssignExpr)
111 operator='ASSIGN'
112 target (NameExpr)
113 name (SimpleName)
114 identifier='state'
115 value (MethodCallExpr)
116 name (SimpleName)
117 identifier='stateFor'
118 scope (NameExpr)
119 name (SimpleName)
120 identifier='Testing'
121 arguments
122 argument (NameExpr)
123 name (SimpleName)
124 identifier='breaker'
125 statement (ExpressionStmt)
126 expression (MethodCallExpr)
127 name (SimpleName)
128 identifier='recordSuccess'
129 scope (NameExpr)
130 name (SimpleName)
131 identifier='state'
132 statement (ExpressionStmt)
133 expression (MethodCallExpr)
134 name (SimpleName)
135 identifier='assertTrue'
136 arguments
137 argument (MethodCallExpr)
138 name (SimpleName)
139 identifier='isClosed'
140 scope (NameExpr)
141 name (SimpleName)
142 identifier='breaker'
143 statement (ExpressionStmt)
144 expression (MethodCallExpr)
145 name (SimpleName)
146 identifier='withFailureThreshold'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='breaker'
150 arguments
151 argument (IntegerLiteralExpr)
152 value='2'
153 argument (IntegerLiteralExpr)
154 value='3'
155 statement (ExpressionStmt)
156 expression (MethodCallExpr)
157 name (SimpleName)
158 identifier='recordFailure'
159 scope (NameExpr)
160 name (SimpleName)
161 identifier='state'
162 statement (ExpressionStmt)
163 expression (MethodCallExpr)
164 name (SimpleName)
165 identifier='assertTrue'
166 arguments
167 argument (MethodCallExpr)
168 name (SimpleName)
169 identifier='isClosed'
170 scope (NameExpr)
171 name (SimpleName)
172 identifier='breaker'
173 statement (ExpressionStmt)
174 expression (MethodCallExpr)
175 name (SimpleName)
176 identifier='recordFailure'
177 scope (NameExpr)
178 name (SimpleName)
179 identifier='state'
180 statement (ExpressionStmt)
181 expression (MethodCallExpr)
182 name (SimpleName)
183 identifier='assertTrue'
184 arguments
185 argument (MethodCallExpr)
186 name (SimpleName)
187 identifier='isOpen'
188 scope (NameExpr)
189 name (SimpleName)
190 identifier='breaker'
191 type (VoidType)
192 name (SimpleName)
193 identifier='shouldHandleLateSetFailureRatio'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
19 30
30 31
19 32
32 33
33 34
2 35
35 36
36 37
37 38
36 39
39 40
40 41
2 42
42 43
43 44
44 45
43 46
46 47
47 48
48 49
47 50
50 51
51 52
2 53
53 54
54 55
55 56
54 57
57 58
58 59
54 60
60 61
61 62
2 63
63 64
64 65
65 66
64 67
67 68
68 69
2 70
70 71
71 72
72 73
71 74
74 75
75 76
76 77
75 78
78 79
79 80
2 81
81 82
82 83
83 84
82 85
85 86
86 87
2 88
88 89
89 90
90 91
89 92
92 93
93 94
94 95
93 96
96 97
97 98
2 99
99 100
100 101
100 102
102 103
103 104
100 105
105 106
106 107
107 108
2 109
109 110
110 111
110 112
112 113
113 114
110 115
115 116
116 117
115 118
118 119
119 120
115 121
121 122
122 123
123 124
2 125
125 126
126 127
127 128
126 129
129 130
130 131
2 132
132 133
133 134
134 135
133 136
136 137
137 138
138 139
137 140
140 141
141 142
2 143
143 144
144 145
145 146
144 147
147 148
148 149
144 150
150 151
151 152
150 153
153 154
2 155
155 156
156 157
157 158
156 159
159 160
160 161
2 162
162 163
163 164
164 165
163 166
166 167
167 168
168 169
167 170
170 171
171 172
2 173
173 174
174 175
175 176
174 177
177 178
178 179
2 180
180 181
181 182
182 183
181 184
184 185
185 186
186 187
185 188
188 189
189 190
0 191
0 192
192 193

Asserts that the late configuration of a failure ratio is handled by resetting the state's internal tracking. Also asserts that executions from prior configurations are carried over to a new configuration.
