70
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='register'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='manager'
10 arguments
11 argument (StringLiteralExpr)
12 value='NullOp'
13 argument (ClassExpr)
14 type (ClassOrInterfaceType)
15 name (SimpleName)
16 identifier='NullOp'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='register'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='manager'
24 arguments
25 argument (StringLiteralExpr)
26 value='Basic Vision Sample'
27 argument (ClassExpr)
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='BasicVisionSample'
31 statement (ExpressionStmt)
32 expression (MethodCallExpr)
33 name (SimpleName)
34 identifier='register'
35 scope (NameExpr)
36 name (SimpleName)
37 identifier='manager'
38 arguments
39 argument (StringLiteralExpr)
40 value='Linear Vision Sample'
41 argument (ClassExpr)
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='LinearVisionSample'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='register'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='manager'
52 arguments
53 argument (StringLiteralExpr)
54 value='Manual Vision Sample'
55 argument (ClassExpr)
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='ManualVisionSample'
59 type (VoidType)
60 name (SimpleName)
61 identifier='register'
62 parameters
63 parameter (Parameter)
64 isVarArgs='false'
65 name (SimpleName)
66 identifier='manager'
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='OpModeManager'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
14 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
25 26
24 27
27 28
28 29
29 30
2 31
31 32
32 33
33 34
32 35
35 36
36 37
32 38
38 39
39 40
38 41
41 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
46 52
52 53
53 54
52 55
55 56
56 57
57 58
0 59
0 60
60 61
0 62
62 63
63 64
63 65
65 66
63 67
67 68
68 69

The Op Mode Manager will call this method when it wants a list of all available op modes. Add your op mode to the list to enable it.
