704
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='LinkedList'
11 name (SimpleName)
12 identifier='linkedList'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='List'
16 statement (ExpressionStmt)
17 expression (VariableDeclarationExpr)
18 variables
19 variable (VariableDeclarator)
20 initializer (MethodCallExpr)
21 name (SimpleName)
22 identifier='empty'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='ConsPStack'
26 name (SimpleName)
27 identifier='consPStack'
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='PStack'
31 statement (ExpressionStmt)
32 expression (VariableDeclarationExpr)
33 variables
34 variable (VariableDeclarator)
35 initializer (ObjectCreationExpr)
36 type (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='ArrayList'
39 name (SimpleName)
40 identifier='arrayList'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='List'
44 statement (ExpressionStmt)
45 expression (VariableDeclarationExpr)
46 variables
47 variable (VariableDeclarator)
48 initializer (MethodCallExpr)
49 name (SimpleName)
50 identifier='empty'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='TreePVector'
54 name (SimpleName)
55 identifier='treePVector'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='PVector'
59 statement (ExpressionStmt)
60 expression (VariableDeclarationExpr)
61 variables
62 variable (VariableDeclarator)
63 initializer (ObjectCreationExpr)
64 type (ClassOrInterfaceType)
65 name (SimpleName)
66 identifier='HashSet'
67 name (SimpleName)
68 identifier='hashSet'
69 type (ClassOrInterfaceType)
70 name (SimpleName)
71 identifier='Set'
72 statement (ExpressionStmt)
73 expression (VariableDeclarationExpr)
74 variables
75 variable (VariableDeclarator)
76 initializer (MethodCallExpr)
77 name (SimpleName)
78 identifier='empty'
79 scope (NameExpr)
80 name (SimpleName)
81 identifier='HashTreePSet'
82 name (SimpleName)
83 identifier='hashTreePSet'
84 type (ClassOrInterfaceType)
85 name (SimpleName)
86 identifier='PSet'
87 statement (ExpressionStmt)
88 expression (VariableDeclarationExpr)
89 variables
90 variable (VariableDeclarator)
91 initializer (MethodCallExpr)
92 name (SimpleName)
93 identifier='empty'
94 scope (NameExpr)
95 name (SimpleName)
96 identifier='HashTreePBag'
97 name (SimpleName)
98 identifier='hashTreePBag'
99 type (ClassOrInterfaceType)
100 name (SimpleName)
101 identifier='PBag'
102 statement (ExpressionStmt)
103 expression (VariableDeclarationExpr)
104 variables
105 variable (VariableDeclarator)
106 initializer (ObjectCreationExpr)
107 type (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='HashMap'
110 name (SimpleName)
111 identifier='hashMap'
112 type (ClassOrInterfaceType)
113 name (SimpleName)
114 identifier='Map'
115 statement (ExpressionStmt)
116 expression (VariableDeclarationExpr)
117 variables
118 variable (VariableDeclarator)
119 initializer (MethodCallExpr)
120 name (SimpleName)
121 identifier='empty'
122 scope (NameExpr)
123 name (SimpleName)
124 identifier='HashTreePMap'
125 name (SimpleName)
126 identifier='hashTreePMap'
127 type (ClassOrInterfaceType)
128 name (SimpleName)
129 identifier='PMap'
130 statement (ExpressionStmt)
131 expression (VariableDeclarationExpr)
132 variables
133 variable (VariableDeclarator)
134 initializer (MethodCallExpr)
135 name (SimpleName)
136 identifier='empty'
137 scope (NameExpr)
138 name (SimpleName)
139 identifier='IntTreePMap'
140 name (SimpleName)
141 identifier='intTreePMap'
142 type (ClassOrInterfaceType)
143 name (SimpleName)
144 identifier='PMap'
145 statement (ExpressionStmt)
146 expression (MethodCallExpr)
147 name (SimpleName)
148 identifier='println'
149 scope (FieldAccessExpr)
150 name (SimpleName)
151 identifier='out'
152 scope (NameExpr)
153 name (SimpleName)
154 identifier='System'
155 arguments
156 argument (StringLiteralExpr)
157 value='Sequential Lists:'
158 statement (ExpressionStmt)
159 expression (MethodCallExpr)
160 name (SimpleName)
161 identifier='collectionAdd'
162 arguments
163 argument (NameExpr)
164 name (SimpleName)
165 identifier='linkedList'
166 argument (NameExpr)
167 name (SimpleName)
168 identifier='list'
169 statement (ExpressionStmt)
170 expression (AssignExpr)
171 operator='ASSIGN'
172 target (NameExpr)
173 name (SimpleName)
174 identifier='consPStack'
175 value (CastExpr)
176 expression (MethodCallExpr)
177 name (SimpleName)
178 identifier='pCollectionPlus'
179 arguments
180 argument (NameExpr)
181 name (SimpleName)
182 identifier='consPStack'
183 argument (NameExpr)
184 name (SimpleName)
185 identifier='list'
186 type (ClassOrInterfaceType)
187 name (SimpleName)
188 identifier='PStack'
189 statement (ExpressionStmt)
190 expression (MethodCallExpr)
191 name (SimpleName)
192 identifier='collectionContains'
193 arguments
194 argument (NameExpr)
195 name (SimpleName)
196 identifier='linkedList'
197 argument (NameExpr)
198 name (SimpleName)
199 identifier='list'
200 statement (ExpressionStmt)
201 expression (MethodCallExpr)
202 name (SimpleName)
203 identifier='collectionContains'
204 arguments
205 argument (NameExpr)
206 name (SimpleName)
207 identifier='consPStack'
208 argument (NameExpr)
209 name (SimpleName)
210 identifier='list'
211 statement (ExpressionStmt)
212 expression (MethodCallExpr)
213 name (SimpleName)
214 identifier='collectionNotContains'
215 arguments
216 argument (NameExpr)
217 name (SimpleName)
218 identifier='linkedList'
219 argument (FieldAccessExpr)
220 name (SimpleName)
221 identifier='length'
222 scope (NameExpr)
223 name (SimpleName)
224 identifier='list'
225 statement (ExpressionStmt)
226 expression (MethodCallExpr)
227 name (SimpleName)
228 identifier='collectionNotContains'
229 arguments
230 argument (NameExpr)
231 name (SimpleName)
232 identifier='consPStack'
233 argument (FieldAccessExpr)
234 name (SimpleName)
235 identifier='length'
236 scope (NameExpr)
237 name (SimpleName)
238 identifier='list'
239 statement (ExpressionStmt)
240 expression (MethodCallExpr)
241 name (SimpleName)
242 identifier='listGet'
243 arguments
244 argument (NameExpr)
245 name (SimpleName)
246 identifier='linkedList'
247 statement (ExpressionStmt)
248 expression (MethodCallExpr)
249 name (SimpleName)
250 identifier='listGet'
251 arguments
252 argument (NameExpr)
253 name (SimpleName)
254 identifier='consPStack'
255 statement (ExpressionStmt)
256 expression (MethodCallExpr)
257 name (SimpleName)
258 identifier='collectionIterator'
259 arguments
260 argument (NameExpr)
261 name (SimpleName)
262 identifier='linkedList'
263 statement (ExpressionStmt)
264 expression (MethodCallExpr)
265 name (SimpleName)
266 identifier='collectionIterator'
267 arguments
268 argument (NameExpr)
269 name (SimpleName)
270 identifier='consPStack'
271 statement (ExpressionStmt)
272 expression (MethodCallExpr)
273 name (SimpleName)
274 identifier='println'
275 scope (FieldAccessExpr)
276 name (SimpleName)
277 identifier='out'
278 scope (NameExpr)
279 name (SimpleName)
280 identifier='System'
281 arguments
282 argument (StringLiteralExpr)
283 value='Random-access Lists:'
284 statement (ExpressionStmt)
285 expression (MethodCallExpr)
286 name (SimpleName)
287 identifier='collectionAdd'
288 arguments
289 argument (NameExpr)
290 name (SimpleName)
291 identifier='arrayList'
292 argument (NameExpr)
293 name (SimpleName)
294 identifier='list'
295 statement (ExpressionStmt)
296 expression (AssignExpr)
297 operator='ASSIGN'
298 target (NameExpr)
299 name (SimpleName)
300 identifier='treePVector'
301 value (CastExpr)
302 expression (MethodCallExpr)
303 name (SimpleName)
304 identifier='pCollectionPlus'
305 arguments
306 argument (NameExpr)
307 name (SimpleName)
308 identifier='treePVector'
309 argument (NameExpr)
310 name (SimpleName)
311 identifier='list'
312 type (ClassOrInterfaceType)
313 name (SimpleName)
314 identifier='PVector'
315 statement (ExpressionStmt)
316 expression (MethodCallExpr)
317 name (SimpleName)
318 identifier='collectionContains'
319 arguments
320 argument (NameExpr)
321 name (SimpleName)
322 identifier='arrayList'
323 argument (NameExpr)
324 name (SimpleName)
325 identifier='list'
326 statement (ExpressionStmt)
327 expression (MethodCallExpr)
328 name (SimpleName)
329 identifier='collectionContains'
330 arguments
331 argument (NameExpr)
332 name (SimpleName)
333 identifier='treePVector'
334 argument (NameExpr)
335 name (SimpleName)
336 identifier='list'
337 statement (ExpressionStmt)
338 expression (MethodCallExpr)
339 name (SimpleName)
340 identifier='collectionNotContains'
341 arguments
342 argument (NameExpr)
343 name (SimpleName)
344 identifier='arrayList'
345 argument (FieldAccessExpr)
346 name (SimpleName)
347 identifier='length'
348 scope (NameExpr)
349 name (SimpleName)
350 identifier='list'
351 statement (ExpressionStmt)
352 expression (MethodCallExpr)
353 name (SimpleName)
354 identifier='collectionNotContains'
355 arguments
356 argument (NameExpr)
357 name (SimpleName)
358 identifier='treePVector'
359 argument (FieldAccessExpr)
360 name (SimpleName)
361 identifier='length'
362 scope (NameExpr)
363 name (SimpleName)
364 identifier='list'
365 statement (ExpressionStmt)
366 expression (MethodCallExpr)
367 name (SimpleName)
368 identifier='listGet'
369 arguments
370 argument (NameExpr)
371 name (SimpleName)
372 identifier='arrayList'
373 statement (ExpressionStmt)
374 expression (MethodCallExpr)
375 name (SimpleName)
376 identifier='listGet'
377 arguments
378 argument (NameExpr)
379 name (SimpleName)
380 identifier='treePVector'
381 statement (ExpressionStmt)
382 expression (MethodCallExpr)
383 name (SimpleName)
384 identifier='collectionIterator'
385 arguments
386 argument (NameExpr)
387 name (SimpleName)
388 identifier='arrayList'
389 statement (ExpressionStmt)
390 expression (MethodCallExpr)
391 name (SimpleName)
392 identifier='collectionIterator'
393 arguments
394 argument (NameExpr)
395 name (SimpleName)
396 identifier='treePVector'
397 statement (ExpressionStmt)
398 expression (MethodCallExpr)
399 name (SimpleName)
400 identifier='println'
401 scope (FieldAccessExpr)
402 name (SimpleName)
403 identifier='out'
404 scope (NameExpr)
405 name (SimpleName)
406 identifier='System'
407 arguments
408 argument (StringLiteralExpr)
409 value='Sets and Bags:'
410 statement (ExpressionStmt)
411 expression (MethodCallExpr)
412 name (SimpleName)
413 identifier='collectionAdd'
414 arguments
415 argument (NameExpr)
416 name (SimpleName)
417 identifier='hashSet'
418 argument (NameExpr)
419 name (SimpleName)
420 identifier='list'
421 statement (ExpressionStmt)
422 expression (AssignExpr)
423 operator='ASSIGN'
424 target (NameExpr)
425 name (SimpleName)
426 identifier='hashTreePSet'
427 value (CastExpr)
428 expression (MethodCallExpr)
429 name (SimpleName)
430 identifier='pCollectionPlus'
431 arguments
432 argument (NameExpr)
433 name (SimpleName)
434 identifier='hashTreePSet'
435 argument (NameExpr)
436 name (SimpleName)
437 identifier='list'
438 type (ClassOrInterfaceType)
439 name (SimpleName)
440 identifier='PSet'
441 statement (ExpressionStmt)
442 expression (AssignExpr)
443 operator='ASSIGN'
444 target (NameExpr)
445 name (SimpleName)
446 identifier='hashTreePBag'
447 value (CastExpr)
448 expression (MethodCallExpr)
449 name (SimpleName)
450 identifier='pCollectionPlus'
451 arguments
452 argument (NameExpr)
453 name (SimpleName)
454 identifier='hashTreePBag'
455 argument (NameExpr)
456 name (SimpleName)
457 identifier='list'
458 type (ClassOrInterfaceType)
459 name (SimpleName)
460 identifier='PBag'
461 statement (ExpressionStmt)
462 expression (MethodCallExpr)
463 name (SimpleName)
464 identifier='collectionContains'
465 arguments
466 argument (NameExpr)
467 name (SimpleName)
468 identifier='hashSet'
469 argument (NameExpr)
470 name (SimpleName)
471 identifier='list'
472 statement (ExpressionStmt)
473 expression (MethodCallExpr)
474 name (SimpleName)
475 identifier='collectionContains'
476 arguments
477 argument (NameExpr)
478 name (SimpleName)
479 identifier='hashTreePSet'
480 argument (NameExpr)
481 name (SimpleName)
482 identifier='list'
483 statement (ExpressionStmt)
484 expression (MethodCallExpr)
485 name (SimpleName)
486 identifier='collectionContains'
487 arguments
488 argument (NameExpr)
489 name (SimpleName)
490 identifier='hashTreePBag'
491 argument (NameExpr)
492 name (SimpleName)
493 identifier='list'
494 statement (ExpressionStmt)
495 expression (MethodCallExpr)
496 name (SimpleName)
497 identifier='collectionNotContains'
498 arguments
499 argument (NameExpr)
500 name (SimpleName)
501 identifier='hashSet'
502 argument (FieldAccessExpr)
503 name (SimpleName)
504 identifier='length'
505 scope (NameExpr)
506 name (SimpleName)
507 identifier='list'
508 statement (ExpressionStmt)
509 expression (MethodCallExpr)
510 name (SimpleName)
511 identifier='collectionNotContains'
512 arguments
513 argument (NameExpr)
514 name (SimpleName)
515 identifier='hashTreePSet'
516 argument (FieldAccessExpr)
517 name (SimpleName)
518 identifier='length'
519 scope (NameExpr)
520 name (SimpleName)
521 identifier='list'
522 statement (ExpressionStmt)
523 expression (MethodCallExpr)
524 name (SimpleName)
525 identifier='collectionNotContains'
526 arguments
527 argument (NameExpr)
528 name (SimpleName)
529 identifier='hashTreePBag'
530 argument (FieldAccessExpr)
531 name (SimpleName)
532 identifier='length'
533 scope (NameExpr)
534 name (SimpleName)
535 identifier='list'
536 statement (ExpressionStmt)
537 expression (MethodCallExpr)
538 name (SimpleName)
539 identifier='collectionIterator'
540 arguments
541 argument (NameExpr)
542 name (SimpleName)
543 identifier='hashSet'
544 statement (ExpressionStmt)
545 expression (MethodCallExpr)
546 name (SimpleName)
547 identifier='collectionIterator'
548 arguments
549 argument (NameExpr)
550 name (SimpleName)
551 identifier='hashTreePSet'
552 statement (ExpressionStmt)
553 expression (MethodCallExpr)
554 name (SimpleName)
555 identifier='collectionIterator'
556 arguments
557 argument (NameExpr)
558 name (SimpleName)
559 identifier='hashTreePBag'
560 statement (ExpressionStmt)
561 expression (MethodCallExpr)
562 name (SimpleName)
563 identifier='println'
564 scope (FieldAccessExpr)
565 name (SimpleName)
566 identifier='out'
567 scope (NameExpr)
568 name (SimpleName)
569 identifier='System'
570 arguments
571 argument (StringLiteralExpr)
572 value='Maps:'
573 statement (ExpressionStmt)
574 expression (MethodCallExpr)
575 name (SimpleName)
576 identifier='mapPut'
577 arguments
578 argument (NameExpr)
579 name (SimpleName)
580 identifier='hashMap'
581 argument (NameExpr)
582 name (SimpleName)
583 identifier='list'
584 statement (ExpressionStmt)
585 expression (AssignExpr)
586 operator='ASSIGN'
587 target (NameExpr)
588 name (SimpleName)
589 identifier='hashTreePMap'
590 value (MethodCallExpr)
591 name (SimpleName)
592 identifier='pMapPlus'
593 arguments
594 argument (NameExpr)
595 name (SimpleName)
596 identifier='hashTreePMap'
597 argument (NameExpr)
598 name (SimpleName)
599 identifier='list'
600 statement (ExpressionStmt)
601 expression (AssignExpr)
602 operator='ASSIGN'
603 target (NameExpr)
604 name (SimpleName)
605 identifier='intTreePMap'
606 value (MethodCallExpr)
607 name (SimpleName)
608 identifier='pMapPlus'
609 arguments
610 argument (NameExpr)
611 name (SimpleName)
612 identifier='intTreePMap'
613 argument (NameExpr)
614 name (SimpleName)
615 identifier='list'
616 statement (ExpressionStmt)
617 expression (MethodCallExpr)
618 name (SimpleName)
619 identifier='mapContainsKey'
620 arguments
621 argument (NameExpr)
622 name (SimpleName)
623 identifier='hashMap'
624 argument (NameExpr)
625 name (SimpleName)
626 identifier='list'
627 statement (ExpressionStmt)
628 expression (MethodCallExpr)
629 name (SimpleName)
630 identifier='mapContainsKey'
631 arguments
632 argument (NameExpr)
633 name (SimpleName)
634 identifier='hashTreePMap'
635 argument (NameExpr)
636 name (SimpleName)
637 identifier='list'
638 statement (ExpressionStmt)
639 expression (MethodCallExpr)
640 name (SimpleName)
641 identifier='mapContainsKey'
642 arguments
643 argument (NameExpr)
644 name (SimpleName)
645 identifier='intTreePMap'
646 argument (NameExpr)
647 name (SimpleName)
648 identifier='list'
649 statement (ExpressionStmt)
650 expression (MethodCallExpr)
651 name (SimpleName)
652 identifier='mapNotContainsKey'
653 arguments
654 argument (NameExpr)
655 name (SimpleName)
656 identifier='hashMap'
657 argument (FieldAccessExpr)
658 name (SimpleName)
659 identifier='length'
660 scope (NameExpr)
661 name (SimpleName)
662 identifier='list'
663 statement (ExpressionStmt)
664 expression (MethodCallExpr)
665 name (SimpleName)
666 identifier='mapNotContainsKey'
667 arguments
668 argument (NameExpr)
669 name (SimpleName)
670 identifier='hashTreePMap'
671 argument (FieldAccessExpr)
672 name (SimpleName)
673 identifier='length'
674 scope (NameExpr)
675 name (SimpleName)
676 identifier='list'
677 statement (ExpressionStmt)
678 expression (MethodCallExpr)
679 name (SimpleName)
680 identifier='mapNotContainsKey'
681 arguments
682 argument (NameExpr)
683 name (SimpleName)
684 identifier='intTreePMap'
685 argument (FieldAccessExpr)
686 name (SimpleName)
687 identifier='length'
688 scope (NameExpr)
689 name (SimpleName)
690 identifier='list'
691 type (VoidType)
692 name (SimpleName)
693 identifier='benchmarks'
694 parameters
695 parameter (Parameter)
696 isVarArgs='false'
697 name (SimpleName)
698 identifier='list'
699 type (ArrayType)
700 origin='TYPE'
701 componentType (ClassOrInterfaceType)
702 name (SimpleName)
703 identifier='Object'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
19 20
20 21
21 22
20 23
23 24
24 25
19 26
26 27
19 28
28 29
29 30
2 31
31 32
32 33
33 34
34 35
35 36
36 37
37 38
34 39
39 40
34 41
41 42
42 43
2 44
44 45
45 46
46 47
47 48
48 49
49 50
48 51
51 52
52 53
47 54
54 55
47 56
56 57
57 58
2 59
59 60
60 61
61 62
62 63
63 64
64 65
65 66
62 67
67 68
62 69
69 70
70 71
2 72
72 73
73 74
74 75
75 76
76 77
77 78
76 79
79 80
80 81
75 82
82 83
75 84
84 85
85 86
2 87
87 88
88 89
89 90
90 91
91 92
92 93
91 94
94 95
95 96
90 97
97 98
90 99
99 100
100 101
2 102
102 103
103 104
104 105
105 106
106 107
107 108
108 109
105 110
110 111
105 112
112 113
113 114
2 115
115 116
116 117
117 118
118 119
119 120
120 121
119 122
122 123
123 124
118 125
125 126
118 127
127 128
128 129
2 130
130 131
131 132
132 133
133 134
134 135
135 136
134 137
137 138
138 139
133 140
140 141
133 142
142 143
143 144
2 145
145 146
146 147
147 148
146 149
149 150
150 151
149 152
152 153
153 154
146 155
155 156
156 157
2 158
158 159
159 160
160 161
159 162
162 163
163 164
164 165
162 166
166 167
167 168
2 169
169 170
170 171
170 172
172 173
173 174
170 175
175 176
176 177
177 178
176 179
179 180
180 181
181 182
179 183
183 184
184 185
175 186
186 187
187 188
2 189
189 190
190 191
191 192
190 193
193 194
194 195
195 196
193 197
197 198
198 199
2 200
200 201
201 202
202 203
201 204
204 205
205 206
206 207
204 208
208 209
209 210
2 211
211 212
212 213
213 214
212 215
215 216
216 217
217 218
215 219
219 220
220 221
219 222
222 223
223 224
2 225
225 226
226 227
227 228
226 229
229 230
230 231
231 232
229 233
233 234
234 235
233 236
236 237
237 238
2 239
239 240
240 241
241 242
240 243
243 244
244 245
245 246
2 247
247 248
248 249
249 250
248 251
251 252
252 253
253 254
2 255
255 256
256 257
257 258
256 259
259 260
260 261
261 262
2 263
263 264
264 265
265 266
264 267
267 268
268 269
269 270
2 271
271 272
272 273
273 274
272 275
275 276
276 277
275 278
278 279
279 280
272 281
281 282
282 283
2 284
284 285
285 286
286 287
285 288
288 289
289 290
290 291
288 292
292 293
293 294
2 295
295 296
296 297
296 298
298 299
299 300
296 301
301 302
302 303
303 304
302 305
305 306
306 307
307 308
305 309
309 310
310 311
301 312
312 313
313 314
2 315
315 316
316 317
317 318
316 319
319 320
320 321
321 322
319 323
323 324
324 325
2 326
326 327
327 328
328 329
327 330
330 331
331 332
332 333
330 334
334 335
335 336
2 337
337 338
338 339
339 340
338 341
341 342
342 343
343 344
341 345
345 346
346 347
345 348
348 349
349 350
2 351
351 352
352 353
353 354
352 355
355 356
356 357
357 358
355 359
359 360
360 361
359 362
362 363
363 364
2 365
365 366
366 367
367 368
366 369
369 370
370 371
371 372
2 373
373 374
374 375
375 376
374 377
377 378
378 379
379 380
2 381
381 382
382 383
383 384
382 385
385 386
386 387
387 388
2 389
389 390
390 391
391 392
390 393
393 394
394 395
395 396
2 397
397 398
398 399
399 400
398 401
401 402
402 403
401 404
404 405
405 406
398 407
407 408
408 409
2 410
410 411
411 412
412 413
411 414
414 415
415 416
416 417
414 418
418 419
419 420
2 421
421 422
422 423
422 424
424 425
425 426
422 427
427 428
428 429
429 430
428 431
431 432
432 433
433 434
431 435
435 436
436 437
427 438
438 439
439 440
2 441
441 442
442 443
442 444
444 445
445 446
442 447
447 448
448 449
449 450
448 451
451 452
452 453
453 454
451 455
455 456
456 457
447 458
458 459
459 460
2 461
461 462
462 463
463 464
462 465
465 466
466 467
467 468
465 469
469 470
470 471
2 472
472 473
473 474
474 475
473 476
476 477
477 478
478 479
476 480
480 481
481 482
2 483
483 484
484 485
485 486
484 487
487 488
488 489
489 490
487 491
491 492
492 493
2 494
494 495
495 496
496 497
495 498
498 499
499 500
500 501
498 502
502 503
503 504
502 505
505 506
506 507
2 508
508 509
509 510
510 511
509 512
512 513
513 514
514 515
512 516
516 517
517 518
516 519
519 520
520 521
2 522
522 523
523 524
524 525
523 526
526 527
527 528
528 529
526 530
530 531
531 532
530 533
533 534
534 535
2 536
536 537
537 538
538 539
537 540
540 541
541 542
542 543
2 544
544 545
545 546
546 547
545 548
548 549
549 550
550 551
2 552
552 553
553 554
554 555
553 556
556 557
557 558
558 559
2 560
560 561
561 562
562 563
561 564
564 565
565 566
564 567
567 568
568 569
561 570
570 571
571 572
2 573
573 574
574 575
575 576
574 577
577 578
578 579
579 580
577 581
581 582
582 583
2 584
584 585
585 586
585 587
587 588
588 589
585 590
590 591
591 592
590 593
593 594
594 595
595 596
593 597
597 598
598 599
2 600
600 601
601 602
601 603
603 604
604 605
601 606
606 607
607 608
606 609
609 610
610 611
611 612
609 613
613 614
614 615
2 616
616 617
617 618
618 619
617 620
620 621
621 622
622 623
620 624
624 625
625 626
2 627
627 628
628 629
629 630
628 631
631 632
632 633
633 634
631 635
635 636
636 637
2 638
638 639
639 640
640 641
639 642
642 643
643 644
644 645
642 646
646 647
647 648
2 649
649 650
650 651
651 652
650 653
653 654
654 655
655 656
653 657
657 658
658 659
657 660
660 661
661 662
2 663
663 664
664 665
665 666
664 667
667 668
668 669
669 670
667 671
671 672
672 673
671 674
674 675
675 676
2 677
677 678
678 679
679 680
678 681
681 682
682 683
683 684
681 685
685 686
686 687
685 688
688 689
689 690
0 691
0 692
692 693
0 694
694 695
695 696
695 697
697 698
695 699
699 700
699 701
701 702
702 703

Prints to stdout the times of various operations on LinkedLists, ConsPStacks, ArrayLists, TreePVectors, HashSets, HashTreePSets, HashTreePBags, HashMaps, HashTreePMaps, and IntTreePMaps.
