60
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='write'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='out'
10 arguments
11 argument (BinaryExpr)
12 operator='BINARY_AND'
13 left (NameExpr)
14 name (SimpleName)
15 identifier='s'
16 right (IntegerLiteralExpr)
17 value='0xFF'
18 statement (ExpressionStmt)
19 expression (MethodCallExpr)
20 name (SimpleName)
21 identifier='write'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='out'
25 arguments
26 argument (BinaryExpr)
27 operator='BINARY_AND'
28 left (EnclosedExpr)
29 inner (BinaryExpr)
30 operator='UNSIGNED_RIGHT_SHIFT'
31 left (NameExpr)
32 name (SimpleName)
33 identifier='s'
34 right (IntegerLiteralExpr)
35 value='8'
36 right (IntegerLiteralExpr)
37 value='0xFF'
38 statement (ExpressionStmt)
39 expression (AssignExpr)
40 operator='PLUS'
41 target (NameExpr)
42 name (SimpleName)
43 identifier='written'
44 value (IntegerLiteralExpr)
45 value='2'
46 type (VoidType)
47 name (SimpleName)
48 identifier='writeShort'
49 parameters
50 parameter (Parameter)
51 isVarArgs='false'
52 name (SimpleName)
53 identifier='s'
54 type (PrimitiveType)
55 type='INT'
56 thrownExceptions
57 thrownException (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
11 13
13 14
14 15
11 16
16 17
2 18
18 19
19 20
20 21
19 22
22 23
23 24
19 25
25 26
26 27
26 28
28 29
29 30
29 31
31 32
32 33
29 34
34 35
26 36
36 37
2 38
38 39
39 40
39 41
41 42
42 43
39 44
44 45
0 46
0 47
47 48
0 49
49 50
50 51
50 52
52 53
50 54
54 55
0 56
56 57
57 58
58 59

Writes a two byte <code>short</code> to the underlying output stream in little endian order, low byte first.
