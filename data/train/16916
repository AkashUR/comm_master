236
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (MethodCallExpr)
5 name (SimpleName)
6 identifier='getItemId'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='item'
10 entries
11 entrie (SwitchEntryStmt)
12 label (FieldAccessExpr)
13 name (SimpleName)
14 identifier='toggle_number_display'
15 scope (FieldAccessExpr)
16 name (SimpleName)
17 identifier='id'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='R'
21 statements
22 statement (ExpressionStmt)
23 expression (AssignExpr)
24 operator='ASSIGN'
25 target (NameExpr)
26 name (SimpleName)
27 identifier='numbered'
28 value (UnaryExpr)
29 operator='LOGICAL_COMPLEMENT'
30 expression (NameExpr)
31 name (SimpleName)
32 identifier='numbered'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='presentation'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='mDemoSlider'
40 arguments
41 argument (ConditionalExpr)
42 condition (NameExpr)
43 name (SimpleName)
44 identifier='numbered'
45 elseExpr (FieldAccessExpr)
46 name (SimpleName)
47 identifier='Dots'
48 scope (FieldAccessExpr)
49 name (SimpleName)
50 identifier='PresentationConfig'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='SliderLayout'
54 thenExpr (FieldAccessExpr)
55 name (SimpleName)
56 identifier='Numbers'
57 scope (FieldAccessExpr)
58 name (SimpleName)
59 identifier='PresentationConfig'
60 scope (NameExpr)
61 name (SimpleName)
62 identifier='SliderLayout'
63 statement (BreakStmt)
64 entrie (SwitchEntryStmt)
65 label (FieldAccessExpr)
66 name (SimpleName)
67 identifier='indicator_default'
68 scope (FieldAccessExpr)
69 name (SimpleName)
70 identifier='id'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='R'
74 statements
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='setCustomIndicator'
79 scope (NameExpr)
80 name (SimpleName)
81 identifier='mDemoSlider'
82 arguments
83 argument (CastExpr)
84 expression (MethodCallExpr)
85 name (SimpleName)
86 identifier='findViewById'
87 arguments
88 argument (FieldAccessExpr)
89 name (SimpleName)
90 identifier='custom_indicator2'
91 scope (FieldAccessExpr)
92 name (SimpleName)
93 identifier='id'
94 scope (NameExpr)
95 name (SimpleName)
96 identifier='R'
97 type (ClassOrInterfaceType)
98 name (SimpleName)
99 identifier='PagerIndicator'
100 statement (BreakStmt)
101 entrie (SwitchEntryStmt)
102 label (FieldAccessExpr)
103 name (SimpleName)
104 identifier='action_custom_indicator'
105 scope (FieldAccessExpr)
106 name (SimpleName)
107 identifier='id'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='R'
111 statements
112 statement (ExpressionStmt)
113 expression (MethodCallExpr)
114 name (SimpleName)
115 identifier='setCustomIndicator'
116 scope (NameExpr)
117 name (SimpleName)
118 identifier='mDemoSlider'
119 arguments
120 argument (CastExpr)
121 expression (MethodCallExpr)
122 name (SimpleName)
123 identifier='findViewById'
124 arguments
125 argument (FieldAccessExpr)
126 name (SimpleName)
127 identifier='custom_indicator'
128 scope (FieldAccessExpr)
129 name (SimpleName)
130 identifier='id'
131 scope (NameExpr)
132 name (SimpleName)
133 identifier='R'
134 type (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='PagerIndicator'
137 statement (BreakStmt)
138 entrie (SwitchEntryStmt)
139 label (FieldAccessExpr)
140 name (SimpleName)
141 identifier='action_restore_default'
142 scope (FieldAccessExpr)
143 name (SimpleName)
144 identifier='id'
145 scope (NameExpr)
146 name (SimpleName)
147 identifier='R'
148 statements
149 statement (ExpressionStmt)
150 expression (MethodCallExpr)
151 name (SimpleName)
152 identifier='setPresetIndicator'
153 scope (NameExpr)
154 name (SimpleName)
155 identifier='mDemoSlider'
156 arguments
157 argument (FieldAccessExpr)
158 name (SimpleName)
159 identifier='Center_Bottom'
160 scope (FieldAccessExpr)
161 name (SimpleName)
162 identifier='PresetIndicators'
163 scope (NameExpr)
164 name (SimpleName)
165 identifier='SliderLayout'
166 statement (ExpressionStmt)
167 expression (MethodCallExpr)
168 name (SimpleName)
169 identifier='setCustomAnimation'
170 scope (NameExpr)
171 name (SimpleName)
172 identifier='mDemoSlider'
173 arguments
174 argument (ObjectCreationExpr)
175 type (ClassOrInterfaceType)
176 name (SimpleName)
177 identifier='DescriptionAnimation'
178 statement (BreakStmt)
179 entrie (SwitchEntryStmt)
180 label (FieldAccessExpr)
181 name (SimpleName)
182 identifier='custom_slider_layout'
183 scope (FieldAccessExpr)
184 name (SimpleName)
185 identifier='id'
186 scope (NameExpr)
187 name (SimpleName)
188 identifier='R'
189 statements
190 statement (ExpressionStmt)
191 expression (MethodCallExpr)
192 name (SimpleName)
193 identifier='newcustomSliderView'
194 statement (BreakStmt)
195 entrie (SwitchEntryStmt)
196 label (FieldAccessExpr)
197 name (SimpleName)
198 identifier='default_slider_layout'
199 scope (FieldAccessExpr)
200 name (SimpleName)
201 identifier='id'
202 scope (NameExpr)
203 name (SimpleName)
204 identifier='R'
205 statements
206 statement (ExpressionStmt)
207 expression (MethodCallExpr)
208 name (SimpleName)
209 identifier='newloaddefaultCompleteSlider'
210 statement (BreakStmt)
211 statement (ReturnStmt)
212 expression (MethodCallExpr)
213 name (SimpleName)
214 identifier='onOptionsItemSelected'
215 scope (SuperExpr)
216 arguments
217 argument (NameExpr)
218 name (SimpleName)
219 identifier='item'
220 type (PrimitiveType)
221 type='BOOLEAN'
222 name (SimpleName)
223 identifier='onOptionsItemSelected'
224 parameters
225 parameter (Parameter)
226 isVarArgs='false'
227 name (SimpleName)
228 identifier='item'
229 type (ClassOrInterfaceType)
230 name (SimpleName)
231 identifier='MenuItem'
232 annotations
233 annotation (MarkerAnnotationExpr)
234 name (Name)
235 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
3 10
10 11
11 12
12 13
13 14
12 15
15 16
16 17
15 18
18 19
19 20
11 21
21 22
22 23
23 24
23 25
25 26
26 27
23 28
28 29
28 30
30 31
31 32
21 33
33 34
34 35
35 36
34 37
37 38
38 39
34 40
40 41
41 42
42 43
43 44
41 45
45 46
46 47
45 48
48 49
49 50
48 51
51 52
52 53
41 54
54 55
55 56
54 57
57 58
58 59
57 60
60 61
61 62
21 63
10 64
64 65
65 66
66 67
65 68
68 69
69 70
68 71
71 72
72 73
64 74
74 75
75 76
76 77
77 78
76 79
79 80
80 81
76 82
82 83
83 84
84 85
85 86
84 87
87 88
88 89
89 90
88 91
91 92
92 93
91 94
94 95
95 96
83 97
97 98
98 99
74 100
10 101
101 102
102 103
103 104
102 105
105 106
106 107
105 108
108 109
109 110
101 111
111 112
112 113
113 114
114 115
113 116
116 117
117 118
113 119
119 120
120 121
121 122
122 123
121 124
124 125
125 126
126 127
125 128
128 129
129 130
128 131
131 132
132 133
120 134
134 135
135 136
111 137
10 138
138 139
139 140
140 141
139 142
142 143
143 144
142 145
145 146
146 147
138 148
148 149
149 150
150 151
151 152
150 153
153 154
154 155
150 156
156 157
157 158
158 159
157 160
160 161
161 162
160 163
163 164
164 165
148 166
166 167
167 168
168 169
167 170
170 171
171 172
167 173
173 174
174 175
175 176
176 177
148 178
10 179
179 180
180 181
181 182
180 183
183 184
184 185
183 186
186 187
187 188
179 189
189 190
190 191
191 192
192 193
189 194
10 195
195 196
196 197
197 198
196 199
199 200
200 201
199 202
202 203
203 204
195 205
205 206
206 207
207 208
208 209
205 210
2 211
211 212
212 213
213 214
212 215
212 216
216 217
217 218
218 219
0 220
220 221
0 222
222 223
0 224
224 225
225 226
225 227
227 228
225 229
229 230
230 231
0 232
232 233
233 234
234 235

This hook is called whenever an item in your options menu is selected. The default implementation simply returns false to have the normal processing happen (calling the item's Runnable or sending a message to its Handler as appropriate).  You can use this method for any items for which you would like to do processing without those other facilities. <p/> <p>Derived classes should call through to the base class for it to perform the default menu handling.</p>
