94
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='list'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='list'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='array'
19 scope (ThisExpr)
20 value (NameExpr)
21 name (SimpleName)
22 identifier='array'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (FieldAccessExpr)
27 name (SimpleName)
28 identifier='index'
29 scope (ThisExpr)
30 value (NameExpr)
31 name (SimpleName)
32 identifier='origin'
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (FieldAccessExpr)
37 name (SimpleName)
38 identifier='fence'
39 scope (ThisExpr)
40 value (NameExpr)
41 name (SimpleName)
42 identifier='fence'
43 statement (ExpressionStmt)
44 expression (AssignExpr)
45 operator='ASSIGN'
46 target (FieldAccessExpr)
47 name (SimpleName)
48 identifier='expectedModCount'
49 scope (ThisExpr)
50 value (NameExpr)
51 name (SimpleName)
52 identifier='expectedModCount'
53 name (SimpleName)
54 identifier='VectorSpliterator'
55 parameters
56 parameter (Parameter)
57 isVarArgs='false'
58 name (SimpleName)
59 identifier='list'
60 type (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='Vector'
63 typeArguments
64 typeArgument (ClassOrInterfaceType)
65 name (SimpleName)
66 identifier='E'
67 parameter (Parameter)
68 isVarArgs='false'
69 name (SimpleName)
70 identifier='array'
71 type (ArrayType)
72 origin='TYPE'
73 componentType (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='Object'
76 parameter (Parameter)
77 isVarArgs='false'
78 name (SimpleName)
79 identifier='origin'
80 type (PrimitiveType)
81 type='INT'
82 parameter (Parameter)
83 isVarArgs='false'
84 name (SimpleName)
85 identifier='fence'
86 type (PrimitiveType)
87 type='INT'
88 parameter (Parameter)
89 isVarArgs='false'
90 name (SimpleName)
91 identifier='expectedModCount'
92 type (PrimitiveType)
93 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
26 29
24 30
30 31
31 32
2 33
33 34
34 35
34 36
36 37
37 38
36 39
34 40
40 41
41 42
2 43
43 44
44 45
44 46
46 47
47 48
46 49
44 50
50 51
51 52
0 53
53 54
0 55
55 56
56 57
56 58
58 59
56 60
60 61
61 62
60 63
63 64
64 65
65 66
55 67
67 68
67 69
69 70
67 71
71 72
71 73
73 74
74 75
55 76
76 77
76 78
78 79
76 80
80 81
55 82
82 83
82 84
84 85
82 86
86 87
55 88
88 89
88 90
90 91
88 92
92 93

Create new spliterator covering the given range
