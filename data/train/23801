43
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='print'
7 arguments
8 argument (ObjectCreationExpr)
9 type (ClassOrInterfaceType)
10 name (SimpleName)
11 identifier='PrintWriter'
12 arguments
13 argument (FieldAccessExpr)
14 name (SimpleName)
15 identifier='out'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='System'
19 argument (BooleanLiteralExpr)
20 value='true'
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='w'
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='d'
27 type (VoidType)
28 name (SimpleName)
29 identifier='print'
30 parameters
31 parameter (Parameter)
32 isVarArgs='false'
33 name (SimpleName)
34 identifier='w'
35 type (PrimitiveType)
36 type='INT'
37 parameter (Parameter)
38 isVarArgs='false'
39 name (SimpleName)
40 identifier='d'
41 type (PrimitiveType)
42 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
10 11
8 12
12 13
13 14
14 15
13 16
16 17
17 18
12 19
19 20
7 21
21 22
22 23
7 24
24 25
25 26
0 27
0 28
28 29
0 30
30 31
31 32
31 33
33 34
31 35
35 36
30 37
37 38
37 39
39 40
37 41
41 42

Print the matrix to stdout. Line the elements up in columns with a Fortran-like 'Fw.d' style format.
