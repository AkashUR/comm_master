54
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='visitTypedInstruction'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='v'
10 arguments
11 argument (ThisExpr)
12 statement (ExpressionStmt)
13 expression (MethodCallExpr)
14 name (SimpleName)
15 identifier='visitStackProducer'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='v'
19 arguments
20 argument (ThisExpr)
21 statement (ExpressionStmt)
22 expression (MethodCallExpr)
23 name (SimpleName)
24 identifier='visitStackConsumer'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='v'
28 arguments
29 argument (ThisExpr)
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='visitConversionInstruction'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='v'
37 arguments
38 argument (ThisExpr)
39 type (VoidType)
40 name (SimpleName)
41 identifier='accept'
42 parameters
43 parameter (Parameter)
44 isVarArgs='false'
45 name (SimpleName)
46 identifier='v'
47 type (ClassOrInterfaceType)
48 name (SimpleName)
49 identifier='Visitor'
50 annotations
51 annotation (MarkerAnnotationExpr)
52 name (Name)
53 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
2 12
12 13
13 14
14 15
13 16
16 17
17 18
13 19
19 20
2 21
21 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
31 37
37 38
0 39
0 40
40 41
0 42
42 43
43 44
43 45
45 46
43 47
47 48
48 49
0 50
50 51
51 52
52 53

Call corresponding visitor method(s). The order is: Call visitor methods of implemented interfaces first, then call methods according to the class hierarchy in descending order, i.e., the most specific visitXXX() call comes last.
