176
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ForStmt)
4 body (BlockStmt)
5 statements
6 statement (ExpressionStmt)
7 expression (VariableDeclarationExpr)
8 variables
9 variable (VariableDeclarator)
10 initializer (CastExpr)
11 expression (MethodCallExpr)
12 name (SimpleName)
13 identifier='next'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='blocksIt'
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='Block'
20 name (SimpleName)
21 identifier='block'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='Block'
25 statement (ExpressionStmt)
26 expression (VariableDeclarationExpr)
27 variables
28 variable (VariableDeclarator)
29 initializer (MethodCallExpr)
30 name (SimpleName)
31 identifier='getSuccs'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='block'
35 name (SimpleName)
36 identifier='succs'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='List'
40 statement (ExpressionStmt)
41 expression (VariableDeclarationExpr)
42 variables
43 variable (VariableDeclarator)
44 initializer (MethodCallExpr)
45 name (SimpleName)
46 identifier='getPreds'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='block'
50 name (SimpleName)
51 identifier='preds'
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='List'
55 statement (ExpressionStmt)
56 expression (MethodCallExpr)
57 name (SimpleName)
58 identifier='setSuccs'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='block'
62 arguments
63 argument (NameExpr)
64 name (SimpleName)
65 identifier='preds'
66 statement (ExpressionStmt)
67 expression (MethodCallExpr)
68 name (SimpleName)
69 identifier='setPreds'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='block'
73 arguments
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='succs'
77 compare (MethodCallExpr)
78 name (SimpleName)
79 identifier='hasNext'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='blocksIt'
83 initialization
84 initializatio (VariableDeclarationExpr)
85 variables
86 variable (VariableDeclarator)
87 initializer (MethodCallExpr)
88 name (SimpleName)
89 identifier='iterator'
90 scope (MethodCallExpr)
91 name (SimpleName)
92 identifier='getBlocks'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='graph'
96 name (SimpleName)
97 identifier='blocksIt'
98 type (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='Iterator'
101 statement (ExpressionStmt)
102 expression (VariableDeclarationExpr)
103 variables
104 variable (VariableDeclarator)
105 initializer (MethodCallExpr)
106 name (SimpleName)
107 identifier='getHeads'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='graph'
111 name (SimpleName)
112 identifier='heads'
113 type (ClassOrInterfaceType)
114 name (SimpleName)
115 identifier='List'
116 statement (ExpressionStmt)
117 expression (VariableDeclarationExpr)
118 variables
119 variable (VariableDeclarator)
120 initializer (MethodCallExpr)
121 name (SimpleName)
122 identifier='getTails'
123 scope (NameExpr)
124 name (SimpleName)
125 identifier='graph'
126 name (SimpleName)
127 identifier='tails'
128 type (ClassOrInterfaceType)
129 name (SimpleName)
130 identifier='List'
131 statement (ExpressionStmt)
132 expression (AssignExpr)
133 operator='ASSIGN'
134 target (FieldAccessExpr)
135 name (SimpleName)
136 identifier='mHeads'
137 scope (NameExpr)
138 name (SimpleName)
139 identifier='graph'
140 value (ObjectCreationExpr)
141 type (ClassOrInterfaceType)
142 name (SimpleName)
143 identifier='ArrayList'
144 arguments
145 argument (NameExpr)
146 name (SimpleName)
147 identifier='tails'
148 statement (ExpressionStmt)
149 expression (AssignExpr)
150 operator='ASSIGN'
151 target (FieldAccessExpr)
152 name (SimpleName)
153 identifier='mTails'
154 scope (NameExpr)
155 name (SimpleName)
156 identifier='graph'
157 value (ObjectCreationExpr)
158 type (ClassOrInterfaceType)
159 name (SimpleName)
160 identifier='ArrayList'
161 arguments
162 argument (NameExpr)
163 name (SimpleName)
164 identifier='heads'
165 type (VoidType)
166 name (SimpleName)
167 identifier='reverse'
168 parameters
169 parameter (Parameter)
170 isVarArgs='false'
171 name (SimpleName)
172 identifier='graph'
173 type (ClassOrInterfaceType)
174 name (SimpleName)
175 identifier='BlockGraph'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
10 11
11 12
12 13
11 14
14 15
15 16
10 17
17 18
18 19
9 20
20 21
9 22
22 23
23 24
5 25
25 26
26 27
27 28
28 29
29 30
30 31
29 32
32 33
33 34
28 35
35 36
28 37
37 38
38 39
5 40
40 41
41 42
42 43
43 44
44 45
45 46
44 47
47 48
48 49
43 50
50 51
43 52
52 53
53 54
5 55
55 56
56 57
57 58
56 59
59 60
60 61
56 62
62 63
63 64
64 65
5 66
66 67
67 68
68 69
67 70
70 71
71 72
67 73
73 74
74 75
75 76
3 77
77 78
78 79
77 80
80 81
81 82
3 83
83 84
84 85
85 86
86 87
87 88
88 89
87 90
90 91
91 92
90 93
93 94
94 95
86 96
96 97
86 98
98 99
99 100
2 101
101 102
102 103
103 104
104 105
105 106
106 107
105 108
108 109
109 110
104 111
111 112
104 113
113 114
114 115
2 116
116 117
117 118
118 119
119 120
120 121
121 122
120 123
123 124
124 125
119 126
126 127
119 128
128 129
129 130
2 131
131 132
132 133
132 134
134 135
135 136
134 137
137 138
138 139
132 140
140 141
141 142
142 143
140 144
144 145
145 146
146 147
2 148
148 149
149 150
149 151
151 152
152 153
151 154
154 155
155 156
149 157
157 158
158 159
159 160
157 161
161 162
162 163
163 164
0 165
0 166
166 167
0 168
168 169
169 170
169 171
171 172
169 173
173 174
174 175

Reverses a BlockGraph by making the heads tails, the tails heads and reversing the edges.  It does not change the ordering of Units in individual blocks, nor does it change the Block labels.  This utility could be useful when calculating control dependences with a dominators algorithm.
