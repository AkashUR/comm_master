112
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ElapsedTime'
11 name (SimpleName)
12 identifier='holdTimer'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='ElapsedTime'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='reset'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='holdTimer'
23 statement (WhileStmt)
24 body (BlockStmt)
25 statements
26 statement (ExpressionStmt)
27 expression (MethodCallExpr)
28 name (SimpleName)
29 identifier='onHeading'
30 arguments
31 argument (NameExpr)
32 name (SimpleName)
33 identifier='speed'
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='angle'
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='P_TURN_COEFF'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='update'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='telemetry'
47 condition (BinaryExpr)
48 operator='AND'
49 left (MethodCallExpr)
50 name (SimpleName)
51 identifier='opModeIsActive'
52 right (EnclosedExpr)
53 inner (BinaryExpr)
54 operator='LESS'
55 left (MethodCallExpr)
56 name (SimpleName)
57 identifier='time'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='holdTimer'
61 right (NameExpr)
62 name (SimpleName)
63 identifier='holdTime'
64 statement (ExpressionStmt)
65 expression (MethodCallExpr)
66 name (SimpleName)
67 identifier='setPower'
68 scope (FieldAccessExpr)
69 name (SimpleName)
70 identifier='leftMotor'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='robot'
74 arguments
75 argument (IntegerLiteralExpr)
76 value='0'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='setPower'
81 scope (FieldAccessExpr)
82 name (SimpleName)
83 identifier='rightMotor'
84 scope (NameExpr)
85 name (SimpleName)
86 identifier='robot'
87 arguments
88 argument (IntegerLiteralExpr)
89 value='0'
90 type (VoidType)
91 name (SimpleName)
92 identifier='gyroHold'
93 parameters
94 parameter (Parameter)
95 isVarArgs='false'
96 name (SimpleName)
97 identifier='speed'
98 type (PrimitiveType)
99 type='DOUBLE'
100 parameter (Parameter)
101 isVarArgs='false'
102 name (SimpleName)
103 identifier='angle'
104 type (PrimitiveType)
105 type='DOUBLE'
106 parameter (Parameter)
107 isVarArgs='false'
108 name (SimpleName)
109 identifier='holdTime'
110 type (PrimitiveType)
111 type='DOUBLE'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
2 23
23 24
24 25
25 26
26 27
27 28
28 29
27 30
30 31
31 32
32 33
30 34
34 35
35 36
30 37
37 38
38 39
25 40
40 41
41 42
42 43
41 44
44 45
45 46
23 47
47 48
47 49
49 50
50 51
47 52
52 53
53 54
53 55
55 56
56 57
55 58
58 59
59 60
53 61
61 62
62 63
2 64
64 65
65 66
66 67
65 68
68 69
69 70
68 71
71 72
72 73
65 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
81 84
84 85
85 86
78 87
87 88
88 89
0 90
0 91
91 92
0 93
93 94
94 95
94 96
96 97
94 98
98 99
93 100
100 101
100 102
102 103
100 104
104 105
93 106
106 107
106 108
108 109
106 110
110 111

Method to obtain & hold a heading for a finite amount of time Move will stop once the requested time has elapsed
