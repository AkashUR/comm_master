64
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 statement (ExpressionStmt)
6 expression (AssignExpr)
7 operator='ASSIGN'
8 target (NameExpr)
9 name (SimpleName)
10 identifier='mEdgeAffinity'
11 value (NameExpr)
12 name (SimpleName)
13 identifier='edgeAffinity'
14 statement (ExpressionStmt)
15 expression (AssignExpr)
16 operator='ASSIGN'
17 target (NameExpr)
18 name (SimpleName)
19 identifier='mDistance'
20 value (NameExpr)
21 name (SimpleName)
22 identifier='distance'
23 statement (ExpressionStmt)
24 expression (AssignExpr)
25 operator='ASSIGN'
26 target (NameExpr)
27 name (SimpleName)
28 identifier='mThickness'
29 value (NameExpr)
30 name (SimpleName)
31 identifier='DEFAULT_THICKNESS'
32 statement (ExpressionStmt)
33 expression (MethodCallExpr)
34 name (SimpleName)
35 identifier='setColor'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='mPaint'
39 arguments
40 argument (NameExpr)
41 name (SimpleName)
42 identifier='DEFAULT_KEYLINE_COLOR'
43 name (SimpleName)
44 identifier='Keyline'
45 parameters
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='edgeAffinity'
50 type (PrimitiveType)
51 type='INT'
52 annotations
53 annotation (MarkerAnnotationExpr)
54 name (Name)
55 identifier='EdgeAffinity'
56 qualifier (Name)
57 identifier='ArgumentsBundle'
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='distance'
62 type (PrimitiveType)
63 type='INT'
0 1
1 2
2 3
3 4
2 5
5 6
6 7
6 8
8 9
9 10
6 11
11 12
12 13
2 14
14 15
15 16
15 17
17 18
18 19
15 20
20 21
21 22
2 23
23 24
24 25
24 26
26 27
27 28
24 29
29 30
30 31
2 32
32 33
33 34
34 35
33 36
36 37
37 38
33 39
39 40
40 41
41 42
0 43
43 44
0 45
45 46
46 47
46 48
48 49
46 50
50 51
46 52
52 53
53 54
54 55
54 56
56 57
45 58
58 59
58 60
60 61
58 62
62 63

Create a layer that draws a horizontal or vertical keyline at a specified distance from required edge
