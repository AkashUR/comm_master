114
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='OkDupFieldBean'
11 arguments
12 argument (IntegerLiteralExpr)
13 value='1'
14 argument (IntegerLiteralExpr)
15 value='2'
16 name (SimpleName)
17 identifier='bean'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='OkDupFieldBean'
21 statement (ExpressionStmt)
22 expression (VariableDeclarationExpr)
23 variables
24 variable (VariableDeclarator)
25 initializer (MethodCallExpr)
26 name (SimpleName)
27 identifier='writeAndMap'
28 arguments
29 argument (ObjectCreationExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='ObjectMapper'
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='bean'
36 name (SimpleName)
37 identifier='json'
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='Map'
41 typeArguments
42 typeArgument (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='String'
45 typeArgument (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='Object'
48 statement (ExpressionStmt)
49 expression (MethodCallExpr)
50 name (SimpleName)
51 identifier='assertEquals'
52 arguments
53 argument (IntegerLiteralExpr)
54 value='2'
55 argument (MethodCallExpr)
56 name (SimpleName)
57 identifier='size'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='json'
61 statement (ExpressionStmt)
62 expression (MethodCallExpr)
63 name (SimpleName)
64 identifier='assertEquals'
65 arguments
66 argument (MethodCallExpr)
67 name (SimpleName)
68 identifier='valueOf'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='Integer'
72 arguments
73 argument (IntegerLiteralExpr)
74 value='1'
75 argument (MethodCallExpr)
76 name (SimpleName)
77 identifier='get'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='json'
81 arguments
82 argument (StringLiteralExpr)
83 value='x'
84 statement (ExpressionStmt)
85 expression (MethodCallExpr)
86 name (SimpleName)
87 identifier='assertEquals'
88 arguments
89 argument (MethodCallExpr)
90 name (SimpleName)
91 identifier='valueOf'
92 scope (NameExpr)
93 name (SimpleName)
94 identifier='Integer'
95 arguments
96 argument (IntegerLiteralExpr)
97 value='2'
98 argument (MethodCallExpr)
99 name (SimpleName)
100 identifier='get'
101 scope (NameExpr)
102 name (SimpleName)
103 identifier='json'
104 arguments
105 argument (StringLiteralExpr)
106 value='y'
107 type (VoidType)
108 name (SimpleName)
109 identifier='testOkDupFields'
110 thrownExceptions
111 thrownException (ClassOrInterfaceType)
112 name (SimpleName)
113 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
6 16
16 17
6 18
18 19
19 20
2 21
21 22
22 23
23 24
24 25
25 26
26 27
25 28
28 29
29 30
30 31
31 32
28 33
33 34
34 35
24 36
36 37
24 38
38 39
39 40
38 41
41 42
42 43
43 44
41 45
45 46
46 47
2 48
48 49
49 50
50 51
49 52
52 53
53 54
52 55
55 56
56 57
55 58
58 59
59 60
2 61
61 62
62 63
63 64
62 65
65 66
66 67
67 68
66 69
69 70
70 71
66 72
72 73
73 74
65 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
82 83
2 84
84 85
85 86
86 87
85 88
88 89
89 90
90 91
89 92
92 93
93 94
89 95
95 96
96 97
88 98
98 99
99 100
98 101
101 102
102 103
98 104
104 105
105 106
0 107
0 108
108 109
0 110
110 111
111 112
112 113

Testing [JACKSON-226]: it is ok to have "field override", as long as there are no intra-class conflicts.
