86
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='registerInput'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='varName'
11 argument (MethodCallExpr)
12 name (SimpleName)
13 identifier='mapToPair'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='rdd'
17 arguments
18 argument (ObjectCreationExpr)
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='ConvertStringToLongTextPair'
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='format'
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='rlen'
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='clen'
31 argument (NameExpr)
32 name (SimpleName)
33 identifier='nnz'
34 argument (NullLiteralExpr)
35 type (VoidType)
36 name (SimpleName)
37 identifier='registerInput'
38 parameters
39 parameter (Parameter)
40 isVarArgs='false'
41 name (SimpleName)
42 identifier='varName'
43 type (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='String'
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='rdd'
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='JavaRDD'
53 typeArguments
54 typeArgument (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='String'
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='format'
61 type (ClassOrInterfaceType)
62 name (SimpleName)
63 identifier='String'
64 parameter (Parameter)
65 isVarArgs='false'
66 name (SimpleName)
67 identifier='rlen'
68 type (PrimitiveType)
69 type='LONG'
70 parameter (Parameter)
71 isVarArgs='false'
72 name (SimpleName)
73 identifier='clen'
74 type (PrimitiveType)
75 type='LONG'
76 parameter (Parameter)
77 isVarArgs='false'
78 name (SimpleName)
79 identifier='nnz'
80 type (PrimitiveType)
81 type='LONG'
82 thrownExceptions
83 thrownException (ClassOrInterfaceType)
84 name (SimpleName)
85 identifier='DMLRuntimeException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
15 16
11 17
17 18
18 19
19 20
20 21
7 22
22 23
23 24
7 25
25 26
26 27
7 28
28 29
29 30
7 31
31 32
32 33
7 34
0 35
0 36
36 37
0 38
38 39
39 40
39 41
41 42
39 43
43 44
44 45
38 46
46 47
46 48
48 49
46 50
50 51
51 52
50 53
53 54
54 55
55 56
38 57
57 58
57 59
59 60
57 61
61 62
62 63
38 64
64 65
64 66
66 67
64 68
68 69
38 70
70 71
70 72
72 73
70 74
74 75
38 76
76 77
76 78
78 79
76 80
80 81
0 82
82 83
83 84
84 85

Register CSV/Text as inputs: with dimensions and nnz. It uses default file properties (example: delim, fill, ..) <p> Marks the variable in the DML script as input variable. Note that this expects a "varName = read(...)" statement in the DML script which through non-MLContext invocation would have been created by reading a HDFS file.
