68
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getCheckMode'
10 name (SimpleName)
11 identifier='mode'
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='CheckMode'
15 statement (ForeachStmt)
16 body (BlockStmt)
17 statements
18 statement (ExpressionStmt)
19 expression (MethodCallExpr)
20 name (SimpleName)
21 identifier='validateModel'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='validator'
25 arguments
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='model'
29 argument (MethodCallExpr)
30 name (SimpleName)
31 identifier='getMessageAcceptor'
32 iterable (MethodCallExpr)
33 name (SimpleName)
34 identifier='get'
35 scope (MethodCallExpr)
36 name (SimpleName)
37 identifier='getValidatorMap'
38 scope (NameExpr)
39 name (SimpleName)
40 identifier='ValidatorRegistry'
41 arguments
42 argument (NameExpr)
43 name (SimpleName)
44 identifier='mode'
45 variable (VariableDeclarationExpr)
46 variables
47 variable (VariableDeclarator)
48 name (SimpleName)
49 identifier='validator'
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='IFrancaExternalValidator'
53 type (VoidType)
54 name (SimpleName)
55 identifier='checkExtensionValidators'
56 parameters
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='model'
61 type (ClassOrInterfaceType)
62 name (SimpleName)
63 identifier='FModel'
64 annotations
65 annotation (MarkerAnnotationExpr)
66 name (Name)
67 identifier='Check'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
6 10
10 11
6 12
12 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
19 22
22 23
23 24
19 25
25 26
26 27
27 28
25 29
29 30
30 31
15 32
32 33
33 34
32 35
35 36
36 37
35 38
38 39
39 40
32 41
41 42
42 43
43 44
15 45
45 46
46 47
47 48
48 49
47 50
50 51
51 52
0 53
0 54
54 55
0 56
56 57
57 58
57 59
59 60
57 61
61 62
62 63
0 64
64 65
65 66
66 67

Call external validators (those have been installed via an Eclipse extension point).
