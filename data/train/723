463
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SwitchStmt)
4 selector (NameExpr)
5 name (SimpleName)
6 identifier='opcode'
7 entries
8 entrie (SwitchEntryStmt)
9 label (NameExpr)
10 name (SimpleName)
11 identifier='IDIV'
12 entrie (SwitchEntryStmt)
13 label (NameExpr)
14 name (SimpleName)
15 identifier='IREM'
16 statements
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='visitInsn'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='mv'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='DUP'
28 statement (ExpressionStmt)
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='visitMethodInsn'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='mv'
35 arguments
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='INVOKESTATIC'
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='VM_FQ'
42 argument (ArrayAccessExpr)
43 index (NameExpr)
44 name (SimpleName)
45 identifier='opcode'
46 name (NameExpr)
47 name (SimpleName)
48 identifier='BYTECODE_NAME'
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='I_V'
52 statement (BreakStmt)
53 entrie (SwitchEntryStmt)
54 label (NameExpr)
55 name (SimpleName)
56 identifier='LDIV'
57 entrie (SwitchEntryStmt)
58 label (NameExpr)
59 name (SimpleName)
60 identifier='LREM'
61 statements
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='visitInsn'
66 scope (NameExpr)
67 name (SimpleName)
68 identifier='mv'
69 arguments
70 argument (NameExpr)
71 name (SimpleName)
72 identifier='DUP2'
73 statement (ExpressionStmt)
74 expression (MethodCallExpr)
75 name (SimpleName)
76 identifier='visitMethodInsn'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='mv'
80 arguments
81 argument (NameExpr)
82 name (SimpleName)
83 identifier='INVOKESTATIC'
84 argument (NameExpr)
85 name (SimpleName)
86 identifier='VM_FQ'
87 argument (ArrayAccessExpr)
88 index (NameExpr)
89 name (SimpleName)
90 identifier='opcode'
91 name (NameExpr)
92 name (SimpleName)
93 identifier='BYTECODE_NAME'
94 argument (NameExpr)
95 name (SimpleName)
96 identifier='J_V'
97 statement (BreakStmt)
98 entrie (SwitchEntryStmt)
99 label (NameExpr)
100 name (SimpleName)
101 identifier='FDIV'
102 entrie (SwitchEntryStmt)
103 label (NameExpr)
104 name (SimpleName)
105 identifier='FREM'
106 statements
107 statement (ExpressionStmt)
108 expression (MethodCallExpr)
109 name (SimpleName)
110 identifier='visitInsn'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='mv'
114 arguments
115 argument (NameExpr)
116 name (SimpleName)
117 identifier='DUP'
118 statement (ExpressionStmt)
119 expression (MethodCallExpr)
120 name (SimpleName)
121 identifier='visitMethodInsn'
122 scope (NameExpr)
123 name (SimpleName)
124 identifier='mv'
125 arguments
126 argument (NameExpr)
127 name (SimpleName)
128 identifier='INVOKESTATIC'
129 argument (NameExpr)
130 name (SimpleName)
131 identifier='VM_FQ'
132 argument (ArrayAccessExpr)
133 index (NameExpr)
134 name (SimpleName)
135 identifier='opcode'
136 name (NameExpr)
137 name (SimpleName)
138 identifier='BYTECODE_NAME'
139 argument (NameExpr)
140 name (SimpleName)
141 identifier='F_V'
142 statement (BreakStmt)
143 entrie (SwitchEntryStmt)
144 label (NameExpr)
145 name (SimpleName)
146 identifier='DDIV'
147 entrie (SwitchEntryStmt)
148 label (NameExpr)
149 name (SimpleName)
150 identifier='DREM'
151 statements
152 statement (ExpressionStmt)
153 expression (MethodCallExpr)
154 name (SimpleName)
155 identifier='visitInsn'
156 scope (NameExpr)
157 name (SimpleName)
158 identifier='mv'
159 arguments
160 argument (NameExpr)
161 name (SimpleName)
162 identifier='DUP2'
163 statement (ExpressionStmt)
164 expression (MethodCallExpr)
165 name (SimpleName)
166 identifier='visitMethodInsn'
167 scope (NameExpr)
168 name (SimpleName)
169 identifier='mv'
170 arguments
171 argument (NameExpr)
172 name (SimpleName)
173 identifier='INVOKESTATIC'
174 argument (NameExpr)
175 name (SimpleName)
176 identifier='VM_FQ'
177 argument (ArrayAccessExpr)
178 index (NameExpr)
179 name (SimpleName)
180 identifier='opcode'
181 name (NameExpr)
182 name (SimpleName)
183 identifier='BYTECODE_NAME'
184 argument (NameExpr)
185 name (SimpleName)
186 identifier='D_V'
187 statement (BreakStmt)
188 entrie (SwitchEntryStmt)
189 label (NameExpr)
190 name (SimpleName)
191 identifier='IALOAD'
192 entrie (SwitchEntryStmt)
193 label (NameExpr)
194 name (SimpleName)
195 identifier='LALOAD'
196 entrie (SwitchEntryStmt)
197 label (NameExpr)
198 name (SimpleName)
199 identifier='DALOAD'
200 entrie (SwitchEntryStmt)
201 label (NameExpr)
202 name (SimpleName)
203 identifier='FALOAD'
204 entrie (SwitchEntryStmt)
205 label (NameExpr)
206 name (SimpleName)
207 identifier='AALOAD'
208 entrie (SwitchEntryStmt)
209 label (NameExpr)
210 name (SimpleName)
211 identifier='BALOAD'
212 entrie (SwitchEntryStmt)
213 label (NameExpr)
214 name (SimpleName)
215 identifier='CALOAD'
216 entrie (SwitchEntryStmt)
217 label (NameExpr)
218 name (SimpleName)
219 identifier='SALOAD'
220 statements
221 statement (ExpressionStmt)
222 expression (MethodCallExpr)
223 name (SimpleName)
224 identifier='visitInsn'
225 scope (NameExpr)
226 name (SimpleName)
227 identifier='mv'
228 arguments
229 argument (NameExpr)
230 name (SimpleName)
231 identifier='DUP2'
232 statement (ExpressionStmt)
233 expression (MethodCallExpr)
234 name (SimpleName)
235 identifier='visitMethodInsn'
236 scope (NameExpr)
237 name (SimpleName)
238 identifier='mv'
239 arguments
240 argument (NameExpr)
241 name (SimpleName)
242 identifier='INVOKESTATIC'
243 argument (NameExpr)
244 name (SimpleName)
245 identifier='VM_FQ'
246 argument (ArrayAccessExpr)
247 index (NameExpr)
248 name (SimpleName)
249 identifier='opcode'
250 name (NameExpr)
251 name (SimpleName)
252 identifier='BYTECODE_NAME'
253 argument (NameExpr)
254 name (SimpleName)
255 identifier='LI_V'
256 statement (BreakStmt)
257 entrie (SwitchEntryStmt)
258 label (NameExpr)
259 name (SimpleName)
260 identifier='IASTORE'
261 entrie (SwitchEntryStmt)
262 label (NameExpr)
263 name (SimpleName)
264 identifier='FASTORE'
265 entrie (SwitchEntryStmt)
266 label (NameExpr)
267 name (SimpleName)
268 identifier='AASTORE'
269 entrie (SwitchEntryStmt)
270 label (NameExpr)
271 name (SimpleName)
272 identifier='BASTORE'
273 entrie (SwitchEntryStmt)
274 label (NameExpr)
275 name (SimpleName)
276 identifier='CASTORE'
277 entrie (SwitchEntryStmt)
278 label (NameExpr)
279 name (SimpleName)
280 identifier='SASTORE'
281 statements
282 statement (ExpressionStmt)
283 expression (MethodCallExpr)
284 name (SimpleName)
285 identifier='c1b1a1__c1b1a1c1'
286 scope (NameExpr)
287 name (SimpleName)
288 identifier='stack'
289 statement (ExpressionStmt)
290 expression (MethodCallExpr)
291 name (SimpleName)
292 identifier='c1b1a1__c1b1a1c1'
293 scope (NameExpr)
294 name (SimpleName)
295 identifier='stack'
296 statement (ExpressionStmt)
297 expression (MethodCallExpr)
298 name (SimpleName)
299 identifier='visitMethodInsn'
300 scope (NameExpr)
301 name (SimpleName)
302 identifier='mv'
303 arguments
304 argument (NameExpr)
305 name (SimpleName)
306 identifier='INVOKESTATIC'
307 argument (NameExpr)
308 name (SimpleName)
309 identifier='VM_FQ'
310 argument (ArrayAccessExpr)
311 index (NameExpr)
312 name (SimpleName)
313 identifier='opcode'
314 name (NameExpr)
315 name (SimpleName)
316 identifier='BYTECODE_NAME'
317 argument (NameExpr)
318 name (SimpleName)
319 identifier='LI_V'
320 statement (BreakStmt)
321 entrie (SwitchEntryStmt)
322 label (NameExpr)
323 name (SimpleName)
324 identifier='LASTORE'
325 entrie (SwitchEntryStmt)
326 label (NameExpr)
327 name (SimpleName)
328 identifier='DASTORE'
329 statements
330 statement (ExpressionStmt)
331 expression (MethodCallExpr)
332 name (SimpleName)
333 identifier='c1b1a2__c1b1a2c1'
334 scope (NameExpr)
335 name (SimpleName)
336 identifier='stack'
337 statement (ExpressionStmt)
338 expression (MethodCallExpr)
339 name (SimpleName)
340 identifier='c1b2a1__c1b2a1c1'
341 scope (NameExpr)
342 name (SimpleName)
343 identifier='stack'
344 statement (ExpressionStmt)
345 expression (MethodCallExpr)
346 name (SimpleName)
347 identifier='visitMethodInsn'
348 scope (NameExpr)
349 name (SimpleName)
350 identifier='mv'
351 arguments
352 argument (NameExpr)
353 name (SimpleName)
354 identifier='INVOKESTATIC'
355 argument (NameExpr)
356 name (SimpleName)
357 identifier='VM_FQ'
358 argument (ArrayAccessExpr)
359 index (NameExpr)
360 name (SimpleName)
361 identifier='opcode'
362 name (NameExpr)
363 name (SimpleName)
364 identifier='BYTECODE_NAME'
365 argument (NameExpr)
366 name (SimpleName)
367 identifier='LI_V'
368 statement (BreakStmt)
369 entrie (SwitchEntryStmt)
370 label (NameExpr)
371 name (SimpleName)
372 identifier='ATHROW'
373 entrie (SwitchEntryStmt)
374 label (NameExpr)
375 name (SimpleName)
376 identifier='ARRAYLENGTH'
377 statements
378 statement (ExpressionStmt)
379 expression (MethodCallExpr)
380 name (SimpleName)
381 identifier='visitInsn'
382 scope (NameExpr)
383 name (SimpleName)
384 identifier='mv'
385 arguments
386 argument (NameExpr)
387 name (SimpleName)
388 identifier='DUP'
389 statement (ExpressionStmt)
390 expression (MethodCallExpr)
391 name (SimpleName)
392 identifier='visitMethodInsn'
393 scope (NameExpr)
394 name (SimpleName)
395 identifier='mv'
396 arguments
397 argument (NameExpr)
398 name (SimpleName)
399 identifier='INVOKESTATIC'
400 argument (NameExpr)
401 name (SimpleName)
402 identifier='VM_FQ'
403 argument (ArrayAccessExpr)
404 index (NameExpr)
405 name (SimpleName)
406 identifier='opcode'
407 name (NameExpr)
408 name (SimpleName)
409 identifier='BYTECODE_NAME'
410 argument (NameExpr)
411 name (SimpleName)
412 identifier='L_V'
413 statement (BreakStmt)
414 entrie (SwitchEntryStmt)
415 statements
416 statement (ExpressionStmt)
417 expression (MethodCallExpr)
418 name (SimpleName)
419 identifier='visitMethodInsn'
420 scope (NameExpr)
421 name (SimpleName)
422 identifier='mv'
423 arguments
424 argument (NameExpr)
425 name (SimpleName)
426 identifier='INVOKESTATIC'
427 argument (NameExpr)
428 name (SimpleName)
429 identifier='VM_FQ'
430 argument (ArrayAccessExpr)
431 index (NameExpr)
432 name (SimpleName)
433 identifier='opcode'
434 name (NameExpr)
435 name (SimpleName)
436 identifier='BYTECODE_NAME'
437 argument (NameExpr)
438 name (SimpleName)
439 identifier='V_V'
440 statement (ExpressionStmt)
441 expression (MethodCallExpr)
442 name (SimpleName)
443 identifier='visitInsn'
444 scope (SuperExpr)
445 arguments
446 argument (NameExpr)
447 name (SimpleName)
448 identifier='opcode'
449 type (VoidType)
450 name (SimpleName)
451 identifier='visitInsn'
452 parameters
453 parameter (Parameter)
454 isVarArgs='false'
455 name (SimpleName)
456 identifier='opcode'
457 type (PrimitiveType)
458 type='INT'
459 annotations
460 annotation (MarkerAnnotationExpr)
461 name (Name)
462 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
3 7
7 8
8 9
9 10
10 11
7 12
12 13
13 14
14 15
12 16
16 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
25 26
26 27
16 28
28 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
37 38
35 39
39 40
40 41
35 42
42 43
43 44
44 45
42 46
46 47
47 48
35 49
49 50
50 51
16 52
7 53
53 54
54 55
55 56
7 57
57 58
58 59
59 60
57 61
61 62
62 63
63 64
64 65
63 66
66 67
67 68
63 69
69 70
70 71
71 72
61 73
73 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
82 83
80 84
84 85
85 86
80 87
87 88
88 89
89 90
87 91
91 92
92 93
80 94
94 95
95 96
61 97
7 98
98 99
99 100
100 101
7 102
102 103
103 104
104 105
102 106
106 107
107 108
108 109
109 110
108 111
111 112
112 113
108 114
114 115
115 116
116 117
106 118
118 119
119 120
120 121
119 122
122 123
123 124
119 125
125 126
126 127
127 128
125 129
129 130
130 131
125 132
132 133
133 134
134 135
132 136
136 137
137 138
125 139
139 140
140 141
106 142
7 143
143 144
144 145
145 146
7 147
147 148
148 149
149 150
147 151
151 152
152 153
153 154
154 155
153 156
156 157
157 158
153 159
159 160
160 161
161 162
151 163
163 164
164 165
165 166
164 167
167 168
168 169
164 170
170 171
171 172
172 173
170 174
174 175
175 176
170 177
177 178
178 179
179 180
177 181
181 182
182 183
170 184
184 185
185 186
151 187
7 188
188 189
189 190
190 191
7 192
192 193
193 194
194 195
7 196
196 197
197 198
198 199
7 200
200 201
201 202
202 203
7 204
204 205
205 206
206 207
7 208
208 209
209 210
210 211
7 212
212 213
213 214
214 215
7 216
216 217
217 218
218 219
216 220
220 221
221 222
222 223
223 224
222 225
225 226
226 227
222 228
228 229
229 230
230 231
220 232
232 233
233 234
234 235
233 236
236 237
237 238
233 239
239 240
240 241
241 242
239 243
243 244
244 245
239 246
246 247
247 248
248 249
246 250
250 251
251 252
239 253
253 254
254 255
220 256
7 257
257 258
258 259
259 260
7 261
261 262
262 263
263 264
7 265
265 266
266 267
267 268
7 269
269 270
270 271
271 272
7 273
273 274
274 275
275 276
7 277
277 278
278 279
279 280
277 281
281 282
282 283
283 284
284 285
283 286
286 287
287 288
281 289
289 290
290 291
291 292
290 293
293 294
294 295
281 296
296 297
297 298
298 299
297 300
300 301
301 302
297 303
303 304
304 305
305 306
303 307
307 308
308 309
303 310
310 311
311 312
312 313
310 314
314 315
315 316
303 317
317 318
318 319
281 320
7 321
321 322
322 323
323 324
7 325
325 326
326 327
327 328
325 329
329 330
330 331
331 332
332 333
331 334
334 335
335 336
329 337
337 338
338 339
339 340
338 341
341 342
342 343
329 344
344 345
345 346
346 347
345 348
348 349
349 350
345 351
351 352
352 353
353 354
351 355
355 356
356 357
351 358
358 359
359 360
360 361
358 362
362 363
363 364
351 365
365 366
366 367
329 368
7 369
369 370
370 371
371 372
7 373
373 374
374 375
375 376
373 377
377 378
378 379
379 380
380 381
379 382
382 383
383 384
379 385
385 386
386 387
387 388
377 389
389 390
390 391
391 392
390 393
393 394
394 395
390 396
396 397
397 398
398 399
396 400
400 401
401 402
396 403
403 404
404 405
405 406
403 407
407 408
408 409
396 410
410 411
411 412
377 413
7 414
414 415
415 416
416 417
417 418
418 419
417 420
420 421
421 422
417 423
423 424
424 425
425 426
423 427
427 428
428 429
423 430
430 431
431 432
432 433
430 434
434 435
435 436
423 437
437 438
438 439
2 440
440 441
441 442
442 443
441 444
441 445
445 446
446 447
447 448
0 449
0 450
450 451
0 452
452 453
453 454
453 455
455 456
453 457
457 458
0 459
459 460
460 461
461 462

Insert call to our method directly before the corresponding user instruction
