390
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='get'
10 scope (MethodCallExpr)
11 name (SimpleName)
12 identifier='getTradelogSummary'
13 scope (MethodCallExpr)
14 name (SimpleName)
15 identifier='getData'
16 arguments
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='row'
20 name (SimpleName)
21 identifier='element'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='TradelogSummary'
25 statement (SwitchStmt)
26 selector (NameExpr)
27 name (SimpleName)
28 identifier='column'
29 entries
30 entrie (SwitchEntryStmt)
31 label (IntegerLiteralExpr)
32 value='1'
33 statements
34 statement (BlockStmt)
35 statements
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='setPeriod'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='element'
43 arguments
44 argument (CastExpr)
45 expression (NameExpr)
46 name (SimpleName)
47 identifier='value'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='String'
51 statement (BreakStmt)
52 entrie (SwitchEntryStmt)
53 label (IntegerLiteralExpr)
54 value='2'
55 statements
56 statement (BlockStmt)
57 statements
58 statement (ExpressionStmt)
59 expression (MethodCallExpr)
60 name (SimpleName)
61 identifier='setBattingAverage'
62 scope (NameExpr)
63 name (SimpleName)
64 identifier='element'
65 arguments
66 argument (MethodCallExpr)
67 name (SimpleName)
68 identifier='getBigDecimalValue'
69 scope (EnclosedExpr)
70 inner (CastExpr)
71 expression (NameExpr)
72 name (SimpleName)
73 identifier='value'
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='Percent'
77 statement (BreakStmt)
78 entrie (SwitchEntryStmt)
79 label (IntegerLiteralExpr)
80 value='3'
81 statements
82 statement (BlockStmt)
83 statements
84 statement (ExpressionStmt)
85 expression (MethodCallExpr)
86 name (SimpleName)
87 identifier='setSimpleSharpeRatio'
88 scope (NameExpr)
89 name (SimpleName)
90 identifier='element'
91 arguments
92 argument (MethodCallExpr)
93 name (SimpleName)
94 identifier='getBigDecimalValue'
95 scope (EnclosedExpr)
96 inner (CastExpr)
97 expression (NameExpr)
98 name (SimpleName)
99 identifier='value'
100 type (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='Decimal'
103 statement (BreakStmt)
104 entrie (SwitchEntryStmt)
105 label (IntegerLiteralExpr)
106 value='4'
107 statements
108 statement (BlockStmt)
109 statements
110 statement (ExpressionStmt)
111 expression (MethodCallExpr)
112 name (SimpleName)
113 identifier='setGrossProfitLoss'
114 scope (NameExpr)
115 name (SimpleName)
116 identifier='element'
117 arguments
118 argument (MethodCallExpr)
119 name (SimpleName)
120 identifier='getBigDecimalValue'
121 scope (EnclosedExpr)
122 inner (CastExpr)
123 expression (NameExpr)
124 name (SimpleName)
125 identifier='value'
126 type (ClassOrInterfaceType)
127 name (SimpleName)
128 identifier='Money'
129 statement (BreakStmt)
130 entrie (SwitchEntryStmt)
131 label (IntegerLiteralExpr)
132 value='5'
133 statements
134 statement (BlockStmt)
135 statements
136 statement (ExpressionStmt)
137 expression (MethodCallExpr)
138 name (SimpleName)
139 identifier='setQuantity'
140 scope (NameExpr)
141 name (SimpleName)
142 identifier='element'
143 arguments
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='getIntegerValue'
147 scope (EnclosedExpr)
148 inner (CastExpr)
149 expression (NameExpr)
150 name (SimpleName)
151 identifier='value'
152 type (ClassOrInterfaceType)
153 name (SimpleName)
154 identifier='Quantity'
155 statement (BreakStmt)
156 entrie (SwitchEntryStmt)
157 label (IntegerLiteralExpr)
158 value='6'
159 statements
160 statement (BlockStmt)
161 statements
162 statement (ExpressionStmt)
163 expression (MethodCallExpr)
164 name (SimpleName)
165 identifier='setCommission'
166 scope (NameExpr)
167 name (SimpleName)
168 identifier='element'
169 arguments
170 argument (MethodCallExpr)
171 name (SimpleName)
172 identifier='getBigDecimalValue'
173 scope (EnclosedExpr)
174 inner (CastExpr)
175 expression (NameExpr)
176 name (SimpleName)
177 identifier='value'
178 type (ClassOrInterfaceType)
179 name (SimpleName)
180 identifier='Money'
181 statement (BreakStmt)
182 entrie (SwitchEntryStmt)
183 label (IntegerLiteralExpr)
184 value='7'
185 statements
186 statement (BlockStmt)
187 statements
188 statement (ExpressionStmt)
189 expression (MethodCallExpr)
190 name (SimpleName)
191 identifier='setNetProfitLoss'
192 scope (NameExpr)
193 name (SimpleName)
194 identifier='element'
195 arguments
196 argument (MethodCallExpr)
197 name (SimpleName)
198 identifier='getBigDecimalValue'
199 scope (EnclosedExpr)
200 inner (CastExpr)
201 expression (NameExpr)
202 name (SimpleName)
203 identifier='value'
204 type (ClassOrInterfaceType)
205 name (SimpleName)
206 identifier='Money'
207 statement (BreakStmt)
208 entrie (SwitchEntryStmt)
209 label (IntegerLiteralExpr)
210 value='8'
211 statements
212 statement (BlockStmt)
213 statements
214 statement (ExpressionStmt)
215 expression (MethodCallExpr)
216 name (SimpleName)
217 identifier='setWinCount'
218 scope (NameExpr)
219 name (SimpleName)
220 identifier='element'
221 arguments
222 argument (MethodCallExpr)
223 name (SimpleName)
224 identifier='getIntegerValue'
225 scope (EnclosedExpr)
226 inner (CastExpr)
227 expression (NameExpr)
228 name (SimpleName)
229 identifier='value'
230 type (ClassOrInterfaceType)
231 name (SimpleName)
232 identifier='Quantity'
233 statement (BreakStmt)
234 entrie (SwitchEntryStmt)
235 label (IntegerLiteralExpr)
236 value='9'
237 statements
238 statement (BlockStmt)
239 statements
240 statement (ExpressionStmt)
241 expression (MethodCallExpr)
242 name (SimpleName)
243 identifier='setProfitAmount'
244 scope (NameExpr)
245 name (SimpleName)
246 identifier='element'
247 arguments
248 argument (MethodCallExpr)
249 name (SimpleName)
250 identifier='getBigDecimalValue'
251 scope (EnclosedExpr)
252 inner (CastExpr)
253 expression (NameExpr)
254 name (SimpleName)
255 identifier='value'
256 type (ClassOrInterfaceType)
257 name (SimpleName)
258 identifier='Money'
259 statement (BreakStmt)
260 entrie (SwitchEntryStmt)
261 label (IntegerLiteralExpr)
262 value='10'
263 statements
264 statement (BlockStmt)
265 statements
266 statement (ExpressionStmt)
267 expression (MethodCallExpr)
268 name (SimpleName)
269 identifier='setLossCount'
270 scope (NameExpr)
271 name (SimpleName)
272 identifier='element'
273 arguments
274 argument (MethodCallExpr)
275 name (SimpleName)
276 identifier='getIntegerValue'
277 scope (EnclosedExpr)
278 inner (CastExpr)
279 expression (NameExpr)
280 name (SimpleName)
281 identifier='value'
282 type (ClassOrInterfaceType)
283 name (SimpleName)
284 identifier='Quantity'
285 statement (BreakStmt)
286 entrie (SwitchEntryStmt)
287 label (IntegerLiteralExpr)
288 value='11'
289 statements
290 statement (BlockStmt)
291 statements
292 statement (ExpressionStmt)
293 expression (MethodCallExpr)
294 name (SimpleName)
295 identifier='setLossAmount'
296 scope (NameExpr)
297 name (SimpleName)
298 identifier='element'
299 arguments
300 argument (MethodCallExpr)
301 name (SimpleName)
302 identifier='getBigDecimalValue'
303 scope (EnclosedExpr)
304 inner (CastExpr)
305 expression (NameExpr)
306 name (SimpleName)
307 identifier='value'
308 type (ClassOrInterfaceType)
309 name (SimpleName)
310 identifier='Money'
311 statement (BreakStmt)
312 entrie (SwitchEntryStmt)
313 label (IntegerLiteralExpr)
314 value='12'
315 statements
316 statement (BlockStmt)
317 statements
318 statement (ExpressionStmt)
319 expression (MethodCallExpr)
320 name (SimpleName)
321 identifier='setPositionCount'
322 scope (NameExpr)
323 name (SimpleName)
324 identifier='element'
325 arguments
326 argument (MethodCallExpr)
327 name (SimpleName)
328 identifier='getIntegerValue'
329 scope (EnclosedExpr)
330 inner (CastExpr)
331 expression (NameExpr)
332 name (SimpleName)
333 identifier='value'
334 type (ClassOrInterfaceType)
335 name (SimpleName)
336 identifier='Quantity'
337 statement (BreakStmt)
338 entrie (SwitchEntryStmt)
339 label (IntegerLiteralExpr)
340 value='13'
341 statements
342 statement (BlockStmt)
343 statements
344 statement (ExpressionStmt)
345 expression (MethodCallExpr)
346 name (SimpleName)
347 identifier='setTradestrategyCount'
348 scope (NameExpr)
349 name (SimpleName)
350 identifier='element'
351 arguments
352 argument (MethodCallExpr)
353 name (SimpleName)
354 identifier='getIntegerValue'
355 scope (EnclosedExpr)
356 inner (CastExpr)
357 expression (NameExpr)
358 name (SimpleName)
359 identifier='value'
360 type (ClassOrInterfaceType)
361 name (SimpleName)
362 identifier='Quantity'
363 statement (BreakStmt)
364 entrie (SwitchEntryStmt)
365 statements
366 statement (BlockStmt)
367 type (VoidType)
368 name (SimpleName)
369 identifier='populateDAO'
370 parameters
371 parameter (Parameter)
372 isVarArgs='false'
373 name (SimpleName)
374 identifier='value'
375 type (ClassOrInterfaceType)
376 name (SimpleName)
377 identifier='Object'
378 parameter (Parameter)
379 isVarArgs='false'
380 name (SimpleName)
381 identifier='row'
382 type (PrimitiveType)
383 type='INT'
384 parameter (Parameter)
385 isVarArgs='false'
386 name (SimpleName)
387 identifier='column'
388 type (PrimitiveType)
389 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
7 16
16 17
17 18
18 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
25 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
36 37
37 38
38 39
37 40
40 41
41 42
37 43
43 44
44 45
45 46
46 47
44 48
48 49
49 50
35 51
29 52
52 53
53 54
52 55
55 56
56 57
57 58
58 59
59 60
60 61
59 62
62 63
63 64
59 65
65 66
66 67
67 68
66 69
69 70
70 71
71 72
72 73
70 74
74 75
75 76
57 77
29 78
78 79
79 80
78 81
81 82
82 83
83 84
84 85
85 86
86 87
85 88
88 89
89 90
85 91
91 92
92 93
93 94
92 95
95 96
96 97
97 98
98 99
96 100
100 101
101 102
83 103
29 104
104 105
105 106
104 107
107 108
108 109
109 110
110 111
111 112
112 113
111 114
114 115
115 116
111 117
117 118
118 119
119 120
118 121
121 122
122 123
123 124
124 125
122 126
126 127
127 128
109 129
29 130
130 131
131 132
130 133
133 134
134 135
135 136
136 137
137 138
138 139
137 140
140 141
141 142
137 143
143 144
144 145
145 146
144 147
147 148
148 149
149 150
150 151
148 152
152 153
153 154
135 155
29 156
156 157
157 158
156 159
159 160
160 161
161 162
162 163
163 164
164 165
163 166
166 167
167 168
163 169
169 170
170 171
171 172
170 173
173 174
174 175
175 176
176 177
174 178
178 179
179 180
161 181
29 182
182 183
183 184
182 185
185 186
186 187
187 188
188 189
189 190
190 191
189 192
192 193
193 194
189 195
195 196
196 197
197 198
196 199
199 200
200 201
201 202
202 203
200 204
204 205
205 206
187 207
29 208
208 209
209 210
208 211
211 212
212 213
213 214
214 215
215 216
216 217
215 218
218 219
219 220
215 221
221 222
222 223
223 224
222 225
225 226
226 227
227 228
228 229
226 230
230 231
231 232
213 233
29 234
234 235
235 236
234 237
237 238
238 239
239 240
240 241
241 242
242 243
241 244
244 245
245 246
241 247
247 248
248 249
249 250
248 251
251 252
252 253
253 254
254 255
252 256
256 257
257 258
239 259
29 260
260 261
261 262
260 263
263 264
264 265
265 266
266 267
267 268
268 269
267 270
270 271
271 272
267 273
273 274
274 275
275 276
274 277
277 278
278 279
279 280
280 281
278 282
282 283
283 284
265 285
29 286
286 287
287 288
286 289
289 290
290 291
291 292
292 293
293 294
294 295
293 296
296 297
297 298
293 299
299 300
300 301
301 302
300 303
303 304
304 305
305 306
306 307
304 308
308 309
309 310
291 311
29 312
312 313
313 314
312 315
315 316
316 317
317 318
318 319
319 320
320 321
319 322
322 323
323 324
319 325
325 326
326 327
327 328
326 329
329 330
330 331
331 332
332 333
330 334
334 335
335 336
317 337
29 338
338 339
339 340
338 341
341 342
342 343
343 344
344 345
345 346
346 347
345 348
348 349
349 350
345 351
351 352
352 353
353 354
352 355
355 356
356 357
357 358
358 359
356 360
360 361
361 362
343 363
29 364
364 365
365 366
0 367
0 368
368 369
0 370
370 371
371 372
371 373
373 374
371 375
375 376
376 377
370 378
378 379
378 380
380 381
378 382
382 383
370 384
384 385
384 386
386 387
384 388
388 389

getData() -
