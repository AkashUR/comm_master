65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='URL'
11 arguments
12 argument (StringLiteralExpr)
13 value='http:///foo'
14 name (SimpleName)
15 identifier='url'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='URL'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='assertEquals'
23 arguments
24 argument (StringLiteralExpr)
25 value=''
26 argument (MethodCallExpr)
27 name (SimpleName)
28 identifier='getAuthority'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='url'
32 statement (ExpressionStmt)
33 expression (MethodCallExpr)
34 name (SimpleName)
35 identifier='assertEquals'
36 arguments
37 argument (StringLiteralExpr)
38 value='/foo'
39 argument (MethodCallExpr)
40 name (SimpleName)
41 identifier='getPath'
42 scope (NameExpr)
43 name (SimpleName)
44 identifier='url'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='assertEquals'
49 arguments
50 argument (StringLiteralExpr)
51 value='http:///foo'
52 argument (MethodCallExpr)
53 name (SimpleName)
54 identifier='toString'
55 scope (NameExpr)
56 name (SimpleName)
57 identifier='url'
58 type (VoidType)
59 name (SimpleName)
60 identifier='testEmptyAuthority'
61 thrownExceptions
62 thrownException (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
23 26
26 27
27 28
26 29
29 30
30 31
2 32
32 33
33 34
34 35
33 36
36 37
37 38
36 39
39 40
40 41
39 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
49 52
52 53
53 54
52 55
55 56
56 57
0 58
0 59
59 60
0 61
61 62
62 63
63 64

The RI is not self-consistent on missing authorities, returning either null or the empty string depending on the number of slashes in the path. We always treat '//' as the beginning of an authority.
