67
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='internalJarPattern'
9 value (MethodCallExpr)
10 name (SimpleName)
11 identifier='compile'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='Pattern'
15 arguments
16 argument (BinaryExpr)
17 operator='PLUS'
18 left (BinaryExpr)
19 operator='PLUS'
20 left (StringLiteralExpr)
21 value='.*(lucene|solr)([^/]*?)-'
22 right (MethodCallExpr)
23 name (SimpleName)
24 identifier='quote'
25 scope (NameExpr)
26 name (SimpleName)
27 identifier='Pattern'
28 arguments
29 argument (MethodCallExpr)
30 name (SimpleName)
31 identifier='getProperty'
32 scope (MethodCallExpr)
33 name (SimpleName)
34 identifier='getProject'
35 arguments
36 argument (StringLiteralExpr)
37 value='version'
38 right (StringLiteralExpr)
39 value='\\.jar'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='setInternalDependencyProperties'
44 statement (ExpressionStmt)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='setExternalDependencyProperties'
48 statement (ExpressionStmt)
49 expression (MethodCallExpr)
50 name (SimpleName)
51 identifier='setGrandparentDependencyManagementProperty'
52 statement (ExpressionStmt)
53 expression (MethodCallExpr)
54 name (SimpleName)
55 identifier='writeFiltersFile'
56 type (VoidType)
57 name (SimpleName)
58 identifier='execute'
59 thrownExceptions
60 thrownException (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='BuildException'
63 annotations
64 annotation (MarkerAnnotationExpr)
65 name (Name)
66 identifier='Override'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
9 15
15 16
16 17
16 18
18 19
18 20
20 21
18 22
22 23
23 24
22 25
25 26
26 27
22 28
28 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
16 38
38 39
2 40
40 41
41 42
42 43
2 44
44 45
45 46
46 47
2 48
48 49
49 50
50 51
2 52
52 53
53 54
54 55
0 56
0 57
57 58
0 59
59 60
60 61
61 62
0 63
63 64
64 65
65 66

Collect dependency information from Ant build.xml and ivy.xml files and from ivy-versions.properties, then write out an Ant filters file to be used when copying POMs.
