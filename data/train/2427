166
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getResult'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Binary'
13 arguments
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='s'
17 name (SimpleName)
18 identifier='result'
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='RegisterOperand'
22 statement (ExpressionStmt)
23 expression (VariableDeclarationExpr)
24 variables
25 variable (VariableDeclarator)
26 initializer (MethodCallExpr)
27 name (SimpleName)
28 identifier='findOrCreateVertex'
29 arguments
30 argument (MethodCallExpr)
31 name (SimpleName)
32 identifier='getRegister'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='result'
36 name (SimpleName)
37 identifier='v'
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='ValueGraphVertex'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='setLabel'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='v'
48 arguments
49 argument (MethodCallExpr)
50 name (SimpleName)
51 identifier='operator'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='s'
55 argument (IntegerLiteralExpr)
56 value='2'
57 statement (ExpressionStmt)
58 expression (VariableDeclarationExpr)
59 variables
60 variable (VariableDeclarator)
61 initializer (MethodCallExpr)
62 name (SimpleName)
63 identifier='getVal1'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='Binary'
67 arguments
68 argument (NameExpr)
69 name (SimpleName)
70 identifier='s'
71 name (SimpleName)
72 identifier='val'
73 type (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='Operand'
76 statement (ExpressionStmt)
77 expression (AssignExpr)
78 operator='ASSIGN'
79 target (NameExpr)
80 name (SimpleName)
81 identifier='val'
82 value (MethodCallExpr)
83 name (SimpleName)
84 identifier='bypassMoves'
85 arguments
86 argument (NameExpr)
87 name (SimpleName)
88 identifier='val'
89 statement (ExpressionStmt)
90 expression (MethodCallExpr)
91 name (SimpleName)
92 identifier='link'
93 arguments
94 argument (NameExpr)
95 name (SimpleName)
96 identifier='v'
97 argument (MethodCallExpr)
98 name (SimpleName)
99 identifier='findOrCreateVertex'
100 arguments
101 argument (NameExpr)
102 name (SimpleName)
103 identifier='val'
104 argument (IntegerLiteralExpr)
105 value='0'
106 statement (ExpressionStmt)
107 expression (VariableDeclarationExpr)
108 variables
109 variable (VariableDeclarator)
110 initializer (MethodCallExpr)
111 name (SimpleName)
112 identifier='getVal2'
113 scope (NameExpr)
114 name (SimpleName)
115 identifier='Binary'
116 arguments
117 argument (NameExpr)
118 name (SimpleName)
119 identifier='s'
120 name (SimpleName)
121 identifier='val2'
122 type (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='Operand'
125 statement (ExpressionStmt)
126 expression (AssignExpr)
127 operator='ASSIGN'
128 target (NameExpr)
129 name (SimpleName)
130 identifier='val2'
131 value (MethodCallExpr)
132 name (SimpleName)
133 identifier='bypassMoves'
134 arguments
135 argument (NameExpr)
136 name (SimpleName)
137 identifier='val2'
138 statement (ExpressionStmt)
139 expression (MethodCallExpr)
140 name (SimpleName)
141 identifier='link'
142 arguments
143 argument (NameExpr)
144 name (SimpleName)
145 identifier='v'
146 argument (MethodCallExpr)
147 name (SimpleName)
148 identifier='findOrCreateVertex'
149 arguments
150 argument (NameExpr)
151 name (SimpleName)
152 identifier='val2'
153 argument (IntegerLiteralExpr)
154 value='1'
155 type (VoidType)
156 name (SimpleName)
157 identifier='processBinary'
158 parameters
159 parameter (Parameter)
160 isVarArgs='false'
161 name (SimpleName)
162 identifier='s'
163 type (ClassOrInterfaceType)
164 name (SimpleName)
165 identifier='Instruction'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
6 17
17 18
6 19
19 20
20 21
2 22
22 23
23 24
24 25
25 26
26 27
27 28
26 29
29 30
30 31
31 32
30 33
33 34
34 35
25 36
36 37
25 38
38 39
39 40
2 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
50 51
49 52
52 53
53 54
48 55
55 56
2 57
57 58
58 59
59 60
60 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
69 70
60 71
71 72
60 73
73 74
74 75
2 76
76 77
77 78
77 79
79 80
80 81
77 82
82 83
83 84
82 85
85 86
86 87
87 88
2 89
89 90
90 91
91 92
90 93
93 94
94 95
95 96
93 97
97 98
98 99
97 100
100 101
101 102
102 103
93 104
104 105
2 106
106 107
107 108
108 109
109 110
110 111
111 112
110 113
113 114
114 115
110 116
116 117
117 118
118 119
109 120
120 121
109 122
122 123
123 124
2 125
125 126
126 127
126 128
128 129
129 130
126 131
131 132
132 133
131 134
134 135
135 136
136 137
2 138
138 139
139 140
140 141
139 142
142 143
143 144
144 145
142 146
146 147
147 148
146 149
149 150
150 151
151 152
142 153
153 154
0 155
0 156
156 157
0 158
158 159
159 160
159 161
161 162
159 163
163 164
164 165

Update the value graph to account for a given Binary instruction. <p><b>PRECONDITION:</b> <code> Binary.conforms(s); </code>
