125
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='mOut'
9 value (NameExpr)
10 name (SimpleName)
11 identifier='out'
12 statement (ExpressionStmt)
13 expression (AssignExpr)
14 operator='ASSIGN'
15 target (NameExpr)
16 name (SimpleName)
17 identifier='mErr'
18 value (NameExpr)
19 name (SimpleName)
20 identifier='err'
21 statement (ExpressionStmt)
22 expression (AssignExpr)
23 operator='ASSIGN'
24 target (NameExpr)
25 name (SimpleName)
26 identifier='mAnonymousFlags'
27 value (ObjectCreationExpr)
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='ArrayList'
31 statement (ExpressionStmt)
32 expression (AssignExpr)
33 operator='ASSIGN'
34 target (NameExpr)
35 name (SimpleName)
36 identifier='mRegisteredFlags'
37 value (ObjectCreationExpr)
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='TreeSet'
41 statement (ExpressionStmt)
42 expression (AssignExpr)
43 operator='ASSIGN'
44 target (NameExpr)
45 name (SimpleName)
46 identifier='mRequiredSets'
47 value (ObjectCreationExpr)
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='ArrayList'
51 statement (ExpressionStmt)
52 expression (AssignExpr)
53 operator='ASSIGN'
54 target (NameExpr)
55 name (SimpleName)
56 identifier='mLongNames'
57 value (ObjectCreationExpr)
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='TreeMap'
61 statement (ExpressionStmt)
62 expression (AssignExpr)
63 operator='ASSIGN'
64 target (NameExpr)
65 name (SimpleName)
66 identifier='mShortNames'
67 value (ObjectCreationExpr)
68 type (ClassOrInterfaceType)
69 name (SimpleName)
70 identifier='TreeMap'
71 statement (ExpressionStmt)
72 expression (MethodCallExpr)
73 name (SimpleName)
74 identifier='registerOptional'
75 arguments
76 argument (CharLiteralExpr)
77 value='h'
78 argument (NameExpr)
79 name (SimpleName)
80 identifier='HELP_FLAG'
81 argument (StringLiteralExpr)
82 value='print help on command-line flag usage'
83 statement (ExpressionStmt)
84 expression (MethodCallExpr)
85 name (SimpleName)
86 identifier='registerOptional'
87 arguments
88 argument (NameExpr)
89 name (SimpleName)
90 identifier='EXPERIMENTAL_HELP_FLAG'
91 argument (StringLiteralExpr)
92 value=''
93 statement (ExpressionStmt)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='setName'
97 arguments
98 argument (NameExpr)
99 name (SimpleName)
100 identifier='programName'
101 name (SimpleName)
102 identifier='CFlags'
103 parameters
104 parameter (Parameter)
105 isVarArgs='false'
106 name (SimpleName)
107 identifier='programName'
108 type (ClassOrInterfaceType)
109 name (SimpleName)
110 identifier='String'
111 parameter (Parameter)
112 isVarArgs='false'
113 name (SimpleName)
114 identifier='out'
115 type (ClassOrInterfaceType)
116 name (SimpleName)
117 identifier='Appendable'
118 parameter (Parameter)
119 isVarArgs='false'
120 name (SimpleName)
121 identifier='err'
122 type (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='Appendable'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
2 12
12 13
13 14
13 15
15 16
16 17
13 18
18 19
19 20
2 21
21 22
22 23
22 24
24 25
25 26
22 27
27 28
28 29
29 30
2 31
31 32
32 33
32 34
34 35
35 36
32 37
37 38
38 39
39 40
2 41
41 42
42 43
42 44
44 45
45 46
42 47
47 48
48 49
49 50
2 51
51 52
52 53
52 54
54 55
55 56
52 57
57 58
58 59
59 60
2 61
61 62
62 63
62 64
64 65
65 66
62 67
67 68
68 69
69 70
2 71
71 72
72 73
73 74
72 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
2 83
83 84
84 85
85 86
84 87
87 88
88 89
89 90
87 91
91 92
2 93
93 94
94 95
95 96
94 97
97 98
98 99
99 100
0 101
101 102
0 103
103 104
104 105
104 106
106 107
104 108
108 109
109 110
103 111
111 112
111 113
113 114
111 115
115 116
116 117
103 118
118 119
118 120
120 121
118 122
122 123
123 124

Creates a new <code>CFlags</code> instance.
