65
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (MethodCallExpr)
7 name (SimpleName)
8 identifier='max'
9 scope (NameExpr)
10 name (SimpleName)
11 identifier='Math'
12 arguments
13 argument (BinaryExpr)
14 operator='PLUS'
15 left (CastExpr)
16 expression (EnclosedExpr)
17 inner (BinaryExpr)
18 operator='DIVIDE'
19 left (MethodCallExpr)
20 name (SimpleName)
21 identifier='size'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='t'
25 right (NameExpr)
26 name (SimpleName)
27 identifier='DEFAULT_LOAD_FACTOR'
28 type (PrimitiveType)
29 type='INT'
30 right (IntegerLiteralExpr)
31 value='1'
32 argument (IntegerLiteralExpr)
33 value='11'
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='putAll'
38 arguments
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='t'
42 name (SimpleName)
43 identifier='StripedLockConcurrentHashMap'
44 parameters
45 parameter (Parameter)
46 isVarArgs='false'
47 name (SimpleName)
48 identifier='t'
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='Map'
52 typeArguments
53 typeArgument (WildcardType)
54 extendedType (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='K'
57 typeArgument (WildcardType)
58 extendedType (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='V'
61 annotations
62 annotation (MarkerAnnotationExpr)
63 name (Name)
64 identifier='NotNull'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
6 9
9 10
10 11
6 12
12 13
13 14
13 15
15 16
16 17
17 18
17 19
19 20
20 21
19 22
22 23
23 24
17 25
25 26
26 27
15 28
28 29
13 30
30 31
12 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
40 41
0 42
42 43
0 44
44 45
45 46
45 47
47 48
45 49
49 50
50 51
49 52
52 53
53 54
54 55
55 56
52 57
57 58
58 59
59 60
45 61
61 62
62 63
63 64

Creates a new map with the same mappings as the given map.  The map is created with a capacity of twice the number of mappings in the given map or 11 (whichever is greater), and a default load factor and concurrencyLevel.
