95
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='gcd'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='numerator'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='denominator'
17 name (SimpleName)
18 identifier='gcd'
19 type (PrimitiveType)
20 type='LONG'
21 statement (ExpressionStmt)
22 expression (AssignExpr)
23 operator='ASSIGN'
24 target (ArrayAccessExpr)
25 index (IntegerLiteralExpr)
26 value='0'
27 name (NameExpr)
28 name (SimpleName)
29 identifier='r'
30 value (BinaryExpr)
31 operator='DIVIDE'
32 left (BinaryExpr)
33 operator='MULTIPLY'
34 left (EnclosedExpr)
35 inner (ConditionalExpr)
36 condition (EnclosedExpr)
37 inner (BinaryExpr)
38 operator='GREATER'
39 left (NameExpr)
40 name (SimpleName)
41 identifier='denominator'
42 right (IntegerLiteralExpr)
43 value='0'
44 elseExpr (UnaryExpr)
45 operator='MINUS'
46 expression (IntegerLiteralExpr)
47 value='1'
48 thenExpr (IntegerLiteralExpr)
49 value='1'
50 right (NameExpr)
51 name (SimpleName)
52 identifier='numerator'
53 right (NameExpr)
54 name (SimpleName)
55 identifier='gcd'
56 statement (ExpressionStmt)
57 expression (AssignExpr)
58 operator='ASSIGN'
59 target (ArrayAccessExpr)
60 index (IntegerLiteralExpr)
61 value='1'
62 name (NameExpr)
63 name (SimpleName)
64 identifier='r'
65 value (BinaryExpr)
66 operator='DIVIDE'
67 left (MethodCallExpr)
68 name (SimpleName)
69 identifier='abs'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='Math'
73 arguments
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='denominator'
77 right (NameExpr)
78 name (SimpleName)
79 identifier='gcd'
80 name (SimpleName)
81 identifier='Rational'
82 parameters
83 parameter (Parameter)
84 isVarArgs='false'
85 name (SimpleName)
86 identifier='numerator'
87 type (PrimitiveType)
88 type='LONG'
89 parameter (Parameter)
90 isVarArgs='false'
91 name (SimpleName)
92 identifier='denominator'
93 type (PrimitiveType)
94 type='LONG'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
10 14
14 15
15 16
6 17
17 18
6 19
19 20
2 21
21 22
22 23
22 24
24 25
25 26
24 27
27 28
28 29
22 30
30 31
30 32
32 33
32 34
34 35
35 36
36 37
37 38
37 39
39 40
40 41
37 42
42 43
35 44
44 45
44 46
46 47
35 48
48 49
32 50
50 51
51 52
30 53
53 54
54 55
2 56
56 57
57 58
57 59
59 60
60 61
59 62
62 63
63 64
57 65
65 66
65 67
67 68
68 69
67 70
70 71
71 72
67 73
73 74
74 75
75 76
65 77
77 78
78 79
0 80
80 81
0 82
82 83
83 84
83 85
85 86
83 87
87 88
82 89
89 90
89 91
91 92
89 93
93 94

Construct a rational with specifiec numerator and denominator
