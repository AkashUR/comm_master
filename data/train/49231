42
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getFramePointer'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='Magic'
13 name (SimpleName)
14 identifier='fp'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Address'
18 statement (ExpressionStmt)
19 expression (MethodCallExpr)
20 name (SimpleName)
21 identifier='yieldpoint'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='RVMThread'
25 arguments
26 argument (FieldAccessExpr)
27 name (SimpleName)
28 identifier='BACKEDGE'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='RVMThread'
32 argument (NameExpr)
33 name (SimpleName)
34 identifier='fp'
35 type (VoidType)
36 name (SimpleName)
37 identifier='yieldpointFromBackedge'
38 annotations
39 annotation (MarkerAnnotationExpr)
40 name (Name)
41 identifier='Entrypoint'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
19 22
22 23
23 24
19 25
25 26
26 27
27 28
26 29
29 30
30 31
25 32
32 33
33 34
0 35
0 36
36 37
0 38
38 39
39 40
40 41

Handle timer interrupt taken on loop backedge. This method is identical to the yieldpointFromBackedge() method used method used by the baseline compiler, except in the OPT compiler world, we also save the volatile registers.
