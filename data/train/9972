46
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='fSegments'
9 scope (ThisExpr)
10 value (ArrayCreationExpr)
11 elementType (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='String'
14 levels
15 level (ArrayCreationLevel)
16 dimension (IntegerLiteralExpr)
17 value='1'
18 statement (ExpressionStmt)
19 expression (AssignExpr)
20 operator='ASSIGN'
21 target (ArrayAccessExpr)
22 index (IntegerLiteralExpr)
23 value='0'
24 name (FieldAccessExpr)
25 name (SimpleName)
26 identifier='fSegments'
27 scope (ThisExpr)
28 value (FieldAccessExpr)
29 name (SimpleName)
30 identifier='fPattern'
31 scope (ThisExpr)
32 statement (ExpressionStmt)
33 expression (AssignExpr)
34 operator='ASSIGN'
35 target (FieldAccessExpr)
36 name (SimpleName)
37 identifier='fBound'
38 scope (ThisExpr)
39 value (FieldAccessExpr)
40 name (SimpleName)
41 identifier='fLength'
42 scope (ThisExpr)
43 type (VoidType)
44 name (SimpleName)
45 identifier='parseNoWildCards'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
16 17
2 18
18 19
19 20
19 21
21 22
22 23
21 24
24 25
25 26
24 27
19 28
28 29
29 30
28 31
2 32
32 33
33 34
33 35
35 36
36 37
35 38
33 39
39 40
40 41
39 42
0 43
0 44
44 45

This method parses the given pattern into segments seperated by wildcard '*' characters. Since wildcards are not being used in this case, the pattern consists of a single segment.
