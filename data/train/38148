118
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='apply'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='_callback'
13 arguments
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='tuple'
17 argument (MethodCallExpr)
18 name (SimpleName)
19 identifier='with'
20 scope (MethodCallExpr)
21 name (SimpleName)
22 identifier='with'
23 scope (MethodCallExpr)
24 name (SimpleName)
25 identifier='cloneContext'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='_context'
29 arguments
30 argument (FieldAccessExpr)
31 name (SimpleName)
32 identifier='STREAM_ID'
33 scope (FieldAccessExpr)
34 name (SimpleName)
35 identifier='Type'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='EmitContext'
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='streamId'
42 arguments
43 argument (FieldAccessExpr)
44 name (SimpleName)
45 identifier='TASK_ID'
46 scope (FieldAccessExpr)
47 name (SimpleName)
48 identifier='Type'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='EmitContext'
52 argument (ObjectCreationExpr)
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='Integer'
56 arguments
57 argument (NameExpr)
58 name (SimpleName)
59 identifier='taskId'
60 name (SimpleName)
61 identifier='t'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='List'
65 typeArguments
66 typeArgument (ClassOrInterfaceType)
67 name (SimpleName)
68 identifier='Object'
69 statement (ExpressionStmt)
70 expression (MethodCallExpr)
71 name (SimpleName)
72 identifier='emitDirect'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='_delegate'
76 arguments
77 argument (NameExpr)
78 name (SimpleName)
79 identifier='taskId'
80 argument (NameExpr)
81 name (SimpleName)
82 identifier='streamId'
83 argument (NameExpr)
84 name (SimpleName)
85 identifier='t'
86 type (VoidType)
87 name (SimpleName)
88 identifier='emitDirect'
89 parameters
90 parameter (Parameter)
91 isVarArgs='false'
92 name (SimpleName)
93 identifier='taskId'
94 type (PrimitiveType)
95 type='INT'
96 parameter (Parameter)
97 isVarArgs='false'
98 name (SimpleName)
99 identifier='streamId'
100 type (ClassOrInterfaceType)
101 name (SimpleName)
102 identifier='String'
103 parameter (Parameter)
104 isVarArgs='false'
105 name (SimpleName)
106 identifier='tuple'
107 type (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='List'
110 typeArguments
111 typeArgument (ClassOrInterfaceType)
112 name (SimpleName)
113 identifier='Object'
114 annotations
115 annotation (MarkerAnnotationExpr)
116 name (Name)
117 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
13 17
17 18
18 19
17 20
20 21
21 22
20 23
23 24
24 25
23 26
26 27
27 28
20 29
29 30
30 31
31 32
30 33
33 34
34 35
33 36
36 37
37 38
29 39
39 40
40 41
17 42
42 43
43 44
44 45
43 46
46 47
47 48
46 49
49 50
50 51
42 52
52 53
53 54
54 55
52 56
56 57
57 58
58 59
6 60
60 61
6 62
62 63
63 64
62 65
65 66
66 67
67 68
2 69
69 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
78 79
76 80
80 81
81 82
76 83
83 84
84 85
0 86
0 87
87 88
0 89
89 90
90 91
90 92
92 93
90 94
94 95
89 96
96 97
96 98
98 99
96 100
100 101
101 102
89 103
103 104
103 105
105 106
103 107
107 108
108 109
107 110
110 111
111 112
112 113
0 114
114 115
115 116
116 117

Emits a tuple to the specified task on the specified output stream. This output stream must have been declared as a direct stream, and the specified task must use a direct grouping on this stream to receive the message. The emitted values must be immutable. <p/> <p> Because no message id is specified, Storm will not track this message so ack and fail will never be called for this tuple.</p>
