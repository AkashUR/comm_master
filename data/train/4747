80
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='pushInt'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='stack'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='i'
14 statement (ExpressionStmt)
15 expression (MethodCallExpr)
16 name (SimpleName)
17 identifier='pushInt'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='stack'
21 arguments
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='value'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='visitMethodInsn'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='mv'
32 arguments
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='INVOKESTATIC'
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='VM_FQ'
39 argument (ArrayAccessExpr)
40 index (IntegerLiteralExpr)
41 value='132'
42 name (NameExpr)
43 name (SimpleName)
44 identifier='BYTECODE_NAME'
45 argument (NameExpr)
46 name (SimpleName)
47 identifier='II_V'
48 statement (ExpressionStmt)
49 expression (MethodCallExpr)
50 name (SimpleName)
51 identifier='visitIincInsn'
52 scope (SuperExpr)
53 arguments
54 argument (NameExpr)
55 name (SimpleName)
56 identifier='i'
57 argument (NameExpr)
58 name (SimpleName)
59 identifier='value'
60 type (VoidType)
61 name (SimpleName)
62 identifier='visitIincInsn'
63 parameters
64 parameter (Parameter)
65 isVarArgs='false'
66 name (SimpleName)
67 identifier='i'
68 type (PrimitiveType)
69 type='INT'
70 parameter (Parameter)
71 isVarArgs='false'
72 name (SimpleName)
73 identifier='value'
74 type (PrimitiveType)
75 type='INT'
76 annotations
77 annotation (MarkerAnnotationExpr)
78 name (Name)
79 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
2 14
14 15
15 16
16 17
15 18
18 19
19 20
15 21
21 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
26 32
32 33
33 34
34 35
32 36
36 37
37 38
32 39
39 40
40 41
39 42
42 43
43 44
32 45
45 46
46 47
2 48
48 49
49 50
50 51
49 52
49 53
53 54
54 55
55 56
53 57
57 58
58 59
0 60
0 61
61 62
0 63
63 64
64 65
64 66
66 67
64 68
68 69
63 70
70 71
70 72
72 73
70 74
74 75
0 76
76 77
77 78
78 79

IINC <p> Increment i-th local (int) variable by constant (int) value. <p> May follow a WIDE instruction.
