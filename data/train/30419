65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='forEncryption'
9 scope (ThisExpr)
10 value (BooleanLiteralExpr)
11 value='true'
12 statement (ExpressionStmt)
13 expression (AssignExpr)
14 operator='ASSIGN'
15 target (FieldAccessExpr)
16 name (SimpleName)
17 identifier='pubParam'
18 scope (ThisExpr)
19 value (NameExpr)
20 name (SimpleName)
21 identifier='publicKey'
22 statement (ExpressionStmt)
23 expression (AssignExpr)
24 operator='ASSIGN'
25 target (FieldAccessExpr)
26 name (SimpleName)
27 identifier='keyPairGenerator'
28 scope (ThisExpr)
29 value (NameExpr)
30 name (SimpleName)
31 identifier='ephemeralKeyPairGenerator'
32 statement (ExpressionStmt)
33 expression (MethodCallExpr)
34 name (SimpleName)
35 identifier='extractParams'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='params'
40 type (VoidType)
41 name (SimpleName)
42 identifier='init'
43 parameters
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='publicKey'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='AsymmetricKeyParameter'
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='params'
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='CipherParameters'
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='ephemeralKeyPairGenerator'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='EphemeralKeyPairGenerator'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
2 12
12 13
13 14
13 15
15 16
16 17
15 18
13 19
19 20
20 21
2 22
22 23
23 24
23 25
25 26
26 27
25 28
23 29
29 30
30 31
2 32
32 33
33 34
34 35
33 36
36 37
37 38
38 39
0 40
0 41
41 42
0 43
43 44
44 45
44 46
46 47
44 48
48 49
49 50
43 51
51 52
51 53
53 54
51 55
55 56
56 57
43 58
58 59
58 60
60 61
58 62
62 63
63 64

Initialise the decryptor.
