462
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='setUpDeepExitSC'
10 name (SimpleName)
11 identifier='sc'
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='Statechart'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (MethodCallExpr)
20 name (SimpleName)
21 identifier='transform'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='sequencer'
25 arguments
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='sc'
29 name (SimpleName)
30 identifier='flow'
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='ExecutionFlow'
34 statement (ExpressionStmt)
35 expression (VariableDeclarationExpr)
36 variables
37 variable (VariableDeclarator)
38 initializer (MethodCallExpr)
39 name (SimpleName)
40 identifier='assertedState'
41 arguments
42 argument (NameExpr)
43 name (SimpleName)
44 identifier='flow'
45 argument (IntegerLiteralExpr)
46 value='0'
47 argument (StringLiteralExpr)
48 value='sc.r.s'
49 name (SimpleName)
50 identifier='_s'
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='ExecutionState'
54 statement (ExpressionStmt)
55 expression (VariableDeclarationExpr)
56 variables
57 variable (VariableDeclarator)
58 initializer (MethodCallExpr)
59 name (SimpleName)
60 identifier='assertedState'
61 arguments
62 argument (NameExpr)
63 name (SimpleName)
64 identifier='flow'
65 argument (IntegerLiteralExpr)
66 value='1'
67 argument (StringLiteralExpr)
68 value='sc.r.s._1.a'
69 name (SimpleName)
70 identifier='_s1a'
71 type (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='ExecutionState'
74 statement (ExpressionStmt)
75 expression (VariableDeclarationExpr)
76 variables
77 variable (VariableDeclarator)
78 initializer (MethodCallExpr)
79 name (SimpleName)
80 identifier='assertedState'
81 arguments
82 argument (NameExpr)
83 name (SimpleName)
84 identifier='flow'
85 argument (IntegerLiteralExpr)
86 value='2'
87 argument (StringLiteralExpr)
88 value='sc.r.s._1.a._1.a'
89 name (SimpleName)
90 identifier='_s1a1a'
91 type (ClassOrInterfaceType)
92 name (SimpleName)
93 identifier='ExecutionState'
94 statement (ExpressionStmt)
95 expression (VariableDeclarationExpr)
96 variables
97 variable (VariableDeclarator)
98 initializer (MethodCallExpr)
99 name (SimpleName)
100 identifier='assertedState'
101 arguments
102 argument (NameExpr)
103 name (SimpleName)
104 identifier='flow'
105 argument (IntegerLiteralExpr)
106 value='3'
107 argument (StringLiteralExpr)
108 value='sc.r.s._1.a._1.a._1.a'
109 name (SimpleName)
110 identifier='_s1a1a1a'
111 type (ClassOrInterfaceType)
112 name (SimpleName)
113 identifier='ExecutionState'
114 statement (ExpressionStmt)
115 expression (VariableDeclarationExpr)
116 variables
117 variable (VariableDeclarator)
118 initializer (MethodCallExpr)
119 name (SimpleName)
120 identifier='assertedState'
121 arguments
122 argument (NameExpr)
123 name (SimpleName)
124 identifier='flow'
125 argument (IntegerLiteralExpr)
126 value='4'
127 argument (StringLiteralExpr)
128 value='sc.r.s._1.a._1.a._2.a'
129 name (SimpleName)
130 identifier='_s1a1a2a'
131 type (ClassOrInterfaceType)
132 name (SimpleName)
133 identifier='ExecutionState'
134 statement (ExpressionStmt)
135 expression (VariableDeclarationExpr)
136 variables
137 variable (VariableDeclarator)
138 initializer (MethodCallExpr)
139 name (SimpleName)
140 identifier='assertedState'
141 arguments
142 argument (NameExpr)
143 name (SimpleName)
144 identifier='flow'
145 argument (IntegerLiteralExpr)
146 value='5'
147 argument (StringLiteralExpr)
148 value='sc.r.s._1.a._2.a'
149 name (SimpleName)
150 identifier='_s1a2a'
151 type (ClassOrInterfaceType)
152 name (SimpleName)
153 identifier='ExecutionState'
154 statement (ExpressionStmt)
155 expression (VariableDeclarationExpr)
156 variables
157 variable (VariableDeclarator)
158 initializer (MethodCallExpr)
159 name (SimpleName)
160 identifier='assertedState'
161 arguments
162 argument (NameExpr)
163 name (SimpleName)
164 identifier='flow'
165 argument (IntegerLiteralExpr)
166 value='6'
167 argument (StringLiteralExpr)
168 value='sc.r.s._1.a._2.a._1.a'
169 name (SimpleName)
170 identifier='_s1a2a1a'
171 type (ClassOrInterfaceType)
172 name (SimpleName)
173 identifier='ExecutionState'
174 statement (ExpressionStmt)
175 expression (VariableDeclarationExpr)
176 variables
177 variable (VariableDeclarator)
178 initializer (MethodCallExpr)
179 name (SimpleName)
180 identifier='assertedState'
181 arguments
182 argument (NameExpr)
183 name (SimpleName)
184 identifier='flow'
185 argument (IntegerLiteralExpr)
186 value='7'
187 argument (StringLiteralExpr)
188 value='sc.r.s._1.a._2.a._2.a'
189 name (SimpleName)
190 identifier='_s1a2a2a'
191 type (ClassOrInterfaceType)
192 name (SimpleName)
193 identifier='ExecutionState'
194 statement (ExpressionStmt)
195 expression (VariableDeclarationExpr)
196 variables
197 variable (VariableDeclarator)
198 initializer (MethodCallExpr)
199 name (SimpleName)
200 identifier='assertedState'
201 arguments
202 argument (NameExpr)
203 name (SimpleName)
204 identifier='flow'
205 argument (IntegerLiteralExpr)
206 value='8'
207 argument (StringLiteralExpr)
208 value='sc.r.s._2.a'
209 name (SimpleName)
210 identifier='_s2a'
211 type (ClassOrInterfaceType)
212 name (SimpleName)
213 identifier='ExecutionState'
214 statement (ExpressionStmt)
215 expression (VariableDeclarationExpr)
216 variables
217 variable (VariableDeclarator)
218 initializer (MethodCallExpr)
219 name (SimpleName)
220 identifier='assertedState'
221 arguments
222 argument (NameExpr)
223 name (SimpleName)
224 identifier='flow'
225 argument (IntegerLiteralExpr)
226 value='9'
227 argument (StringLiteralExpr)
228 value='sc.r.s._2.a._1.a'
229 name (SimpleName)
230 identifier='_s2a1a'
231 type (ClassOrInterfaceType)
232 name (SimpleName)
233 identifier='ExecutionState'
234 statement (ExpressionStmt)
235 expression (VariableDeclarationExpr)
236 variables
237 variable (VariableDeclarator)
238 initializer (MethodCallExpr)
239 name (SimpleName)
240 identifier='assertedState'
241 arguments
242 argument (NameExpr)
243 name (SimpleName)
244 identifier='flow'
245 argument (IntegerLiteralExpr)
246 value='10'
247 argument (StringLiteralExpr)
248 value='sc.r.s._2.a._1.a._1.a'
249 name (SimpleName)
250 identifier='_s2a1a1a'
251 type (ClassOrInterfaceType)
252 name (SimpleName)
253 identifier='ExecutionState'
254 statement (ExpressionStmt)
255 expression (VariableDeclarationExpr)
256 variables
257 variable (VariableDeclarator)
258 initializer (MethodCallExpr)
259 name (SimpleName)
260 identifier='assertedState'
261 arguments
262 argument (NameExpr)
263 name (SimpleName)
264 identifier='flow'
265 argument (IntegerLiteralExpr)
266 value='11'
267 argument (StringLiteralExpr)
268 value='sc.r.s._2.a._1.a._2.a'
269 name (SimpleName)
270 identifier='_s2a1a2a'
271 type (ClassOrInterfaceType)
272 name (SimpleName)
273 identifier='ExecutionState'
274 statement (ExpressionStmt)
275 expression (VariableDeclarationExpr)
276 variables
277 variable (VariableDeclarator)
278 initializer (MethodCallExpr)
279 name (SimpleName)
280 identifier='assertedState'
281 arguments
282 argument (NameExpr)
283 name (SimpleName)
284 identifier='flow'
285 argument (IntegerLiteralExpr)
286 value='12'
287 argument (StringLiteralExpr)
288 value='sc.r.s._2.a._2.a'
289 name (SimpleName)
290 identifier='_s2a2a'
291 type (ClassOrInterfaceType)
292 name (SimpleName)
293 identifier='ExecutionState'
294 statement (ExpressionStmt)
295 expression (VariableDeclarationExpr)
296 variables
297 variable (VariableDeclarator)
298 initializer (MethodCallExpr)
299 name (SimpleName)
300 identifier='assertedState'
301 arguments
302 argument (NameExpr)
303 name (SimpleName)
304 identifier='flow'
305 argument (IntegerLiteralExpr)
306 value='13'
307 argument (StringLiteralExpr)
308 value='sc.r.s._2.a._2.a._1.a'
309 name (SimpleName)
310 identifier='_s2a2a1a'
311 type (ClassOrInterfaceType)
312 name (SimpleName)
313 identifier='ExecutionState'
314 statement (ExpressionStmt)
315 expression (VariableDeclarationExpr)
316 variables
317 variable (VariableDeclarator)
318 initializer (MethodCallExpr)
319 name (SimpleName)
320 identifier='assertedState'
321 arguments
322 argument (NameExpr)
323 name (SimpleName)
324 identifier='flow'
325 argument (IntegerLiteralExpr)
326 value='14'
327 argument (StringLiteralExpr)
328 value='sc.r.s._2.a._2.a._2.a'
329 name (SimpleName)
330 identifier='_s2a2a2a'
331 type (ClassOrInterfaceType)
332 name (SimpleName)
333 identifier='ExecutionState'
334 statement (ExpressionStmt)
335 expression (VariableDeclarationExpr)
336 variables
337 variable (VariableDeclarator)
338 initializer (MethodCallExpr)
339 name (SimpleName)
340 identifier='assertedState'
341 arguments
342 argument (NameExpr)
343 name (SimpleName)
344 identifier='flow'
345 argument (IntegerLiteralExpr)
346 value='15'
347 argument (StringLiteralExpr)
348 value='sc.r.b'
349 name (SimpleName)
350 identifier='_b'
351 type (ClassOrInterfaceType)
352 name (SimpleName)
353 identifier='ExecutionState'
354 statement (ExpressionStmt)
355 expression (VariableDeclarationExpr)
356 variables
357 variable (VariableDeclarator)
358 initializer (MethodCallExpr)
359 name (SimpleName)
360 identifier='getExitSequence'
361 scope (NameExpr)
362 name (SimpleName)
363 identifier='_s'
364 name (SimpleName)
365 identifier='_exit'
366 type (ClassOrInterfaceType)
367 name (SimpleName)
368 identifier='Sequence'
369 statement (ExpressionStmt)
370 expression (MethodCallExpr)
371 name (SimpleName)
372 identifier='assertEquals'
373 arguments
374 argument (BinaryExpr)
375 operator='PLUS'
376 left (StringLiteralExpr)
377 value='wrong steps: '
378 right (MethodCallExpr)
379 name (SimpleName)
380 identifier='stepListAsString'
381 arguments
382 argument (NameExpr)
383 name (SimpleName)
384 identifier='_exit'
385 argument (IntegerLiteralExpr)
386 value='3'
387 argument (MethodCallExpr)
388 name (SimpleName)
389 identifier='size'
390 scope (MethodCallExpr)
391 name (SimpleName)
392 identifier='getSteps'
393 scope (NameExpr)
394 name (SimpleName)
395 identifier='_exit'
396 statement (ExpressionStmt)
397 expression (MethodCallExpr)
398 name (SimpleName)
399 identifier='assertCall'
400 arguments
401 argument (NameExpr)
402 name (SimpleName)
403 identifier='_exit'
404 argument (IntegerLiteralExpr)
405 value='0'
406 argument (MethodCallExpr)
407 name (SimpleName)
408 identifier='getExitSequence'
409 scope (MethodCallExpr)
410 name (SimpleName)
411 identifier='getSuperScope'
412 scope (NameExpr)
413 name (SimpleName)
414 identifier='_s1a'
415 statement (ExpressionStmt)
416 expression (MethodCallExpr)
417 name (SimpleName)
418 identifier='assertCall'
419 arguments
420 argument (NameExpr)
421 name (SimpleName)
422 identifier='_exit'
423 argument (IntegerLiteralExpr)
424 value='1'
425 argument (MethodCallExpr)
426 name (SimpleName)
427 identifier='getExitSequence'
428 scope (MethodCallExpr)
429 name (SimpleName)
430 identifier='getSuperScope'
431 scope (NameExpr)
432 name (SimpleName)
433 identifier='_s2a'
434 statement (ExpressionStmt)
435 expression (MethodCallExpr)
436 name (SimpleName)
437 identifier='assertCall'
438 arguments
439 argument (NameExpr)
440 name (SimpleName)
441 identifier='_exit'
442 argument (IntegerLiteralExpr)
443 value='2'
444 argument (MethodCallExpr)
445 name (SimpleName)
446 identifier='getExitAction'
447 scope (NameExpr)
448 name (SimpleName)
449 identifier='_s'
450 type (VoidType)
451 name (SimpleName)
452 identifier='testBottomUpExitSequence_ThreeLevels'
453 annotations
454 annotation (SingleMemberAnnotationExpr)
455 memberValue (StringLiteralExpr)
456 value='unused'
457 name (Name)
458 identifier='SuppressWarnings'
459 annotation (MarkerAnnotationExpr)
460 name (Name)
461 identifier='Test'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
6 10
10 11
6 12
12 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
19 22
22 23
23 24
19 25
25 26
26 27
27 28
18 29
29 30
18 31
31 32
32 33
2 34
34 35
35 36
36 37
37 38
38 39
39 40
38 41
41 42
42 43
43 44
41 45
45 46
41 47
47 48
37 49
49 50
37 51
51 52
52 53
2 54
54 55
55 56
56 57
57 58
58 59
59 60
58 61
61 62
62 63
63 64
61 65
65 66
61 67
67 68
57 69
69 70
57 71
71 72
72 73
2 74
74 75
75 76
76 77
77 78
78 79
79 80
78 81
81 82
82 83
83 84
81 85
85 86
81 87
87 88
77 89
89 90
77 91
91 92
92 93
2 94
94 95
95 96
96 97
97 98
98 99
99 100
98 101
101 102
102 103
103 104
101 105
105 106
101 107
107 108
97 109
109 110
97 111
111 112
112 113
2 114
114 115
115 116
116 117
117 118
118 119
119 120
118 121
121 122
122 123
123 124
121 125
125 126
121 127
127 128
117 129
129 130
117 131
131 132
132 133
2 134
134 135
135 136
136 137
137 138
138 139
139 140
138 141
141 142
142 143
143 144
141 145
145 146
141 147
147 148
137 149
149 150
137 151
151 152
152 153
2 154
154 155
155 156
156 157
157 158
158 159
159 160
158 161
161 162
162 163
163 164
161 165
165 166
161 167
167 168
157 169
169 170
157 171
171 172
172 173
2 174
174 175
175 176
176 177
177 178
178 179
179 180
178 181
181 182
182 183
183 184
181 185
185 186
181 187
187 188
177 189
189 190
177 191
191 192
192 193
2 194
194 195
195 196
196 197
197 198
198 199
199 200
198 201
201 202
202 203
203 204
201 205
205 206
201 207
207 208
197 209
209 210
197 211
211 212
212 213
2 214
214 215
215 216
216 217
217 218
218 219
219 220
218 221
221 222
222 223
223 224
221 225
225 226
221 227
227 228
217 229
229 230
217 231
231 232
232 233
2 234
234 235
235 236
236 237
237 238
238 239
239 240
238 241
241 242
242 243
243 244
241 245
245 246
241 247
247 248
237 249
249 250
237 251
251 252
252 253
2 254
254 255
255 256
256 257
257 258
258 259
259 260
258 261
261 262
262 263
263 264
261 265
265 266
261 267
267 268
257 269
269 270
257 271
271 272
272 273
2 274
274 275
275 276
276 277
277 278
278 279
279 280
278 281
281 282
282 283
283 284
281 285
285 286
281 287
287 288
277 289
289 290
277 291
291 292
292 293
2 294
294 295
295 296
296 297
297 298
298 299
299 300
298 301
301 302
302 303
303 304
301 305
305 306
301 307
307 308
297 309
309 310
297 311
311 312
312 313
2 314
314 315
315 316
316 317
317 318
318 319
319 320
318 321
321 322
322 323
323 324
321 325
325 326
321 327
327 328
317 329
329 330
317 331
331 332
332 333
2 334
334 335
335 336
336 337
337 338
338 339
339 340
338 341
341 342
342 343
343 344
341 345
345 346
341 347
347 348
337 349
349 350
337 351
351 352
352 353
2 354
354 355
355 356
356 357
357 358
358 359
359 360
358 361
361 362
362 363
357 364
364 365
357 366
366 367
367 368
2 369
369 370
370 371
371 372
370 373
373 374
374 375
374 376
376 377
374 378
378 379
379 380
378 381
381 382
382 383
383 384
373 385
385 386
373 387
387 388
388 389
387 390
390 391
391 392
390 393
393 394
394 395
2 396
396 397
397 398
398 399
397 400
400 401
401 402
402 403
400 404
404 405
400 406
406 407
407 408
406 409
409 410
410 411
409 412
412 413
413 414
2 415
415 416
416 417
417 418
416 419
419 420
420 421
421 422
419 423
423 424
419 425
425 426
426 427
425 428
428 429
429 430
428 431
431 432
432 433
2 434
434 435
435 436
436 437
435 438
438 439
439 440
440 441
438 442
442 443
438 444
444 445
445 446
444 447
447 448
448 449
0 450
0 451
451 452
0 453
453 454
454 455
455 456
454 457
457 458
453 459
459 460
460 461

When exiting an orthogonal state exits must be performed in a well defined order bottom up with highest priority/order states first.
