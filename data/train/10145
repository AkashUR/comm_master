56
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertTrue'
7 arguments
8 argument (BinaryExpr)
9 operator='GREATER_EQUALS'
10 left (MethodCallExpr)
11 name (SimpleName)
12 identifier='indexOf'
13 scope (NameExpr)
14 name (SimpleName)
15 identifier='Bytes'
16 arguments
17 argument (MethodCallExpr)
18 name (SimpleName)
19 identifier='array'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='buffer'
23 argument (MethodCallExpr)
24 name (SimpleName)
25 identifier='getBytes'
26 scope (NameExpr)
27 name (SimpleName)
28 identifier='expectedString'
29 arguments
30 argument (FieldAccessExpr)
31 name (SimpleName)
32 identifier='US_ASCII'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='Charsets'
36 right (IntegerLiteralExpr)
37 value='0'
38 type (VoidType)
39 name (SimpleName)
40 identifier='assertBufferContainsExpectedStrings'
41 parameters
42 parameter (Parameter)
43 isVarArgs='false'
44 name (SimpleName)
45 identifier='buffer'
46 type (ClassOrInterfaceType)
47 name (SimpleName)
48 identifier='ByteBuffer'
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='expectedString'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='String'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
8 10
10 11
11 12
10 13
13 14
14 15
10 16
16 17
17 18
18 19
17 20
20 21
21 22
16 23
23 24
24 25
23 26
26 27
27 28
23 29
29 30
30 31
31 32
30 33
33 34
34 35
8 36
36 37
0 38
0 39
39 40
0 41
41 42
42 43
42 44
44 45
42 46
46 47
47 48
41 49
49 50
49 51
51 52
49 53
53 54
54 55

we cast the string to US-ASCII charset because that's what PCP uses and then find it in the ByteBuffer array to ensure it's there.
