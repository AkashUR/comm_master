125
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='createSimpleRuntime'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='helper'
13 name (SimpleName)
14 identifier='config'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='TungstenProperties'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (ObjectCreationExpr)
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='ReplicatorRuntime'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='config'
30 argument (ObjectCreationExpr)
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='MockOpenReplicatorContext'
34 argument (MethodCallExpr)
35 name (SimpleName)
36 identifier='getInstance'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='ReplicatorMonitor'
40 name (SimpleName)
41 identifier='runtime'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='ReplicatorRuntime'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='configure'
49 scope (NameExpr)
50 name (SimpleName)
51 identifier='runtime'
52 statement (ExpressionStmt)
53 expression (MethodCallExpr)
54 name (SimpleName)
55 identifier='prepare'
56 scope (NameExpr)
57 name (SimpleName)
58 identifier='runtime'
59 statement (ExpressionStmt)
60 expression (VariableDeclarationExpr)
61 variables
62 variable (VariableDeclarator)
63 initializer (MethodCallExpr)
64 name (SimpleName)
65 identifier='getPipeline'
66 scope (NameExpr)
67 name (SimpleName)
68 identifier='runtime'
69 name (SimpleName)
70 identifier='pipeline'
71 type (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='Pipeline'
74 statement (ExpressionStmt)
75 expression (VariableDeclarationExpr)
76 variables
77 variable (VariableDeclarator)
78 initializer (MethodCallExpr)
79 name (SimpleName)
80 identifier='shutdownAfterEventId'
81 scope (NameExpr)
82 name (SimpleName)
83 identifier='pipeline'
84 arguments
85 argument (StringLiteralExpr)
86 value='5'
87 name (SimpleName)
88 identifier='future'
89 type (ClassOrInterfaceType)
90 name (SimpleName)
91 identifier='Future'
92 typeArguments
93 typeArgument (ClassOrInterfaceType)
94 name (SimpleName)
95 identifier='Pipeline'
96 statement (ExpressionStmt)
97 expression (MethodCallExpr)
98 name (SimpleName)
99 identifier='startAndAssertEventsApplied'
100 arguments
101 argument (NameExpr)
102 name (SimpleName)
103 identifier='pipeline'
104 argument (NameExpr)
105 name (SimpleName)
106 identifier='future'
107 statement (ExpressionStmt)
108 expression (MethodCallExpr)
109 name (SimpleName)
110 identifier='release'
111 scope (NameExpr)
112 name (SimpleName)
113 identifier='pipeline'
114 arguments
115 argument (NameExpr)
116 name (SimpleName)
117 identifier='runtime'
118 type (VoidType)
119 name (SimpleName)
120 identifier='testRunToEventId'
121 thrownExceptions
122 thrownException (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
24 25
22 26
26 27
27 28
28 29
26 30
30 31
31 32
32 33
26 34
34 35
35 36
34 37
37 38
38 39
21 40
40 41
21 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
2 52
52 53
53 54
54 55
53 56
56 57
57 58
2 59
59 60
60 61
61 62
62 63
63 64
64 65
63 66
66 67
67 68
62 69
69 70
62 71
71 72
72 73
2 74
74 75
75 76
76 77
77 78
78 79
79 80
78 81
81 82
82 83
78 84
84 85
85 86
77 87
87 88
77 89
89 90
90 91
89 92
92 93
93 94
94 95
2 96
96 97
97 98
98 99
97 100
100 101
101 102
102 103
100 104
104 105
105 106
2 107
107 108
108 109
109 110
108 111
111 112
112 113
108 114
114 115
115 116
116 117
0 118
0 119
119 120
0 121
121 122
122 123
123 124

Verify that we can set up the pipeline to go offline at a particular native event ID. (Identical to previous case, but using the event ID.)
