46
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='writeUnsignedVarintLong'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='buffer'
11 argument (BinaryExpr)
12 operator='XOR'
13 left (EnclosedExpr)
14 inner (BinaryExpr)
15 operator='LEFT_SHIFT'
16 left (NameExpr)
17 name (SimpleName)
18 identifier='val'
19 right (IntegerLiteralExpr)
20 value='1'
21 right (EnclosedExpr)
22 inner (BinaryExpr)
23 operator='SIGNED_RIGHT_SHIFT'
24 left (NameExpr)
25 name (SimpleName)
26 identifier='val'
27 right (IntegerLiteralExpr)
28 value='63'
29 type (VoidType)
30 name (SimpleName)
31 identifier='writeSignedVarintLong'
32 parameters
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='buffer'
37 type (ClassOrInterfaceType)
38 name (SimpleName)
39 identifier='ByteBuffer'
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='val'
44 type (PrimitiveType)
45 type='LONG'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
11 13
13 14
14 15
14 16
16 17
17 18
14 19
19 20
11 21
21 22
22 23
22 24
24 25
25 26
22 27
27 28
0 29
0 30
30 31
0 32
32 33
33 34
33 35
35 36
33 37
37 38
38 39
32 40
40 41
40 42
42 43
40 44
44 45

Write a signed long using a variable-length encoding. The sign bit is moved to bit 0. Data is always written in 7-bit little-endian, where the 8th bit is the continuation flag.
