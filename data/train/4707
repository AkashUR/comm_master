200
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='_createStatechart'
10 arguments
11 argument (StringLiteralExpr)
12 value='cs'
13 name (SimpleName)
14 identifier='sc'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Statechart'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (MethodCallExpr)
23 name (SimpleName)
24 identifier='_createInterfaceScope'
25 arguments
26 argument (StringLiteralExpr)
27 value='interface'
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='sc'
31 name (SimpleName)
32 identifier='scope'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='Scope'
36 statement (ExpressionStmt)
37 expression (VariableDeclarationExpr)
38 variables
39 variable (VariableDeclarator)
40 initializer (MethodCallExpr)
41 name (SimpleName)
42 identifier='_createRegion'
43 arguments
44 argument (StringLiteralExpr)
45 value='r'
46 argument (NameExpr)
47 name (SimpleName)
48 identifier='sc'
49 name (SimpleName)
50 identifier='r'
51 type (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='Region'
54 statement (ExpressionStmt)
55 expression (VariableDeclarationExpr)
56 variables
57 variable (VariableDeclarator)
58 initializer (MethodCallExpr)
59 name (SimpleName)
60 identifier='_createFinalState'
61 arguments
62 argument (NameExpr)
63 name (SimpleName)
64 identifier='r'
65 name (SimpleName)
66 identifier='fs'
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='FinalState'
70 statement (ExpressionStmt)
71 expression (VariableDeclarationExpr)
72 variables
73 variable (VariableDeclarator)
74 initializer (MethodCallExpr)
75 name (SimpleName)
76 identifier='transform'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='sequencer'
80 arguments
81 argument (NameExpr)
82 name (SimpleName)
83 identifier='sc'
84 name (SimpleName)
85 identifier='flow'
86 type (ClassOrInterfaceType)
87 name (SimpleName)
88 identifier='ExecutionFlow'
89 statement (ExpressionStmt)
90 expression (VariableDeclarationExpr)
91 variables
92 variable (VariableDeclarator)
93 initializer (MethodCallExpr)
94 name (SimpleName)
95 identifier='get'
96 scope (MethodCallExpr)
97 name (SimpleName)
98 identifier='getStates'
99 scope (NameExpr)
100 name (SimpleName)
101 identifier='flow'
102 arguments
103 argument (IntegerLiteralExpr)
104 value='0'
105 name (SimpleName)
106 identifier='_fs'
107 type (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='ExecutionState'
110 statement (ExpressionStmt)
111 expression (MethodCallExpr)
112 name (SimpleName)
113 identifier='assertEquals'
114 arguments
115 argument (StringLiteralExpr)
116 value='_final_0'
117 argument (MethodCallExpr)
118 name (SimpleName)
119 identifier='getSimpleName'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='_fs'
123 statement (ExpressionStmt)
124 expression (MethodCallExpr)
125 name (SimpleName)
126 identifier='assertNull'
127 arguments
128 argument (MethodCallExpr)
129 name (SimpleName)
130 identifier='getExitAction'
131 scope (NameExpr)
132 name (SimpleName)
133 identifier='_fs'
134 statement (ExpressionStmt)
135 expression (MethodCallExpr)
136 name (SimpleName)
137 identifier='assertNotNull'
138 arguments
139 argument (MethodCallExpr)
140 name (SimpleName)
141 identifier='getExitSequence'
142 scope (NameExpr)
143 name (SimpleName)
144 identifier='_fs'
145 statement (ExpressionStmt)
146 expression (MethodCallExpr)
147 name (SimpleName)
148 identifier='assertEquals'
149 arguments
150 argument (IntegerLiteralExpr)
151 value='1'
152 argument (MethodCallExpr)
153 name (SimpleName)
154 identifier='size'
155 scope (MethodCallExpr)
156 name (SimpleName)
157 identifier='getSteps'
158 scope (MethodCallExpr)
159 name (SimpleName)
160 identifier='getExitSequence'
161 scope (NameExpr)
162 name (SimpleName)
163 identifier='_fs'
164 statement (ExpressionStmt)
165 expression (MethodCallExpr)
166 name (SimpleName)
167 identifier='assertClass'
168 arguments
169 argument (ClassExpr)
170 type (ClassOrInterfaceType)
171 name (SimpleName)
172 identifier='ExitState'
173 argument (MethodCallExpr)
174 name (SimpleName)
175 identifier='get'
176 scope (MethodCallExpr)
177 name (SimpleName)
178 identifier='getSteps'
179 scope (MethodCallExpr)
180 name (SimpleName)
181 identifier='getExitSequence'
182 scope (NameExpr)
183 name (SimpleName)
184 identifier='_fs'
185 arguments
186 argument (IntegerLiteralExpr)
187 value='0'
188 type (VoidType)
189 name (SimpleName)
190 identifier='testFinalStateExitSequence'
191 annotations
192 annotation (SingleMemberAnnotationExpr)
193 memberValue (StringLiteralExpr)
194 value='unused'
195 name (Name)
196 identifier='SuppressWarnings'
197 annotation (MarkerAnnotationExpr)
198 name (Name)
199 identifier='Test'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
25 28
28 29
29 30
21 31
31 32
21 33
33 34
34 35
2 36
36 37
37 38
38 39
39 40
40 41
41 42
40 43
43 44
44 45
43 46
46 47
47 48
39 49
49 50
39 51
51 52
52 53
2 54
54 55
55 56
56 57
57 58
58 59
59 60
58 61
61 62
62 63
63 64
57 65
65 66
57 67
67 68
68 69
2 70
70 71
71 72
72 73
73 74
74 75
75 76
74 77
77 78
78 79
74 80
80 81
81 82
82 83
73 84
84 85
73 86
86 87
87 88
2 89
89 90
90 91
91 92
92 93
93 94
94 95
93 96
96 97
97 98
96 99
99 100
100 101
93 102
102 103
103 104
92 105
105 106
92 107
107 108
108 109
2 110
110 111
111 112
112 113
111 114
114 115
115 116
114 117
117 118
118 119
117 120
120 121
121 122
2 123
123 124
124 125
125 126
124 127
127 128
128 129
129 130
128 131
131 132
132 133
2 134
134 135
135 136
136 137
135 138
138 139
139 140
140 141
139 142
142 143
143 144
2 145
145 146
146 147
147 148
146 149
149 150
150 151
149 152
152 153
153 154
152 155
155 156
156 157
155 158
158 159
159 160
158 161
161 162
162 163
2 164
164 165
165 166
166 167
165 168
168 169
169 170
170 171
171 172
168 173
173 174
174 175
173 176
176 177
177 178
176 179
179 180
180 181
179 182
182 183
183 184
173 185
185 186
186 187
0 188
0 189
189 190
0 191
191 192
192 193
193 194
192 195
195 196
191 197
197 198
198 199

A final state must have a exit sequence. This exit sequence consists of a state exit step.
