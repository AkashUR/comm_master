156
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='mCurrentTouchPointX'
9 value (MethodCallExpr)
10 name (SimpleName)
11 identifier='getX'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='mCurrentTouchPoint'
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (NameExpr)
19 name (SimpleName)
20 identifier='mCurrentTouchPointY'
21 value (MethodCallExpr)
22 name (SimpleName)
23 identifier='getY'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='mCurrentTouchPoint'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (NameExpr)
31 name (SimpleName)
32 identifier='mCurrentTouchPointDiam'
33 value (MethodCallExpr)
34 name (SimpleName)
35 identifier='max'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='Math'
39 arguments
40 argument (BinaryExpr)
41 operator='MULTIPLY'
42 left (NameExpr)
43 name (SimpleName)
44 identifier='MIN_MULTITOUCH_SEPARATION'
45 right (DoubleLiteralExpr)
46 value='.71f'
47 argument (ConditionalExpr)
48 condition (UnaryExpr)
49 operator='LOGICAL_COMPLEMENT'
50 expression (MethodCallExpr)
51 name (SimpleName)
52 identifier='isUpdateScale'
53 scope (NameExpr)
54 name (SimpleName)
55 identifier='mCurrentTouchPointPosAndScale'
56 elseExpr (MethodCallExpr)
57 name (SimpleName)
58 identifier='getMultiTouchDiameter'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='mCurrentTouchPoint'
62 thenExpr (DoubleLiteralExpr)
63 value='0.0f'
64 statement (ExpressionStmt)
65 expression (AssignExpr)
66 operator='ASSIGN'
67 target (NameExpr)
68 name (SimpleName)
69 identifier='mCurrentTouchPointWidth'
70 value (MethodCallExpr)
71 name (SimpleName)
72 identifier='max'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='Math'
76 arguments
77 argument (NameExpr)
78 name (SimpleName)
79 identifier='MIN_MULTITOUCH_SEPARATION'
80 argument (ConditionalExpr)
81 condition (UnaryExpr)
82 operator='LOGICAL_COMPLEMENT'
83 expression (MethodCallExpr)
84 name (SimpleName)
85 identifier='isUpdateScaleXY'
86 scope (NameExpr)
87 name (SimpleName)
88 identifier='mCurrentTouchPointPosAndScale'
89 elseExpr (MethodCallExpr)
90 name (SimpleName)
91 identifier='getMultiTouchWidth'
92 scope (NameExpr)
93 name (SimpleName)
94 identifier='mCurrentTouchPoint'
95 thenExpr (DoubleLiteralExpr)
96 value='0.0f'
97 statement (ExpressionStmt)
98 expression (AssignExpr)
99 operator='ASSIGN'
100 target (NameExpr)
101 name (SimpleName)
102 identifier='mCurrentTouchPointHeight'
103 value (MethodCallExpr)
104 name (SimpleName)
105 identifier='max'
106 scope (NameExpr)
107 name (SimpleName)
108 identifier='Math'
109 arguments
110 argument (NameExpr)
111 name (SimpleName)
112 identifier='MIN_MULTITOUCH_SEPARATION'
113 argument (ConditionalExpr)
114 condition (UnaryExpr)
115 operator='LOGICAL_COMPLEMENT'
116 expression (MethodCallExpr)
117 name (SimpleName)
118 identifier='isUpdateScaleXY'
119 scope (NameExpr)
120 name (SimpleName)
121 identifier='mCurrentTouchPointPosAndScale'
122 elseExpr (MethodCallExpr)
123 name (SimpleName)
124 identifier='getMultiTouchHeight'
125 scope (NameExpr)
126 name (SimpleName)
127 identifier='mCurrentTouchPoint'
128 thenExpr (DoubleLiteralExpr)
129 value='0.0f'
130 statement (ExpressionStmt)
131 expression (AssignExpr)
132 operator='ASSIGN'
133 target (NameExpr)
134 name (SimpleName)
135 identifier='mCurrentTouchPointAng'
136 value (ConditionalExpr)
137 condition (UnaryExpr)
138 operator='LOGICAL_COMPLEMENT'
139 expression (MethodCallExpr)
140 name (SimpleName)
141 identifier='isUpdateAngle'
142 scope (NameExpr)
143 name (SimpleName)
144 identifier='mCurrentTouchPointPosAndScale'
145 elseExpr (MethodCallExpr)
146 name (SimpleName)
147 identifier='getMultiTouchAngle'
148 scope (NameExpr)
149 name (SimpleName)
150 identifier='mCurrentTouchPoint'
151 thenExpr (DoubleLiteralExpr)
152 value='0.0f'
153 type (VoidType)
154 name (SimpleName)
155 identifier='extractCurrentTouchPointInfo'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
2 15
15 16
16 17
16 18
18 19
19 20
16 21
21 22
22 23
21 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
28 33
33 34
34 35
33 36
36 37
37 38
33 39
39 40
40 41
40 42
42 43
43 44
40 45
45 46
39 47
47 48
48 49
48 50
50 51
51 52
50 53
53 54
54 55
47 56
56 57
57 58
56 59
59 60
60 61
47 62
62 63
2 64
64 65
65 66
65 67
67 68
68 69
65 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
78 79
76 80
80 81
81 82
81 83
83 84
84 85
83 86
86 87
87 88
80 89
89 90
90 91
89 92
92 93
93 94
80 95
95 96
2 97
97 98
98 99
98 100
100 101
101 102
98 103
103 104
104 105
103 106
106 107
107 108
103 109
109 110
110 111
111 112
109 113
113 114
114 115
114 116
116 117
117 118
116 119
119 120
120 121
113 122
122 123
123 124
122 125
125 126
126 127
113 128
128 129
2 130
130 131
131 132
131 133
133 134
134 135
131 136
136 137
137 138
137 139
139 140
140 141
139 142
142 143
143 144
136 145
145 146
146 147
145 148
148 149
149 150
136 151
151 152
0 153
0 154
154 155

Extract fields from mCurrentTouchPoint, respecting the update* fields of mCurrentTouchPoint. This just avoids code duplication. I hate that Java doesn't support higher-order functions, tuples or multiple return values from functions.
