42
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='deleteMessage'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='amazonSqsToBeExtended'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='queueUrl'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='receiptHandle'
17 type (VoidType)
18 name (SimpleName)
19 identifier='deleteMessage'
20 parameters
21 parameter (Parameter)
22 isVarArgs='false'
23 name (SimpleName)
24 identifier='queueUrl'
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='String'
28 parameter (Parameter)
29 isVarArgs='false'
30 name (SimpleName)
31 identifier='receiptHandle'
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='String'
35 thrownExceptions
36 thrownException (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='AmazonServiceException'
39 thrownException (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='AmazonClientException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
0 17
0 18
18 19
0 20
20 21
21 22
21 23
23 24
21 25
25 26
26 27
20 28
28 29
28 30
30 31
28 32
32 33
33 34
0 35
35 36
36 37
37 38
35 39
39 40
40 41

<p> Deletes the specified message from the specified queue. You specify the message by using the message's <code>receipt handle</code> and not the <code>message ID</code> you received when you sent the message. Even if the message is locked by another reader due to the visibility timeout setting, it is still deleted from the queue. If you leave a message in the queue for longer than the queue's configured retention period, Amazon SQS automatically deletes it. </p> <p> <b>NOTE:</b> The receipt handle is associated with a specific instance of receiving the message. If you receive a message more than once, the receipt handle you get each time you receive the message is different. When you request DeleteMessage, if you don't provide the most recently received receipt handle for the message, the request will still succeed, but the message might not be deleted. </p> <p> <b>IMPORTANT:</b> It is possible you will receive a message even after you have deleted it. This might happen on rare occasions if one of the servers storing a copy of the message is unavailable when you request to delete the message. The copy remains on the server and might be returned to you again on a subsequent receive request. You should create your system to be idempotent so that receiving a particular message more than once is not a problem. </p>
