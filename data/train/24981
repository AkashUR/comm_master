51
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='forEncryption'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='forEncryption'
13 statement (ExpressionStmt)
14 expression (MethodCallExpr)
15 name (SimpleName)
16 identifier='reset'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='init'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='cipher'
24 arguments
25 argument (BooleanLiteralExpr)
26 value='true'
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='params'
30 type (VoidType)
31 name (SimpleName)
32 identifier='init'
33 parameters
34 parameter (Parameter)
35 isVarArgs='false'
36 name (SimpleName)
37 identifier='forEncryption'
38 type (PrimitiveType)
39 type='BOOLEAN'
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='params'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='CipherParameters'
47 thrownExceptions
48 thrownException (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='IllegalArgumentException'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
25 26
24 27
27 28
28 29
0 30
0 31
31 32
0 33
33 34
34 35
34 36
36 37
34 38
38 39
33 40
40 41
40 42
42 43
40 44
44 45
45 46
0 47
47 48
48 49
49 50

Initialise the cipher and, possibly, the initialisation vector (IV). If an IV isn't passed as part of the parameter, the IV will be all zeros. An IV which is too short is handled in FIPS compliant fashion.
