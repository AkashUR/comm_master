57
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Quaternion'
11 arguments
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='q2'
15 name (SimpleName)
16 identifier='tempQuat'
17 type (ClassOrInterfaceType)
18 name (SimpleName)
19 identifier='Quaternion'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='inverse'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='tempQuat'
27 statement (ExpressionStmt)
28 expression (MethodCallExpr)
29 name (SimpleName)
30 identifier='mul'
31 scope (ThisExpr)
32 arguments
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='q1'
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='tempQuat'
39 type (VoidType)
40 name (SimpleName)
41 identifier='mulInverse'
42 parameters
43 parameter (Parameter)
44 isVarArgs='false'
45 name (SimpleName)
46 identifier='q1'
47 type (ClassOrInterfaceType)
48 name (SimpleName)
49 identifier='Quaternion'
50 parameter (Parameter)
51 isVarArgs='false'
52 name (SimpleName)
53 identifier='q2'
54 type (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='Quaternion'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
6 15
15 16
6 17
17 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
2 27
27 28
28 29
29 30
28 31
28 32
32 33
33 34
34 35
32 36
36 37
37 38
0 39
0 40
40 41
0 42
42 43
43 44
43 45
45 46
43 47
47 48
48 49
42 50
50 51
50 52
52 53
50 54
54 55
55 56

Multiplies quaternion q1 by the inverse of quaternion q2 and places the value into this quaternion.  The value of both argument quaternions is preservered (this = q1 * q2^-1)
