65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getResult'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='NewArray'
13 arguments
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='s'
17 name (SimpleName)
18 identifier='result'
19 type (ClassOrInterfaceType)
20 name (SimpleName)
21 identifier='RegisterOperand'
22 statement (ExpressionStmt)
23 expression (VariableDeclarationExpr)
24 variables
25 variable (VariableDeclarator)
26 initializer (MethodCallExpr)
27 name (SimpleName)
28 identifier='findOrCreateVertex'
29 arguments
30 argument (MethodCallExpr)
31 name (SimpleName)
32 identifier='getRegister'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='result'
36 name (SimpleName)
37 identifier='v'
38 type (ClassOrInterfaceType)
39 name (SimpleName)
40 identifier='ValueGraphVertex'
41 statement (ExpressionStmt)
42 expression (MethodCallExpr)
43 name (SimpleName)
44 identifier='setLabel'
45 scope (NameExpr)
46 name (SimpleName)
47 identifier='v'
48 arguments
49 argument (NameExpr)
50 name (SimpleName)
51 identifier='s'
52 argument (IntegerLiteralExpr)
53 value='0'
54 type (VoidType)
55 name (SimpleName)
56 identifier='processNewArray'
57 parameters
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='s'
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='Instruction'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
6 17
17 18
6 19
19 20
20 21
2 22
22 23
23 24
24 25
25 26
26 27
27 28
26 29
29 30
30 31
31 32
30 33
33 34
34 35
25 36
36 37
25 38
38 39
39 40
2 41
41 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
50 51
48 52
52 53
0 54
0 55
55 56
0 57
57 58
58 59
58 60
60 61
58 62
62 63
63 64

Update the value graph to account for a given NEWARRAY instruction. <p><b>PRECONDITION:</b> <code> NewArray.conforms(s); </code> For a newarray instruction, we always create a new vertex.
