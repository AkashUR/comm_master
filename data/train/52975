240
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='TermQuery'
11 arguments
12 argument (ObjectCreationExpr)
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='Term'
16 arguments
17 argument (StringLiteralExpr)
18 value='field'
19 argument (StringLiteralExpr)
20 value='foobar'
21 name (SimpleName)
22 identifier='regular'
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='Query'
26 statement (ExpressionStmt)
27 expression (VariableDeclarationExpr)
28 variables
29 variable (VariableDeclarator)
30 initializer (ObjectCreationExpr)
31 type (ClassOrInterfaceType)
32 name (SimpleName)
33 identifier='FuzzyQuery'
34 arguments
35 argument (ObjectCreationExpr)
36 type (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='Term'
39 arguments
40 argument (StringLiteralExpr)
41 value='field'
42 argument (StringLiteralExpr)
43 value='foobar'
44 argument (IntegerLiteralExpr)
45 value='2'
46 name (SimpleName)
47 identifier='expected'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='Query'
51 statement (ExpressionStmt)
52 expression (MethodCallExpr)
53 name (SimpleName)
54 identifier='assertEquals'
55 arguments
56 argument (NameExpr)
57 name (SimpleName)
58 identifier='expected'
59 argument (MethodCallExpr)
60 name (SimpleName)
61 identifier='parse'
62 arguments
63 argument (StringLiteralExpr)
64 value='foobar~2'
65 statement (ExpressionStmt)
66 expression (MethodCallExpr)
67 name (SimpleName)
68 identifier='assertEquals'
69 arguments
70 argument (NameExpr)
71 name (SimpleName)
72 identifier='regular'
73 argument (MethodCallExpr)
74 name (SimpleName)
75 identifier='parse'
76 arguments
77 argument (StringLiteralExpr)
78 value='foobar~'
79 statement (ExpressionStmt)
80 expression (MethodCallExpr)
81 name (SimpleName)
82 identifier='assertEquals'
83 arguments
84 argument (NameExpr)
85 name (SimpleName)
86 identifier='regular'
87 argument (MethodCallExpr)
88 name (SimpleName)
89 identifier='parse'
90 arguments
91 argument (StringLiteralExpr)
92 value='foobar~a'
93 statement (ExpressionStmt)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='assertEquals'
97 arguments
98 argument (NameExpr)
99 name (SimpleName)
100 identifier='regular'
101 argument (MethodCallExpr)
102 name (SimpleName)
103 identifier='parse'
104 arguments
105 argument (StringLiteralExpr)
106 value='foobar~1a'
107 statement (ExpressionStmt)
108 expression (VariableDeclarationExpr)
109 variables
110 variable (VariableDeclarator)
111 initializer (ObjectCreationExpr)
112 type (ClassOrInterfaceType)
113 name (SimpleName)
114 identifier='Builder'
115 scope (ClassOrInterfaceType)
116 name (SimpleName)
117 identifier='BooleanQuery'
118 name (SimpleName)
119 identifier='bool'
120 type (ClassOrInterfaceType)
121 name (SimpleName)
122 identifier='Builder'
123 scope (ClassOrInterfaceType)
124 name (SimpleName)
125 identifier='BooleanQuery'
126 statement (ExpressionStmt)
127 expression (VariableDeclarationExpr)
128 variables
129 variable (VariableDeclarator)
130 initializer (ObjectCreationExpr)
131 type (ClassOrInterfaceType)
132 name (SimpleName)
133 identifier='FuzzyQuery'
134 arguments
135 argument (ObjectCreationExpr)
136 type (ClassOrInterfaceType)
137 name (SimpleName)
138 identifier='Term'
139 arguments
140 argument (StringLiteralExpr)
141 value='field'
142 argument (StringLiteralExpr)
143 value='foo'
144 argument (FieldAccessExpr)
145 name (SimpleName)
146 identifier='MAXIMUM_SUPPORTED_DISTANCE'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='LevenshteinAutomata'
150 name (SimpleName)
151 identifier='fuzzy'
152 type (ClassOrInterfaceType)
153 name (SimpleName)
154 identifier='FuzzyQuery'
155 statement (ExpressionStmt)
156 expression (MethodCallExpr)
157 name (SimpleName)
158 identifier='add'
159 scope (NameExpr)
160 name (SimpleName)
161 identifier='bool'
162 arguments
163 argument (NameExpr)
164 name (SimpleName)
165 identifier='fuzzy'
166 argument (FieldAccessExpr)
167 name (SimpleName)
168 identifier='MUST'
169 scope (NameExpr)
170 name (SimpleName)
171 identifier='Occur'
172 statement (ExpressionStmt)
173 expression (MethodCallExpr)
174 name (SimpleName)
175 identifier='add'
176 scope (NameExpr)
177 name (SimpleName)
178 identifier='bool'
179 arguments
180 argument (ObjectCreationExpr)
181 type (ClassOrInterfaceType)
182 name (SimpleName)
183 identifier='TermQuery'
184 arguments
185 argument (ObjectCreationExpr)
186 type (ClassOrInterfaceType)
187 name (SimpleName)
188 identifier='Term'
189 arguments
190 argument (StringLiteralExpr)
191 value='field'
192 argument (StringLiteralExpr)
193 value='bar'
194 argument (FieldAccessExpr)
195 name (SimpleName)
196 identifier='MUST'
197 scope (NameExpr)
198 name (SimpleName)
199 identifier='Occur'
200 statement (ExpressionStmt)
201 expression (MethodCallExpr)
202 name (SimpleName)
203 identifier='assertEquals'
204 arguments
205 argument (MethodCallExpr)
206 name (SimpleName)
207 identifier='build'
208 scope (NameExpr)
209 name (SimpleName)
210 identifier='bool'
211 argument (MethodCallExpr)
212 name (SimpleName)
213 identifier='parse'
214 arguments
215 argument (BinaryExpr)
216 operator='PLUS'
217 left (BinaryExpr)
218 operator='PLUS'
219 left (BinaryExpr)
220 operator='PLUS'
221 left (StringLiteralExpr)
222 value='foo~'
223 right (FieldAccessExpr)
224 name (SimpleName)
225 identifier='MAXIMUM_SUPPORTED_DISTANCE'
226 scope (NameExpr)
227 name (SimpleName)
228 identifier='LevenshteinAutomata'
229 right (IntegerLiteralExpr)
230 value='1'
231 right (StringLiteralExpr)
232 value=' bar'
233 type (VoidType)
234 name (SimpleName)
235 identifier='testFuzzy'
236 thrownExceptions
237 thrownException (ClassOrInterfaceType)
238 name (SimpleName)
239 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
14 15
12 16
16 17
17 18
16 19
19 20
6 21
21 22
6 23
23 24
24 25
2 26
26 27
27 28
28 29
29 30
30 31
31 32
32 33
30 34
34 35
35 36
36 37
37 38
35 39
39 40
40 41
39 42
42 43
34 44
44 45
29 46
46 47
29 48
48 49
49 50
2 51
51 52
52 53
53 54
52 55
55 56
56 57
57 58
55 59
59 60
60 61
59 62
62 63
63 64
2 65
65 66
66 67
67 68
66 69
69 70
70 71
71 72
69 73
73 74
74 75
73 76
76 77
77 78
2 79
79 80
80 81
81 82
80 83
83 84
84 85
85 86
83 87
87 88
88 89
87 90
90 91
91 92
2 93
93 94
94 95
95 96
94 97
97 98
98 99
99 100
97 101
101 102
102 103
101 104
104 105
105 106
2 107
107 108
108 109
109 110
110 111
111 112
112 113
113 114
112 115
115 116
116 117
110 118
118 119
110 120
120 121
121 122
120 123
123 124
124 125
2 126
126 127
127 128
128 129
129 130
130 131
131 132
132 133
130 134
134 135
135 136
136 137
137 138
135 139
139 140
140 141
139 142
142 143
134 144
144 145
145 146
144 147
147 148
148 149
129 150
150 151
129 152
152 153
153 154
2 155
155 156
156 157
157 158
156 159
159 160
160 161
156 162
162 163
163 164
164 165
162 166
166 167
167 168
166 169
169 170
170 171
2 172
172 173
173 174
174 175
173 176
176 177
177 178
173 179
179 180
180 181
181 182
182 183
180 184
184 185
185 186
186 187
187 188
185 189
189 190
190 191
189 192
192 193
179 194
194 195
195 196
194 197
197 198
198 199
2 200
200 201
201 202
202 203
201 204
204 205
205 206
206 207
205 208
208 209
209 210
204 211
211 212
212 213
211 214
214 215
215 216
215 217
217 218
217 219
219 220
219 221
221 222
219 223
223 224
224 225
223 226
226 227
227 228
217 229
229 230
215 231
231 232
0 233
0 234
234 235
0 236
236 237
237 238
238 239

test a fuzzy query
