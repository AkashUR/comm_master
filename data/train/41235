97
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='assertBiDirectionalEncoding'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='strs'
11 arguments
12 argument (StringLiteralExpr)
13 value='foo,bar'
14 argument (StringLiteralExpr)
15 value='yak'
16 argument (StringLiteralExpr)
17 value='zat'
18 argument (StringLiteralExpr)
19 value='~foo\\,bar,~yak,~zat'
20 statement (ExpressionStmt)
21 expression (MethodCallExpr)
22 name (SimpleName)
23 identifier='assertBiDirectionalEncoding'
24 arguments
25 argument (MethodCallExpr)
26 name (SimpleName)
27 identifier='strs'
28 arguments
29 argument (StringLiteralExpr)
30 value='foo'
31 argument (StringLiteralExpr)
32 value='~foo'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='assertBiDirectionalEncoding'
37 arguments
38 argument (MethodCallExpr)
39 name (SimpleName)
40 identifier='strs'
41 argument (StringLiteralExpr)
42 value=''
43 statement (ExpressionStmt)
44 expression (MethodCallExpr)
45 name (SimpleName)
46 identifier='assertBiDirectionalEncoding'
47 arguments
48 argument (MethodCallExpr)
49 name (SimpleName)
50 identifier='strs'
51 arguments
52 argument (StringLiteralExpr)
53 value=''
54 argument (StringLiteralExpr)
55 value='~'
56 statement (ExpressionStmt)
57 expression (MethodCallExpr)
58 name (SimpleName)
59 identifier='assertBiDirectionalEncoding'
60 arguments
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='strs'
64 arguments
65 argument (CastExpr)
66 expression (NullLiteralExpr)
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='String'
70 argument (StringLiteralExpr)
71 value='^'
72 statement (ExpressionStmt)
73 expression (MethodCallExpr)
74 name (SimpleName)
75 identifier='assertBiDirectionalEncoding'
76 arguments
77 argument (MethodCallExpr)
78 name (SimpleName)
79 identifier='strs'
80 arguments
81 argument (StringLiteralExpr)
82 value=''
83 argument (StringLiteralExpr)
84 value='foo'
85 argument (StringLiteralExpr)
86 value=''
87 argument (StringLiteralExpr)
88 value=''
89 argument (NullLiteralExpr)
90 argument (StringLiteralExpr)
91 value='bar'
92 argument (StringLiteralExpr)
93 value='~,~foo,~,~,^,~bar'
94 type (VoidType)
95 name (SimpleName)
96 identifier='testRefinementStringEncodingWhiteBox'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
11 14
14 15
11 16
16 17
7 18
18 19
2 20
20 21
21 22
22 23
21 24
24 25
25 26
26 27
25 28
28 29
29 30
24 31
31 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
39 40
37 41
41 42
2 43
43 44
44 45
45 46
44 47
47 48
48 49
49 50
48 51
51 52
52 53
47 54
54 55
2 56
56 57
57 58
58 59
57 60
60 61
61 62
62 63
61 64
64 65
65 66
65 67
67 68
68 69
60 70
70 71
2 72
72 73
73 74
74 75
73 76
76 77
77 78
78 79
77 80
80 81
81 82
80 83
83 84
80 85
85 86
80 87
87 88
80 89
80 90
90 91
76 92
92 93
0 94
0 95
95 96

test refinement encoding/decoding matches specific expected encoded values
