88
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='writeTypePrefixForScalar'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='typeSer'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='value'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='jgen'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='serialize'
21 arguments
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='value'
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='jgen'
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='provider'
31 statement (ExpressionStmt)
32 expression (MethodCallExpr)
33 name (SimpleName)
34 identifier='writeTypeSuffixForScalar'
35 scope (NameExpr)
36 name (SimpleName)
37 identifier='typeSer'
38 arguments
39 argument (NameExpr)
40 name (SimpleName)
41 identifier='value'
42 argument (NameExpr)
43 name (SimpleName)
44 identifier='jgen'
45 type (VoidType)
46 name (SimpleName)
47 identifier='serializeWithType'
48 parameters
49 parameter (Parameter)
50 isVarArgs='false'
51 name (SimpleName)
52 identifier='value'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='T'
56 parameter (Parameter)
57 isVarArgs='false'
58 name (SimpleName)
59 identifier='jgen'
60 type (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='JsonGenerator'
63 parameter (Parameter)
64 isVarArgs='false'
65 name (SimpleName)
66 identifier='provider'
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='SerializerProvider'
70 parameter (Parameter)
71 isVarArgs='false'
72 name (SimpleName)
73 identifier='typeSer'
74 type (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='TypeSerializer'
77 thrownExceptions
78 thrownException (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='IOException'
81 thrownException (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='JsonGenerationException'
84 annotations
85 annotation (MarkerAnnotationExpr)
86 name (Name)
87 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
23 24
21 25
25 26
26 27
21 28
28 29
29 30
2 31
31 32
32 33
33 34
32 35
35 36
36 37
32 38
38 39
39 40
40 41
38 42
42 43
43 44
0 45
0 46
46 47
0 48
48 49
49 50
49 51
51 52
49 53
53 54
54 55
48 56
56 57
56 58
58 59
56 60
60 61
61 62
48 63
63 64
63 65
65 66
63 67
67 68
68 69
48 70
70 71
70 72
72 73
70 74
74 75
75 76
0 77
77 78
78 79
79 80
77 81
81 82
82 83
0 84
84 85
85 86
86 87

Default implementation will write type prefix, call regular serialization method (since assumption is that value itself does not need JSON Array or Object start/end markers), and then write type suffix. This should work for most cases; some sub-classes may want to change this behavior.
