30
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='sendPacket'
7 scope (ThisExpr)
8 arguments
9 argument (MethodCallExpr)
10 name (SimpleName)
11 identifier='getByteArray'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='packet'
15 type (VoidType)
16 name (SimpleName)
17 identifier='sendPacket'
18 parameters
19 parameter (Parameter)
20 isVarArgs='false'
21 name (SimpleName)
22 identifier='packet'
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='XBeePacket'
26 thrownExceptions
27 thrownException (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='IOException'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
4 8
8 9
9 10
10 11
9 12
12 13
13 14
0 15
0 16
16 17
0 18
18 19
19 20
19 21
21 22
19 23
23 24
24 25
0 26
26 27
27 28
28 29

It's possible for packets to get interspersed if multiple threads send simultaneously.   This method is not thread-safe because doing so would introduce a synchronized performance penalty  for the vast majority of users that will not never need thread safety. That said, it is responsibility of the user to provide synchronization if multiple threads are sending. Not thread safe.
