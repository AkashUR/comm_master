262
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getJaxbMapper'
10 name (SimpleName)
11 identifier='mapper'
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='ObjectMapper'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (ObjectCreationExpr)
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='ListBean'
23 arguments
24 argument (ObjectCreationExpr)
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='Whale'
28 arguments
29 argument (StringLiteralExpr)
30 value='bluey'
31 argument (IntegerLiteralExpr)
32 value='150'
33 argument (ObjectCreationExpr)
34 type (ClassOrInterfaceType)
35 name (SimpleName)
36 identifier='Buffalo'
37 arguments
38 argument (StringLiteralExpr)
39 value='Bob'
40 argument (StringLiteralExpr)
41 value='black'
42 name (SimpleName)
43 identifier='input'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='ListBean'
47 statement (ExpressionStmt)
48 expression (VariableDeclarationExpr)
49 variables
50 variable (VariableDeclarator)
51 initializer (MethodCallExpr)
52 name (SimpleName)
53 identifier='writeValueAsString'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='mapper'
57 arguments
58 argument (NameExpr)
59 name (SimpleName)
60 identifier='input'
61 name (SimpleName)
62 identifier='str'
63 type (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='String'
66 statement (ExpressionStmt)
67 expression (VariableDeclarationExpr)
68 variables
69 variable (VariableDeclarator)
70 initializer (MethodCallExpr)
71 name (SimpleName)
72 identifier='readValue'
73 scope (NameExpr)
74 name (SimpleName)
75 identifier='mapper'
76 arguments
77 argument (NameExpr)
78 name (SimpleName)
79 identifier='str'
80 argument (ClassExpr)
81 type (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='ListBean'
84 name (SimpleName)
85 identifier='result'
86 type (ClassOrInterfaceType)
87 name (SimpleName)
88 identifier='ListBean'
89 statement (ExpressionStmt)
90 expression (MethodCallExpr)
91 name (SimpleName)
92 identifier='assertEquals'
93 arguments
94 argument (IntegerLiteralExpr)
95 value='2'
96 argument (MethodCallExpr)
97 name (SimpleName)
98 identifier='size'
99 scope (FieldAccessExpr)
100 name (SimpleName)
101 identifier='animals'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='result'
105 statement (ExpressionStmt)
106 expression (VariableDeclarationExpr)
107 variables
108 variable (VariableDeclarator)
109 initializer (MethodCallExpr)
110 name (SimpleName)
111 identifier='get'
112 scope (FieldAccessExpr)
113 name (SimpleName)
114 identifier='animals'
115 scope (NameExpr)
116 name (SimpleName)
117 identifier='result'
118 arguments
119 argument (IntegerLiteralExpr)
120 value='0'
121 name (SimpleName)
122 identifier='a1'
123 type (ClassOrInterfaceType)
124 name (SimpleName)
125 identifier='Animal'
126 statement (ExpressionStmt)
127 expression (MethodCallExpr)
128 name (SimpleName)
129 identifier='assertNotNull'
130 arguments
131 argument (NameExpr)
132 name (SimpleName)
133 identifier='a1'
134 statement (ExpressionStmt)
135 expression (MethodCallExpr)
136 name (SimpleName)
137 identifier='assertEquals'
138 arguments
139 argument (ClassExpr)
140 type (ClassOrInterfaceType)
141 name (SimpleName)
142 identifier='Whale'
143 argument (MethodCallExpr)
144 name (SimpleName)
145 identifier='getClass'
146 scope (NameExpr)
147 name (SimpleName)
148 identifier='a1'
149 statement (ExpressionStmt)
150 expression (MethodCallExpr)
151 name (SimpleName)
152 identifier='assertEquals'
153 arguments
154 argument (StringLiteralExpr)
155 value='bluey'
156 argument (FieldAccessExpr)
157 name (SimpleName)
158 identifier='nickname'
159 scope (NameExpr)
160 name (SimpleName)
161 identifier='a1'
162 statement (ExpressionStmt)
163 expression (MethodCallExpr)
164 name (SimpleName)
165 identifier='assertEquals'
166 arguments
167 argument (IntegerLiteralExpr)
168 value='150'
169 argument (FieldAccessExpr)
170 name (SimpleName)
171 identifier='weightInTons'
172 scope (EnclosedExpr)
173 inner (CastExpr)
174 expression (NameExpr)
175 name (SimpleName)
176 identifier='a1'
177 type (ClassOrInterfaceType)
178 name (SimpleName)
179 identifier='Whale'
180 statement (ExpressionStmt)
181 expression (VariableDeclarationExpr)
182 variables
183 variable (VariableDeclarator)
184 initializer (MethodCallExpr)
185 name (SimpleName)
186 identifier='get'
187 scope (FieldAccessExpr)
188 name (SimpleName)
189 identifier='animals'
190 scope (NameExpr)
191 name (SimpleName)
192 identifier='result'
193 arguments
194 argument (IntegerLiteralExpr)
195 value='1'
196 name (SimpleName)
197 identifier='a2'
198 type (ClassOrInterfaceType)
199 name (SimpleName)
200 identifier='Animal'
201 statement (ExpressionStmt)
202 expression (MethodCallExpr)
203 name (SimpleName)
204 identifier='assertNotNull'
205 arguments
206 argument (NameExpr)
207 name (SimpleName)
208 identifier='a2'
209 statement (ExpressionStmt)
210 expression (MethodCallExpr)
211 name (SimpleName)
212 identifier='assertEquals'
213 arguments
214 argument (ClassExpr)
215 type (ClassOrInterfaceType)
216 name (SimpleName)
217 identifier='Buffalo'
218 argument (MethodCallExpr)
219 name (SimpleName)
220 identifier='getClass'
221 scope (NameExpr)
222 name (SimpleName)
223 identifier='a2'
224 statement (ExpressionStmt)
225 expression (MethodCallExpr)
226 name (SimpleName)
227 identifier='assertEquals'
228 arguments
229 argument (StringLiteralExpr)
230 value='Bob'
231 argument (FieldAccessExpr)
232 name (SimpleName)
233 identifier='nickname'
234 scope (NameExpr)
235 name (SimpleName)
236 identifier='a2'
237 statement (ExpressionStmt)
238 expression (MethodCallExpr)
239 name (SimpleName)
240 identifier='assertEquals'
241 arguments
242 argument (StringLiteralExpr)
243 value='black'
244 argument (FieldAccessExpr)
245 name (SimpleName)
246 identifier='hairColor'
247 scope (EnclosedExpr)
248 inner (CastExpr)
249 expression (NameExpr)
250 name (SimpleName)
251 identifier='a2'
252 type (ClassOrInterfaceType)
253 name (SimpleName)
254 identifier='Buffalo'
255 type (VoidType)
256 name (SimpleName)
257 identifier='testPolymorphicList'
258 thrownExceptions
259 thrownException (ClassOrInterfaceType)
260 name (SimpleName)
261 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
6 10
10 11
6 12
12 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
21 22
19 23
23 24
24 25
25 26
26 27
24 28
28 29
29 30
28 31
31 32
23 33
33 34
34 35
35 36
33 37
37 38
38 39
37 40
40 41
18 42
42 43
18 44
44 45
45 46
2 47
47 48
48 49
49 50
50 51
51 52
52 53
51 54
54 55
55 56
51 57
57 58
58 59
59 60
50 61
61 62
50 63
63 64
64 65
2 66
66 67
67 68
68 69
69 70
70 71
71 72
70 73
73 74
74 75
70 76
76 77
77 78
78 79
76 80
80 81
81 82
82 83
69 84
84 85
69 86
86 87
87 88
2 89
89 90
90 91
91 92
90 93
93 94
94 95
93 96
96 97
97 98
96 99
99 100
100 101
99 102
102 103
103 104
2 105
105 106
106 107
107 108
108 109
109 110
110 111
109 112
112 113
113 114
112 115
115 116
116 117
109 118
118 119
119 120
108 121
121 122
108 123
123 124
124 125
2 126
126 127
127 128
128 129
127 130
130 131
131 132
132 133
2 134
134 135
135 136
136 137
135 138
138 139
139 140
140 141
141 142
138 143
143 144
144 145
143 146
146 147
147 148
2 149
149 150
150 151
151 152
150 153
153 154
154 155
153 156
156 157
157 158
156 159
159 160
160 161
2 162
162 163
163 164
164 165
163 166
166 167
167 168
166 169
169 170
170 171
169 172
172 173
173 174
174 175
175 176
173 177
177 178
178 179
2 180
180 181
181 182
182 183
183 184
184 185
185 186
184 187
187 188
188 189
187 190
190 191
191 192
184 193
193 194
194 195
183 196
196 197
183 198
198 199
199 200
2 201
201 202
202 203
203 204
202 205
205 206
206 207
207 208
2 209
209 210
210 211
211 212
210 213
213 214
214 215
215 216
216 217
213 218
218 219
219 220
218 221
221 222
222 223
2 224
224 225
225 226
226 227
225 228
228 229
229 230
228 231
231 232
232 233
231 234
234 235
235 236
2 237
237 238
238 239
239 240
238 241
241 242
242 243
241 244
244 245
245 246
244 247
247 248
248 249
249 250
250 251
248 252
252 253
253 254
0 255
0 256
256 257
0 258
258 259
259 260
260 261

And then a test for collection types
