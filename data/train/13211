122
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Intent'
11 arguments
12 argument (MethodCallExpr)
13 name (SimpleName)
14 identifier='getContext'
15 argument (ClassExpr)
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='TrackRecordingService'
19 name (SimpleName)
20 identifier='stopIntent'
21 type (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='Intent'
24 statement (ExpressionStmt)
25 expression (MethodCallExpr)
26 name (SimpleName)
27 identifier='stopService'
28 scope (MethodCallExpr)
29 name (SimpleName)
30 identifier='getContext'
31 arguments
32 argument (NameExpr)
33 name (SimpleName)
34 identifier='stopIntent'
35 statement (ExpressionStmt)
36 expression (MethodCallExpr)
37 name (SimpleName)
38 identifier='assertFalse'
39 arguments
40 argument (MethodCallExpr)
41 name (SimpleName)
42 identifier='isServiceExisted'
43 arguments
44 argument (MethodCallExpr)
45 name (SimpleName)
46 identifier='getContext'
47 argument (NameExpr)
48 name (SimpleName)
49 identifier='SERVICE_NAME'
50 statement (ExpressionStmt)
51 expression (VariableDeclarationExpr)
52 variables
53 variable (VariableDeclarator)
54 initializer (ObjectCreationExpr)
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='BootReceiver'
58 name (SimpleName)
59 identifier='bootReceiver'
60 type (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='BootReceiver'
63 statement (ExpressionStmt)
64 expression (VariableDeclarationExpr)
65 variables
66 variable (VariableDeclarator)
67 initializer (ObjectCreationExpr)
68 type (ClassOrInterfaceType)
69 name (SimpleName)
70 identifier='Intent'
71 name (SimpleName)
72 identifier='intent'
73 type (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='Intent'
76 statement (ExpressionStmt)
77 expression (MethodCallExpr)
78 name (SimpleName)
79 identifier='setAction'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='intent'
83 arguments
84 argument (FieldAccessExpr)
85 name (SimpleName)
86 identifier='ACTION_BOOT_COMPLETED'
87 scope (NameExpr)
88 name (SimpleName)
89 identifier='Intent'
90 statement (ExpressionStmt)
91 expression (MethodCallExpr)
92 name (SimpleName)
93 identifier='onReceive'
94 scope (NameExpr)
95 name (SimpleName)
96 identifier='bootReceiver'
97 arguments
98 argument (MethodCallExpr)
99 name (SimpleName)
100 identifier='getContext'
101 argument (NameExpr)
102 name (SimpleName)
103 identifier='intent'
104 statement (ExpressionStmt)
105 expression (MethodCallExpr)
106 name (SimpleName)
107 identifier='assertTrue'
108 arguments
109 argument (MethodCallExpr)
110 name (SimpleName)
111 identifier='isServiceExisted'
112 arguments
113 argument (MethodCallExpr)
114 name (SimpleName)
115 identifier='getContext'
116 argument (NameExpr)
117 name (SimpleName)
118 identifier='SERVICE_NAME'
119 type (VoidType)
120 name (SimpleName)
121 identifier='testOnReceive_startService'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
13 14
11 15
15 16
16 17
17 18
6 19
19 20
6 21
21 22
22 23
2 24
24 25
25 26
26 27
25 28
28 29
29 30
25 31
31 32
32 33
33 34
2 35
35 36
36 37
37 38
36 39
39 40
40 41
41 42
40 43
43 44
44 45
45 46
43 47
47 48
48 49
2 50
50 51
51 52
52 53
53 54
54 55
55 56
56 57
53 58
58 59
53 60
60 61
61 62
2 63
63 64
64 65
65 66
66 67
67 68
68 69
69 70
66 71
71 72
66 73
73 74
74 75
2 76
76 77
77 78
78 79
77 80
80 81
81 82
77 83
83 84
84 85
85 86
84 87
87 88
88 89
2 90
90 91
91 92
92 93
91 94
94 95
95 96
91 97
97 98
98 99
99 100
97 101
101 102
102 103
2 104
104 105
105 106
106 107
105 108
108 109
109 110
110 111
109 112
112 113
113 114
114 115
112 116
116 117
117 118
0 119
0 120
120 121

Tests the behavior when receive notification which is the phone boot.
