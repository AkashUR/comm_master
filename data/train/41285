35
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='decorate'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='decorator'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='node'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='secondary'
17 type (VoidType)
18 name (SimpleName)
19 identifier='decorate'
20 parameters
21 parameter (Parameter)
22 isVarArgs='false'
23 name (SimpleName)
24 identifier='node'
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='OutputNode'
28 parameter (Parameter)
29 isVarArgs='false'
30 name (SimpleName)
31 identifier='secondary'
32 type (ClassOrInterfaceType)
33 name (SimpleName)
34 identifier='Decorator'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
0 17
0 18
18 19
0 20
20 21
21 22
21 23
23 24
21 25
25 26
26 27
20 28
28 29
28 30
30 31
28 32
32 33
33 34

This method is used to decorate the provided node. This node  can be either an XML element or an attribute. Decorations that can be applied to the node by invoking this method include things like namespaces and namespace lists. This can also be  given another <code>Decorator</code> which is applied before  this decorator, any common data can then be overwritten.
