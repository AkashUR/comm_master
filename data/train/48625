71
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='check'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='val'
11 statement (ExpressionStmt)
12 expression (VariableDeclarationExpr)
13 variables
14 variable (VariableDeclarator)
15 initializer (MethodCallExpr)
16 name (SimpleName)
17 identifier='toInteger'
18 arguments
19 argument (NameExpr)
20 name (SimpleName)
21 identifier='val'
22 name (SimpleName)
23 identifier='value'
24 type (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='Integer'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (NameExpr)
31 name (SimpleName)
32 identifier='str'
33 value (MethodCallExpr)
34 name (SimpleName)
35 identifier='sanitize'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='str'
40 statement (ExpressionStmt)
41 expression (MethodCallExpr)
42 name (SimpleName)
43 identifier='put'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='strings'
47 arguments
48 argument (NameExpr)
49 name (SimpleName)
50 identifier='str'
51 argument (NameExpr)
52 name (SimpleName)
53 identifier='value'
54 type (VoidType)
55 name (SimpleName)
56 identifier='addAlias'
57 parameters
58 parameter (Parameter)
59 isVarArgs='false'
60 name (SimpleName)
61 identifier='val'
62 type (PrimitiveType)
63 type='INT'
64 parameter (Parameter)
65 isVarArgs='false'
66 name (SimpleName)
67 identifier='str'
68 type (ClassOrInterfaceType)
69 name (SimpleName)
70 identifier='String'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
2 11
11 12
12 13
13 14
14 15
15 16
16 17
15 18
18 19
19 20
20 21
14 22
22 23
14 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
28 33
33 34
34 35
33 36
36 37
37 38
38 39
2 40
40 41
41 42
42 43
41 44
44 45
45 46
41 47
47 48
48 49
49 50
47 51
51 52
52 53
0 54
0 55
55 56
0 57
57 58
58 59
58 60
60 61
58 62
62 63
57 64
64 65
64 66
66 67
64 68
68 69
69 70

Defines an additional text representation of a numeric value.  This will be used by getValue(), but not getText().
