43
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='registerActivityType'
7 arguments
8 argument (MethodCallExpr)
9 name (SimpleName)
10 identifier='getName'
11 scope (NameExpr)
12 name (SimpleName)
13 identifier='activityClass'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='activityClass'
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='factory'
20 type (VoidType)
21 name (SimpleName)
22 identifier='registerActivityType'
23 parameters
24 parameter (Parameter)
25 isVarArgs='false'
26 name (SimpleName)
27 identifier='activityClass'
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='Class'
31 typeArguments
32 typeArgument (WildcardType)
33 extendedType (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='Activity'
36 parameter (Parameter)
37 isVarArgs='false'
38 name (SimpleName)
39 identifier='factory'
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='ActivityFactory'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
8 11
11 12
12 13
7 14
14 15
15 16
7 17
17 18
18 19
0 20
0 21
21 22
0 23
23 24
24 25
24 26
26 27
24 28
28 29
29 30
28 31
31 32
32 33
33 34
34 35
23 36
36 37
36 38
38 39
36 40
40 41
41 42

<p> Register an activity type with an associated factory. The factory will be used to construct new activity instances based on incoming message.  </p>
