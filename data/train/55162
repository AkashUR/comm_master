80
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='type'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='includeImplicitSuperTypes'
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='includePolyfills'
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (FieldAccessExpr)
19 name (SimpleName)
20 identifier='filter'
21 scope (ThisExpr)
22 value (ConditionalExpr)
23 condition (BinaryExpr)
24 operator='EQUALS'
25 left (NameExpr)
26 name (SimpleName)
27 identifier='filter'
28 right (NullLiteralExpr)
29 elseExpr (NameExpr)
30 name (SimpleName)
31 identifier='filter'
32 thenExpr (NullLiteralExpr)
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (NameExpr)
37 name (SimpleName)
38 identifier='nameAccessToMember'
39 value (MethodCallExpr)
40 name (SimpleName)
41 identifier='newLinkedHashMap'
42 scope (NameExpr)
43 name (SimpleName)
44 identifier='Maps'
45 name (SimpleName)
46 identifier='CollectMembersHelper'
47 parameters
48 parameter (Parameter)
49 isVarArgs='false'
50 name (SimpleName)
51 identifier='type'
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='ContainerType'
55 typeArguments
56 typeArgument (WildcardType)
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='includeImplicitSuperTypes'
61 type (PrimitiveType)
62 type='BOOLEAN'
63 parameter (Parameter)
64 isVarArgs='false'
65 name (SimpleName)
66 identifier='includePolyfills'
67 type (PrimitiveType)
68 type='BOOLEAN'
69 parameter (Parameter)
70 isVarArgs='false'
71 name (SimpleName)
72 identifier='filter'
73 type (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='Predicate'
76 typeArguments
77 typeArgument (ClassOrInterfaceType)
78 name (SimpleName)
79 identifier='TMember'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
13 14
2 15
15 16
16 17
16 18
18 19
19 20
18 21
16 22
22 23
23 24
23 25
25 26
26 27
23 28
22 29
29 30
30 31
22 32
2 33
33 34
34 35
34 36
36 37
37 38
34 39
39 40
40 41
39 42
42 43
43 44
0 45
45 46
0 47
47 48
48 49
48 50
50 51
48 52
52 53
53 54
52 55
55 56
47 57
57 58
57 59
59 60
57 61
61 62
47 63
63 64
63 65
65 66
63 67
67 68
47 69
69 70
69 71
71 72
69 73
73 74
74 75
73 76
76 77
77 78
78 79

Creates a new collector that is used to safely traverse a potentially cyclic inheritance tree and collect the members of the type.
