65
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getProject'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='myFixture'
13 name (SimpleName)
14 identifier='myProject'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Project'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 initializer (MethodCallExpr)
23 name (SimpleName)
24 identifier='createParameter'
25 scope (MethodCallExpr)
26 name (SimpleName)
27 identifier='getElementFactory'
28 scope (MethodCallExpr)
29 name (SimpleName)
30 identifier='getInstance'
31 scope (NameExpr)
32 name (SimpleName)
33 identifier='JavaPsiFacade'
34 arguments
35 argument (NameExpr)
36 name (SimpleName)
37 identifier='myProject'
38 arguments
39 argument (StringLiteralExpr)
40 value='param'
41 argument (FieldAccessExpr)
42 name (SimpleName)
43 identifier='BOOLEAN'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='PsiType'
47 name (SimpleName)
48 identifier='parameter'
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='PsiParameter'
52 statement (ExpressionStmt)
53 expression (MethodCallExpr)
54 name (SimpleName)
55 identifier='runQuickFixTest'
56 arguments
57 argument (NameExpr)
58 name (SimpleName)
59 identifier='parameter'
60 argument (StringLiteralExpr)
61 value='boolean param'
62 type (VoidType)
63 name (SimpleName)
64 identifier='testQuickFix_noAnnotation'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
23 24
22 25
25 26
26 27
25 28
28 29
29 30
28 31
31 32
32 33
28 34
34 35
35 36
36 37
22 38
38 39
39 40
38 41
41 42
42 43
41 44
44 45
45 46
21 47
47 48
21 49
49 50
50 51
2 52
52 53
53 54
54 55
53 56
56 57
57 58
58 59
56 60
60 61
0 62
0 63
63 64

Tests that the Quick fix for a parameter with no annotation returns the same parameter unchanged.
