246
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='expressionStr'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='expression'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='functions'
19 scope (ThisExpr)
20 value (MethodCallExpr)
21 name (SimpleName)
22 identifier='getFunctions'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='expression'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (FieldAccessExpr)
31 name (SimpleName)
32 identifier='variables'
33 scope (ThisExpr)
34 value (ObjectCreationExpr)
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='HashSet'
38 typeArguments
39 typeArgument (ClassOrInterfaceType)
40 name (SimpleName)
41 identifier='String'
42 statement (ExpressionStmt)
43 expression (VariableDeclarationExpr)
44 variables
45 variable (VariableDeclarator)
46 initializer (ObjectCreationExpr)
47 type (ClassOrInterfaceType)
48 name (SimpleName)
49 identifier='String'
50 arguments
51 argument (NameExpr)
52 name (SimpleName)
53 identifier='expression'
54 name (SimpleName)
55 identifier='local'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='String'
59 statement (ForeachStmt)
60 body (BlockStmt)
61 statements
62 statement (ExpressionStmt)
63 expression (MethodCallExpr)
64 name (SimpleName)
65 identifier='addAll'
66 scope (FieldAccessExpr)
67 name (SimpleName)
68 identifier='variables'
69 scope (ThisExpr)
70 arguments
71 argument (MethodCallExpr)
72 name (SimpleName)
73 identifier='getSlots'
74 scope (NameExpr)
75 name (SimpleName)
76 identifier='ft'
77 statement (ExpressionStmt)
78 expression (AssignExpr)
79 operator='ASSIGN'
80 target (NameExpr)
81 name (SimpleName)
82 identifier='local'
83 value (MethodCallExpr)
84 name (SimpleName)
85 identifier='replace'
86 scope (NameExpr)
87 name (SimpleName)
88 identifier='local'
89 arguments
90 argument (MethodCallExpr)
91 name (SimpleName)
92 identifier='toString'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='ft'
96 argument (BinaryExpr)
97 operator='PLUS'
98 left (MethodCallExpr)
99 name (SimpleName)
100 identifier='getName'
101 scope (MethodCallExpr)
102 name (SimpleName)
103 identifier='getFunction'
104 scope (NameExpr)
105 name (SimpleName)
106 identifier='ft'
107 right (MethodCallExpr)
108 name (SimpleName)
109 identifier='hashCode'
110 scope (NameExpr)
111 name (SimpleName)
112 identifier='ft'
113 iterable (FieldAccessExpr)
114 name (SimpleName)
115 identifier='functions'
116 scope (ThisExpr)
117 variable (VariableDeclarationExpr)
118 variables
119 variable (VariableDeclarator)
120 name (SimpleName)
121 identifier='ft'
122 type (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='FunctionalTemplate'
125 statement (ExpressionStmt)
126 expression (MethodCallExpr)
127 name (SimpleName)
128 identifier='addAll'
129 scope (FieldAccessExpr)
130 name (SimpleName)
131 identifier='variables'
132 scope (ThisExpr)
133 arguments
134 argument (MethodCallExpr)
135 name (SimpleName)
136 identifier='getVariableLabels'
137 arguments
138 argument (NameExpr)
139 name (SimpleName)
140 identifier='local'
141 statement (ExpressionStmt)
142 expression (MethodCallExpr)
143 name (SimpleName)
144 identifier='forEach'
145 scope (MethodCallExpr)
146 name (SimpleName)
147 identifier='map'
148 scope (MethodCallExpr)
149 name (SimpleName)
150 identifier='stream'
151 scope (NameExpr)
152 name (SimpleName)
153 identifier='functions'
154 arguments
155 argument (NullLiteralExpr)
156 arguments
157 argument (NullLiteralExpr)
158 statement (ExpressionStmt)
159 expression (AssignExpr)
160 operator='ASSIGN'
161 target (NameExpr)
162 name (SimpleName)
163 identifier='local'
164 value (MethodCallExpr)
165 name (SimpleName)
166 identifier='replaceAll'
167 scope (NameExpr)
168 name (SimpleName)
169 identifier='local'
170 arguments
171 argument (StringLiteralExpr)
172 value='[\\[\\]\\{\\}]'
173 argument (StringLiteralExpr)
174 value=''
175 statement (ExpressionStmt)
176 expression (AssignExpr)
177 operator='ASSIGN'
178 target (NameExpr)
179 name (SimpleName)
180 identifier='local'
181 value (MethodCallExpr)
182 name (SimpleName)
183 identifier='replaceAll'
184 scope (NameExpr)
185 name (SimpleName)
186 identifier='local'
187 arguments
188 argument (StringLiteralExpr)
189 value='\\.([a-zA-Z])'
190 argument (StringLiteralExpr)
191 value='_$1'
192 statement (ExpressionStmt)
193 expression (VariableDeclarationExpr)
194 variables
195 variable (VariableDeclarator)
196 initializer (ObjectCreationExpr)
197 type (ClassOrInterfaceType)
198 name (SimpleName)
199 identifier='ExpressionBuilder'
200 arguments
201 argument (NameExpr)
202 name (SimpleName)
203 identifier='local'
204 name (SimpleName)
205 identifier='builder'
206 type (ClassOrInterfaceType)
207 name (SimpleName)
208 identifier='ExpressionBuilder'
209 statement (ExpressionStmt)
210 expression (MethodCallExpr)
211 name (SimpleName)
212 identifier='variables'
213 scope (NameExpr)
214 name (SimpleName)
215 identifier='builder'
216 arguments
217 argument (MethodCallExpr)
218 name (SimpleName)
219 identifier='getVariableLabels'
220 arguments
221 argument (NameExpr)
222 name (SimpleName)
223 identifier='local'
224 statement (ExpressionStmt)
225 expression (AssignExpr)
226 operator='ASSIGN'
227 target (NameExpr)
228 name (SimpleName)
229 identifier='exp'
230 value (MethodCallExpr)
231 name (SimpleName)
232 identifier='build'
233 scope (NameExpr)
234 name (SimpleName)
235 identifier='builder'
236 name (SimpleName)
237 identifier='MathExpression'
238 parameters
239 parameter (Parameter)
240 isVarArgs='false'
241 name (SimpleName)
242 identifier='expression'
243 type (ClassOrInterfaceType)
244 name (SimpleName)
245 identifier='String'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
20 23
23 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
30 33
28 34
34 35
35 36
36 37
35 38
38 39
39 40
40 41
2 42
42 43
43 44
44 45
45 46
46 47
47 48
48 49
46 50
50 51
51 52
52 53
45 54
54 55
45 56
56 57
57 58
2 59
59 60
60 61
61 62
62 63
63 64
64 65
63 66
66 67
67 68
66 69
63 70
70 71
71 72
72 73
71 74
74 75
75 76
61 77
77 78
78 79
78 80
80 81
81 82
78 83
83 84
84 85
83 86
86 87
87 88
83 89
89 90
90 91
91 92
90 93
93 94
94 95
89 96
96 97
96 98
98 99
99 100
98 101
101 102
102 103
101 104
104 105
105 106
96 107
107 108
108 109
107 110
110 111
111 112
59 113
113 114
114 115
113 116
59 117
117 118
118 119
119 120
120 121
119 122
122 123
123 124
2 125
125 126
126 127
127 128
126 129
129 130
130 131
129 132
126 133
133 134
134 135
135 136
134 137
137 138
138 139
139 140
2 141
141 142
142 143
143 144
142 145
145 146
146 147
145 148
148 149
149 150
148 151
151 152
152 153
145 154
154 155
142 156
156 157
2 158
158 159
159 160
159 161
161 162
162 163
159 164
164 165
165 166
164 167
167 168
168 169
164 170
170 171
171 172
170 173
173 174
2 175
175 176
176 177
176 178
178 179
179 180
176 181
181 182
182 183
181 184
184 185
185 186
181 187
187 188
188 189
187 190
190 191
2 192
192 193
193 194
194 195
195 196
196 197
197 198
198 199
196 200
200 201
201 202
202 203
195 204
204 205
195 206
206 207
207 208
2 209
209 210
210 211
211 212
210 213
213 214
214 215
210 216
216 217
217 218
218 219
217 220
220 221
221 222
222 223
2 224
224 225
225 226
225 227
227 228
228 229
225 230
230 231
231 232
230 233
233 234
234 235
0 236
236 237
0 238
238 239
239 240
239 241
241 242
239 243
243 244
244 245

Creates a new mathematical expression from the string
