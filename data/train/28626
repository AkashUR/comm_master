182
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (SynchronizedStmt)
4 body (BlockStmt)
5 statements
6 statement (ExpressionStmt)
7 expression (MethodCallExpr)
8 name (SimpleName)
9 identifier='writeInt'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='dest'
13 arguments
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='mNetworkType'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='writeInt'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='dest'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='mSubtype'
28 statement (ExpressionStmt)
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='writeString'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='dest'
35 arguments
36 argument (NameExpr)
37 name (SimpleName)
38 identifier='mTypeName'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='writeString'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='dest'
46 arguments
47 argument (NameExpr)
48 name (SimpleName)
49 identifier='mSubtypeName'
50 statement (ExpressionStmt)
51 expression (MethodCallExpr)
52 name (SimpleName)
53 identifier='writeString'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='dest'
57 arguments
58 argument (MethodCallExpr)
59 name (SimpleName)
60 identifier='name'
61 scope (NameExpr)
62 name (SimpleName)
63 identifier='mState'
64 statement (ExpressionStmt)
65 expression (MethodCallExpr)
66 name (SimpleName)
67 identifier='writeString'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='dest'
71 arguments
72 argument (MethodCallExpr)
73 name (SimpleName)
74 identifier='name'
75 scope (NameExpr)
76 name (SimpleName)
77 identifier='mDetailedState'
78 statement (ExpressionStmt)
79 expression (MethodCallExpr)
80 name (SimpleName)
81 identifier='writeInt'
82 scope (NameExpr)
83 name (SimpleName)
84 identifier='dest'
85 arguments
86 argument (ConditionalExpr)
87 condition (NameExpr)
88 name (SimpleName)
89 identifier='mIsFailover'
90 elseExpr (IntegerLiteralExpr)
91 value='0'
92 thenExpr (IntegerLiteralExpr)
93 value='1'
94 statement (ExpressionStmt)
95 expression (MethodCallExpr)
96 name (SimpleName)
97 identifier='writeInt'
98 scope (NameExpr)
99 name (SimpleName)
100 identifier='dest'
101 arguments
102 argument (ConditionalExpr)
103 condition (NameExpr)
104 name (SimpleName)
105 identifier='mIsAvailable'
106 elseExpr (IntegerLiteralExpr)
107 value='0'
108 thenExpr (IntegerLiteralExpr)
109 value='1'
110 statement (ExpressionStmt)
111 expression (MethodCallExpr)
112 name (SimpleName)
113 identifier='writeInt'
114 scope (NameExpr)
115 name (SimpleName)
116 identifier='dest'
117 arguments
118 argument (ConditionalExpr)
119 condition (NameExpr)
120 name (SimpleName)
121 identifier='mIsRoaming'
122 elseExpr (IntegerLiteralExpr)
123 value='0'
124 thenExpr (IntegerLiteralExpr)
125 value='1'
126 statement (ExpressionStmt)
127 expression (MethodCallExpr)
128 name (SimpleName)
129 identifier='writeInt'
130 scope (NameExpr)
131 name (SimpleName)
132 identifier='dest'
133 arguments
134 argument (ConditionalExpr)
135 condition (NameExpr)
136 name (SimpleName)
137 identifier='mIsConnectedToProvisioningNetwork'
138 elseExpr (IntegerLiteralExpr)
139 value='0'
140 thenExpr (IntegerLiteralExpr)
141 value='1'
142 statement (ExpressionStmt)
143 expression (MethodCallExpr)
144 name (SimpleName)
145 identifier='writeString'
146 scope (NameExpr)
147 name (SimpleName)
148 identifier='dest'
149 arguments
150 argument (NameExpr)
151 name (SimpleName)
152 identifier='mReason'
153 statement (ExpressionStmt)
154 expression (MethodCallExpr)
155 name (SimpleName)
156 identifier='writeString'
157 scope (NameExpr)
158 name (SimpleName)
159 identifier='dest'
160 arguments
161 argument (NameExpr)
162 name (SimpleName)
163 identifier='mExtraInfo'
164 expression (ThisExpr)
165 type (VoidType)
166 name (SimpleName)
167 identifier='writeToParcel'
168 parameters
169 parameter (Parameter)
170 isVarArgs='false'
171 name (SimpleName)
172 identifier='dest'
173 type (ClassOrInterfaceType)
174 name (SimpleName)
175 identifier='Parcel'
176 parameter (Parameter)
177 isVarArgs='false'
178 name (SimpleName)
179 identifier='flags'
180 type (PrimitiveType)
181 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
5 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
25 26
26 27
5 28
28 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
37 38
5 39
39 40
40 41
41 42
40 43
43 44
44 45
40 46
46 47
47 48
48 49
5 50
50 51
51 52
52 53
51 54
54 55
55 56
51 57
57 58
58 59
59 60
58 61
61 62
62 63
5 64
64 65
65 66
66 67
65 68
68 69
69 70
65 71
71 72
72 73
73 74
72 75
75 76
76 77
5 78
78 79
79 80
80 81
79 82
82 83
83 84
79 85
85 86
86 87
87 88
88 89
86 90
90 91
86 92
92 93
5 94
94 95
95 96
96 97
95 98
98 99
99 100
95 101
101 102
102 103
103 104
104 105
102 106
106 107
102 108
108 109
5 110
110 111
111 112
112 113
111 114
114 115
115 116
111 117
117 118
118 119
119 120
120 121
118 122
122 123
118 124
124 125
5 126
126 127
127 128
128 129
127 130
130 131
131 132
127 133
133 134
134 135
135 136
136 137
134 138
138 139
134 140
140 141
5 142
142 143
143 144
144 145
143 146
146 147
147 148
143 149
149 150
150 151
151 152
5 153
153 154
154 155
155 156
154 157
157 158
158 159
154 160
160 161
161 162
162 163
3 164
0 165
0 166
166 167
0 168
168 169
169 170
169 171
171 172
169 173
173 174
174 175
168 176
176 177
176 178
178 179
176 180
180 181

Implement the Parcelable interface.
