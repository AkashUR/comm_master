590
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='IndexedParent'
11 arguments
12 argument (IntegerLiteralExpr)
13 value='0'
14 argument (IntegerLiteralExpr)
15 value='1'
16 name (SimpleName)
17 identifier='x'
18 type (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='IndexedParent'
21 statement (ExpressionStmt)
22 expression (VariableDeclarationExpr)
23 variables
24 variable (VariableDeclarator)
25 initializer (ObjectCreationExpr)
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='IndexedParent'
29 arguments
30 argument (IntegerLiteralExpr)
31 value='1'
32 argument (IntegerLiteralExpr)
33 value='2'
34 name (SimpleName)
35 identifier='y'
36 type (ClassOrInterfaceType)
37 name (SimpleName)
38 identifier='IndexedParent'
39 statement (ExpressionStmt)
40 expression (VariableDeclarationExpr)
41 variables
42 variable (VariableDeclarator)
43 initializer (ObjectCreationExpr)
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='IndexedParent'
47 arguments
48 argument (IntegerLiteralExpr)
49 value='2'
50 argument (IntegerLiteralExpr)
51 value='3'
52 name (SimpleName)
53 identifier='z'
54 type (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='IndexedParent'
57 statement (ExpressionStmt)
58 expression (VariableDeclarationExpr)
59 variables
60 variable (VariableDeclarator)
61 initializer (ArrayCreationExpr)
62 elementType (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='IndexedParent'
65 initializer (ArrayInitializerExpr)
66 values
67 value (NameExpr)
68 name (SimpleName)
69 identifier='x'
70 value (NameExpr)
71 name (SimpleName)
72 identifier='y'
73 levels
74 level (ArrayCreationLevel)
75 name (SimpleName)
76 identifier='twoParents'
77 type (ArrayType)
78 origin='TYPE'
79 componentType (ClassOrInterfaceType)
80 name (SimpleName)
81 identifier='IndexedParent'
82 statement (ExpressionStmt)
83 expression (VariableDeclarationExpr)
84 variables
85 variable (VariableDeclarator)
86 initializer (ArrayCreationExpr)
87 elementType (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='IndexedParent'
90 initializer (ArrayInitializerExpr)
91 values
92 value (NameExpr)
93 name (SimpleName)
94 identifier='x'
95 value (NameExpr)
96 name (SimpleName)
97 identifier='y'
98 value (NameExpr)
99 name (SimpleName)
100 identifier='z'
101 levels
102 level (ArrayCreationLevel)
103 name (SimpleName)
104 identifier='threeParents'
105 type (ArrayType)
106 origin='TYPE'
107 componentType (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='IndexedParent'
110 statement (ExpressionStmt)
111 expression (VariableDeclarationExpr)
112 variables
113 variable (VariableDeclarator)
114 initializer (NullLiteralExpr)
115 name (SimpleName)
116 identifier='function'
117 type (ClassOrInterfaceType)
118 name (SimpleName)
119 identifier='BooleanFunction'
120 statement (ExpressionStmt)
121 expression (AssignExpr)
122 operator='ASSIGN'
123 target (NameExpr)
124 name (SimpleName)
125 identifier='function'
126 value (ObjectCreationExpr)
127 type (ClassOrInterfaceType)
128 name (SimpleName)
129 identifier='BooleanFunction'
130 arguments
131 argument (NameExpr)
132 name (SimpleName)
133 identifier='twoParents'
134 statement (ExpressionStmt)
135 expression (MethodCallExpr)
136 name (SimpleName)
137 identifier='setValue'
138 scope (NameExpr)
139 name (SimpleName)
140 identifier='function'
141 arguments
142 argument (IntegerLiteralExpr)
143 value='0'
144 argument (BooleanLiteralExpr)
145 value='true'
146 statement (ExpressionStmt)
147 expression (MethodCallExpr)
148 name (SimpleName)
149 identifier='setValue'
150 scope (NameExpr)
151 name (SimpleName)
152 identifier='function'
153 arguments
154 argument (IntegerLiteralExpr)
155 value='1'
156 argument (BooleanLiteralExpr)
157 value='false'
158 statement (ExpressionStmt)
159 expression (MethodCallExpr)
160 name (SimpleName)
161 identifier='setValue'
162 scope (NameExpr)
163 name (SimpleName)
164 identifier='function'
165 arguments
166 argument (IntegerLiteralExpr)
167 value='2'
168 argument (BooleanLiteralExpr)
169 value='false'
170 statement (ExpressionStmt)
171 expression (MethodCallExpr)
172 name (SimpleName)
173 identifier='setValue'
174 scope (NameExpr)
175 name (SimpleName)
176 identifier='function'
177 arguments
178 argument (IntegerLiteralExpr)
179 value='3'
180 argument (BooleanLiteralExpr)
181 value='false'
182 statement (ExpressionStmt)
183 expression (MethodCallExpr)
184 name (SimpleName)
185 identifier='assertTrue'
186 arguments
187 argument (MethodCallExpr)
188 name (SimpleName)
189 identifier='isCanalyzing'
190 scope (NameExpr)
191 name (SimpleName)
192 identifier='function'
193 statement (ExpressionStmt)
194 expression (AssignExpr)
195 operator='ASSIGN'
196 target (NameExpr)
197 name (SimpleName)
198 identifier='function'
199 value (ObjectCreationExpr)
200 type (ClassOrInterfaceType)
201 name (SimpleName)
202 identifier='BooleanFunction'
203 arguments
204 argument (NameExpr)
205 name (SimpleName)
206 identifier='twoParents'
207 statement (ExpressionStmt)
208 expression (MethodCallExpr)
209 name (SimpleName)
210 identifier='setValue'
211 scope (NameExpr)
212 name (SimpleName)
213 identifier='function'
214 arguments
215 argument (IntegerLiteralExpr)
216 value='0'
217 argument (BooleanLiteralExpr)
218 value='true'
219 statement (ExpressionStmt)
220 expression (MethodCallExpr)
221 name (SimpleName)
222 identifier='setValue'
223 scope (NameExpr)
224 name (SimpleName)
225 identifier='function'
226 arguments
227 argument (IntegerLiteralExpr)
228 value='1'
229 argument (BooleanLiteralExpr)
230 value='true'
231 statement (ExpressionStmt)
232 expression (MethodCallExpr)
233 name (SimpleName)
234 identifier='setValue'
235 scope (NameExpr)
236 name (SimpleName)
237 identifier='function'
238 arguments
239 argument (IntegerLiteralExpr)
240 value='2'
241 argument (BooleanLiteralExpr)
242 value='true'
243 statement (ExpressionStmt)
244 expression (MethodCallExpr)
245 name (SimpleName)
246 identifier='setValue'
247 scope (NameExpr)
248 name (SimpleName)
249 identifier='function'
250 arguments
251 argument (IntegerLiteralExpr)
252 value='3'
253 argument (BooleanLiteralExpr)
254 value='false'
255 statement (ExpressionStmt)
256 expression (MethodCallExpr)
257 name (SimpleName)
258 identifier='assertTrue'
259 arguments
260 argument (MethodCallExpr)
261 name (SimpleName)
262 identifier='isCanalyzing'
263 scope (NameExpr)
264 name (SimpleName)
265 identifier='function'
266 statement (ExpressionStmt)
267 expression (AssignExpr)
268 operator='ASSIGN'
269 target (NameExpr)
270 name (SimpleName)
271 identifier='function'
272 value (ObjectCreationExpr)
273 type (ClassOrInterfaceType)
274 name (SimpleName)
275 identifier='BooleanFunction'
276 arguments
277 argument (NameExpr)
278 name (SimpleName)
279 identifier='twoParents'
280 statement (ExpressionStmt)
281 expression (MethodCallExpr)
282 name (SimpleName)
283 identifier='setValue'
284 scope (NameExpr)
285 name (SimpleName)
286 identifier='function'
287 arguments
288 argument (IntegerLiteralExpr)
289 value='0'
290 argument (BooleanLiteralExpr)
291 value='false'
292 statement (ExpressionStmt)
293 expression (MethodCallExpr)
294 name (SimpleName)
295 identifier='setValue'
296 scope (NameExpr)
297 name (SimpleName)
298 identifier='function'
299 arguments
300 argument (IntegerLiteralExpr)
301 value='1'
302 argument (BooleanLiteralExpr)
303 value='true'
304 statement (ExpressionStmt)
305 expression (MethodCallExpr)
306 name (SimpleName)
307 identifier='setValue'
308 scope (NameExpr)
309 name (SimpleName)
310 identifier='function'
311 arguments
312 argument (IntegerLiteralExpr)
313 value='2'
314 argument (BooleanLiteralExpr)
315 value='true'
316 statement (ExpressionStmt)
317 expression (MethodCallExpr)
318 name (SimpleName)
319 identifier='setValue'
320 scope (NameExpr)
321 name (SimpleName)
322 identifier='function'
323 arguments
324 argument (IntegerLiteralExpr)
325 value='3'
326 argument (BooleanLiteralExpr)
327 value='false'
328 statement (ExpressionStmt)
329 expression (MethodCallExpr)
330 name (SimpleName)
331 identifier='assertTrue'
332 arguments
333 argument (UnaryExpr)
334 operator='LOGICAL_COMPLEMENT'
335 expression (EnclosedExpr)
336 inner (MethodCallExpr)
337 name (SimpleName)
338 identifier='isCanalyzing'
339 scope (NameExpr)
340 name (SimpleName)
341 identifier='function'
342 statement (ExpressionStmt)
343 expression (AssignExpr)
344 operator='ASSIGN'
345 target (NameExpr)
346 name (SimpleName)
347 identifier='function'
348 value (ObjectCreationExpr)
349 type (ClassOrInterfaceType)
350 name (SimpleName)
351 identifier='BooleanFunction'
352 arguments
353 argument (NameExpr)
354 name (SimpleName)
355 identifier='threeParents'
356 statement (ExpressionStmt)
357 expression (MethodCallExpr)
358 name (SimpleName)
359 identifier='setValue'
360 scope (NameExpr)
361 name (SimpleName)
362 identifier='function'
363 arguments
364 argument (IntegerLiteralExpr)
365 value='0'
366 argument (BooleanLiteralExpr)
367 value='true'
368 statement (ExpressionStmt)
369 expression (MethodCallExpr)
370 name (SimpleName)
371 identifier='setValue'
372 scope (NameExpr)
373 name (SimpleName)
374 identifier='function'
375 arguments
376 argument (IntegerLiteralExpr)
377 value='1'
378 argument (BooleanLiteralExpr)
379 value='false'
380 statement (ExpressionStmt)
381 expression (MethodCallExpr)
382 name (SimpleName)
383 identifier='setValue'
384 scope (NameExpr)
385 name (SimpleName)
386 identifier='function'
387 arguments
388 argument (IntegerLiteralExpr)
389 value='2'
390 argument (BooleanLiteralExpr)
391 value='false'
392 statement (ExpressionStmt)
393 expression (MethodCallExpr)
394 name (SimpleName)
395 identifier='setValue'
396 scope (NameExpr)
397 name (SimpleName)
398 identifier='function'
399 arguments
400 argument (IntegerLiteralExpr)
401 value='3'
402 argument (BooleanLiteralExpr)
403 value='true'
404 statement (ExpressionStmt)
405 expression (MethodCallExpr)
406 name (SimpleName)
407 identifier='setValue'
408 scope (NameExpr)
409 name (SimpleName)
410 identifier='function'
411 arguments
412 argument (IntegerLiteralExpr)
413 value='4'
414 argument (BooleanLiteralExpr)
415 value='false'
416 statement (ExpressionStmt)
417 expression (MethodCallExpr)
418 name (SimpleName)
419 identifier='setValue'
420 scope (NameExpr)
421 name (SimpleName)
422 identifier='function'
423 arguments
424 argument (IntegerLiteralExpr)
425 value='5'
426 argument (BooleanLiteralExpr)
427 value='false'
428 statement (ExpressionStmt)
429 expression (MethodCallExpr)
430 name (SimpleName)
431 identifier='setValue'
432 scope (NameExpr)
433 name (SimpleName)
434 identifier='function'
435 arguments
436 argument (IntegerLiteralExpr)
437 value='6'
438 argument (BooleanLiteralExpr)
439 value='false'
440 statement (ExpressionStmt)
441 expression (MethodCallExpr)
442 name (SimpleName)
443 identifier='setValue'
444 scope (NameExpr)
445 name (SimpleName)
446 identifier='function'
447 arguments
448 argument (IntegerLiteralExpr)
449 value='7'
450 argument (BooleanLiteralExpr)
451 value='false'
452 statement (ExpressionStmt)
453 expression (MethodCallExpr)
454 name (SimpleName)
455 identifier='assertTrue'
456 arguments
457 argument (MethodCallExpr)
458 name (SimpleName)
459 identifier='isCanalyzing'
460 scope (NameExpr)
461 name (SimpleName)
462 identifier='function'
463 statement (ExpressionStmt)
464 expression (AssignExpr)
465 operator='ASSIGN'
466 target (NameExpr)
467 name (SimpleName)
468 identifier='function'
469 value (ObjectCreationExpr)
470 type (ClassOrInterfaceType)
471 name (SimpleName)
472 identifier='BooleanFunction'
473 arguments
474 argument (NameExpr)
475 name (SimpleName)
476 identifier='threeParents'
477 statement (ExpressionStmt)
478 expression (MethodCallExpr)
479 name (SimpleName)
480 identifier='setValue'
481 scope (NameExpr)
482 name (SimpleName)
483 identifier='function'
484 arguments
485 argument (IntegerLiteralExpr)
486 value='0'
487 argument (BooleanLiteralExpr)
488 value='true'
489 statement (ExpressionStmt)
490 expression (MethodCallExpr)
491 name (SimpleName)
492 identifier='setValue'
493 scope (NameExpr)
494 name (SimpleName)
495 identifier='function'
496 arguments
497 argument (IntegerLiteralExpr)
498 value='1'
499 argument (BooleanLiteralExpr)
500 value='false'
501 statement (ExpressionStmt)
502 expression (MethodCallExpr)
503 name (SimpleName)
504 identifier='setValue'
505 scope (NameExpr)
506 name (SimpleName)
507 identifier='function'
508 arguments
509 argument (IntegerLiteralExpr)
510 value='2'
511 argument (BooleanLiteralExpr)
512 value='false'
513 statement (ExpressionStmt)
514 expression (MethodCallExpr)
515 name (SimpleName)
516 identifier='setValue'
517 scope (NameExpr)
518 name (SimpleName)
519 identifier='function'
520 arguments
521 argument (IntegerLiteralExpr)
522 value='3'
523 argument (BooleanLiteralExpr)
524 value='true'
525 statement (ExpressionStmt)
526 expression (MethodCallExpr)
527 name (SimpleName)
528 identifier='setValue'
529 scope (NameExpr)
530 name (SimpleName)
531 identifier='function'
532 arguments
533 argument (IntegerLiteralExpr)
534 value='4'
535 argument (BooleanLiteralExpr)
536 value='false'
537 statement (ExpressionStmt)
538 expression (MethodCallExpr)
539 name (SimpleName)
540 identifier='setValue'
541 scope (NameExpr)
542 name (SimpleName)
543 identifier='function'
544 arguments
545 argument (IntegerLiteralExpr)
546 value='5'
547 argument (BooleanLiteralExpr)
548 value='false'
549 statement (ExpressionStmt)
550 expression (MethodCallExpr)
551 name (SimpleName)
552 identifier='setValue'
553 scope (NameExpr)
554 name (SimpleName)
555 identifier='function'
556 arguments
557 argument (IntegerLiteralExpr)
558 value='6'
559 argument (BooleanLiteralExpr)
560 value='false'
561 statement (ExpressionStmt)
562 expression (MethodCallExpr)
563 name (SimpleName)
564 identifier='setValue'
565 scope (NameExpr)
566 name (SimpleName)
567 identifier='function'
568 arguments
569 argument (IntegerLiteralExpr)
570 value='7'
571 argument (BooleanLiteralExpr)
572 value='true'
573 statement (ExpressionStmt)
574 expression (MethodCallExpr)
575 name (SimpleName)
576 identifier='assertTrue'
577 arguments
578 argument (UnaryExpr)
579 operator='LOGICAL_COMPLEMENT'
580 expression (EnclosedExpr)
581 inner (MethodCallExpr)
582 name (SimpleName)
583 identifier='isCanalyzing'
584 scope (NameExpr)
585 name (SimpleName)
586 identifier='function'
587 type (VoidType)
588 name (SimpleName)
589 identifier='testIsCanalyzing'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
11 14
14 15
6 16
16 17
6 18
18 19
19 20
2 21
21 22
22 23
23 24
24 25
25 26
26 27
27 28
25 29
29 30
30 31
29 32
32 33
24 34
34 35
24 36
36 37
37 38
2 39
39 40
40 41
41 42
42 43
43 44
44 45
45 46
43 47
47 48
48 49
47 50
50 51
42 52
52 53
42 54
54 55
55 56
2 57
57 58
58 59
59 60
60 61
61 62
62 63
63 64
61 65
65 66
66 67
67 68
68 69
66 70
70 71
71 72
61 73
73 74
60 75
75 76
60 77
77 78
77 79
79 80
80 81
2 82
82 83
83 84
84 85
85 86
86 87
87 88
88 89
86 90
90 91
91 92
92 93
93 94
91 95
95 96
96 97
91 98
98 99
99 100
86 101
101 102
85 103
103 104
85 105
105 106
105 107
107 108
108 109
2 110
110 111
111 112
112 113
113 114
113 115
115 116
113 117
117 118
118 119
2 120
120 121
121 122
121 123
123 124
124 125
121 126
126 127
127 128
128 129
126 130
130 131
131 132
132 133
2 134
134 135
135 136
136 137
135 138
138 139
139 140
135 141
141 142
142 143
141 144
144 145
2 146
146 147
147 148
148 149
147 150
150 151
151 152
147 153
153 154
154 155
153 156
156 157
2 158
158 159
159 160
160 161
159 162
162 163
163 164
159 165
165 166
166 167
165 168
168 169
2 170
170 171
171 172
172 173
171 174
174 175
175 176
171 177
177 178
178 179
177 180
180 181
2 182
182 183
183 184
184 185
183 186
186 187
187 188
188 189
187 190
190 191
191 192
2 193
193 194
194 195
194 196
196 197
197 198
194 199
199 200
200 201
201 202
199 203
203 204
204 205
205 206
2 207
207 208
208 209
209 210
208 211
211 212
212 213
208 214
214 215
215 216
214 217
217 218
2 219
219 220
220 221
221 222
220 223
223 224
224 225
220 226
226 227
227 228
226 229
229 230
2 231
231 232
232 233
233 234
232 235
235 236
236 237
232 238
238 239
239 240
238 241
241 242
2 243
243 244
244 245
245 246
244 247
247 248
248 249
244 250
250 251
251 252
250 253
253 254
2 255
255 256
256 257
257 258
256 259
259 260
260 261
261 262
260 263
263 264
264 265
2 266
266 267
267 268
267 269
269 270
270 271
267 272
272 273
273 274
274 275
272 276
276 277
277 278
278 279
2 280
280 281
281 282
282 283
281 284
284 285
285 286
281 287
287 288
288 289
287 290
290 291
2 292
292 293
293 294
294 295
293 296
296 297
297 298
293 299
299 300
300 301
299 302
302 303
2 304
304 305
305 306
306 307
305 308
308 309
309 310
305 311
311 312
312 313
311 314
314 315
2 316
316 317
317 318
318 319
317 320
320 321
321 322
317 323
323 324
324 325
323 326
326 327
2 328
328 329
329 330
330 331
329 332
332 333
333 334
333 335
335 336
336 337
337 338
336 339
339 340
340 341
2 342
342 343
343 344
343 345
345 346
346 347
343 348
348 349
349 350
350 351
348 352
352 353
353 354
354 355
2 356
356 357
357 358
358 359
357 360
360 361
361 362
357 363
363 364
364 365
363 366
366 367
2 368
368 369
369 370
370 371
369 372
372 373
373 374
369 375
375 376
376 377
375 378
378 379
2 380
380 381
381 382
382 383
381 384
384 385
385 386
381 387
387 388
388 389
387 390
390 391
2 392
392 393
393 394
394 395
393 396
396 397
397 398
393 399
399 400
400 401
399 402
402 403
2 404
404 405
405 406
406 407
405 408
408 409
409 410
405 411
411 412
412 413
411 414
414 415
2 416
416 417
417 418
418 419
417 420
420 421
421 422
417 423
423 424
424 425
423 426
426 427
2 428
428 429
429 430
430 431
429 432
432 433
433 434
429 435
435 436
436 437
435 438
438 439
2 440
440 441
441 442
442 443
441 444
444 445
445 446
441 447
447 448
448 449
447 450
450 451
2 452
452 453
453 454
454 455
453 456
456 457
457 458
458 459
457 460
460 461
461 462
2 463
463 464
464 465
464 466
466 467
467 468
464 469
469 470
470 471
471 472
469 473
473 474
474 475
475 476
2 477
477 478
478 479
479 480
478 481
481 482
482 483
478 484
484 485
485 486
484 487
487 488
2 489
489 490
490 491
491 492
490 493
493 494
494 495
490 496
496 497
497 498
496 499
499 500
2 501
501 502
502 503
503 504
502 505
505 506
506 507
502 508
508 509
509 510
508 511
511 512
2 513
513 514
514 515
515 516
514 517
517 518
518 519
514 520
520 521
521 522
520 523
523 524
2 525
525 526
526 527
527 528
526 529
529 530
530 531
526 532
532 533
533 534
532 535
535 536
2 537
537 538
538 539
539 540
538 541
541 542
542 543
538 544
544 545
545 546
544 547
547 548
2 549
549 550
550 551
551 552
550 553
553 554
554 555
550 556
556 557
557 558
556 559
559 560
2 561
561 562
562 563
563 564
562 565
565 566
566 567
562 568
568 569
569 570
568 571
571 572
2 573
573 574
574 575
575 576
574 577
577 578
578 579
578 580
580 581
581 582
582 583
581 584
584 585
585 586
0 587
0 588
588 589

Tests to see whether some known canalyzing functions (AND, OR, ...) pass the isCanalyzing() test. Also tests to see whether some known non-canalyzing functions (exclusive-OR, ...) fail.
