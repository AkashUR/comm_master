64
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='terminalInput'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='terminalOutput'
12 argument (NameExpr)
13 name (SimpleName)
14 identifier='terminalCharset'
15 argument (NullLiteralExpr)
16 argument (NameExpr)
17 name (SimpleName)
18 identifier='terminalCtrlCBehaviour'
19 name (SimpleName)
20 identifier='UnixTerminal'
21 parameters
22 parameter (Parameter)
23 isVarArgs='false'
24 name (SimpleName)
25 identifier='terminalInput'
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='InputStream'
29 parameter (Parameter)
30 isVarArgs='false'
31 name (SimpleName)
32 identifier='terminalOutput'
33 type (ClassOrInterfaceType)
34 name (SimpleName)
35 identifier='OutputStream'
36 parameter (Parameter)
37 isVarArgs='false'
38 name (SimpleName)
39 identifier='terminalCharset'
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='Charset'
43 parameter (Parameter)
44 isVarArgs='false'
45 name (SimpleName)
46 identifier='terminalCtrlCBehaviour'
47 type (ClassOrInterfaceType)
48 name (SimpleName)
49 identifier='CtrlCBehaviour'
50 thrownExceptions
51 thrownException (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='IOException'
54 annotations
55 annotation (SingleMemberAnnotationExpr)
56 memberValue (ArrayInitializerExpr)
57 values
58 value (StringLiteralExpr)
59 value='SameParameterValue'
60 value (StringLiteralExpr)
61 value='WeakerAccess'
62 name (Name)
63 identifier='SuppressWarnings'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
5 12
12 13
13 14
5 15
5 16
16 17
17 18
0 19
19 20
0 21
21 22
22 23
22 24
24 25
22 26
26 27
27 28
21 29
29 30
29 31
31 32
29 33
33 34
34 35
21 36
36 37
36 38
38 39
36 40
40 41
41 42
21 43
43 44
43 45
45 46
43 47
47 48
48 49
0 50
50 51
51 52
52 53
0 54
54 55
55 56
56 57
57 58
58 59
57 60
60 61
55 62
62 63

Creates a UnixTerminal using a specified input stream, output stream and character set, with a custom size querier instead of using the default one. This way you can override size detection (if you want to force the terminal to a fixed size, for example). You also choose how you want ctrl+c key strokes to be handled.
