153
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setX'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='outputVec'
10 arguments
11 argument (BinaryExpr)
12 operator='MINUS'
13 left (BinaryExpr)
14 operator='MULTIPLY'
15 left (ArrayAccessExpr)
16 index (IntegerLiteralExpr)
17 value='1'
18 name (NameExpr)
19 name (SimpleName)
20 identifier='points'
21 right (ArrayAccessExpr)
22 index (IntegerLiteralExpr)
23 value='2'
24 name (FieldAccessExpr)
25 name (SimpleName)
26 identifier='points'
27 scope (NameExpr)
28 name (SimpleName)
29 identifier='inputVec'
30 right (BinaryExpr)
31 operator='MULTIPLY'
32 left (ArrayAccessExpr)
33 index (IntegerLiteralExpr)
34 value='2'
35 name (NameExpr)
36 name (SimpleName)
37 identifier='points'
38 right (ArrayAccessExpr)
39 index (IntegerLiteralExpr)
40 value='1'
41 name (FieldAccessExpr)
42 name (SimpleName)
43 identifier='points'
44 scope (NameExpr)
45 name (SimpleName)
46 identifier='inputVec'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='setY'
51 scope (NameExpr)
52 name (SimpleName)
53 identifier='outputVec'
54 arguments
55 argument (BinaryExpr)
56 operator='MINUS'
57 left (BinaryExpr)
58 operator='MULTIPLY'
59 left (ArrayAccessExpr)
60 index (IntegerLiteralExpr)
61 value='2'
62 name (NameExpr)
63 name (SimpleName)
64 identifier='points'
65 right (ArrayAccessExpr)
66 index (IntegerLiteralExpr)
67 value='0'
68 name (FieldAccessExpr)
69 name (SimpleName)
70 identifier='points'
71 scope (NameExpr)
72 name (SimpleName)
73 identifier='inputVec'
74 right (BinaryExpr)
75 operator='MULTIPLY'
76 left (ArrayAccessExpr)
77 index (IntegerLiteralExpr)
78 value='0'
79 name (NameExpr)
80 name (SimpleName)
81 identifier='points'
82 right (ArrayAccessExpr)
83 index (IntegerLiteralExpr)
84 value='2'
85 name (FieldAccessExpr)
86 name (SimpleName)
87 identifier='points'
88 scope (NameExpr)
89 name (SimpleName)
90 identifier='inputVec'
91 statement (ExpressionStmt)
92 expression (MethodCallExpr)
93 name (SimpleName)
94 identifier='setZ'
95 scope (NameExpr)
96 name (SimpleName)
97 identifier='outputVec'
98 arguments
99 argument (BinaryExpr)
100 operator='MINUS'
101 left (BinaryExpr)
102 operator='MULTIPLY'
103 left (ArrayAccessExpr)
104 index (IntegerLiteralExpr)
105 value='0'
106 name (NameExpr)
107 name (SimpleName)
108 identifier='points'
109 right (ArrayAccessExpr)
110 index (IntegerLiteralExpr)
111 value='1'
112 name (FieldAccessExpr)
113 name (SimpleName)
114 identifier='points'
115 scope (NameExpr)
116 name (SimpleName)
117 identifier='inputVec'
118 right (BinaryExpr)
119 operator='MULTIPLY'
120 left (ArrayAccessExpr)
121 index (IntegerLiteralExpr)
122 value='1'
123 name (NameExpr)
124 name (SimpleName)
125 identifier='points'
126 right (ArrayAccessExpr)
127 index (IntegerLiteralExpr)
128 value='0'
129 name (FieldAccessExpr)
130 name (SimpleName)
131 identifier='points'
132 scope (NameExpr)
133 name (SimpleName)
134 identifier='inputVec'
135 type (VoidType)
136 name (SimpleName)
137 identifier='crossProduct'
138 parameters
139 parameter (Parameter)
140 isVarArgs='false'
141 name (SimpleName)
142 identifier='inputVec'
143 type (ClassOrInterfaceType)
144 name (SimpleName)
145 identifier='Vector3f'
146 parameter (Parameter)
147 isVarArgs='false'
148 name (SimpleName)
149 identifier='outputVec'
150 type (ClassOrInterfaceType)
151 name (SimpleName)
152 identifier='Vector3f'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
11 13
13 14
13 15
15 16
16 17
15 18
18 19
19 20
13 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
11 30
30 31
30 32
32 33
33 34
32 35
35 36
36 37
30 38
38 39
39 40
38 41
41 42
42 43
41 44
44 45
45 46
2 47
47 48
48 49
49 50
48 51
51 52
52 53
48 54
54 55
55 56
55 57
57 58
57 59
59 60
60 61
59 62
62 63
63 64
57 65
65 66
66 67
65 68
68 69
69 70
68 71
71 72
72 73
55 74
74 75
74 76
76 77
77 78
76 79
79 80
80 81
74 82
82 83
83 84
82 85
85 86
86 87
85 88
88 89
89 90
2 91
91 92
92 93
93 94
92 95
95 96
96 97
92 98
98 99
99 100
99 101
101 102
101 103
103 104
104 105
103 106
106 107
107 108
101 109
109 110
110 111
109 112
112 113
113 114
112 115
115 116
116 117
99 118
118 119
118 120
120 121
121 122
120 123
123 124
124 125
118 126
126 127
127 128
126 129
129 130
130 131
129 132
132 133
133 134
0 135
0 136
136 137
0 138
138 139
139 140
139 141
141 142
139 143
143 144
144 145
138 146
146 147
146 148
148 149
146 150
150 151
151 152

Get the cross product of this vector and another vector. The result will be stored in the output vector.
