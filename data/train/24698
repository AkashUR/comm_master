68
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ArrayList'
11 typeArguments
12 typeArgument (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='Node'
15 arguments
16 argument (FieldAccessExpr)
17 name (SimpleName)
18 identifier='list'
19 scope (ThisExpr)
20 name (SimpleName)
21 identifier='newList'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='ArrayList'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='add'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='newList'
32 arguments
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='obj'
36 statement (ExpressionStmt)
37 expression (AssignExpr)
38 operator='ASSIGN'
39 target (FieldAccessExpr)
40 name (SimpleName)
41 identifier='list'
42 scope (ThisExpr)
43 value (MethodCallExpr)
44 name (SimpleName)
45 identifier='unmodifiableList'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='Collections'
49 arguments
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='newList'
53 statement (ExpressionStmt)
54 expression (MethodCallExpr)
55 name (SimpleName)
56 identifier='incrementVersion'
57 type (VoidType)
58 name (SimpleName)
59 identifier='add'
60 parameters
61 parameter (Parameter)
62 isVarArgs='false'
63 name (SimpleName)
64 identifier='obj'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='Node'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
8 11
11 12
12 13
13 14
7 15
15 16
16 17
17 18
16 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
26 32
32 33
33 34
34 35
2 36
36 37
37 38
37 39
39 40
40 41
39 42
37 43
43 44
44 45
43 46
46 47
47 48
43 49
49 50
50 51
51 52
2 53
53 54
54 55
55 56
0 57
0 58
58 59
0 60
60 61
61 62
61 63
63 64
61 65
65 66
66 67

Adds obj to the list. Addition is done by making a copy of the existing list and then adding the obj to the new list and assigning the old list to the new unmodifiable list. This is to ensure that the iterator of the list doesn't get ConcurrentModificationException.
