97
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getSentenceInstance'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='BreakIterator'
13 arguments
14 argument (FieldAccessExpr)
15 name (SimpleName)
16 identifier='ROOT'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='Locale'
20 name (SimpleName)
21 identifier='expected'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='BreakIterator'
25 statement (ExpressionStmt)
26 expression (VariableDeclarationExpr)
27 variables
28 variable (VariableDeclarator)
29 initializer (ObjectCreationExpr)
30 type (ClassOrInterfaceType)
31 name (SimpleName)
32 identifier='WholeBreakIterator'
33 name (SimpleName)
34 identifier='actual'
35 type (ClassOrInterfaceType)
36 name (SimpleName)
37 identifier='BreakIterator'
38 statement (ExpressionStmt)
39 expression (MethodCallExpr)
40 name (SimpleName)
41 identifier='assertSameBreaks'
42 arguments
43 argument (StringLiteralExpr)
44 value='a'
45 argument (NameExpr)
46 name (SimpleName)
47 identifier='expected'
48 argument (NameExpr)
49 name (SimpleName)
50 identifier='actual'
51 statement (ExpressionStmt)
52 expression (MethodCallExpr)
53 name (SimpleName)
54 identifier='assertSameBreaks'
55 arguments
56 argument (StringLiteralExpr)
57 value='ab'
58 argument (NameExpr)
59 name (SimpleName)
60 identifier='expected'
61 argument (NameExpr)
62 name (SimpleName)
63 identifier='actual'
64 statement (ExpressionStmt)
65 expression (MethodCallExpr)
66 name (SimpleName)
67 identifier='assertSameBreaks'
68 arguments
69 argument (StringLiteralExpr)
70 value='abc'
71 argument (NameExpr)
72 name (SimpleName)
73 identifier='expected'
74 argument (NameExpr)
75 name (SimpleName)
76 identifier='actual'
77 statement (ExpressionStmt)
78 expression (MethodCallExpr)
79 name (SimpleName)
80 identifier='assertSameBreaks'
81 arguments
82 argument (StringLiteralExpr)
83 value=''
84 argument (NameExpr)
85 name (SimpleName)
86 identifier='expected'
87 argument (NameExpr)
88 name (SimpleName)
89 identifier='actual'
90 type (VoidType)
91 name (SimpleName)
92 identifier='testSingleSentences'
93 thrownExceptions
94 thrownException (ClassOrInterfaceType)
95 name (SimpleName)
96 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
14 17
17 18
18 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
28 29
29 30
30 31
31 32
28 33
33 34
28 35
35 36
36 37
2 38
38 39
39 40
40 41
39 42
42 43
43 44
42 45
45 46
46 47
42 48
48 49
49 50
2 51
51 52
52 53
53 54
52 55
55 56
56 57
55 58
58 59
59 60
55 61
61 62
62 63
2 64
64 65
65 66
66 67
65 68
68 69
69 70
68 71
71 72
72 73
68 74
74 75
75 76
2 77
77 78
78 79
79 80
78 81
81 82
82 83
81 84
84 85
85 86
81 87
87 88
88 89
0 90
0 91
91 92
0 93
93 94
94 95
95 96

For single sentences, we know WholeBreakIterator should break the same as a sentence iterator
