167
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getPublic'
10 scope (ObjectCreationExpr)
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='TestKeyPair'
14 arguments
15 argument (NameExpr)
16 name (SimpleName)
17 identifier='keyAlg'
18 name (SimpleName)
19 identifier='pk'
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='PublicKey'
23 statement (ExpressionStmt)
24 expression (VariableDeclarationExpr)
25 variables
26 variable (VariableDeclarator)
27 initializer (ObjectCreationExpr)
28 type (ClassOrInterfaceType)
29 name (SimpleName)
30 identifier='TrustAnchor'
31 arguments
32 argument (NameExpr)
33 name (SimpleName)
34 identifier='validCaNameRfc2253'
35 argument (NameExpr)
36 name (SimpleName)
37 identifier='pk'
38 argument (NullLiteralExpr)
39 name (SimpleName)
40 identifier='ta'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='TrustAnchor'
44 statement (ExpressionStmt)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='assertNull'
48 arguments
49 argument (StringLiteralExpr)
50 value='null1'
51 argument (MethodCallExpr)
52 name (SimpleName)
53 identifier='getTrustedCert'
54 scope (NameExpr)
55 name (SimpleName)
56 identifier='ta'
57 statement (ExpressionStmt)
58 expression (VariableDeclarationExpr)
59 variables
60 variable (VariableDeclarator)
61 initializer (ObjectCreationExpr)
62 type (ClassOrInterfaceType)
63 name (SimpleName)
64 identifier='X500Principal'
65 arguments
66 argument (NameExpr)
67 name (SimpleName)
68 identifier='validCaNameRfc2253'
69 name (SimpleName)
70 identifier='x500p'
71 type (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='X500Principal'
74 statement (ExpressionStmt)
75 expression (AssignExpr)
76 operator='ASSIGN'
77 target (NameExpr)
78 name (SimpleName)
79 identifier='ta'
80 value (ObjectCreationExpr)
81 type (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='TrustAnchor'
84 arguments
85 argument (NameExpr)
86 name (SimpleName)
87 identifier='x500p'
88 argument (NameExpr)
89 name (SimpleName)
90 identifier='pk'
91 argument (NullLiteralExpr)
92 statement (ExpressionStmt)
93 expression (MethodCallExpr)
94 name (SimpleName)
95 identifier='assertNull'
96 arguments
97 argument (StringLiteralExpr)
98 value='null2'
99 argument (MethodCallExpr)
100 name (SimpleName)
101 identifier='getTrustedCert'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='ta'
105 statement (ExpressionStmt)
106 expression (VariableDeclarationExpr)
107 variables
108 variable (VariableDeclarator)
109 initializer (ObjectCreationExpr)
110 type (ClassOrInterfaceType)
111 name (SimpleName)
112 identifier='TestX509Certificate'
113 scope (ClassOrInterfaceType)
114 name (SimpleName)
115 identifier='TestCertUtils'
116 arguments
117 argument (NameExpr)
118 name (SimpleName)
119 identifier='x500p'
120 argument (NameExpr)
121 name (SimpleName)
122 identifier='x500p'
123 name (SimpleName)
124 identifier='cert'
125 type (ClassOrInterfaceType)
126 name (SimpleName)
127 identifier='X509Certificate'
128 statement (ExpressionStmt)
129 expression (VariableDeclarationExpr)
130 variables
131 variable (VariableDeclarator)
132 initializer (ObjectCreationExpr)
133 type (ClassOrInterfaceType)
134 name (SimpleName)
135 identifier='TrustAnchor'
136 arguments
137 argument (NameExpr)
138 name (SimpleName)
139 identifier='cert'
140 argument (NullLiteralExpr)
141 name (SimpleName)
142 identifier='ta2'
143 type (ClassOrInterfaceType)
144 name (SimpleName)
145 identifier='TrustAnchor'
146 statement (ExpressionStmt)
147 expression (MethodCallExpr)
148 name (SimpleName)
149 identifier='assertSame'
150 arguments
151 argument (NameExpr)
152 name (SimpleName)
153 identifier='cert'
154 argument (MethodCallExpr)
155 name (SimpleName)
156 identifier='getTrustedCert'
157 scope (NameExpr)
158 name (SimpleName)
159 identifier='ta2'
160 type (VoidType)
161 name (SimpleName)
162 identifier='testGetTrustedCer02'
163 thrownExceptions
164 thrownException (ClassOrInterfaceType)
165 name (SimpleName)
166 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
12 13
10 14
14 15
15 16
16 17
6 18
18 19
6 20
20 21
21 22
2 23
23 24
24 25
25 26
26 27
27 28
28 29
29 30
27 31
31 32
32 33
33 34
31 35
35 36
36 37
31 38
26 39
39 40
26 41
41 42
42 43
2 44
44 45
45 46
46 47
45 48
48 49
49 50
48 51
51 52
52 53
51 54
54 55
55 56
2 57
57 58
58 59
59 60
60 61
61 62
62 63
63 64
61 65
65 66
66 67
67 68
60 69
69 70
60 71
71 72
72 73
2 74
74 75
75 76
75 77
77 78
78 79
75 80
80 81
81 82
82 83
80 84
84 85
85 86
86 87
84 88
88 89
89 90
84 91
2 92
92 93
93 94
94 95
93 96
96 97
97 98
96 99
99 100
100 101
99 102
102 103
103 104
2 105
105 106
106 107
107 108
108 109
109 110
110 111
111 112
110 113
113 114
114 115
109 116
116 117
117 118
118 119
116 120
120 121
121 122
108 123
123 124
108 125
125 126
126 127
2 128
128 129
129 130
130 131
131 132
132 133
133 134
134 135
132 136
136 137
137 138
138 139
136 140
131 141
141 142
131 143
143 144
144 145
2 146
146 147
147 148
148 149
147 150
150 151
151 152
152 153
150 154
154 155
155 156
154 157
157 158
158 159
0 160
0 161
161 162
0 163
163 164
164 165
165 166

Test #2 for <code>getCAName()</code> method<br> Assertion: returns ... <code>null</code> if <code>TrustAnchor</code> was not specified as trusted certificate<br> Test preconditions: test object is not specified as trusted certificate<br> Expected: <code>null</code> as return value<br>
