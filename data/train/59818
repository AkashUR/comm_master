390
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='TreeMap'
11 typeArguments
12 typeArgument (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='String'
15 typeArgument (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='String'
18 name (SimpleName)
19 identifier='map'
20 type (ClassOrInterfaceType)
21 name (SimpleName)
22 identifier='TreeMap'
23 typeArguments
24 typeArgument (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='String'
27 typeArgument (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='String'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='put'
34 scope (NameExpr)
35 name (SimpleName)
36 identifier='map'
37 arguments
38 argument (StringLiteralExpr)
39 value='A'
40 argument (StringLiteralExpr)
41 value='a'
42 statement (ExpressionStmt)
43 expression (MethodCallExpr)
44 name (SimpleName)
45 identifier='put'
46 scope (NameExpr)
47 name (SimpleName)
48 identifier='map'
49 arguments
50 argument (StringLiteralExpr)
51 value='B'
52 argument (StringLiteralExpr)
53 value='b'
54 statement (ExpressionStmt)
55 expression (MethodCallExpr)
56 name (SimpleName)
57 identifier='put'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='map'
61 arguments
62 argument (StringLiteralExpr)
63 value='C'
64 argument (StringLiteralExpr)
65 value='c'
66 statement (ExpressionStmt)
67 expression (MethodCallExpr)
68 name (SimpleName)
69 identifier='put'
70 scope (NameExpr)
71 name (SimpleName)
72 identifier='map'
73 arguments
74 argument (StringLiteralExpr)
75 value='D'
76 argument (StringLiteralExpr)
77 value='d'
78 statement (ExpressionStmt)
79 expression (VariableDeclarationExpr)
80 variables
81 variable (VariableDeclarator)
82 initializer (MethodCallExpr)
83 name (SimpleName)
84 identifier='subMap'
85 scope (NameExpr)
86 name (SimpleName)
87 identifier='map'
88 arguments
89 argument (StringLiteralExpr)
90 value='A'
91 argument (BooleanLiteralExpr)
92 value='true'
93 argument (StringLiteralExpr)
94 value='C'
95 argument (BooleanLiteralExpr)
96 value='true'
97 name (SimpleName)
98 identifier='subMap'
99 type (ClassOrInterfaceType)
100 name (SimpleName)
101 identifier='NavigableMap'
102 typeArguments
103 typeArgument (ClassOrInterfaceType)
104 name (SimpleName)
105 identifier='String'
106 typeArgument (ClassOrInterfaceType)
107 name (SimpleName)
108 identifier='String'
109 statement (ExpressionStmt)
110 expression (VariableDeclarationExpr)
111 variables
112 variable (VariableDeclarator)
113 initializer (MethodCallExpr)
114 name (SimpleName)
115 identifier='iterator'
116 scope (MethodCallExpr)
117 name (SimpleName)
118 identifier='entrySet'
119 scope (NameExpr)
120 name (SimpleName)
121 identifier='subMap'
122 name (SimpleName)
123 identifier='iterator'
124 type (ClassOrInterfaceType)
125 name (SimpleName)
126 identifier='Iterator'
127 typeArguments
128 typeArgument (ClassOrInterfaceType)
129 name (SimpleName)
130 identifier='Entry'
131 typeArguments
132 typeArgument (ClassOrInterfaceType)
133 name (SimpleName)
134 identifier='String'
135 typeArgument (ClassOrInterfaceType)
136 name (SimpleName)
137 identifier='String'
138 statement (ExpressionStmt)
139 expression (VariableDeclarationExpr)
140 variables
141 variable (VariableDeclarator)
142 initializer (MethodCallExpr)
143 name (SimpleName)
144 identifier='next'
145 scope (NameExpr)
146 name (SimpleName)
147 identifier='iterator'
148 name (SimpleName)
149 identifier='entryA'
150 type (ClassOrInterfaceType)
151 name (SimpleName)
152 identifier='Entry'
153 typeArguments
154 typeArgument (ClassOrInterfaceType)
155 name (SimpleName)
156 identifier='String'
157 typeArgument (ClassOrInterfaceType)
158 name (SimpleName)
159 identifier='String'
160 statement (ExpressionStmt)
161 expression (MethodCallExpr)
162 name (SimpleName)
163 identifier='assertEquals'
164 arguments
165 argument (StringLiteralExpr)
166 value='a'
167 argument (MethodCallExpr)
168 name (SimpleName)
169 identifier='setValue'
170 scope (NameExpr)
171 name (SimpleName)
172 identifier='entryA'
173 arguments
174 argument (StringLiteralExpr)
175 value='x'
176 statement (ExpressionStmt)
177 expression (MethodCallExpr)
178 name (SimpleName)
179 identifier='assertEquals'
180 arguments
181 argument (StringLiteralExpr)
182 value='x'
183 argument (MethodCallExpr)
184 name (SimpleName)
185 identifier='getValue'
186 scope (NameExpr)
187 name (SimpleName)
188 identifier='entryA'
189 statement (ExpressionStmt)
190 expression (MethodCallExpr)
191 name (SimpleName)
192 identifier='assertEquals'
193 arguments
194 argument (StringLiteralExpr)
195 value='x'
196 argument (MethodCallExpr)
197 name (SimpleName)
198 identifier='get'
199 scope (NameExpr)
200 name (SimpleName)
201 identifier='subMap'
202 arguments
203 argument (StringLiteralExpr)
204 value='A'
205 statement (ExpressionStmt)
206 expression (MethodCallExpr)
207 name (SimpleName)
208 identifier='assertEquals'
209 arguments
210 argument (StringLiteralExpr)
211 value='x'
212 argument (MethodCallExpr)
213 name (SimpleName)
214 identifier='get'
215 scope (NameExpr)
216 name (SimpleName)
217 identifier='map'
218 arguments
219 argument (StringLiteralExpr)
220 value='A'
221 statement (ExpressionStmt)
222 expression (VariableDeclarationExpr)
223 variables
224 variable (VariableDeclarator)
225 initializer (MethodCallExpr)
226 name (SimpleName)
227 identifier='next'
228 scope (NameExpr)
229 name (SimpleName)
230 identifier='iterator'
231 name (SimpleName)
232 identifier='entryB'
233 type (ClassOrInterfaceType)
234 name (SimpleName)
235 identifier='Entry'
236 typeArguments
237 typeArgument (ClassOrInterfaceType)
238 name (SimpleName)
239 identifier='String'
240 typeArgument (ClassOrInterfaceType)
241 name (SimpleName)
242 identifier='String'
243 statement (ExpressionStmt)
244 expression (MethodCallExpr)
245 name (SimpleName)
246 identifier='assertEquals'
247 arguments
248 argument (StringLiteralExpr)
249 value='b'
250 argument (MethodCallExpr)
251 name (SimpleName)
252 identifier='setValue'
253 scope (NameExpr)
254 name (SimpleName)
255 identifier='entryB'
256 arguments
257 argument (StringLiteralExpr)
258 value='y'
259 statement (ExpressionStmt)
260 expression (VariableDeclarationExpr)
261 variables
262 variable (VariableDeclarator)
263 initializer (MethodCallExpr)
264 name (SimpleName)
265 identifier='next'
266 scope (NameExpr)
267 name (SimpleName)
268 identifier='iterator'
269 name (SimpleName)
270 identifier='entryC'
271 type (ClassOrInterfaceType)
272 name (SimpleName)
273 identifier='Entry'
274 typeArguments
275 typeArgument (ClassOrInterfaceType)
276 name (SimpleName)
277 identifier='String'
278 typeArgument (ClassOrInterfaceType)
279 name (SimpleName)
280 identifier='String'
281 statement (ExpressionStmt)
282 expression (MethodCallExpr)
283 name (SimpleName)
284 identifier='assertEquals'
285 arguments
286 argument (StringLiteralExpr)
287 value='c'
288 argument (MethodCallExpr)
289 name (SimpleName)
290 identifier='setValue'
291 scope (NameExpr)
292 name (SimpleName)
293 identifier='entryC'
294 arguments
295 argument (StringLiteralExpr)
296 value='z'
297 statement (ExpressionStmt)
298 expression (MethodCallExpr)
299 name (SimpleName)
300 identifier='assertEquals'
301 arguments
302 argument (StringLiteralExpr)
303 value='y'
304 argument (MethodCallExpr)
305 name (SimpleName)
306 identifier='getValue'
307 scope (NameExpr)
308 name (SimpleName)
309 identifier='entryB'
310 statement (ExpressionStmt)
311 expression (MethodCallExpr)
312 name (SimpleName)
313 identifier='assertEquals'
314 arguments
315 argument (StringLiteralExpr)
316 value='y'
317 argument (MethodCallExpr)
318 name (SimpleName)
319 identifier='get'
320 scope (NameExpr)
321 name (SimpleName)
322 identifier='subMap'
323 arguments
324 argument (StringLiteralExpr)
325 value='B'
326 statement (ExpressionStmt)
327 expression (MethodCallExpr)
328 name (SimpleName)
329 identifier='assertEquals'
330 arguments
331 argument (StringLiteralExpr)
332 value='y'
333 argument (MethodCallExpr)
334 name (SimpleName)
335 identifier='get'
336 scope (NameExpr)
337 name (SimpleName)
338 identifier='map'
339 arguments
340 argument (StringLiteralExpr)
341 value='B'
342 statement (ExpressionStmt)
343 expression (MethodCallExpr)
344 name (SimpleName)
345 identifier='assertEquals'
346 arguments
347 argument (StringLiteralExpr)
348 value='z'
349 argument (MethodCallExpr)
350 name (SimpleName)
351 identifier='getValue'
352 scope (NameExpr)
353 name (SimpleName)
354 identifier='entryC'
355 statement (ExpressionStmt)
356 expression (MethodCallExpr)
357 name (SimpleName)
358 identifier='assertEquals'
359 arguments
360 argument (StringLiteralExpr)
361 value='z'
362 argument (MethodCallExpr)
363 name (SimpleName)
364 identifier='get'
365 scope (NameExpr)
366 name (SimpleName)
367 identifier='subMap'
368 arguments
369 argument (StringLiteralExpr)
370 value='C'
371 statement (ExpressionStmt)
372 expression (MethodCallExpr)
373 name (SimpleName)
374 identifier='assertEquals'
375 arguments
376 argument (StringLiteralExpr)
377 value='z'
378 argument (MethodCallExpr)
379 name (SimpleName)
380 identifier='get'
381 scope (NameExpr)
382 name (SimpleName)
383 identifier='map'
384 arguments
385 argument (StringLiteralExpr)
386 value='C'
387 type (VoidType)
388 name (SimpleName)
389 identifier='testSubMapEntrySetSetValue'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
8 11
11 12
12 13
13 14
11 15
15 16
16 17
6 18
18 19
6 20
20 21
21 22
20 23
23 24
24 25
25 26
23 27
27 28
28 29
2 30
30 31
31 32
32 33
31 34
34 35
35 36
31 37
37 38
38 39
37 40
40 41
2 42
42 43
43 44
44 45
43 46
46 47
47 48
43 49
49 50
50 51
49 52
52 53
2 54
54 55
55 56
56 57
55 58
58 59
59 60
55 61
61 62
62 63
61 64
64 65
2 66
66 67
67 68
68 69
67 70
70 71
71 72
67 73
73 74
74 75
73 76
76 77
2 78
78 79
79 80
80 81
81 82
82 83
83 84
82 85
85 86
86 87
82 88
88 89
89 90
88 91
91 92
88 93
93 94
88 95
95 96
81 97
97 98
81 99
99 100
100 101
99 102
102 103
103 104
104 105
102 106
106 107
107 108
2 109
109 110
110 111
111 112
112 113
113 114
114 115
113 116
116 117
117 118
116 119
119 120
120 121
112 122
122 123
112 124
124 125
125 126
124 127
127 128
128 129
129 130
128 131
131 132
132 133
133 134
131 135
135 136
136 137
2 138
138 139
139 140
140 141
141 142
142 143
143 144
142 145
145 146
146 147
141 148
148 149
141 150
150 151
151 152
150 153
153 154
154 155
155 156
153 157
157 158
158 159
2 160
160 161
161 162
162 163
161 164
164 165
165 166
164 167
167 168
168 169
167 170
170 171
171 172
167 173
173 174
174 175
2 176
176 177
177 178
178 179
177 180
180 181
181 182
180 183
183 184
184 185
183 186
186 187
187 188
2 189
189 190
190 191
191 192
190 193
193 194
194 195
193 196
196 197
197 198
196 199
199 200
200 201
196 202
202 203
203 204
2 205
205 206
206 207
207 208
206 209
209 210
210 211
209 212
212 213
213 214
212 215
215 216
216 217
212 218
218 219
219 220
2 221
221 222
222 223
223 224
224 225
225 226
226 227
225 228
228 229
229 230
224 231
231 232
224 233
233 234
234 235
233 236
236 237
237 238
238 239
236 240
240 241
241 242
2 243
243 244
244 245
245 246
244 247
247 248
248 249
247 250
250 251
251 252
250 253
253 254
254 255
250 256
256 257
257 258
2 259
259 260
260 261
261 262
262 263
263 264
264 265
263 266
266 267
267 268
262 269
269 270
262 271
271 272
272 273
271 274
274 275
275 276
276 277
274 278
278 279
279 280
2 281
281 282
282 283
283 284
282 285
285 286
286 287
285 288
288 289
289 290
288 291
291 292
292 293
288 294
294 295
295 296
2 297
297 298
298 299
299 300
298 301
301 302
302 303
301 304
304 305
305 306
304 307
307 308
308 309
2 310
310 311
311 312
312 313
311 314
314 315
315 316
314 317
317 318
318 319
317 320
320 321
321 322
317 323
323 324
324 325
2 326
326 327
327 328
328 329
327 330
330 331
331 332
330 333
333 334
334 335
333 336
336 337
337 338
333 339
339 340
340 341
2 342
342 343
343 344
344 345
343 346
346 347
347 348
346 349
349 350
350 351
349 352
352 353
353 354
2 355
355 356
356 357
357 358
356 359
359 360
360 361
359 362
362 363
363 364
362 365
365 366
366 367
362 368
368 369
369 370
2 371
371 372
372 373
373 374
372 375
375 376
376 377
375 378
378 379
379 380
378 381
381 382
382 383
378 384
384 385
385 386
0 387
0 388
388 389

Test that the entrySet() method of a sub map produces correctly mutable entries that propagate changes to the original map.
