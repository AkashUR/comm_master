73
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='putConstraint'
7 arguments
8 argument (NameExpr)
9 name (SimpleName)
10 identifier='e1'
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='c1'
14 argument (MethodCallExpr)
15 name (SimpleName)
16 identifier='sum'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='Spring'
20 arguments
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='s'
24 argument (MethodCallExpr)
25 name (SimpleName)
26 identifier='getConstraint'
27 arguments
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='e2'
31 argument (NameExpr)
32 name (SimpleName)
33 identifier='c2'
34 type (VoidType)
35 name (SimpleName)
36 identifier='putConstraint'
37 parameters
38 parameter (Parameter)
39 isVarArgs='false'
40 name (SimpleName)
41 identifier='e1'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='String'
45 parameter (Parameter)
46 isVarArgs='false'
47 name (SimpleName)
48 identifier='c1'
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='Component'
52 parameter (Parameter)
53 isVarArgs='false'
54 name (SimpleName)
55 identifier='s'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='Spring'
59 parameter (Parameter)
60 isVarArgs='false'
61 name (SimpleName)
62 identifier='e2'
63 type (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='String'
66 parameter (Parameter)
67 isVarArgs='false'
68 name (SimpleName)
69 identifier='c2'
70 type (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='Component'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
9 10
7 11
11 12
12 13
7 14
14 15
15 16
14 17
17 18
18 19
14 20
20 21
21 22
22 23
20 24
24 25
25 26
24 27
27 28
28 29
29 30
27 31
31 32
32 33
0 34
0 35
35 36
0 37
37 38
38 39
38 40
40 41
38 42
42 43
43 44
37 45
45 46
45 47
47 48
45 49
49 50
50 51
37 52
52 53
52 54
54 55
52 56
56 57
57 58
37 59
59 60
59 61
61 62
59 63
63 64
64 65
37 66
66 67
66 68
68 69
66 70
70 71
71 72

Links edge <code>e1</code> of component <code>c1</code> to edge <code>e2</code> of component <code>c2</code>. As edge <code>(e2, c2)</code> changes value, edge <code>(e1, c1)</code> will be calculated by taking the (spring) sum of <code>(e2, c2)</code> and <code>s</code>. Each edge must have one of the following values: <code>SpringLayout.NORTH</code>, <code>SpringLayout.SOUTH</code>, <code>SpringLayout.EAST</code>, <code>SpringLayout.WEST</code>, <code>SpringLayout.VERTICAL_CENTER</code>, <code>SpringLayout.HORIZONTAL_CENTER</code> or <code>SpringLayout.BASELINE</code>. <p>
