262
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (ArrayAccessExpr)
7 index (BinaryExpr)
8 operator='PLUS'
9 left (NameExpr)
10 name (SimpleName)
11 identifier='off'
12 right (IntegerLiteralExpr)
13 value='0'
14 name (NameExpr)
15 name (SimpleName)
16 identifier='buf'
17 value (CastExpr)
18 expression (EnclosedExpr)
19 inner (BinaryExpr)
20 operator='BINARY_AND'
21 left (NameExpr)
22 name (SimpleName)
23 identifier='n'
24 right (IntegerLiteralExpr)
25 value='0xff'
26 type (PrimitiveType)
27 type='BYTE'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (ArrayAccessExpr)
32 index (BinaryExpr)
33 operator='PLUS'
34 left (NameExpr)
35 name (SimpleName)
36 identifier='off'
37 right (IntegerLiteralExpr)
38 value='1'
39 name (NameExpr)
40 name (SimpleName)
41 identifier='buf'
42 value (CastExpr)
43 expression (EnclosedExpr)
44 inner (BinaryExpr)
45 operator='BINARY_AND'
46 left (EnclosedExpr)
47 inner (BinaryExpr)
48 operator='SIGNED_RIGHT_SHIFT'
49 left (NameExpr)
50 name (SimpleName)
51 identifier='n'
52 right (IntegerLiteralExpr)
53 value='8'
54 right (IntegerLiteralExpr)
55 value='0xff'
56 type (PrimitiveType)
57 type='BYTE'
58 statement (ExpressionStmt)
59 expression (AssignExpr)
60 operator='ASSIGN'
61 target (ArrayAccessExpr)
62 index (BinaryExpr)
63 operator='PLUS'
64 left (NameExpr)
65 name (SimpleName)
66 identifier='off'
67 right (IntegerLiteralExpr)
68 value='2'
69 name (NameExpr)
70 name (SimpleName)
71 identifier='buf'
72 value (CastExpr)
73 expression (EnclosedExpr)
74 inner (BinaryExpr)
75 operator='BINARY_AND'
76 left (EnclosedExpr)
77 inner (BinaryExpr)
78 operator='SIGNED_RIGHT_SHIFT'
79 left (NameExpr)
80 name (SimpleName)
81 identifier='n'
82 right (IntegerLiteralExpr)
83 value='16'
84 right (IntegerLiteralExpr)
85 value='0xff'
86 type (PrimitiveType)
87 type='BYTE'
88 statement (ExpressionStmt)
89 expression (AssignExpr)
90 operator='ASSIGN'
91 target (ArrayAccessExpr)
92 index (BinaryExpr)
93 operator='PLUS'
94 left (NameExpr)
95 name (SimpleName)
96 identifier='off'
97 right (IntegerLiteralExpr)
98 value='3'
99 name (NameExpr)
100 name (SimpleName)
101 identifier='buf'
102 value (CastExpr)
103 expression (EnclosedExpr)
104 inner (BinaryExpr)
105 operator='BINARY_AND'
106 left (EnclosedExpr)
107 inner (BinaryExpr)
108 operator='SIGNED_RIGHT_SHIFT'
109 left (NameExpr)
110 name (SimpleName)
111 identifier='n'
112 right (IntegerLiteralExpr)
113 value='24'
114 right (IntegerLiteralExpr)
115 value='0xff'
116 type (PrimitiveType)
117 type='BYTE'
118 statement (ExpressionStmt)
119 expression (AssignExpr)
120 operator='ASSIGN'
121 target (ArrayAccessExpr)
122 index (BinaryExpr)
123 operator='PLUS'
124 left (NameExpr)
125 name (SimpleName)
126 identifier='off'
127 right (IntegerLiteralExpr)
128 value='4'
129 name (NameExpr)
130 name (SimpleName)
131 identifier='buf'
132 value (CastExpr)
133 expression (EnclosedExpr)
134 inner (BinaryExpr)
135 operator='BINARY_AND'
136 left (EnclosedExpr)
137 inner (BinaryExpr)
138 operator='SIGNED_RIGHT_SHIFT'
139 left (NameExpr)
140 name (SimpleName)
141 identifier='n'
142 right (IntegerLiteralExpr)
143 value='32'
144 right (IntegerLiteralExpr)
145 value='0xff'
146 type (PrimitiveType)
147 type='BYTE'
148 statement (ExpressionStmt)
149 expression (AssignExpr)
150 operator='ASSIGN'
151 target (ArrayAccessExpr)
152 index (BinaryExpr)
153 operator='PLUS'
154 left (NameExpr)
155 name (SimpleName)
156 identifier='off'
157 right (IntegerLiteralExpr)
158 value='5'
159 name (NameExpr)
160 name (SimpleName)
161 identifier='buf'
162 value (CastExpr)
163 expression (EnclosedExpr)
164 inner (BinaryExpr)
165 operator='BINARY_AND'
166 left (EnclosedExpr)
167 inner (BinaryExpr)
168 operator='SIGNED_RIGHT_SHIFT'
169 left (NameExpr)
170 name (SimpleName)
171 identifier='n'
172 right (IntegerLiteralExpr)
173 value='40'
174 right (IntegerLiteralExpr)
175 value='0xff'
176 type (PrimitiveType)
177 type='BYTE'
178 statement (ExpressionStmt)
179 expression (AssignExpr)
180 operator='ASSIGN'
181 target (ArrayAccessExpr)
182 index (BinaryExpr)
183 operator='PLUS'
184 left (NameExpr)
185 name (SimpleName)
186 identifier='off'
187 right (IntegerLiteralExpr)
188 value='6'
189 name (NameExpr)
190 name (SimpleName)
191 identifier='buf'
192 value (CastExpr)
193 expression (EnclosedExpr)
194 inner (BinaryExpr)
195 operator='BINARY_AND'
196 left (EnclosedExpr)
197 inner (BinaryExpr)
198 operator='SIGNED_RIGHT_SHIFT'
199 left (NameExpr)
200 name (SimpleName)
201 identifier='n'
202 right (IntegerLiteralExpr)
203 value='48'
204 right (IntegerLiteralExpr)
205 value='0xff'
206 type (PrimitiveType)
207 type='BYTE'
208 statement (ExpressionStmt)
209 expression (AssignExpr)
210 operator='ASSIGN'
211 target (ArrayAccessExpr)
212 index (BinaryExpr)
213 operator='PLUS'
214 left (NameExpr)
215 name (SimpleName)
216 identifier='off'
217 right (IntegerLiteralExpr)
218 value='7'
219 name (NameExpr)
220 name (SimpleName)
221 identifier='buf'
222 value (CastExpr)
223 expression (EnclosedExpr)
224 inner (BinaryExpr)
225 operator='BINARY_AND'
226 left (EnclosedExpr)
227 inner (BinaryExpr)
228 operator='SIGNED_RIGHT_SHIFT'
229 left (NameExpr)
230 name (SimpleName)
231 identifier='n'
232 right (IntegerLiteralExpr)
233 value='56'
234 right (IntegerLiteralExpr)
235 value='0xff'
236 type (PrimitiveType)
237 type='BYTE'
238 type (VoidType)
239 name (SimpleName)
240 identifier='fixedLongToBytes'
241 parameters
242 parameter (Parameter)
243 isVarArgs='false'
244 name (SimpleName)
245 identifier='n'
246 type (PrimitiveType)
247 type='LONG'
248 parameter (Parameter)
249 isVarArgs='false'
250 name (SimpleName)
251 identifier='buf'
252 type (ArrayType)
253 origin='TYPE'
254 componentType (PrimitiveType)
255 type='BYTE'
256 parameter (Parameter)
257 isVarArgs='false'
258 name (SimpleName)
259 identifier='off'
260 type (PrimitiveType)
261 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
7 9
9 10
10 11
7 12
12 13
6 14
14 15
15 16
4 17
17 18
18 19
19 20
19 21
21 22
22 23
19 24
24 25
17 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
32 34
34 35
35 36
32 37
37 38
31 39
39 40
40 41
29 42
42 43
43 44
44 45
44 46
46 47
47 48
47 49
49 50
50 51
47 52
52 53
44 54
54 55
42 56
56 57
2 58
58 59
59 60
59 61
61 62
62 63
62 64
64 65
65 66
62 67
67 68
61 69
69 70
70 71
59 72
72 73
73 74
74 75
74 76
76 77
77 78
77 79
79 80
80 81
77 82
82 83
74 84
84 85
72 86
86 87
2 88
88 89
89 90
89 91
91 92
92 93
92 94
94 95
95 96
92 97
97 98
91 99
99 100
100 101
89 102
102 103
103 104
104 105
104 106
106 107
107 108
107 109
109 110
110 111
107 112
112 113
104 114
114 115
102 116
116 117
2 118
118 119
119 120
119 121
121 122
122 123
122 124
124 125
125 126
122 127
127 128
121 129
129 130
130 131
119 132
132 133
133 134
134 135
134 136
136 137
137 138
137 139
139 140
140 141
137 142
142 143
134 144
144 145
132 146
146 147
2 148
148 149
149 150
149 151
151 152
152 153
152 154
154 155
155 156
152 157
157 158
151 159
159 160
160 161
149 162
162 163
163 164
164 165
164 166
166 167
167 168
167 169
169 170
170 171
167 172
172 173
164 174
174 175
162 176
176 177
2 178
178 179
179 180
179 181
181 182
182 183
182 184
184 185
185 186
182 187
187 188
181 189
189 190
190 191
179 192
192 193
193 194
194 195
194 196
196 197
197 198
197 199
199 200
200 201
197 202
202 203
194 204
204 205
192 206
206 207
2 208
208 209
209 210
209 211
211 212
212 213
212 214
214 215
215 216
212 217
217 218
211 219
219 220
220 221
209 222
222 223
223 224
224 225
224 226
226 227
227 228
227 229
229 230
230 231
227 232
232 233
224 234
234 235
222 236
236 237
0 238
0 239
239 240
0 241
241 242
242 243
242 244
244 245
242 246
246 247
241 248
248 249
248 250
250 251
248 252
252 253
252 254
254 255
241 256
256 257
256 258
258 259
256 260
260 261

Convert a long into little-endian bytes in buf starting at off and going until off+7.
