63
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 statement (ExpressionStmt)
6 expression (AssignExpr)
7 operator='ASSIGN'
8 target (NameExpr)
9 name (SimpleName)
10 identifier='opPos'
11 value (MethodCallExpr)
12 name (SimpleName)
13 identifier='getFirstChildPos'
14 scope (NameExpr)
15 name (SimpleName)
16 identifier='OpMap'
17 arguments
18 argument (NameExpr)
19 name (SimpleName)
20 identifier='opPos'
21 statement (ExpressionStmt)
22 expression (MethodCallExpr)
23 name (SimpleName)
24 identifier='loadLocationPaths'
25 arguments
26 argument (NameExpr)
27 name (SimpleName)
28 identifier='compiler'
29 argument (NameExpr)
30 name (SimpleName)
31 identifier='opPos'
32 argument (IntegerLiteralExpr)
33 value='0'
34 name (SimpleName)
35 identifier='UnionPathIterator'
36 parameters
37 parameter (Parameter)
38 isVarArgs='false'
39 name (SimpleName)
40 identifier='compiler'
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='Compiler'
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='opPos'
48 type (PrimitiveType)
49 type='INT'
50 thrownExceptions
51 thrownException (ClassOrInterfaceType)
52 name (SimpleName)
53 identifier='TransformerException'
54 scope (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='transform'
57 scope (ClassOrInterfaceType)
58 name (SimpleName)
59 identifier='xml'
60 scope (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='javax'
0 1
1 2
2 3
3 4
2 5
5 6
6 7
6 8
8 9
9 10
6 11
11 12
12 13
11 14
14 15
15 16
11 17
17 18
18 19
19 20
2 21
21 22
22 23
23 24
22 25
25 26
26 27
27 28
25 29
29 30
30 31
25 32
32 33
0 34
34 35
0 36
36 37
37 38
37 39
39 40
37 41
41 42
42 43
36 44
44 45
44 46
46 47
44 48
48 49
0 50
50 51
51 52
52 53
51 54
54 55
55 56
54 57
57 58
58 59
57 60
60 61
61 62

Create a UnionPathIterator object, including creation  of location path iterators from the opcode list, and call back  into the Compiler to create predicate expressions.
