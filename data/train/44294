66
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (CastExpr)
8 expression (NameExpr)
9 name (SimpleName)
10 identifier='source'
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='SourcePlugin'
14 name (SimpleName)
15 identifier='analyzer'
16 type (ClassOrInterfaceType)
17 name (SimpleName)
18 identifier='SourcePlugin'
19 statement (ExpressionStmt)
20 expression (MethodCallExpr)
21 name (SimpleName)
22 identifier='convertAnother'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='context'
26 arguments
27 argument (MethodCallExpr)
28 name (SimpleName)
29 identifier='getPluginId'
30 scope (NameExpr)
31 name (SimpleName)
32 identifier='registry'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='analyzer'
37 type (VoidType)
38 name (SimpleName)
39 identifier='marshal'
40 parameters
41 parameter (Parameter)
42 isVarArgs='false'
43 name (SimpleName)
44 identifier='source'
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='Object'
48 parameter (Parameter)
49 isVarArgs='false'
50 name (SimpleName)
51 identifier='writer'
52 type (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='HierarchicalStreamWriter'
55 parameter (Parameter)
56 isVarArgs='false'
57 name (SimpleName)
58 identifier='context'
59 type (ClassOrInterfaceType)
60 name (SimpleName)
61 identifier='MarshallingContext'
62 annotations
63 annotation (MarkerAnnotationExpr)
64 name (Name)
65 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
7 11
11 12
12 13
6 14
14 15
6 16
16 17
17 18
2 19
19 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
27 30
30 31
31 32
27 33
33 34
34 35
35 36
0 37
0 38
38 39
0 40
40 41
41 42
41 43
43 44
41 45
45 46
46 47
40 48
48 49
48 50
50 51
48 52
52 53
53 54
40 55
55 56
55 57
57 58
55 59
59 60
60 61
0 62
62 63
63 64
64 65

Simply output the id for the plugin.
