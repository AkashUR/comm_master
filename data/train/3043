115
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='createTestTrack'
10 name (SimpleName)
11 identifier='track'
12 type (ClassOrInterfaceType)
13 name (SimpleName)
14 identifier='AudioTrack'
15 statement (ExpressionStmt)
16 expression (VariableDeclarationExpr)
17 variables
18 variable (VariableDeclarator)
19 initializer (MethodCallExpr)
20 name (SimpleName)
21 identifier='getAudioSessionId'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='track'
25 name (SimpleName)
26 identifier='session'
27 type (PrimitiveType)
28 type='INT'
29 statement (ExpressionStmt)
30 expression (VariableDeclarationExpr)
31 variables
32 variable (VariableDeclarator)
33 initializer (MethodCallExpr)
34 name (SimpleName)
35 identifier='findAudioSessionInfo'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='session'
40 name (SimpleName)
41 identifier='info'
42 type (ClassOrInterfaceType)
43 name (SimpleName)
44 identifier='AudioSessionInfo'
45 statement (ExpressionStmt)
46 expression (MethodCallExpr)
47 name (SimpleName)
48 identifier='assertNotNull'
49 arguments
50 argument (NameExpr)
51 name (SimpleName)
52 identifier='info'
53 statement (ExpressionStmt)
54 expression (MethodCallExpr)
55 name (SimpleName)
56 identifier='assertEquals'
57 arguments
58 argument (NameExpr)
59 name (SimpleName)
60 identifier='session'
61 argument (MethodCallExpr)
62 name (SimpleName)
63 identifier='getSessionId'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='info'
67 statement (ExpressionStmt)
68 expression (MethodCallExpr)
69 name (SimpleName)
70 identifier='assertEquals'
71 arguments
72 argument (IntegerLiteralExpr)
73 value='3'
74 argument (MethodCallExpr)
75 name (SimpleName)
76 identifier='getChannelMask'
77 scope (NameExpr)
78 name (SimpleName)
79 identifier='info'
80 statement (ExpressionStmt)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='release'
84 scope (NameExpr)
85 name (SimpleName)
86 identifier='track'
87 statement (ExpressionStmt)
88 expression (AssignExpr)
89 operator='ASSIGN'
90 target (NameExpr)
91 name (SimpleName)
92 identifier='info'
93 value (MethodCallExpr)
94 name (SimpleName)
95 identifier='findAudioSessionInfo'
96 arguments
97 argument (NameExpr)
98 name (SimpleName)
99 identifier='session'
100 statement (ExpressionStmt)
101 expression (MethodCallExpr)
102 name (SimpleName)
103 identifier='assertNull'
104 arguments
105 argument (NameExpr)
106 name (SimpleName)
107 identifier='info'
108 type (VoidType)
109 name (SimpleName)
110 identifier='testSessionList'
111 annotations
112 annotation (MarkerAnnotationExpr)
113 name (Name)
114 identifier='SmallTest'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
6 10
10 11
6 12
12 13
13 14
2 15
15 16
16 17
17 18
18 19
19 20
20 21
19 22
22 23
23 24
18 25
25 26
18 27
27 28
2 29
29 30
30 31
31 32
32 33
33 34
34 35
33 36
36 37
37 38
38 39
32 40
40 41
32 42
42 43
43 44
2 45
45 46
46 47
47 48
46 49
49 50
50 51
51 52
2 53
53 54
54 55
55 56
54 57
57 58
58 59
59 60
57 61
61 62
62 63
61 64
64 65
65 66
2 67
67 68
68 69
69 70
68 71
71 72
72 73
71 74
74 75
75 76
74 77
77 78
78 79
2 80
80 81
81 82
82 83
81 84
84 85
85 86
2 87
87 88
88 89
88 90
90 91
91 92
88 93
93 94
94 95
93 96
96 97
97 98
98 99
2 100
100 101
101 102
102 103
101 104
104 105
105 106
106 107
0 108
0 109
109 110
0 111
111 112
112 113
113 114

EXPECT: listAudioSessions should be populated when a new stream is created, and it's session ID should match what AudioTrack says it is. We simply create an audio track, and query the policy for sessions.
