565
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (FieldAccessExpr)
8 name (SimpleName)
9 identifier='FIBONACCI_BACKOFF'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='ConnectionStrategies'
13 name (SimpleName)
14 identifier='strategy'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='ConnectionStrategy'
18 statement (ExpressionStmt)
19 expression (VariableDeclarationExpr)
20 variables
21 variable (VariableDeclarator)
22 name (SimpleName)
23 identifier='attempt'
24 type (ClassOrInterfaceType)
25 name (SimpleName)
26 identifier='Attempt'
27 scope (ClassOrInterfaceType)
28 name (SimpleName)
29 identifier='ConnectionStrategy'
30 statement (ExpressionStmt)
31 expression (AssignExpr)
32 operator='ASSIGN'
33 target (NameExpr)
34 name (SimpleName)
35 identifier='attempt'
36 value (MethodCallExpr)
37 name (SimpleName)
38 identifier='mock'
39 arguments
40 argument (ClassExpr)
41 type (ClassOrInterfaceType)
42 name (SimpleName)
43 identifier='Attempt'
44 scope (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='ConnectionStrategy'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='thenReturn'
51 scope (MethodCallExpr)
52 name (SimpleName)
53 identifier='when'
54 arguments
55 argument (MethodCallExpr)
56 name (SimpleName)
57 identifier='attempt'
58 scope (NameExpr)
59 name (SimpleName)
60 identifier='attempt'
61 arguments
62 argument (IntegerLiteralExpr)
63 value='1'
64 statement (ExpressionStmt)
65 expression (MethodCallExpr)
66 name (SimpleName)
67 identifier='attemptFailed'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='strategy'
71 arguments
72 argument (NameExpr)
73 name (SimpleName)
74 identifier='attempt'
75 statement (ExpressionStmt)
76 expression (MethodCallExpr)
77 name (SimpleName)
78 identifier='retry'
79 scope (MethodCallExpr)
80 name (SimpleName)
81 identifier='verify'
82 arguments
83 argument (NameExpr)
84 name (SimpleName)
85 identifier='attempt'
86 arguments
87 argument (MethodCallExpr)
88 name (SimpleName)
89 identifier='ofSeconds'
90 scope (NameExpr)
91 name (SimpleName)
92 identifier='Duration'
93 arguments
94 argument (IntegerLiteralExpr)
95 value='1'
96 statement (ExpressionStmt)
97 expression (AssignExpr)
98 operator='ASSIGN'
99 target (NameExpr)
100 name (SimpleName)
101 identifier='attempt'
102 value (MethodCallExpr)
103 name (SimpleName)
104 identifier='mock'
105 arguments
106 argument (ClassExpr)
107 type (ClassOrInterfaceType)
108 name (SimpleName)
109 identifier='Attempt'
110 scope (ClassOrInterfaceType)
111 name (SimpleName)
112 identifier='ConnectionStrategy'
113 statement (ExpressionStmt)
114 expression (MethodCallExpr)
115 name (SimpleName)
116 identifier='thenReturn'
117 scope (MethodCallExpr)
118 name (SimpleName)
119 identifier='when'
120 arguments
121 argument (MethodCallExpr)
122 name (SimpleName)
123 identifier='attempt'
124 scope (NameExpr)
125 name (SimpleName)
126 identifier='attempt'
127 arguments
128 argument (IntegerLiteralExpr)
129 value='2'
130 statement (ExpressionStmt)
131 expression (MethodCallExpr)
132 name (SimpleName)
133 identifier='attemptFailed'
134 scope (NameExpr)
135 name (SimpleName)
136 identifier='strategy'
137 arguments
138 argument (NameExpr)
139 name (SimpleName)
140 identifier='attempt'
141 statement (ExpressionStmt)
142 expression (MethodCallExpr)
143 name (SimpleName)
144 identifier='retry'
145 scope (MethodCallExpr)
146 name (SimpleName)
147 identifier='verify'
148 arguments
149 argument (NameExpr)
150 name (SimpleName)
151 identifier='attempt'
152 arguments
153 argument (MethodCallExpr)
154 name (SimpleName)
155 identifier='ofSeconds'
156 scope (NameExpr)
157 name (SimpleName)
158 identifier='Duration'
159 arguments
160 argument (IntegerLiteralExpr)
161 value='1'
162 statement (ExpressionStmt)
163 expression (AssignExpr)
164 operator='ASSIGN'
165 target (NameExpr)
166 name (SimpleName)
167 identifier='attempt'
168 value (MethodCallExpr)
169 name (SimpleName)
170 identifier='mock'
171 arguments
172 argument (ClassExpr)
173 type (ClassOrInterfaceType)
174 name (SimpleName)
175 identifier='Attempt'
176 scope (ClassOrInterfaceType)
177 name (SimpleName)
178 identifier='ConnectionStrategy'
179 statement (ExpressionStmt)
180 expression (MethodCallExpr)
181 name (SimpleName)
182 identifier='thenReturn'
183 scope (MethodCallExpr)
184 name (SimpleName)
185 identifier='when'
186 arguments
187 argument (MethodCallExpr)
188 name (SimpleName)
189 identifier='attempt'
190 scope (NameExpr)
191 name (SimpleName)
192 identifier='attempt'
193 arguments
194 argument (IntegerLiteralExpr)
195 value='3'
196 statement (ExpressionStmt)
197 expression (MethodCallExpr)
198 name (SimpleName)
199 identifier='attemptFailed'
200 scope (NameExpr)
201 name (SimpleName)
202 identifier='strategy'
203 arguments
204 argument (NameExpr)
205 name (SimpleName)
206 identifier='attempt'
207 statement (ExpressionStmt)
208 expression (MethodCallExpr)
209 name (SimpleName)
210 identifier='retry'
211 scope (MethodCallExpr)
212 name (SimpleName)
213 identifier='verify'
214 arguments
215 argument (NameExpr)
216 name (SimpleName)
217 identifier='attempt'
218 arguments
219 argument (MethodCallExpr)
220 name (SimpleName)
221 identifier='ofSeconds'
222 scope (NameExpr)
223 name (SimpleName)
224 identifier='Duration'
225 arguments
226 argument (IntegerLiteralExpr)
227 value='2'
228 statement (ExpressionStmt)
229 expression (AssignExpr)
230 operator='ASSIGN'
231 target (NameExpr)
232 name (SimpleName)
233 identifier='attempt'
234 value (MethodCallExpr)
235 name (SimpleName)
236 identifier='mock'
237 arguments
238 argument (ClassExpr)
239 type (ClassOrInterfaceType)
240 name (SimpleName)
241 identifier='Attempt'
242 scope (ClassOrInterfaceType)
243 name (SimpleName)
244 identifier='ConnectionStrategy'
245 statement (ExpressionStmt)
246 expression (MethodCallExpr)
247 name (SimpleName)
248 identifier='thenReturn'
249 scope (MethodCallExpr)
250 name (SimpleName)
251 identifier='when'
252 arguments
253 argument (MethodCallExpr)
254 name (SimpleName)
255 identifier='attempt'
256 scope (NameExpr)
257 name (SimpleName)
258 identifier='attempt'
259 arguments
260 argument (IntegerLiteralExpr)
261 value='4'
262 statement (ExpressionStmt)
263 expression (MethodCallExpr)
264 name (SimpleName)
265 identifier='attemptFailed'
266 scope (NameExpr)
267 name (SimpleName)
268 identifier='strategy'
269 arguments
270 argument (NameExpr)
271 name (SimpleName)
272 identifier='attempt'
273 statement (ExpressionStmt)
274 expression (MethodCallExpr)
275 name (SimpleName)
276 identifier='retry'
277 scope (MethodCallExpr)
278 name (SimpleName)
279 identifier='verify'
280 arguments
281 argument (NameExpr)
282 name (SimpleName)
283 identifier='attempt'
284 arguments
285 argument (MethodCallExpr)
286 name (SimpleName)
287 identifier='ofSeconds'
288 scope (NameExpr)
289 name (SimpleName)
290 identifier='Duration'
291 arguments
292 argument (IntegerLiteralExpr)
293 value='3'
294 statement (ExpressionStmt)
295 expression (AssignExpr)
296 operator='ASSIGN'
297 target (NameExpr)
298 name (SimpleName)
299 identifier='attempt'
300 value (MethodCallExpr)
301 name (SimpleName)
302 identifier='mock'
303 arguments
304 argument (ClassExpr)
305 type (ClassOrInterfaceType)
306 name (SimpleName)
307 identifier='Attempt'
308 scope (ClassOrInterfaceType)
309 name (SimpleName)
310 identifier='ConnectionStrategy'
311 statement (ExpressionStmt)
312 expression (MethodCallExpr)
313 name (SimpleName)
314 identifier='thenReturn'
315 scope (MethodCallExpr)
316 name (SimpleName)
317 identifier='when'
318 arguments
319 argument (MethodCallExpr)
320 name (SimpleName)
321 identifier='attempt'
322 scope (NameExpr)
323 name (SimpleName)
324 identifier='attempt'
325 arguments
326 argument (IntegerLiteralExpr)
327 value='5'
328 statement (ExpressionStmt)
329 expression (MethodCallExpr)
330 name (SimpleName)
331 identifier='attemptFailed'
332 scope (NameExpr)
333 name (SimpleName)
334 identifier='strategy'
335 arguments
336 argument (NameExpr)
337 name (SimpleName)
338 identifier='attempt'
339 statement (ExpressionStmt)
340 expression (MethodCallExpr)
341 name (SimpleName)
342 identifier='retry'
343 scope (MethodCallExpr)
344 name (SimpleName)
345 identifier='verify'
346 arguments
347 argument (NameExpr)
348 name (SimpleName)
349 identifier='attempt'
350 arguments
351 argument (MethodCallExpr)
352 name (SimpleName)
353 identifier='ofSeconds'
354 scope (NameExpr)
355 name (SimpleName)
356 identifier='Duration'
357 arguments
358 argument (IntegerLiteralExpr)
359 value='5'
360 statement (ExpressionStmt)
361 expression (AssignExpr)
362 operator='ASSIGN'
363 target (NameExpr)
364 name (SimpleName)
365 identifier='attempt'
366 value (MethodCallExpr)
367 name (SimpleName)
368 identifier='mock'
369 arguments
370 argument (ClassExpr)
371 type (ClassOrInterfaceType)
372 name (SimpleName)
373 identifier='Attempt'
374 scope (ClassOrInterfaceType)
375 name (SimpleName)
376 identifier='ConnectionStrategy'
377 statement (ExpressionStmt)
378 expression (MethodCallExpr)
379 name (SimpleName)
380 identifier='thenReturn'
381 scope (MethodCallExpr)
382 name (SimpleName)
383 identifier='when'
384 arguments
385 argument (MethodCallExpr)
386 name (SimpleName)
387 identifier='attempt'
388 scope (NameExpr)
389 name (SimpleName)
390 identifier='attempt'
391 arguments
392 argument (IntegerLiteralExpr)
393 value='6'
394 statement (ExpressionStmt)
395 expression (MethodCallExpr)
396 name (SimpleName)
397 identifier='attemptFailed'
398 scope (NameExpr)
399 name (SimpleName)
400 identifier='strategy'
401 arguments
402 argument (NameExpr)
403 name (SimpleName)
404 identifier='attempt'
405 statement (ExpressionStmt)
406 expression (MethodCallExpr)
407 name (SimpleName)
408 identifier='retry'
409 scope (MethodCallExpr)
410 name (SimpleName)
411 identifier='verify'
412 arguments
413 argument (NameExpr)
414 name (SimpleName)
415 identifier='attempt'
416 arguments
417 argument (MethodCallExpr)
418 name (SimpleName)
419 identifier='ofSeconds'
420 scope (NameExpr)
421 name (SimpleName)
422 identifier='Duration'
423 arguments
424 argument (IntegerLiteralExpr)
425 value='8'
426 statement (ExpressionStmt)
427 expression (AssignExpr)
428 operator='ASSIGN'
429 target (NameExpr)
430 name (SimpleName)
431 identifier='attempt'
432 value (MethodCallExpr)
433 name (SimpleName)
434 identifier='mock'
435 arguments
436 argument (ClassExpr)
437 type (ClassOrInterfaceType)
438 name (SimpleName)
439 identifier='Attempt'
440 scope (ClassOrInterfaceType)
441 name (SimpleName)
442 identifier='ConnectionStrategy'
443 statement (ExpressionStmt)
444 expression (MethodCallExpr)
445 name (SimpleName)
446 identifier='thenReturn'
447 scope (MethodCallExpr)
448 name (SimpleName)
449 identifier='when'
450 arguments
451 argument (MethodCallExpr)
452 name (SimpleName)
453 identifier='attempt'
454 scope (NameExpr)
455 name (SimpleName)
456 identifier='attempt'
457 arguments
458 argument (IntegerLiteralExpr)
459 value='7'
460 statement (ExpressionStmt)
461 expression (MethodCallExpr)
462 name (SimpleName)
463 identifier='attemptFailed'
464 scope (NameExpr)
465 name (SimpleName)
466 identifier='strategy'
467 arguments
468 argument (NameExpr)
469 name (SimpleName)
470 identifier='attempt'
471 statement (ExpressionStmt)
472 expression (MethodCallExpr)
473 name (SimpleName)
474 identifier='retry'
475 scope (MethodCallExpr)
476 name (SimpleName)
477 identifier='verify'
478 arguments
479 argument (NameExpr)
480 name (SimpleName)
481 identifier='attempt'
482 arguments
483 argument (MethodCallExpr)
484 name (SimpleName)
485 identifier='ofSeconds'
486 scope (NameExpr)
487 name (SimpleName)
488 identifier='Duration'
489 arguments
490 argument (IntegerLiteralExpr)
491 value='13'
492 statement (ExpressionStmt)
493 expression (AssignExpr)
494 operator='ASSIGN'
495 target (NameExpr)
496 name (SimpleName)
497 identifier='attempt'
498 value (MethodCallExpr)
499 name (SimpleName)
500 identifier='mock'
501 arguments
502 argument (ClassExpr)
503 type (ClassOrInterfaceType)
504 name (SimpleName)
505 identifier='Attempt'
506 scope (ClassOrInterfaceType)
507 name (SimpleName)
508 identifier='ConnectionStrategy'
509 statement (ExpressionStmt)
510 expression (MethodCallExpr)
511 name (SimpleName)
512 identifier='thenReturn'
513 scope (MethodCallExpr)
514 name (SimpleName)
515 identifier='when'
516 arguments
517 argument (MethodCallExpr)
518 name (SimpleName)
519 identifier='attempt'
520 scope (NameExpr)
521 name (SimpleName)
522 identifier='attempt'
523 arguments
524 argument (IntegerLiteralExpr)
525 value='8'
526 statement (ExpressionStmt)
527 expression (MethodCallExpr)
528 name (SimpleName)
529 identifier='attemptFailed'
530 scope (NameExpr)
531 name (SimpleName)
532 identifier='strategy'
533 arguments
534 argument (NameExpr)
535 name (SimpleName)
536 identifier='attempt'
537 statement (ExpressionStmt)
538 expression (MethodCallExpr)
539 name (SimpleName)
540 identifier='retry'
541 scope (MethodCallExpr)
542 name (SimpleName)
543 identifier='verify'
544 arguments
545 argument (NameExpr)
546 name (SimpleName)
547 identifier='attempt'
548 arguments
549 argument (MethodCallExpr)
550 name (SimpleName)
551 identifier='ofSeconds'
552 scope (NameExpr)
553 name (SimpleName)
554 identifier='Duration'
555 arguments
556 argument (IntegerLiteralExpr)
557 value='13'
558 type (VoidType)
559 name (SimpleName)
560 identifier='testConnectFibonacciBackoffStrategy'
561 thrownExceptions
562 thrownException (ClassOrInterfaceType)
563 name (SimpleName)
564 identifier='Throwable'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
21 22
22 23
21 24
24 25
25 26
24 27
27 28
28 29
2 30
30 31
31 32
31 33
33 34
34 35
31 36
36 37
37 38
36 39
39 40
40 41
41 42
42 43
41 44
44 45
45 46
2 47
47 48
48 49
49 50
48 51
51 52
52 53
51 54
54 55
55 56
56 57
55 58
58 59
59 60
48 61
61 62
62 63
2 64
64 65
65 66
66 67
65 68
68 69
69 70
65 71
71 72
72 73
73 74
2 75
75 76
76 77
77 78
76 79
79 80
80 81
79 82
82 83
83 84
84 85
76 86
86 87
87 88
88 89
87 90
90 91
91 92
87 93
93 94
94 95
2 96
96 97
97 98
97 99
99 100
100 101
97 102
102 103
103 104
102 105
105 106
106 107
107 108
108 109
107 110
110 111
111 112
2 113
113 114
114 115
115 116
114 117
117 118
118 119
117 120
120 121
121 122
122 123
121 124
124 125
125 126
114 127
127 128
128 129
2 130
130 131
131 132
132 133
131 134
134 135
135 136
131 137
137 138
138 139
139 140
2 141
141 142
142 143
143 144
142 145
145 146
146 147
145 148
148 149
149 150
150 151
142 152
152 153
153 154
154 155
153 156
156 157
157 158
153 159
159 160
160 161
2 162
162 163
163 164
163 165
165 166
166 167
163 168
168 169
169 170
168 171
171 172
172 173
173 174
174 175
173 176
176 177
177 178
2 179
179 180
180 181
181 182
180 183
183 184
184 185
183 186
186 187
187 188
188 189
187 190
190 191
191 192
180 193
193 194
194 195
2 196
196 197
197 198
198 199
197 200
200 201
201 202
197 203
203 204
204 205
205 206
2 207
207 208
208 209
209 210
208 211
211 212
212 213
211 214
214 215
215 216
216 217
208 218
218 219
219 220
220 221
219 222
222 223
223 224
219 225
225 226
226 227
2 228
228 229
229 230
229 231
231 232
232 233
229 234
234 235
235 236
234 237
237 238
238 239
239 240
240 241
239 242
242 243
243 244
2 245
245 246
246 247
247 248
246 249
249 250
250 251
249 252
252 253
253 254
254 255
253 256
256 257
257 258
246 259
259 260
260 261
2 262
262 263
263 264
264 265
263 266
266 267
267 268
263 269
269 270
270 271
271 272
2 273
273 274
274 275
275 276
274 277
277 278
278 279
277 280
280 281
281 282
282 283
274 284
284 285
285 286
286 287
285 288
288 289
289 290
285 291
291 292
292 293
2 294
294 295
295 296
295 297
297 298
298 299
295 300
300 301
301 302
300 303
303 304
304 305
305 306
306 307
305 308
308 309
309 310
2 311
311 312
312 313
313 314
312 315
315 316
316 317
315 318
318 319
319 320
320 321
319 322
322 323
323 324
312 325
325 326
326 327
2 328
328 329
329 330
330 331
329 332
332 333
333 334
329 335
335 336
336 337
337 338
2 339
339 340
340 341
341 342
340 343
343 344
344 345
343 346
346 347
347 348
348 349
340 350
350 351
351 352
352 353
351 354
354 355
355 356
351 357
357 358
358 359
2 360
360 361
361 362
361 363
363 364
364 365
361 366
366 367
367 368
366 369
369 370
370 371
371 372
372 373
371 374
374 375
375 376
2 377
377 378
378 379
379 380
378 381
381 382
382 383
381 384
384 385
385 386
386 387
385 388
388 389
389 390
378 391
391 392
392 393
2 394
394 395
395 396
396 397
395 398
398 399
399 400
395 401
401 402
402 403
403 404
2 405
405 406
406 407
407 408
406 409
409 410
410 411
409 412
412 413
413 414
414 415
406 416
416 417
417 418
418 419
417 420
420 421
421 422
417 423
423 424
424 425
2 426
426 427
427 428
427 429
429 430
430 431
427 432
432 433
433 434
432 435
435 436
436 437
437 438
438 439
437 440
440 441
441 442
2 443
443 444
444 445
445 446
444 447
447 448
448 449
447 450
450 451
451 452
452 453
451 454
454 455
455 456
444 457
457 458
458 459
2 460
460 461
461 462
462 463
461 464
464 465
465 466
461 467
467 468
468 469
469 470
2 471
471 472
472 473
473 474
472 475
475 476
476 477
475 478
478 479
479 480
480 481
472 482
482 483
483 484
484 485
483 486
486 487
487 488
483 489
489 490
490 491
2 492
492 493
493 494
493 495
495 496
496 497
493 498
498 499
499 500
498 501
501 502
502 503
503 504
504 505
503 506
506 507
507 508
2 509
509 510
510 511
511 512
510 513
513 514
514 515
513 516
516 517
517 518
518 519
517 520
520 521
521 522
510 523
523 524
524 525
2 526
526 527
527 528
528 529
527 530
530 531
531 532
527 533
533 534
534 535
535 536
2 537
537 538
538 539
539 540
538 541
541 542
542 543
541 544
544 545
545 546
546 547
538 548
548 549
549 550
550 551
549 552
552 553
553 554
549 555
555 556
556 557
0 558
0 559
559 560
0 561
561 562
562 563
563 564

Tests the fibonacci backoff strategy.
