75
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='write'
7 arguments
8 argument (BinaryExpr)
9 operator='PLUS'
10 left (BinaryExpr)
11 operator='PLUS'
12 left (BinaryExpr)
13 operator='PLUS'
14 left (BinaryExpr)
15 operator='PLUS'
16 left (BinaryExpr)
17 operator='PLUS'
18 left (BinaryExpr)
19 operator='PLUS'
20 left (MethodCallExpr)
21 name (SimpleName)
22 identifier='format'
23 arguments
24 argument (NameExpr)
25 name (SimpleName)
26 identifier='startDistance'
27 right (StringLiteralExpr)
28 value=' '
29 right (MethodCallExpr)
30 name (SimpleName)
31 identifier='format'
32 arguments
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='time'
36 right (StringLiteralExpr)
37 value=' '
38 right (NameExpr)
39 name (SimpleName)
40 identifier='hopCount'
41 right (StringLiteralExpr)
42 value=' '
43 right (NameExpr)
44 name (SimpleName)
45 identifier='id'
46 type (VoidType)
47 name (SimpleName)
48 identifier='report'
49 parameters
50 parameter (Parameter)
51 isVarArgs='false'
52 name (SimpleName)
53 identifier='id'
54 type (ClassOrInterfaceType)
55 name (SimpleName)
56 identifier='String'
57 parameter (Parameter)
58 isVarArgs='false'
59 name (SimpleName)
60 identifier='startDistance'
61 type (PrimitiveType)
62 type='DOUBLE'
63 parameter (Parameter)
64 isVarArgs='false'
65 name (SimpleName)
66 identifier='time'
67 type (PrimitiveType)
68 type='DOUBLE'
69 parameter (Parameter)
70 isVarArgs='false'
71 name (SimpleName)
72 identifier='hopCount'
73 type (PrimitiveType)
74 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
8 10
10 11
10 12
12 13
12 14
14 15
14 16
16 17
16 18
18 19
18 20
20 21
21 22
20 23
23 24
24 25
25 26
18 27
27 28
16 29
29 30
30 31
29 32
32 33
33 34
34 35
14 36
36 37
12 38
38 39
39 40
10 41
41 42
8 43
43 44
44 45
0 46
0 47
47 48
0 49
49 50
50 51
50 52
52 53
50 54
54 55
55 56
49 57
57 58
57 59
59 60
57 61
61 62
49 63
63 64
63 65
65 66
63 67
67 68
49 69
69 70
69 71
71 72
69 73
73 74

Writes a report line
