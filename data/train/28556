153
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='legStore'
9 scope (ThisExpr)
10 value (ObjectCreationExpr)
11 type (ClassOrInterfaceType)
12 name (SimpleName)
13 identifier='HashMap'
14 typeArguments
15 typeArgument (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Id'
18 typeArgument (ClassOrInterfaceType)
19 name (SimpleName)
20 identifier='LegStore'
21 statement (ExpressionStmt)
22 expression (AssignExpr)
23 operator='ASSIGN'
24 target (FieldAccessExpr)
25 name (SimpleName)
26 identifier='allFacilities'
27 scope (ThisExpr)
28 value (NameExpr)
29 name (SimpleName)
30 identifier='map'
31 statement (ExpressionStmt)
32 expression (AssignExpr)
33 operator='ASSIGN'
34 target (FieldAccessExpr)
35 name (SimpleName)
36 identifier='micro2MacroZone'
37 scope (ThisExpr)
38 value (NameExpr)
39 name (SimpleName)
40 identifier='micro2MacroZone'
41 statement (ExpressionStmt)
42 expression (AssignExpr)
43 operator='ASSIGN'
44 target (FieldAccessExpr)
45 name (SimpleName)
46 identifier='mode2zoneTraveltimes'
47 scope (ThisExpr)
48 value (ObjectCreationExpr)
49 type (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='HashMap'
52 typeArguments
53 typeArgument (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='String'
56 typeArgument (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='Matrix'
59 statement (ExpressionStmt)
60 expression (AssignExpr)
61 operator='ASSIGN'
62 target (FieldAccessExpr)
63 name (SimpleName)
64 identifier='mode2zoneTrips'
65 scope (ThisExpr)
66 value (ObjectCreationExpr)
67 type (ClassOrInterfaceType)
68 name (SimpleName)
69 identifier='HashMap'
70 typeArguments
71 typeArgument (ClassOrInterfaceType)
72 name (SimpleName)
73 identifier='String'
74 typeArgument (ClassOrInterfaceType)
75 name (SimpleName)
76 identifier='Matrix'
77 statement (ExpressionStmt)
78 expression (AssignExpr)
79 operator='ASSIGN'
80 target (FieldAccessExpr)
81 name (SimpleName)
82 identifier='start'
83 scope (ThisExpr)
84 value (NameExpr)
85 name (SimpleName)
86 identifier='startHour'
87 statement (ExpressionStmt)
88 expression (AssignExpr)
89 operator='ASSIGN'
90 target (FieldAccessExpr)
91 name (SimpleName)
92 identifier='end'
93 scope (ThisExpr)
94 value (NameExpr)
95 name (SimpleName)
96 identifier='endHour'
97 name (SimpleName)
98 identifier='CalcMacroZoneTravelTimes'
99 parameters
100 parameter (Parameter)
101 isVarArgs='false'
102 name (SimpleName)
103 identifier='map'
104 type (ClassOrInterfaceType)
105 name (SimpleName)
106 identifier='Map'
107 typeArguments
108 typeArgument (ClassOrInterfaceType)
109 name (SimpleName)
110 identifier='Id'
111 typeArguments
112 typeArgument (ClassOrInterfaceType)
113 name (SimpleName)
114 identifier='ActivityFacility'
115 typeArgument (WildcardType)
116 extendedType (ClassOrInterfaceType)
117 name (SimpleName)
118 identifier='ActivityFacility'
119 parameter (Parameter)
120 isVarArgs='false'
121 name (SimpleName)
122 identifier='micro2MacroZone'
123 type (ClassOrInterfaceType)
124 name (SimpleName)
125 identifier='Map'
126 typeArguments
127 typeArgument (ClassOrInterfaceType)
128 name (SimpleName)
129 identifier='Id'
130 typeArguments
131 typeArgument (ClassOrInterfaceType)
132 name (SimpleName)
133 identifier='ActivityFacility'
134 typeArgument (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='Id'
137 typeArguments
138 typeArgument (ClassOrInterfaceType)
139 name (SimpleName)
140 identifier='ActivityFacility'
141 parameter (Parameter)
142 isVarArgs='false'
143 name (SimpleName)
144 identifier='startHour'
145 type (PrimitiveType)
146 type='INT'
147 parameter (Parameter)
148 isVarArgs='false'
149 name (SimpleName)
150 identifier='endHour'
151 type (PrimitiveType)
152 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
12 13
11 14
14 15
15 16
16 17
14 18
18 19
19 20
2 21
21 22
22 23
22 24
24 25
25 26
24 27
22 28
28 29
29 30
2 31
31 32
32 33
32 34
34 35
35 36
34 37
32 38
38 39
39 40
2 41
41 42
42 43
42 44
44 45
45 46
44 47
42 48
48 49
49 50
50 51
49 52
52 53
53 54
54 55
52 56
56 57
57 58
2 59
59 60
60 61
60 62
62 63
63 64
62 65
60 66
66 67
67 68
68 69
67 70
70 71
71 72
72 73
70 74
74 75
75 76
2 77
77 78
78 79
78 80
80 81
81 82
80 83
78 84
84 85
85 86
2 87
87 88
88 89
88 90
90 91
91 92
90 93
88 94
94 95
95 96
0 97
97 98
0 99
99 100
100 101
100 102
102 103
100 104
104 105
105 106
104 107
107 108
108 109
109 110
108 111
111 112
112 113
113 114
107 115
115 116
116 117
117 118
99 119
119 120
119 121
121 122
119 123
123 124
124 125
123 126
126 127
127 128
128 129
127 130
130 131
131 132
132 133
126 134
134 135
135 136
134 137
137 138
138 139
139 140
99 141
141 142
141 143
143 144
141 145
145 146
99 147
147 148
147 149
149 150
147 151
151 152

Generates some output for validation reasons for the brussels-scenario. Note it might NOT work for other scenarios...
