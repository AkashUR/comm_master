169
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='reset'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='mRecordingModule'
10 statement (ExpressionStmt)
11 expression (VariableDeclarationExpr)
12 variables
13 variable (VariableDeclarator)
14 initializer (MethodCallExpr)
15 name (SimpleName)
16 identifier='getViewByTestId'
17 arguments
18 argument (StringLiteralExpr)
19 value='A'
20 name (SimpleName)
21 identifier='innerButton'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='View'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='assertNotNull'
29 arguments
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='innerButton'
33 statement (ExpressionStmt)
34 expression (MethodCallExpr)
35 name (SimpleName)
36 identifier='endGesture'
37 scope (MethodCallExpr)
38 name (SimpleName)
39 identifier='startGesture'
40 scope (MethodCallExpr)
41 name (SimpleName)
42 identifier='createGestureGenerator'
43 arguments
44 argument (NameExpr)
45 name (SimpleName)
46 identifier='innerButton'
47 statement (ExpressionStmt)
48 expression (MethodCallExpr)
49 name (SimpleName)
50 identifier='waitForBridgeAndUIIdle'
51 statement (ExpressionStmt)
52 expression (MethodCallExpr)
53 name (SimpleName)
54 identifier='assertEquals'
55 arguments
56 argument (IntegerLiteralExpr)
57 value='1'
58 argument (MethodCallExpr)
59 name (SimpleName)
60 identifier='size'
61 scope (MethodCallExpr)
62 name (SimpleName)
63 identifier='getCalls'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='mRecordingModule'
67 statement (ExpressionStmt)
68 expression (MethodCallExpr)
69 name (SimpleName)
70 identifier='assertEquals'
71 arguments
72 argument (StringLiteralExpr)
73 value='inner'
74 argument (MethodCallExpr)
75 name (SimpleName)
76 identifier='get'
77 scope (MethodCallExpr)
78 name (SimpleName)
79 identifier='getCalls'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='mRecordingModule'
83 arguments
84 argument (IntegerLiteralExpr)
85 value='0'
86 statement (ExpressionStmt)
87 expression (MethodCallExpr)
88 name (SimpleName)
89 identifier='reset'
90 scope (NameExpr)
91 name (SimpleName)
92 identifier='mRecordingModule'
93 statement (ExpressionStmt)
94 expression (AssignExpr)
95 operator='ASSIGN'
96 target (NameExpr)
97 name (SimpleName)
98 identifier='innerButton'
99 value (MethodCallExpr)
100 name (SimpleName)
101 identifier='getViewByTestId'
102 arguments
103 argument (StringLiteralExpr)
104 value='C'
105 statement (ExpressionStmt)
106 expression (MethodCallExpr)
107 name (SimpleName)
108 identifier='assertNotNull'
109 arguments
110 argument (NameExpr)
111 name (SimpleName)
112 identifier='innerButton'
113 statement (ExpressionStmt)
114 expression (MethodCallExpr)
115 name (SimpleName)
116 identifier='endGesture'
117 scope (MethodCallExpr)
118 name (SimpleName)
119 identifier='startGesture'
120 scope (MethodCallExpr)
121 name (SimpleName)
122 identifier='createGestureGenerator'
123 arguments
124 argument (NameExpr)
125 name (SimpleName)
126 identifier='innerButton'
127 statement (ExpressionStmt)
128 expression (MethodCallExpr)
129 name (SimpleName)
130 identifier='waitForBridgeAndUIIdle'
131 statement (ExpressionStmt)
132 expression (MethodCallExpr)
133 name (SimpleName)
134 identifier='assertEquals'
135 arguments
136 argument (IntegerLiteralExpr)
137 value='1'
138 argument (MethodCallExpr)
139 name (SimpleName)
140 identifier='size'
141 scope (MethodCallExpr)
142 name (SimpleName)
143 identifier='getCalls'
144 scope (NameExpr)
145 name (SimpleName)
146 identifier='mRecordingModule'
147 statement (ExpressionStmt)
148 expression (MethodCallExpr)
149 name (SimpleName)
150 identifier='assertEquals'
151 arguments
152 argument (StringLiteralExpr)
153 value='outer'
154 argument (MethodCallExpr)
155 name (SimpleName)
156 identifier='get'
157 scope (MethodCallExpr)
158 name (SimpleName)
159 identifier='getCalls'
160 scope (NameExpr)
161 name (SimpleName)
162 identifier='mRecordingModule'
163 arguments
164 argument (IntegerLiteralExpr)
165 value='0'
166 type (VoidType)
167 name (SimpleName)
168 identifier='testSimpleClickAtInnerElements'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
2 10
10 11
11 12
12 13
13 14
14 15
15 16
14 17
17 18
18 19
13 20
20 21
13 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
31 32
2 33
33 34
34 35
35 36
34 37
37 38
38 39
37 40
40 41
41 42
37 43
43 44
44 45
45 46
2 47
47 48
48 49
49 50
2 51
51 52
52 53
53 54
52 55
55 56
56 57
55 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
2 67
67 68
68 69
69 70
68 71
71 72
72 73
71 74
74 75
75 76
74 77
77 78
78 79
77 80
80 81
81 82
74 83
83 84
84 85
2 86
86 87
87 88
88 89
87 90
90 91
91 92
2 93
93 94
94 95
94 96
96 97
97 98
94 99
99 100
100 101
99 102
102 103
103 104
2 105
105 106
106 107
107 108
106 109
109 110
110 111
111 112
2 113
113 114
114 115
115 116
114 117
117 118
118 119
117 120
120 121
121 122
117 123
123 124
124 125
125 126
2 127
127 128
128 129
129 130
2 131
131 132
132 133
133 134
132 135
135 136
136 137
135 138
138 139
139 140
138 141
141 142
142 143
141 144
144 145
145 146
2 147
147 148
148 149
149 150
148 151
151 152
152 153
151 154
154 155
155 156
154 157
157 158
158 159
157 160
160 161
161 162
154 163
163 164
164 165
0 166
0 167
167 168

1) Simulate touch event at view A, expect {B} touch handler to fire 2) Simulate touch event at view C, expect {D} touch handler to fire
