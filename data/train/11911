74
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getReference'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='dm'
13 arguments
14 argument (ClassExpr)
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='Organization'
18 argument (MethodCallExpr)
19 name (SimpleName)
20 identifier='getKey'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='organization'
24 name (SimpleName)
25 identifier='savedOrganization'
26 type (ClassOrInterfaceType)
27 name (SimpleName)
28 identifier='Organization'
29 statement (ExpressionStmt)
30 expression (MethodCallExpr)
31 name (SimpleName)
32 identifier='deregisterOrganization'
33 arguments
34 argument (NameExpr)
35 name (SimpleName)
36 identifier='savedOrganization'
37 type (VoidType)
38 name (SimpleName)
39 identifier='removeOverdueOrganization'
40 parameters
41 parameter (Parameter)
42 isVarArgs='false'
43 name (SimpleName)
44 identifier='organization'
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='Organization'
48 thrownExceptions
49 thrownException (ClassOrInterfaceType)
50 name (SimpleName)
51 identifier='DeletionConstraintException'
52 thrownException (ClassOrInterfaceType)
53 name (SimpleName)
54 identifier='ObjectNotFoundException'
55 thrownException (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='TechnicalServiceNotAliveException'
58 thrownException (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='TechnicalServiceOperationException'
61 annotations
62 annotation (MarkerAnnotationExpr)
63 name (Name)
64 identifier='Override'
65 annotation (SingleMemberAnnotationExpr)
66 memberValue (FieldAccessExpr)
67 name (SimpleName)
68 identifier='REQUIRES_NEW'
69 scope (NameExpr)
70 name (SimpleName)
71 identifier='TransactionAttributeType'
72 name (Name)
73 identifier='TransactionAttribute'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
7 13
13 14
14 15
15 16
16 17
13 18
18 19
19 20
18 21
21 22
22 23
6 24
24 25
6 26
26 27
27 28
2 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
0 37
0 38
38 39
0 40
40 41
41 42
41 43
43 44
41 45
45 46
46 47
0 48
48 49
49 50
50 51
48 52
52 53
53 54
48 55
55 56
56 57
48 58
58 59
59 60
0 61
61 62
62 63
63 64
61 65
65 66
66 67
67 68
66 69
69 70
70 71
65 72
72 73

Internal method with the only purpose to delegate the call to the deregistration method. As the business logic has to be considered as one transaction for every call, the transaction annotation is set accordingly.
