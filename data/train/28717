91
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (AssertStmt)
4 check (BinaryExpr)
5 operator='NOT_EQUALS'
6 left (NameExpr)
7 name (SimpleName)
8 identifier='fileId'
9 right (NullLiteralExpr)
10 statement (AssertStmt)
11 check (BinaryExpr)
12 operator='GREATER_EQUALS'
13 left (NameExpr)
14 name (SimpleName)
15 identifier='blockId'
16 right (IntegerLiteralExpr)
17 value='0'
18 statement (ExpressionStmt)
19 expression (AssignExpr)
20 operator='ASSIGN'
21 target (FieldAccessExpr)
22 name (SimpleName)
23 identifier='fileId'
24 scope (ThisExpr)
25 value (NameExpr)
26 name (SimpleName)
27 identifier='fileId'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (FieldAccessExpr)
32 name (SimpleName)
33 identifier='affKey'
34 scope (ThisExpr)
35 value (NameExpr)
36 name (SimpleName)
37 identifier='affKey'
38 statement (ExpressionStmt)
39 expression (AssignExpr)
40 operator='ASSIGN'
41 target (FieldAccessExpr)
42 name (SimpleName)
43 identifier='evictExclude'
44 scope (ThisExpr)
45 value (NameExpr)
46 name (SimpleName)
47 identifier='evictExclude'
48 statement (ExpressionStmt)
49 expression (AssignExpr)
50 operator='ASSIGN'
51 target (FieldAccessExpr)
52 name (SimpleName)
53 identifier='blockId'
54 scope (ThisExpr)
55 value (NameExpr)
56 name (SimpleName)
57 identifier='blockId'
58 name (SimpleName)
59 identifier='IgfsBlockKey'
60 parameters
61 parameter (Parameter)
62 isVarArgs='false'
63 name (SimpleName)
64 identifier='fileId'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='IgniteUuid'
68 parameter (Parameter)
69 isVarArgs='false'
70 name (SimpleName)
71 identifier='affKey'
72 type (ClassOrInterfaceType)
73 name (SimpleName)
74 identifier='IgniteUuid'
75 annotations
76 annotation (MarkerAnnotationExpr)
77 name (Name)
78 identifier='Nullable'
79 parameter (Parameter)
80 isVarArgs='false'
81 name (SimpleName)
82 identifier='evictExclude'
83 type (PrimitiveType)
84 type='BOOLEAN'
85 parameter (Parameter)
86 isVarArgs='false'
87 name (SimpleName)
88 identifier='blockId'
89 type (PrimitiveType)
90 type='LONG'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
2 10
10 11
11 12
11 13
13 14
14 15
11 16
16 17
2 18
18 19
19 20
19 21
21 22
22 23
21 24
19 25
25 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
31 34
29 35
35 36
36 37
2 38
38 39
39 40
39 41
41 42
42 43
41 44
39 45
45 46
46 47
2 48
48 49
49 50
49 51
51 52
52 53
51 54
49 55
55 56
56 57
0 58
58 59
0 60
60 61
61 62
61 63
63 64
61 65
65 66
66 67
60 68
68 69
68 70
70 71
68 72
72 73
73 74
68 75
75 76
76 77
77 78
60 79
79 80
79 81
81 82
79 83
83 84
60 85
85 86
85 87
87 88
85 89
89 90

Constructs file's binary data block key.
