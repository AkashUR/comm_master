64
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='encoding'
9 statement (ExpressionStmt)
10 expression (AssignExpr)
11 operator='ASSIGN'
12 target (FieldAccessExpr)
13 name (SimpleName)
14 identifier='which'
15 scope (ThisExpr)
16 value (NameExpr)
17 name (SimpleName)
18 identifier='which'
19 statement (ExpressionStmt)
20 expression (AssignExpr)
21 operator='ASSIGN'
22 target (FieldAccessExpr)
23 name (SimpleName)
24 identifier='alternativeNames'
25 scope (ThisExpr)
26 value (CastExpr)
27 expression (MethodCallExpr)
28 name (SimpleName)
29 identifier='decode'
30 scope (FieldAccessExpr)
31 name (SimpleName)
32 identifier='ASN1'
33 scope (NameExpr)
34 name (SimpleName)
35 identifier='GeneralNames'
36 arguments
37 argument (NameExpr)
38 name (SimpleName)
39 identifier='encoding'
40 type (ClassOrInterfaceType)
41 name (SimpleName)
42 identifier='GeneralNames'
43 name (SimpleName)
44 identifier='AlternativeName'
45 parameters
46 parameter (Parameter)
47 isVarArgs='false'
48 name (SimpleName)
49 identifier='which'
50 type (PrimitiveType)
51 type='BOOLEAN'
52 parameter (Parameter)
53 isVarArgs='false'
54 name (SimpleName)
55 identifier='encoding'
56 type (ArrayType)
57 origin='TYPE'
58 componentType (PrimitiveType)
59 type='BYTE'
60 thrownExceptions
61 thrownException (ClassOrInterfaceType)
62 name (SimpleName)
63 identifier='IOException'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
2 9
9 10
10 11
10 12
12 13
13 14
12 15
10 16
16 17
17 18
2 19
19 20
20 21
20 22
22 23
23 24
22 25
20 26
26 27
27 28
28 29
27 30
30 31
31 32
30 33
33 34
34 35
27 36
36 37
37 38
38 39
26 40
40 41
41 42
0 43
43 44
0 45
45 46
46 47
46 48
48 49
46 50
50 51
45 52
52 53
52 54
54 55
52 56
56 57
56 58
58 59
0 60
60 61
61 62
62 63

Creates the extension object on the base of its encoded form.
