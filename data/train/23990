229
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='RecordingHandler'
11 name (SimpleName)
12 identifier='handler'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='RecordingHandler'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setUserData'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='name'
23 arguments
24 argument (StringLiteralExpr)
25 value='a'
26 argument (StringLiteralExpr)
27 value='apple'
28 argument (NameExpr)
29 name (SimpleName)
30 identifier='handler'
31 statement (ExpressionStmt)
32 expression (MethodCallExpr)
33 name (SimpleName)
34 identifier='setUserData'
35 scope (NameExpr)
36 name (SimpleName)
37 identifier='name'
38 arguments
39 argument (StringLiteralExpr)
40 value='b'
41 argument (StringLiteralExpr)
42 value='banana'
43 argument (NameExpr)
44 name (SimpleName)
45 identifier='handler'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='setUserData'
50 scope (NameExpr)
51 name (SimpleName)
52 identifier='standard'
53 arguments
54 argument (StringLiteralExpr)
55 value='c'
56 argument (StringLiteralExpr)
57 value='cat'
58 argument (NameExpr)
59 name (SimpleName)
60 identifier='handler'
61 statement (ExpressionStmt)
62 expression (MethodCallExpr)
63 name (SimpleName)
64 identifier='setUserData'
65 scope (NameExpr)
66 name (SimpleName)
67 identifier='waffles'
68 arguments
69 argument (StringLiteralExpr)
70 value='d'
71 argument (StringLiteralExpr)
72 value='dog'
73 argument (NameExpr)
74 name (SimpleName)
75 identifier='handler'
76 statement (ExpressionStmt)
77 expression (VariableDeclarationExpr)
78 variables
79 variable (VariableDeclarator)
80 initializer (CastExpr)
81 expression (MethodCallExpr)
82 name (SimpleName)
83 identifier='cloneNode'
84 scope (NameExpr)
85 name (SimpleName)
86 identifier='name'
87 arguments
88 argument (BooleanLiteralExpr)
89 value='false'
90 type (ClassOrInterfaceType)
91 name (SimpleName)
92 identifier='Element'
93 name (SimpleName)
94 identifier='clonedName'
95 type (ClassOrInterfaceType)
96 name (SimpleName)
97 identifier='Element'
98 statement (ExpressionStmt)
99 expression (VariableDeclarationExpr)
100 variables
101 variable (VariableDeclarator)
102 initializer (MethodCallExpr)
103 name (SimpleName)
104 identifier='getAttributeNode'
105 scope (NameExpr)
106 name (SimpleName)
107 identifier='clonedName'
108 arguments
109 argument (StringLiteralExpr)
110 value='a:standard'
111 name (SimpleName)
112 identifier='clonedStandard'
113 type (ClassOrInterfaceType)
114 name (SimpleName)
115 identifier='Attr'
116 statement (ExpressionStmt)
117 expression (VariableDeclarationExpr)
118 variables
119 variable (VariableDeclarator)
120 initializer (ObjectCreationExpr)
121 type (ClassOrInterfaceType)
122 name (SimpleName)
123 identifier='HashSet'
124 typeArguments
125 typeArgument (ClassOrInterfaceType)
126 name (SimpleName)
127 identifier='String'
128 name (SimpleName)
129 identifier='expected'
130 type (ClassOrInterfaceType)
131 name (SimpleName)
132 identifier='Set'
133 typeArguments
134 typeArgument (ClassOrInterfaceType)
135 name (SimpleName)
136 identifier='String'
137 statement (ExpressionStmt)
138 expression (MethodCallExpr)
139 name (SimpleName)
140 identifier='add'
141 scope (NameExpr)
142 name (SimpleName)
143 identifier='expected'
144 arguments
145 argument (MethodCallExpr)
146 name (SimpleName)
147 identifier='notification'
148 arguments
149 argument (NameExpr)
150 name (SimpleName)
151 identifier='NODE_CLONED'
152 argument (StringLiteralExpr)
153 value='a'
154 argument (StringLiteralExpr)
155 value='apple'
156 argument (NameExpr)
157 name (SimpleName)
158 identifier='name'
159 argument (NameExpr)
160 name (SimpleName)
161 identifier='clonedName'
162 statement (ExpressionStmt)
163 expression (MethodCallExpr)
164 name (SimpleName)
165 identifier='add'
166 scope (NameExpr)
167 name (SimpleName)
168 identifier='expected'
169 arguments
170 argument (MethodCallExpr)
171 name (SimpleName)
172 identifier='notification'
173 arguments
174 argument (NameExpr)
175 name (SimpleName)
176 identifier='NODE_CLONED'
177 argument (StringLiteralExpr)
178 value='b'
179 argument (StringLiteralExpr)
180 value='banana'
181 argument (NameExpr)
182 name (SimpleName)
183 identifier='name'
184 argument (NameExpr)
185 name (SimpleName)
186 identifier='clonedName'
187 statement (ExpressionStmt)
188 expression (MethodCallExpr)
189 name (SimpleName)
190 identifier='add'
191 scope (NameExpr)
192 name (SimpleName)
193 identifier='expected'
194 arguments
195 argument (MethodCallExpr)
196 name (SimpleName)
197 identifier='notification'
198 arguments
199 argument (NameExpr)
200 name (SimpleName)
201 identifier='NODE_CLONED'
202 argument (StringLiteralExpr)
203 value='c'
204 argument (StringLiteralExpr)
205 value='cat'
206 argument (NameExpr)
207 name (SimpleName)
208 identifier='standard'
209 argument (NameExpr)
210 name (SimpleName)
211 identifier='clonedStandard'
212 statement (ExpressionStmt)
213 expression (MethodCallExpr)
214 name (SimpleName)
215 identifier='assertEquals'
216 arguments
217 argument (NameExpr)
218 name (SimpleName)
219 identifier='expected'
220 argument (FieldAccessExpr)
221 name (SimpleName)
222 identifier='calls'
223 scope (NameExpr)
224 name (SimpleName)
225 identifier='handler'
226 type (VoidType)
227 name (SimpleName)
228 identifier='testUserDataHandlerNotifiedOfShallowClones'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
23 26
26 27
23 28
28 29
29 30
2 31
31 32
32 33
33 34
32 35
35 36
36 37
32 38
38 39
39 40
38 41
41 42
38 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
47 53
53 54
54 55
53 56
56 57
53 58
58 59
59 60
2 61
61 62
62 63
63 64
62 65
65 66
66 67
62 68
68 69
69 70
68 71
71 72
68 73
73 74
74 75
2 76
76 77
77 78
78 79
79 80
80 81
81 82
82 83
81 84
84 85
85 86
81 87
87 88
88 89
80 90
90 91
91 92
79 93
93 94
79 95
95 96
96 97
2 98
98 99
99 100
100 101
101 102
102 103
103 104
102 105
105 106
106 107
102 108
108 109
109 110
101 111
111 112
101 113
113 114
114 115
2 116
116 117
117 118
118 119
119 120
120 121
121 122
122 123
121 124
124 125
125 126
126 127
119 128
128 129
119 130
130 131
131 132
130 133
133 134
134 135
135 136
2 137
137 138
138 139
139 140
138 141
141 142
142 143
138 144
144 145
145 146
146 147
145 148
148 149
149 150
150 151
148 152
152 153
148 154
154 155
148 156
156 157
157 158
148 159
159 160
160 161
2 162
162 163
163 164
164 165
163 166
166 167
167 168
163 169
169 170
170 171
171 172
170 173
173 174
174 175
175 176
173 177
177 178
173 179
179 180
173 181
181 182
182 183
173 184
184 185
185 186
2 187
187 188
188 189
189 190
188 191
191 192
192 193
188 194
194 195
195 196
196 197
195 198
198 199
199 200
200 201
198 202
202 203
198 204
204 205
198 206
206 207
207 208
198 209
209 210
210 211
2 212
212 213
213 214
214 215
213 216
216 217
217 218
218 219
216 220
220 221
221 222
220 223
223 224
224 225
0 226
0 227
227 228

A shallow clone requires cloning the attributes but not the child nodes.
