113
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (ArrayAccessExpr)
7 index (NameExpr)
8 name (SimpleName)
9 identifier='ALPHA'
10 name (NameExpr)
11 name (SimpleName)
12 identifier='result'
13 value (BinaryExpr)
14 operator='BINARY_AND'
15 left (EnclosedExpr)
16 inner (BinaryExpr)
17 operator='SIGNED_RIGHT_SHIFT'
18 left (NameExpr)
19 name (SimpleName)
20 identifier='rgb'
21 right (NameExpr)
22 name (SimpleName)
23 identifier='SHIFT_ALPHA'
24 right (IntegerLiteralExpr)
25 value='0xff'
26 statement (ExpressionStmt)
27 expression (AssignExpr)
28 operator='ASSIGN'
29 target (ArrayAccessExpr)
30 index (NameExpr)
31 name (SimpleName)
32 identifier='RED'
33 name (NameExpr)
34 name (SimpleName)
35 identifier='result'
36 value (BinaryExpr)
37 operator='BINARY_AND'
38 left (EnclosedExpr)
39 inner (BinaryExpr)
40 operator='SIGNED_RIGHT_SHIFT'
41 left (NameExpr)
42 name (SimpleName)
43 identifier='rgb'
44 right (NameExpr)
45 name (SimpleName)
46 identifier='SHIFT_RED'
47 right (IntegerLiteralExpr)
48 value='0xff'
49 statement (ExpressionStmt)
50 expression (AssignExpr)
51 operator='ASSIGN'
52 target (ArrayAccessExpr)
53 index (NameExpr)
54 name (SimpleName)
55 identifier='GREEN'
56 name (NameExpr)
57 name (SimpleName)
58 identifier='result'
59 value (BinaryExpr)
60 operator='BINARY_AND'
61 left (EnclosedExpr)
62 inner (BinaryExpr)
63 operator='SIGNED_RIGHT_SHIFT'
64 left (NameExpr)
65 name (SimpleName)
66 identifier='rgb'
67 right (NameExpr)
68 name (SimpleName)
69 identifier='SHIFT_GREEN'
70 right (IntegerLiteralExpr)
71 value='0xff'
72 statement (ExpressionStmt)
73 expression (AssignExpr)
74 operator='ASSIGN'
75 target (ArrayAccessExpr)
76 index (NameExpr)
77 name (SimpleName)
78 identifier='BLUE'
79 name (NameExpr)
80 name (SimpleName)
81 identifier='result'
82 value (BinaryExpr)
83 operator='BINARY_AND'
84 left (EnclosedExpr)
85 inner (BinaryExpr)
86 operator='SIGNED_RIGHT_SHIFT'
87 left (NameExpr)
88 name (SimpleName)
89 identifier='rgb'
90 right (NameExpr)
91 name (SimpleName)
92 identifier='SHIFT_BLUE'
93 right (IntegerLiteralExpr)
94 value='0xff'
95 type (VoidType)
96 name (SimpleName)
97 identifier='splitRgb'
98 parameters
99 parameter (Parameter)
100 isVarArgs='false'
101 name (SimpleName)
102 identifier='rgb'
103 type (PrimitiveType)
104 type='INT'
105 parameter (Parameter)
106 isVarArgs='false'
107 name (SimpleName)
108 identifier='result'
109 type (ArrayType)
110 origin='TYPE'
111 componentType (PrimitiveType)
112 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
8 9
6 10
10 11
11 12
4 13
13 14
13 15
15 16
16 17
16 18
18 19
19 20
16 21
21 22
22 23
13 24
24 25
2 26
26 27
27 28
27 29
29 30
30 31
31 32
29 33
33 34
34 35
27 36
36 37
36 38
38 39
39 40
39 41
41 42
42 43
39 44
44 45
45 46
36 47
47 48
2 49
49 50
50 51
50 52
52 53
53 54
54 55
52 56
56 57
57 58
50 59
59 60
59 61
61 62
62 63
62 64
64 65
65 66
62 67
67 68
68 69
59 70
70 71
2 72
72 73
73 74
73 75
75 76
76 77
77 78
75 79
79 80
80 81
73 82
82 83
82 84
84 85
85 86
85 87
87 88
88 89
85 90
90 91
91 92
82 93
93 94
0 95
0 96
96 97
0 98
98 99
99 100
99 101
101 102
99 103
103 104
98 105
105 106
105 107
107 108
105 109
109 110
109 111
111 112

Split ARGB color to its 8 bit color components.
