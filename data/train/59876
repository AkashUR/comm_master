48
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (FieldAccessExpr)
7 name (SimpleName)
8 identifier='text'
9 scope (ThisExpr)
10 value (NameExpr)
11 name (SimpleName)
12 identifier='text'
13 statement (ExpressionStmt)
14 expression (AssignExpr)
15 operator='ASSIGN'
16 target (FieldAccessExpr)
17 name (SimpleName)
18 identifier='matcher'
19 scope (ThisExpr)
20 value (MethodCallExpr)
21 name (SimpleName)
22 identifier='matcher'
23 scope (NameExpr)
24 name (SimpleName)
25 identifier='WHITESPACE'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='text'
30 statement (ExpressionStmt)
31 expression (MethodCallExpr)
32 name (SimpleName)
33 identifier='skipWhitespace'
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='nextToken'
38 name (SimpleName)
39 identifier='Tokenizer'
40 parameters
41 parameter (Parameter)
42 isVarArgs='false'
43 name (SimpleName)
44 identifier='text'
45 type (ClassOrInterfaceType)
46 name (SimpleName)
47 identifier='CharSequence'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
4 10
10 11
11 12
2 13
13 14
14 15
14 16
16 17
17 18
16 19
14 20
20 21
21 22
20 23
23 24
24 25
20 26
26 27
27 28
28 29
2 30
30 31
31 32
32 33
2 34
34 35
35 36
36 37
0 38
38 39
0 40
40 41
41 42
41 43
43 44
41 45
45 46
46 47

Construct a tokenizer that parses tokens from the given text.
