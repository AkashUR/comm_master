125
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (ArrayAccessExpr)
7 index (IntegerLiteralExpr)
8 value='0'
9 name (NameExpr)
10 name (SimpleName)
11 identifier='tempBuffer'
12 value (CastExpr)
13 expression (EnclosedExpr)
14 inner (BinaryExpr)
15 operator='BINARY_AND'
16 left (EnclosedExpr)
17 inner (BinaryExpr)
18 operator='UNSIGNED_RIGHT_SHIFT'
19 left (NameExpr)
20 name (SimpleName)
21 identifier='v'
22 right (IntegerLiteralExpr)
23 value='24'
24 right (IntegerLiteralExpr)
25 value='0xFF'
26 type (PrimitiveType)
27 type='BYTE'
28 statement (ExpressionStmt)
29 expression (AssignExpr)
30 operator='ASSIGN'
31 target (ArrayAccessExpr)
32 index (IntegerLiteralExpr)
33 value='1'
34 name (NameExpr)
35 name (SimpleName)
36 identifier='tempBuffer'
37 value (CastExpr)
38 expression (EnclosedExpr)
39 inner (BinaryExpr)
40 operator='BINARY_AND'
41 left (EnclosedExpr)
42 inner (BinaryExpr)
43 operator='UNSIGNED_RIGHT_SHIFT'
44 left (NameExpr)
45 name (SimpleName)
46 identifier='v'
47 right (IntegerLiteralExpr)
48 value='16'
49 right (IntegerLiteralExpr)
50 value='0xFF'
51 type (PrimitiveType)
52 type='BYTE'
53 statement (ExpressionStmt)
54 expression (AssignExpr)
55 operator='ASSIGN'
56 target (ArrayAccessExpr)
57 index (IntegerLiteralExpr)
58 value='2'
59 name (NameExpr)
60 name (SimpleName)
61 identifier='tempBuffer'
62 value (CastExpr)
63 expression (EnclosedExpr)
64 inner (BinaryExpr)
65 operator='BINARY_AND'
66 left (EnclosedExpr)
67 inner (BinaryExpr)
68 operator='UNSIGNED_RIGHT_SHIFT'
69 left (NameExpr)
70 name (SimpleName)
71 identifier='v'
72 right (IntegerLiteralExpr)
73 value='8'
74 right (IntegerLiteralExpr)
75 value='0xFF'
76 type (PrimitiveType)
77 type='BYTE'
78 statement (ExpressionStmt)
79 expression (AssignExpr)
80 operator='ASSIGN'
81 target (ArrayAccessExpr)
82 index (IntegerLiteralExpr)
83 value='3'
84 name (NameExpr)
85 name (SimpleName)
86 identifier='tempBuffer'
87 value (CastExpr)
88 expression (EnclosedExpr)
89 inner (BinaryExpr)
90 operator='BINARY_AND'
91 left (EnclosedExpr)
92 inner (BinaryExpr)
93 operator='UNSIGNED_RIGHT_SHIFT'
94 left (NameExpr)
95 name (SimpleName)
96 identifier='v'
97 right (IntegerLiteralExpr)
98 value='0'
99 right (IntegerLiteralExpr)
100 value='0xFF'
101 type (PrimitiveType)
102 type='BYTE'
103 statement (ExpressionStmt)
104 expression (MethodCallExpr)
105 name (SimpleName)
106 identifier='write'
107 arguments
108 argument (NameExpr)
109 name (SimpleName)
110 identifier='tempBuffer'
111 argument (IntegerLiteralExpr)
112 value='0'
113 argument (IntegerLiteralExpr)
114 value='4'
115 type (VoidType)
116 name (SimpleName)
117 identifier='writeInt'
118 parameters
119 parameter (Parameter)
120 isVarArgs='false'
121 name (SimpleName)
122 identifier='v'
123 type (PrimitiveType)
124 type='INT'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
6 9
9 10
10 11
4 12
12 13
13 14
14 15
14 16
16 17
17 18
17 19
19 20
20 21
17 22
22 23
14 24
24 25
12 26
26 27
2 28
28 29
29 30
29 31
31 32
32 33
31 34
34 35
35 36
29 37
37 38
38 39
39 40
39 41
41 42
42 43
42 44
44 45
45 46
42 47
47 48
39 49
49 50
37 51
51 52
2 53
53 54
54 55
54 56
56 57
57 58
56 59
59 60
60 61
54 62
62 63
63 64
64 65
64 66
66 67
67 68
67 69
69 70
70 71
67 72
72 73
64 74
74 75
62 76
76 77
2 78
78 79
79 80
79 81
81 82
82 83
81 84
84 85
85 86
79 87
87 88
88 89
89 90
89 91
91 92
92 93
92 94
94 95
95 96
92 97
97 98
89 99
99 100
87 101
101 102
2 103
103 104
104 105
105 106
104 107
107 108
108 109
109 110
107 111
111 112
107 113
113 114
0 115
0 116
116 117
0 118
118 119
119 120
119 121
121 122
119 123
123 124

Writes an <code>int</code> to the underlying output stream as four bytes, high byte first. If no exception is thrown, the counter <code>written</code> is incremented by <code>4</code>.
