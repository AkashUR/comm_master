113
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='put'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='store'
10 arguments
11 argument (StringLiteralExpr)
12 value='module1'
13 argument (MethodCallExpr)
14 name (SimpleName)
15 identifier='asList'
16 scope (NameExpr)
17 name (SimpleName)
18 identifier='Arrays'
19 arguments
20 argument (ArrayCreationExpr)
21 elementType (ClassOrInterfaceType)
22 name (SimpleName)
23 identifier='String'
24 initializer (ArrayInitializerExpr)
25 values
26 value (StringLiteralExpr)
27 value='extend1'
28 value (StringLiteralExpr)
29 value='extend2'
30 value (StringLiteralExpr)
31 value='extend1'
32 levels
33 level (ArrayCreationLevel)
34 statement (ExpressionStmt)
35 expression (MethodCallExpr)
36 name (SimpleName)
37 identifier='assertTrue'
38 arguments
39 argument (BinaryExpr)
40 operator='AND'
41 left (MethodCallExpr)
42 name (SimpleName)
43 identifier='contains'
44 scope (MethodCallExpr)
45 name (SimpleName)
46 identifier='getListOfModulesToReparse'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='store'
50 arguments
51 argument (StringLiteralExpr)
52 value='extend1'
53 arguments
54 argument (StringLiteralExpr)
55 value='module1'
56 right (BinaryExpr)
57 operator='EQUALS'
58 left (MethodCallExpr)
59 name (SimpleName)
60 identifier='size'
61 scope (MethodCallExpr)
62 name (SimpleName)
63 identifier='getListOfModulesToReparse'
64 scope (NameExpr)
65 name (SimpleName)
66 identifier='store'
67 arguments
68 argument (StringLiteralExpr)
69 value='extend1'
70 right (IntegerLiteralExpr)
71 value='1'
72 statement (ExpressionStmt)
73 expression (MethodCallExpr)
74 name (SimpleName)
75 identifier='assertTrue'
76 arguments
77 argument (BinaryExpr)
78 operator='AND'
79 left (MethodCallExpr)
80 name (SimpleName)
81 identifier='contains'
82 scope (MethodCallExpr)
83 name (SimpleName)
84 identifier='getListOfModulesToReparse'
85 scope (NameExpr)
86 name (SimpleName)
87 identifier='store'
88 arguments
89 argument (StringLiteralExpr)
90 value='extend2'
91 arguments
92 argument (StringLiteralExpr)
93 value='module1'
94 right (BinaryExpr)
95 operator='EQUALS'
96 left (MethodCallExpr)
97 name (SimpleName)
98 identifier='size'
99 scope (MethodCallExpr)
100 name (SimpleName)
101 identifier='getListOfModulesToReparse'
102 scope (NameExpr)
103 name (SimpleName)
104 identifier='store'
105 arguments
106 argument (StringLiteralExpr)
107 value='extend2'
108 right (IntegerLiteralExpr)
109 value='1'
110 type (VoidType)
111 name (SimpleName)
112 identifier='testStore1'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
10 13
13 14
14 15
13 16
16 17
17 18
13 19
19 20
20 21
21 22
22 23
20 24
24 25
25 26
26 27
25 28
28 29
25 30
30 31
20 32
32 33
2 34
34 35
35 36
36 37
35 38
38 39
39 40
39 41
41 42
42 43
41 44
44 45
45 46
44 47
47 48
48 49
44 50
50 51
51 52
41 53
53 54
54 55
39 56
56 57
56 58
58 59
59 60
58 61
61 62
62 63
61 64
64 65
65 66
61 67
67 68
68 69
56 70
70 71
2 72
72 73
73 74
74 75
73 76
76 77
77 78
77 79
79 80
80 81
79 82
82 83
83 84
82 85
85 86
86 87
82 88
88 89
89 90
79 91
91 92
92 93
77 94
94 95
94 96
96 97
97 98
96 99
99 100
100 101
99 102
102 103
103 104
99 105
105 106
106 107
94 108
108 109
0 110
0 111
111 112

module1 -> extend1, extend2 extend2 -> extend1
