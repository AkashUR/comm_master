52
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='true'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='m'
9 argument (NameExpr)
10 name (SimpleName)
11 identifier='n'
12 statement (ExpressionStmt)
13 expression (MethodCallExpr)
14 name (SimpleName)
15 identifier='setMatrix'
16 scope (ThisExpr)
17 arguments
18 argument (NameExpr)
19 name (SimpleName)
20 identifier='dim'
21 argument (NameExpr)
22 name (SimpleName)
23 identifier='values'
24 name (SimpleName)
25 identifier='DoubleMatrix'
26 parameters
27 parameter (Parameter)
28 isVarArgs='false'
29 name (SimpleName)
30 identifier='m'
31 type (PrimitiveType)
32 type='INT'
33 parameter (Parameter)
34 isVarArgs='false'
35 name (SimpleName)
36 identifier='n'
37 type (PrimitiveType)
38 type='INT'
39 parameter (Parameter)
40 isVarArgs='false'
41 name (SimpleName)
42 identifier='dim'
43 type (ClassOrInterfaceType)
44 name (SimpleName)
45 identifier='Dimension'
46 parameter (Parameter)
47 isVarArgs='true'
48 name (SimpleName)
49 identifier='values'
50 type (PrimitiveType)
51 type='DOUBLE'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
2 12
12 13
13 14
14 15
13 16
13 17
17 18
18 19
19 20
17 21
21 22
22 23
0 24
24 25
0 26
26 27
27 28
27 29
29 30
27 31
31 32
26 33
33 34
33 35
35 36
33 37
37 38
26 39
39 40
39 41
41 42
39 43
43 44
44 45
26 46
46 47
46 48
48 49
46 50
50 51

Create a matrix with m rows and n columns with the specified values. values.length is expected to be m*n if dim==1 The matrix is initialized by running the row index first, e.g., values[0..m-1] initialize the first column, values[m..2m-1] the second column etc if dim==2 The matrix is initialized by running the column index first,
