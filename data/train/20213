79
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='setNameSpace'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='validatorInfo'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='ns'
14 statement (ExpressionStmt)
15 expression (MethodCallExpr)
16 name (SimpleName)
17 identifier='setLocalName'
18 scope (NameExpr)
19 name (SimpleName)
20 identifier='validatorInfo'
21 arguments
22 argument (NameExpr)
23 name (SimpleName)
24 identifier='ln'
25 statement (ExpressionStmt)
26 expression (MethodCallExpr)
27 name (SimpleName)
28 identifier='setQName'
29 scope (NameExpr)
30 name (SimpleName)
31 identifier='validatorInfo'
32 arguments
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='qn'
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='parseEndElement'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='idTagParser'
43 statement (ExpressionStmt)
44 expression (MethodCallExpr)
45 name (SimpleName)
46 identifier='parseEndElement'
47 scope (NameExpr)
48 name (SimpleName)
49 identifier='coreTagParser'
50 type (VoidType)
51 name (SimpleName)
52 identifier='endElement'
53 parameters
54 parameter (Parameter)
55 isVarArgs='false'
56 name (SimpleName)
57 identifier='ns'
58 type (ClassOrInterfaceType)
59 name (SimpleName)
60 identifier='String'
61 parameter (Parameter)
62 isVarArgs='false'
63 name (SimpleName)
64 identifier='ln'
65 type (ClassOrInterfaceType)
66 name (SimpleName)
67 identifier='String'
68 parameter (Parameter)
69 isVarArgs='false'
70 name (SimpleName)
71 identifier='qn'
72 type (ClassOrInterfaceType)
73 name (SimpleName)
74 identifier='String'
75 annotations
76 annotation (MarkerAnnotationExpr)
77 name (Name)
78 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
2 14
14 15
15 16
16 17
15 18
18 19
19 20
15 21
21 22
22 23
23 24
2 25
25 26
26 27
27 28
26 29
29 30
30 31
26 32
32 33
33 34
34 35
2 36
36 37
37 38
38 39
37 40
40 41
41 42
2 43
43 44
44 45
45 46
44 47
47 48
48 49
0 50
0 51
51 52
0 53
53 54
54 55
54 56
56 57
54 58
58 59
59 60
53 61
61 62
61 63
63 64
61 65
65 66
66 67
53 68
68 69
68 70
70 71
68 72
72 73
73 74
0 75
75 76
76 77
77 78

<p>Parse the ending element. If it is a specific JSTL tag make sure that the nested count is decreased.</p>
