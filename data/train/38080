150
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (AssignExpr)
5 operator='ASSIGN'
6 target (NameExpr)
7 name (SimpleName)
8 identifier='type'
9 value (FieldAccessExpr)
10 name (SimpleName)
11 identifier='COMMENT'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='Token'
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (NameExpr)
19 name (SimpleName)
20 identifier='column'
21 value (NameExpr)
22 name (SimpleName)
23 identifier='col'
24 statement (ExpressionStmt)
25 expression (AssignExpr)
26 operator='ASSIGN'
27 target (NameExpr)
28 name (SimpleName)
29 identifier='string'
30 value (NameExpr)
31 name (SimpleName)
32 identifier='str'
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (NameExpr)
37 name (SimpleName)
38 identifier='rsubtype'
39 value (NameExpr)
40 name (SimpleName)
41 identifier='sub'
42 statement (ExpressionStmt)
43 expression (AssignExpr)
44 operator='ASSIGN'
45 target (NameExpr)
46 name (SimpleName)
47 identifier='subtype'
48 value (IntegerLiteralExpr)
49 value='0'
50 statement (SwitchStmt)
51 selector (NameExpr)
52 name (SimpleName)
53 identifier='rsubtype'
54 entries
55 entrie (SwitchEntryStmt)
56 label (NameExpr)
57 name (SimpleName)
58 identifier='NORMAL'
59 statements
60 statement (ExpressionStmt)
61 expression (AssignExpr)
62 operator='ASSIGN'
63 target (NameExpr)
64 name (SimpleName)
65 identifier='delimiters'
66 value (ConditionalExpr)
67 condition (NameExpr)
68 name (SimpleName)
69 identifier='pseudo'
70 elseExpr (IntegerLiteralExpr)
71 value='4'
72 thenExpr (IntegerLiteralExpr)
73 value='2'
74 statement (BreakStmt)
75 entrie (SwitchEntryStmt)
76 label (NameExpr)
77 name (SimpleName)
78 identifier='LINE'
79 entrie (SwitchEntryStmt)
80 label (NameExpr)
81 name (SimpleName)
82 identifier='BEGIN_OVERRUN'
83 entrie (SwitchEntryStmt)
84 label (NameExpr)
85 name (SimpleName)
86 identifier='END_OVERRUN'
87 statements
88 statement (ExpressionStmt)
89 expression (AssignExpr)
90 operator='ASSIGN'
91 target (NameExpr)
92 name (SimpleName)
93 identifier='delimiters'
94 value (ConditionalExpr)
95 condition (NameExpr)
96 name (SimpleName)
97 identifier='pseudo'
98 elseExpr (IntegerLiteralExpr)
99 value='2'
100 thenExpr (IntegerLiteralExpr)
101 value='0'
102 statement (BreakStmt)
103 entrie (SwitchEntryStmt)
104 label (NameExpr)
105 name (SimpleName)
106 identifier='OVERRUN'
107 statements
108 statement (BreakStmt)
109 entrie (SwitchEntryStmt)
110 statements
111 statement (ExpressionStmt)
112 expression (MethodCallExpr)
113 name (SimpleName)
114 identifier='ReportBug'
115 scope (NameExpr)
116 name (SimpleName)
117 identifier='Debug'
118 arguments
119 argument (StringLiteralExpr)
120 value='CommentToken constructor called with illegal subtype'
121 statement (EmptyStmt)
122 name (SimpleName)
123 identifier='CommentToken'
124 parameters
125 parameter (Parameter)
126 isVarArgs='false'
127 name (SimpleName)
128 identifier='str'
129 type (ClassOrInterfaceType)
130 name (SimpleName)
131 identifier='String'
132 parameter (Parameter)
133 isVarArgs='false'
134 name (SimpleName)
135 identifier='col'
136 type (PrimitiveType)
137 type='INT'
138 parameter (Parameter)
139 isVarArgs='false'
140 name (SimpleName)
141 identifier='sub'
142 type (PrimitiveType)
143 type='INT'
144 parameter (Parameter)
145 isVarArgs='false'
146 name (SimpleName)
147 identifier='pseudo'
148 type (PrimitiveType)
149 type='BOOLEAN'
0 1
1 2
2 3
3 4
4 5
4 6
6 7
7 8
4 9
9 10
10 11
9 12
12 13
13 14
2 15
15 16
16 17
16 18
18 19
19 20
16 21
21 22
22 23
2 24
24 25
25 26
25 27
27 28
28 29
25 30
30 31
31 32
2 33
33 34
34 35
34 36
36 37
37 38
34 39
39 40
40 41
2 42
42 43
43 44
43 45
45 46
46 47
43 48
48 49
2 50
50 51
51 52
52 53
50 54
54 55
55 56
56 57
57 58
55 59
59 60
60 61
61 62
61 63
63 64
64 65
61 66
66 67
67 68
68 69
66 70
70 71
66 72
72 73
59 74
54 75
75 76
76 77
77 78
54 79
79 80
80 81
81 82
54 83
83 84
84 85
85 86
83 87
87 88
88 89
89 90
89 91
91 92
92 93
89 94
94 95
95 96
96 97
94 98
98 99
94 100
100 101
87 102
54 103
103 104
104 105
105 106
103 107
107 108
54 109
109 110
110 111
111 112
112 113
113 114
112 115
115 116
116 117
112 118
118 119
119 120
2 121
0 122
122 123
0 124
124 125
125 126
125 127
127 128
125 129
129 130
130 131
124 132
132 133
132 134
134 135
132 136
136 137
124 138
138 139
138 140
140 141
138 142
142 143
124 144
144 145
144 146
146 147
144 148
148 149

This is the number of comment delimiter characters deleted from      the string.  It is 4 for a "(* ... *)" comment, etc.               
