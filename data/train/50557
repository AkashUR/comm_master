51
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='getJAMonDetailRow'
10 scope (NameExpr)
11 name (SimpleName)
12 identifier='mon'
13 name (SimpleName)
14 identifier='jamDetail'
15 type (ClassOrInterfaceType)
16 name (SimpleName)
17 identifier='JAMonDetailValue'
18 statement (ExpressionStmt)
19 expression (MethodCallExpr)
20 name (SimpleName)
21 identifier='setKeyToString'
22 scope (NameExpr)
23 name (SimpleName)
24 identifier='jamDetail'
25 arguments
26 argument (BooleanLiteralExpr)
27 value='false'
28 statement (ExpressionStmt)
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='addRow'
32 arguments
33 argument (NameExpr)
34 name (SimpleName)
35 identifier='jamDetail'
36 type (VoidType)
37 name (SimpleName)
38 identifier='processEvent'
39 parameters
40 parameter (Parameter)
41 isVarArgs='false'
42 name (SimpleName)
43 identifier='mon'
44 type (ClassOrInterfaceType)
45 name (SimpleName)
46 identifier='Monitor'
47 annotations
48 annotation (MarkerAnnotationExpr)
49 name (Name)
50 identifier='Override'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
6 13
13 14
6 15
15 16
16 17
2 18
18 19
19 20
20 21
19 22
22 23
23 24
19 25
25 26
26 27
2 28
28 29
29 30
30 31
29 32
32 33
33 34
34 35
0 36
0 37
37 38
0 39
39 40
40 41
40 42
42 43
40 44
44 45
45 46
0 47
47 48
48 49
49 50

When this event is fired the monitor will be added to the rolling buffer. If it is a log4j monitor the buffer will be specific to log4j fields (i.e.LoggingEvent info such as threadname, formattedmessage, exception stack trace and a few others. If it is not then the super class's processEvent is called.
