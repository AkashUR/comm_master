98
0 root (ConstructorDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExplicitConstructorInvocationStmt)
4 isThis='false'
5 arguments
6 argument (NameExpr)
7 name (SimpleName)
8 identifier='mode'
9 argument (MethodCallExpr)
10 name (SimpleName)
11 identifier='getNameCoder'
12 scope (NameExpr)
13 name (SimpleName)
14 identifier='format'
15 statement (ExpressionStmt)
16 expression (AssignExpr)
17 operator='ASSIGN'
18 target (FieldAccessExpr)
19 name (SimpleName)
20 identifier='writer'
21 scope (ThisExpr)
22 value (ObjectCreationExpr)
23 type (ClassOrInterfaceType)
24 name (SimpleName)
25 identifier='QuickWriter'
26 arguments
27 argument (NameExpr)
28 name (SimpleName)
29 identifier='writer'
30 argument (NameExpr)
31 name (SimpleName)
32 identifier='bufferSize'
33 statement (ExpressionStmt)
34 expression (AssignExpr)
35 operator='ASSIGN'
36 target (FieldAccessExpr)
37 name (SimpleName)
38 identifier='format'
39 scope (ThisExpr)
40 value (NameExpr)
41 name (SimpleName)
42 identifier='format'
43 statement (ExpressionStmt)
44 expression (AssignExpr)
45 operator='ASSIGN'
46 target (NameExpr)
47 name (SimpleName)
48 identifier='depth'
49 value (ConditionalExpr)
50 condition (BinaryExpr)
51 operator='EQUALS'
52 left (EnclosedExpr)
53 inner (BinaryExpr)
54 operator='BINARY_AND'
55 left (NameExpr)
56 name (SimpleName)
57 identifier='mode'
58 right (NameExpr)
59 name (SimpleName)
60 identifier='DROP_ROOT_MODE'
61 right (IntegerLiteralExpr)
62 value='0'
63 elseExpr (IntegerLiteralExpr)
64 value='0'
65 thenExpr (UnaryExpr)
66 operator='MINUS'
67 expression (IntegerLiteralExpr)
68 value='1'
69 name (SimpleName)
70 identifier='JsonWriter'
71 parameters
72 parameter (Parameter)
73 isVarArgs='false'
74 name (SimpleName)
75 identifier='writer'
76 type (ClassOrInterfaceType)
77 name (SimpleName)
78 identifier='Writer'
79 parameter (Parameter)
80 isVarArgs='false'
81 name (SimpleName)
82 identifier='mode'
83 type (PrimitiveType)
84 type='INT'
85 parameter (Parameter)
86 isVarArgs='false'
87 name (SimpleName)
88 identifier='format'
89 type (ClassOrInterfaceType)
90 name (SimpleName)
91 identifier='Format'
92 parameter (Parameter)
93 isVarArgs='false'
94 name (SimpleName)
95 identifier='bufferSize'
96 type (PrimitiveType)
97 type='INT'
0 1
1 2
2 3
3 4
3 5
5 6
6 7
7 8
5 9
9 10
10 11
9 12
12 13
13 14
2 15
15 16
16 17
16 18
18 19
19 20
18 21
16 22
22 23
23 24
24 25
22 26
26 27
27 28
28 29
26 30
30 31
31 32
2 33
33 34
34 35
34 36
36 37
37 38
36 39
34 40
40 41
41 42
2 43
43 44
44 45
44 46
46 47
47 48
44 49
49 50
50 51
50 52
52 53
53 54
53 55
55 56
56 57
53 58
58 59
59 60
50 61
61 62
49 63
63 64
49 65
65 66
65 67
67 68
0 69
69 70
0 71
71 72
72 73
72 74
74 75
72 76
76 77
77 78
71 79
79 80
79 81
81 82
79 83
83 84
71 85
85 86
85 87
87 88
85 89
89 90
90 91
71 92
92 93
92 94
94 95
92 96
96 97

Create a JsonWriter.
