557
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='ObjectMapper'
11 name (SimpleName)
12 identifier='mapper'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='ObjectMapper'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='setAnnotationIntrospector'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='mapper'
23 arguments
24 argument (ObjectCreationExpr)
25 type (ClassOrInterfaceType)
26 name (SimpleName)
27 identifier='JaxbAnnotationIntrospector'
28 statement (ExpressionStmt)
29 expression (MethodCallExpr)
30 name (SimpleName)
31 identifier='enable'
32 scope (NameExpr)
33 name (SimpleName)
34 identifier='mapper'
35 arguments
36 argument (FieldAccessExpr)
37 name (SimpleName)
38 identifier='INDENT_OUTPUT'
39 scope (FieldAccessExpr)
40 name (SimpleName)
41 identifier='Feature'
42 scope (NameExpr)
43 name (SimpleName)
44 identifier='SerializationConfig'
45 statement (ExpressionStmt)
46 expression (VariableDeclarationExpr)
47 variables
48 variable (VariableDeclarator)
49 initializer (ObjectCreationExpr)
50 type (ClassOrInterfaceType)
51 name (SimpleName)
52 identifier='JaxbExample'
53 name (SimpleName)
54 identifier='ex'
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='JaxbExample'
58 statement (ExpressionStmt)
59 expression (VariableDeclarationExpr)
60 variables
61 variable (VariableDeclarator)
62 initializer (ObjectCreationExpr)
63 type (ClassOrInterfaceType)
64 name (SimpleName)
65 identifier='QName'
66 arguments
67 argument (StringLiteralExpr)
68 value='urn:hi'
69 argument (StringLiteralExpr)
70 value='hello'
71 name (SimpleName)
72 identifier='qname'
73 type (ClassOrInterfaceType)
74 name (SimpleName)
75 identifier='QName'
76 statement (ExpressionStmt)
77 expression (MethodCallExpr)
78 name (SimpleName)
79 identifier='setQname'
80 scope (NameExpr)
81 name (SimpleName)
82 identifier='ex'
83 arguments
84 argument (NameExpr)
85 name (SimpleName)
86 identifier='qname'
87 statement (ExpressionStmt)
88 expression (VariableDeclarationExpr)
89 variables
90 variable (VariableDeclarator)
91 initializer (ObjectCreationExpr)
92 type (ClassOrInterfaceType)
93 name (SimpleName)
94 identifier='QName'
95 arguments
96 argument (StringLiteralExpr)
97 value='urn:hi'
98 argument (StringLiteralExpr)
99 value='hello1'
100 name (SimpleName)
101 identifier='qname1'
102 type (ClassOrInterfaceType)
103 name (SimpleName)
104 identifier='QName'
105 statement (ExpressionStmt)
106 expression (MethodCallExpr)
107 name (SimpleName)
108 identifier='setQname1'
109 scope (NameExpr)
110 name (SimpleName)
111 identifier='ex'
112 arguments
113 argument (NameExpr)
114 name (SimpleName)
115 identifier='qname1'
116 statement (ExpressionStmt)
117 expression (MethodCallExpr)
118 name (SimpleName)
119 identifier='setAttributeProperty'
120 scope (NameExpr)
121 name (SimpleName)
122 identifier='ex'
123 arguments
124 argument (StringLiteralExpr)
125 value='attributeValue'
126 statement (ExpressionStmt)
127 expression (MethodCallExpr)
128 name (SimpleName)
129 identifier='setElementProperty'
130 scope (NameExpr)
131 name (SimpleName)
132 identifier='ex'
133 arguments
134 argument (StringLiteralExpr)
135 value='elementValue'
136 statement (ExpressionStmt)
137 expression (MethodCallExpr)
138 name (SimpleName)
139 identifier='setWrappedElementProperty'
140 scope (NameExpr)
141 name (SimpleName)
142 identifier='ex'
143 arguments
144 argument (MethodCallExpr)
145 name (SimpleName)
146 identifier='asList'
147 scope (NameExpr)
148 name (SimpleName)
149 identifier='Arrays'
150 arguments
151 argument (StringLiteralExpr)
152 value='wrappedElementValue'
153 statement (ExpressionStmt)
154 expression (MethodCallExpr)
155 name (SimpleName)
156 identifier='setEnumProperty'
157 scope (NameExpr)
158 name (SimpleName)
159 identifier='ex'
160 arguments
161 argument (FieldAccessExpr)
162 name (SimpleName)
163 identifier='VALUE1'
164 scope (NameExpr)
165 name (SimpleName)
166 identifier='EnumExample'
167 statement (ExpressionStmt)
168 expression (MethodCallExpr)
169 name (SimpleName)
170 identifier='setPropertyToIgnore'
171 scope (NameExpr)
172 name (SimpleName)
173 identifier='ex'
174 arguments
175 argument (StringLiteralExpr)
176 value='ignored'
177 statement (ExpressionStmt)
178 expression (VariableDeclarationExpr)
179 variables
180 variable (VariableDeclarator)
181 initializer (ObjectCreationExpr)
182 type (ClassOrInterfaceType)
183 name (SimpleName)
184 identifier='StringWriter'
185 name (SimpleName)
186 identifier='writer'
187 type (ClassOrInterfaceType)
188 name (SimpleName)
189 identifier='StringWriter'
190 statement (ExpressionStmt)
191 expression (MethodCallExpr)
192 name (SimpleName)
193 identifier='writeValue'
194 scope (NameExpr)
195 name (SimpleName)
196 identifier='mapper'
197 arguments
198 argument (NameExpr)
199 name (SimpleName)
200 identifier='writer'
201 argument (NameExpr)
202 name (SimpleName)
203 identifier='ex'
204 statement (ExpressionStmt)
205 expression (MethodCallExpr)
206 name (SimpleName)
207 identifier='flush'
208 scope (NameExpr)
209 name (SimpleName)
210 identifier='writer'
211 statement (ExpressionStmt)
212 expression (MethodCallExpr)
213 name (SimpleName)
214 identifier='close'
215 scope (NameExpr)
216 name (SimpleName)
217 identifier='writer'
218 statement (ExpressionStmt)
219 expression (VariableDeclarationExpr)
220 variables
221 variable (VariableDeclarator)
222 initializer (MethodCallExpr)
223 name (SimpleName)
224 identifier='toString'
225 scope (NameExpr)
226 name (SimpleName)
227 identifier='writer'
228 name (SimpleName)
229 identifier='json'
230 type (ClassOrInterfaceType)
231 name (SimpleName)
232 identifier='String'
233 statement (ExpressionStmt)
234 expression (VariableDeclarationExpr)
235 variables
236 variable (VariableDeclarator)
237 initializer (MethodCallExpr)
238 name (SimpleName)
239 identifier='readValue'
240 scope (NameExpr)
241 name (SimpleName)
242 identifier='mapper'
243 arguments
244 argument (NameExpr)
245 name (SimpleName)
246 identifier='json'
247 argument (ClassExpr)
248 type (ClassOrInterfaceType)
249 name (SimpleName)
250 identifier='JsonNode'
251 name (SimpleName)
252 identifier='node'
253 type (ClassOrInterfaceType)
254 name (SimpleName)
255 identifier='JsonNode'
256 statement (ExpressionStmt)
257 expression (MethodCallExpr)
258 name (SimpleName)
259 identifier='assertEquals'
260 arguments
261 argument (MethodCallExpr)
262 name (SimpleName)
263 identifier='toString'
264 scope (NameExpr)
265 name (SimpleName)
266 identifier='qname'
267 argument (MethodCallExpr)
268 name (SimpleName)
269 identifier='asText'
270 scope (MethodCallExpr)
271 name (SimpleName)
272 identifier='get'
273 scope (NameExpr)
274 name (SimpleName)
275 identifier='node'
276 arguments
277 argument (StringLiteralExpr)
278 value='qname'
279 statement (ExpressionStmt)
280 expression (VariableDeclarationExpr)
281 variables
282 variable (VariableDeclarator)
283 initializer (MethodCallExpr)
284 name (SimpleName)
285 identifier='get'
286 scope (NameExpr)
287 name (SimpleName)
288 identifier='node'
289 arguments
290 argument (StringLiteralExpr)
291 value='myattribute'
292 name (SimpleName)
293 identifier='attr'
294 type (ClassOrInterfaceType)
295 name (SimpleName)
296 identifier='JsonNode'
297 statement (ExpressionStmt)
298 expression (MethodCallExpr)
299 name (SimpleName)
300 identifier='assertNotNull'
301 arguments
302 argument (NameExpr)
303 name (SimpleName)
304 identifier='attr'
305 statement (ExpressionStmt)
306 expression (MethodCallExpr)
307 name (SimpleName)
308 identifier='assertEquals'
309 arguments
310 argument (StringLiteralExpr)
311 value='attributeValue'
312 argument (MethodCallExpr)
313 name (SimpleName)
314 identifier='asText'
315 scope (NameExpr)
316 name (SimpleName)
317 identifier='attr'
318 statement (ExpressionStmt)
319 expression (MethodCallExpr)
320 name (SimpleName)
321 identifier='assertEquals'
322 arguments
323 argument (StringLiteralExpr)
324 value='elementValue'
325 argument (MethodCallExpr)
326 name (SimpleName)
327 identifier='asText'
328 scope (MethodCallExpr)
329 name (SimpleName)
330 identifier='get'
331 scope (NameExpr)
332 name (SimpleName)
333 identifier='node'
334 arguments
335 argument (StringLiteralExpr)
336 value='myelement'
337 statement (ExpressionStmt)
338 expression (MethodCallExpr)
339 name (SimpleName)
340 identifier='assertEquals'
341 arguments
342 argument (IntegerLiteralExpr)
343 value='1'
344 argument (MethodCallExpr)
345 name (SimpleName)
346 identifier='size'
347 scope (MethodCallExpr)
348 name (SimpleName)
349 identifier='get'
350 scope (NameExpr)
351 name (SimpleName)
352 identifier='node'
353 arguments
354 argument (StringLiteralExpr)
355 value='mywrapped'
356 statement (ExpressionStmt)
357 expression (MethodCallExpr)
358 name (SimpleName)
359 identifier='assertEquals'
360 arguments
361 argument (StringLiteralExpr)
362 value='wrappedElementValue'
363 argument (MethodCallExpr)
364 name (SimpleName)
365 identifier='asText'
366 scope (MethodCallExpr)
367 name (SimpleName)
368 identifier='get'
369 scope (MethodCallExpr)
370 name (SimpleName)
371 identifier='get'
372 scope (NameExpr)
373 name (SimpleName)
374 identifier='node'
375 arguments
376 argument (StringLiteralExpr)
377 value='mywrapped'
378 arguments
379 argument (IntegerLiteralExpr)
380 value='0'
381 statement (ExpressionStmt)
382 expression (MethodCallExpr)
383 name (SimpleName)
384 identifier='assertEquals'
385 arguments
386 argument (StringLiteralExpr)
387 value='Value One'
388 argument (MethodCallExpr)
389 name (SimpleName)
390 identifier='asText'
391 scope (MethodCallExpr)
392 name (SimpleName)
393 identifier='get'
394 scope (NameExpr)
395 name (SimpleName)
396 identifier='node'
397 arguments
398 argument (StringLiteralExpr)
399 value='enumProperty'
400 statement (ExpressionStmt)
401 expression (MethodCallExpr)
402 name (SimpleName)
403 identifier='assertNull'
404 arguments
405 argument (MethodCallExpr)
406 name (SimpleName)
407 identifier='get'
408 scope (NameExpr)
409 name (SimpleName)
410 identifier='node'
411 arguments
412 argument (StringLiteralExpr)
413 value='propertyToIgnore'
414 statement (ExpressionStmt)
415 expression (VariableDeclarationExpr)
416 variables
417 variable (VariableDeclarator)
418 initializer (MethodCallExpr)
419 name (SimpleName)
420 identifier='readValue'
421 scope (NameExpr)
422 name (SimpleName)
423 identifier='mapper'
424 arguments
425 argument (NameExpr)
426 name (SimpleName)
427 identifier='json'
428 argument (ClassExpr)
429 type (ClassOrInterfaceType)
430 name (SimpleName)
431 identifier='JaxbExample'
432 name (SimpleName)
433 identifier='readEx'
434 type (ClassOrInterfaceType)
435 name (SimpleName)
436 identifier='JaxbExample'
437 statement (ExpressionStmt)
438 expression (MethodCallExpr)
439 name (SimpleName)
440 identifier='assertEquals'
441 arguments
442 argument (FieldAccessExpr)
443 name (SimpleName)
444 identifier='qname'
445 scope (NameExpr)
446 name (SimpleName)
447 identifier='ex'
448 argument (FieldAccessExpr)
449 name (SimpleName)
450 identifier='qname'
451 scope (NameExpr)
452 name (SimpleName)
453 identifier='readEx'
454 statement (ExpressionStmt)
455 expression (MethodCallExpr)
456 name (SimpleName)
457 identifier='assertEquals'
458 arguments
459 argument (FieldAccessExpr)
460 name (SimpleName)
461 identifier='qname1'
462 scope (NameExpr)
463 name (SimpleName)
464 identifier='ex'
465 argument (FieldAccessExpr)
466 name (SimpleName)
467 identifier='qname1'
468 scope (NameExpr)
469 name (SimpleName)
470 identifier='readEx'
471 statement (ExpressionStmt)
472 expression (MethodCallExpr)
473 name (SimpleName)
474 identifier='assertEquals'
475 arguments
476 argument (FieldAccessExpr)
477 name (SimpleName)
478 identifier='attributeProperty'
479 scope (NameExpr)
480 name (SimpleName)
481 identifier='ex'
482 argument (FieldAccessExpr)
483 name (SimpleName)
484 identifier='attributeProperty'
485 scope (NameExpr)
486 name (SimpleName)
487 identifier='readEx'
488 statement (ExpressionStmt)
489 expression (MethodCallExpr)
490 name (SimpleName)
491 identifier='assertEquals'
492 arguments
493 argument (FieldAccessExpr)
494 name (SimpleName)
495 identifier='elementProperty'
496 scope (NameExpr)
497 name (SimpleName)
498 identifier='ex'
499 argument (FieldAccessExpr)
500 name (SimpleName)
501 identifier='elementProperty'
502 scope (NameExpr)
503 name (SimpleName)
504 identifier='readEx'
505 statement (ExpressionStmt)
506 expression (MethodCallExpr)
507 name (SimpleName)
508 identifier='assertEquals'
509 arguments
510 argument (FieldAccessExpr)
511 name (SimpleName)
512 identifier='wrappedElementProperty'
513 scope (NameExpr)
514 name (SimpleName)
515 identifier='ex'
516 argument (FieldAccessExpr)
517 name (SimpleName)
518 identifier='wrappedElementProperty'
519 scope (NameExpr)
520 name (SimpleName)
521 identifier='readEx'
522 statement (ExpressionStmt)
523 expression (MethodCallExpr)
524 name (SimpleName)
525 identifier='assertEquals'
526 arguments
527 argument (FieldAccessExpr)
528 name (SimpleName)
529 identifier='enumProperty'
530 scope (NameExpr)
531 name (SimpleName)
532 identifier='ex'
533 argument (FieldAccessExpr)
534 name (SimpleName)
535 identifier='enumProperty'
536 scope (NameExpr)
537 name (SimpleName)
538 identifier='readEx'
539 statement (ExpressionStmt)
540 expression (MethodCallExpr)
541 name (SimpleName)
542 identifier='assertNull'
543 arguments
544 argument (FieldAccessExpr)
545 name (SimpleName)
546 identifier='propertyToIgnore'
547 scope (NameExpr)
548 name (SimpleName)
549 identifier='readEx'
550 type (VoidType)
551 name (SimpleName)
552 identifier='testSerializeDeserializeWithJaxbAnnotations'
553 thrownExceptions
554 thrownException (ClassOrInterfaceType)
555 name (SimpleName)
556 identifier='Exception'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
17 23
23 24
24 25
25 26
26 27
2 28
28 29
29 30
30 31
29 32
32 33
33 34
29 35
35 36
36 37
37 38
36 39
39 40
40 41
39 42
42 43
43 44
2 45
45 46
46 47
47 48
48 49
49 50
50 51
51 52
48 53
53 54
48 55
55 56
56 57
2 58
58 59
59 60
60 61
61 62
62 63
63 64
64 65
62 66
66 67
67 68
66 69
69 70
61 71
71 72
61 73
73 74
74 75
2 76
76 77
77 78
78 79
77 80
80 81
81 82
77 83
83 84
84 85
85 86
2 87
87 88
88 89
89 90
90 91
91 92
92 93
93 94
91 95
95 96
96 97
95 98
98 99
90 100
100 101
90 102
102 103
103 104
2 105
105 106
106 107
107 108
106 109
109 110
110 111
106 112
112 113
113 114
114 115
2 116
116 117
117 118
118 119
117 120
120 121
121 122
117 123
123 124
124 125
2 126
126 127
127 128
128 129
127 130
130 131
131 132
127 133
133 134
134 135
2 136
136 137
137 138
138 139
137 140
140 141
141 142
137 143
143 144
144 145
145 146
144 147
147 148
148 149
144 150
150 151
151 152
2 153
153 154
154 155
155 156
154 157
157 158
158 159
154 160
160 161
161 162
162 163
161 164
164 165
165 166
2 167
167 168
168 169
169 170
168 171
171 172
172 173
168 174
174 175
175 176
2 177
177 178
178 179
179 180
180 181
181 182
182 183
183 184
180 185
185 186
180 187
187 188
188 189
2 190
190 191
191 192
192 193
191 194
194 195
195 196
191 197
197 198
198 199
199 200
197 201
201 202
202 203
2 204
204 205
205 206
206 207
205 208
208 209
209 210
2 211
211 212
212 213
213 214
212 215
215 216
216 217
2 218
218 219
219 220
220 221
221 222
222 223
223 224
222 225
225 226
226 227
221 228
228 229
221 230
230 231
231 232
2 233
233 234
234 235
235 236
236 237
237 238
238 239
237 240
240 241
241 242
237 243
243 244
244 245
245 246
243 247
247 248
248 249
249 250
236 251
251 252
236 253
253 254
254 255
2 256
256 257
257 258
258 259
257 260
260 261
261 262
262 263
261 264
264 265
265 266
260 267
267 268
268 269
267 270
270 271
271 272
270 273
273 274
274 275
270 276
276 277
277 278
2 279
279 280
280 281
281 282
282 283
283 284
284 285
283 286
286 287
287 288
283 289
289 290
290 291
282 292
292 293
282 294
294 295
295 296
2 297
297 298
298 299
299 300
298 301
301 302
302 303
303 304
2 305
305 306
306 307
307 308
306 309
309 310
310 311
309 312
312 313
313 314
312 315
315 316
316 317
2 318
318 319
319 320
320 321
319 322
322 323
323 324
322 325
325 326
326 327
325 328
328 329
329 330
328 331
331 332
332 333
328 334
334 335
335 336
2 337
337 338
338 339
339 340
338 341
341 342
342 343
341 344
344 345
345 346
344 347
347 348
348 349
347 350
350 351
351 352
347 353
353 354
354 355
2 356
356 357
357 358
358 359
357 360
360 361
361 362
360 363
363 364
364 365
363 366
366 367
367 368
366 369
369 370
370 371
369 372
372 373
373 374
369 375
375 376
376 377
366 378
378 379
379 380
2 381
381 382
382 383
383 384
382 385
385 386
386 387
385 388
388 389
389 390
388 391
391 392
392 393
391 394
394 395
395 396
391 397
397 398
398 399
2 400
400 401
401 402
402 403
401 404
404 405
405 406
406 407
405 408
408 409
409 410
405 411
411 412
412 413
2 414
414 415
415 416
416 417
417 418
418 419
419 420
418 421
421 422
422 423
418 424
424 425
425 426
426 427
424 428
428 429
429 430
430 431
417 432
432 433
417 434
434 435
435 436
2 437
437 438
438 439
439 440
438 441
441 442
442 443
443 444
442 445
445 446
446 447
441 448
448 449
449 450
448 451
451 452
452 453
2 454
454 455
455 456
456 457
455 458
458 459
459 460
460 461
459 462
462 463
463 464
458 465
465 466
466 467
465 468
468 469
469 470
2 471
471 472
472 473
473 474
472 475
475 476
476 477
477 478
476 479
479 480
480 481
475 482
482 483
483 484
482 485
485 486
486 487
2 488
488 489
489 490
490 491
489 492
492 493
493 494
494 495
493 496
496 497
497 498
492 499
499 500
500 501
499 502
502 503
503 504
2 505
505 506
506 507
507 508
506 509
509 510
510 511
511 512
510 513
513 514
514 515
509 516
516 517
517 518
516 519
519 520
520 521
2 522
522 523
523 524
524 525
523 526
526 527
527 528
528 529
527 530
530 531
531 532
526 533
533 534
534 535
533 536
536 537
537 538
2 539
539 540
540 541
541 542
540 543
543 544
544 545
545 546
544 547
547 548
548 549
0 550
0 551
551 552
0 553
553 554
554 555
555 556

tests getting serializer/deserializer instances.
