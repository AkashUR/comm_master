36
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='releaseShared'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='sync'
10 arguments
11 argument (BinaryExpr)
12 operator='MULTIPLY'
13 left (IntegerLiteralExpr)
14 value='1'
15 right (EnclosedExpr)
16 inner (MethodCallExpr)
17 name (SimpleName)
18 identifier='abs'
19 scope (NameExpr)
20 name (SimpleName)
21 identifier='Math'
22 arguments
23 argument (NameExpr)
24 name (SimpleName)
25 identifier='count'
26 type (VoidType)
27 name (SimpleName)
28 identifier='countDown'
29 parameters
30 parameter (Parameter)
31 isVarArgs='false'
32 name (SimpleName)
33 identifier='count'
34 type (PrimitiveType)
35 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
11 13
13 14
11 15
15 16
16 17
17 18
16 19
19 20
20 21
16 22
22 23
23 24
24 25
0 26
0 27
27 28
0 29
29 30
30 31
30 32
32 33
30 34
34 35

Decrements the count of the latch, releasing all waiting threads if the count reaches zero. <p> If the current count is greater than zero then it is decremented. If the new count is zero then all waiting threads are re-enabled for thread scheduling purposes. <p> If the current count equals zero then nothing happens.
