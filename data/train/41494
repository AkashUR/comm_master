124
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (ObjectCreationExpr)
8 type (ClassOrInterfaceType)
9 name (SimpleName)
10 identifier='Project'
11 name (SimpleName)
12 identifier='antProject'
13 type (ClassOrInterfaceType)
14 name (SimpleName)
15 identifier='Project'
16 statement (ExpressionStmt)
17 expression (MethodCallExpr)
18 name (SimpleName)
19 identifier='init'
20 scope (NameExpr)
21 name (SimpleName)
22 identifier='antProject'
23 statement (ExpressionStmt)
24 expression (MethodCallExpr)
25 name (SimpleName)
26 identifier='setProject'
27 scope (FieldAccessExpr)
28 name (SimpleName)
29 identifier='task'
30 scope (ThisExpr)
31 arguments
32 argument (NameExpr)
33 name (SimpleName)
34 identifier='antProject'
35 statement (ExpressionStmt)
36 expression (MethodCallExpr)
37 name (SimpleName)
38 identifier='setId'
39 scope (FieldAccessExpr)
40 name (SimpleName)
41 identifier='task'
42 scope (ThisExpr)
43 arguments
44 argument (StringLiteralExpr)
45 value='testRefId'
46 statement (ExpressionStmt)
47 expression (MethodCallExpr)
48 name (SimpleName)
49 identifier='setHome'
50 scope (FieldAccessExpr)
51 name (SimpleName)
52 identifier='task'
53 scope (ThisExpr)
54 arguments
55 argument (StringLiteralExpr)
56 value='home'
57 statement (ExpressionStmt)
58 expression (MethodCallExpr)
59 name (SimpleName)
60 identifier='execute'
61 scope (FieldAccessExpr)
62 name (SimpleName)
63 identifier='task'
64 scope (ThisExpr)
65 statement (ExpressionStmt)
66 expression (VariableDeclarationExpr)
67 variables
68 variable (VariableDeclarator)
69 initializer (ObjectCreationExpr)
70 type (ClassOrInterfaceType)
71 name (SimpleName)
72 identifier='CargoTask'
73 name (SimpleName)
74 identifier='task2'
75 type (ClassOrInterfaceType)
76 name (SimpleName)
77 identifier='CargoTask'
78 statement (ExpressionStmt)
79 expression (MethodCallExpr)
80 name (SimpleName)
81 identifier='setProject'
82 scope (NameExpr)
83 name (SimpleName)
84 identifier='task2'
85 arguments
86 argument (NameExpr)
87 name (SimpleName)
88 identifier='antProject'
89 statement (ExpressionStmt)
90 expression (MethodCallExpr)
91 name (SimpleName)
92 identifier='setRefId'
93 scope (NameExpr)
94 name (SimpleName)
95 identifier='task2'
96 arguments
97 argument (ObjectCreationExpr)
98 type (ClassOrInterfaceType)
99 name (SimpleName)
100 identifier='Reference'
101 arguments
102 argument (StringLiteralExpr)
103 value='testRefId'
104 statement (ExpressionStmt)
105 expression (MethodCallExpr)
106 name (SimpleName)
107 identifier='setAction'
108 scope (NameExpr)
109 name (SimpleName)
110 identifier='task2'
111 arguments
112 argument (StringLiteralExpr)
113 value='start'
114 statement (ExpressionStmt)
115 expression (MethodCallExpr)
116 name (SimpleName)
117 identifier='execute'
118 scope (NameExpr)
119 name (SimpleName)
120 identifier='task2'
121 type (VoidType)
122 name (SimpleName)
123 identifier='testExecuteWhenUsingValidRefId'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
9 10
6 11
11 12
6 13
13 14
14 15
2 16
16 17
17 18
18 19
17 20
20 21
21 22
2 23
23 24
24 25
25 26
24 27
27 28
28 29
27 30
24 31
31 32
32 33
33 34
2 35
35 36
36 37
37 38
36 39
39 40
40 41
39 42
36 43
43 44
44 45
2 46
46 47
47 48
48 49
47 50
50 51
51 52
50 53
47 54
54 55
55 56
2 57
57 58
58 59
59 60
58 61
61 62
62 63
61 64
2 65
65 66
66 67
67 68
68 69
69 70
70 71
71 72
68 73
73 74
68 75
75 76
76 77
2 78
78 79
79 80
80 81
79 82
82 83
83 84
79 85
85 86
86 87
87 88
2 89
89 90
90 91
91 92
90 93
93 94
94 95
90 96
96 97
97 98
98 99
99 100
97 101
101 102
102 103
2 104
104 105
105 106
106 107
105 108
108 109
109 110
105 111
111 112
112 113
2 114
114 115
115 116
116 117
115 118
118 119
119 120
0 121
0 122
122 123

Test execution with a valid <code>RefId</code>.
