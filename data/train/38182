438
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (MethodCallExpr)
8 name (SimpleName)
9 identifier='get'
10 scope (MethodCallExpr)
11 name (SimpleName)
12 identifier='getIndicatorSeries'
13 scope (MethodCallExpr)
14 name (SimpleName)
15 identifier='getData'
16 arguments
17 argument (NameExpr)
18 name (SimpleName)
19 identifier='row'
20 name (SimpleName)
21 identifier='element'
22 type (ClassOrInterfaceType)
23 name (SimpleName)
24 identifier='IndicatorSeries'
25 statement (SwitchStmt)
26 selector (NameExpr)
27 name (SimpleName)
28 identifier='column'
29 entries
30 entrie (SwitchEntryStmt)
31 label (IntegerLiteralExpr)
32 value='0'
33 statements
34 statement (BlockStmt)
35 statements
36 statement (ExpressionStmt)
37 expression (MethodCallExpr)
38 name (SimpleName)
39 identifier='setStrategy'
40 scope (NameExpr)
41 name (SimpleName)
42 identifier='element'
43 arguments
44 argument (CastExpr)
45 expression (MethodCallExpr)
46 name (SimpleName)
47 identifier='getObject'
48 scope (EnclosedExpr)
49 inner (CastExpr)
50 expression (NameExpr)
51 name (SimpleName)
52 identifier='value'
53 type (ClassOrInterfaceType)
54 name (SimpleName)
55 identifier='DAOStrategy'
56 type (ClassOrInterfaceType)
57 name (SimpleName)
58 identifier='Strategy'
59 statement (BreakStmt)
60 entrie (SwitchEntryStmt)
61 label (IntegerLiteralExpr)
62 value='1'
63 statements
64 statement (BlockStmt)
65 statements
66 statement (ExpressionStmt)
67 expression (VariableDeclarationExpr)
68 variables
69 variable (VariableDeclarator)
70 initializer (MethodCallExpr)
71 name (SimpleName)
72 identifier='getCode'
73 scope (EnclosedExpr)
74 inner (CastExpr)
75 expression (NameExpr)
76 name (SimpleName)
77 identifier='value'
78 type (ClassOrInterfaceType)
79 name (SimpleName)
80 identifier='IndicatorSeries'
81 scope (ClassOrInterfaceType)
82 name (SimpleName)
83 identifier='valuetype'
84 scope (ClassOrInterfaceType)
85 name (SimpleName)
86 identifier='dictionary'
87 scope (ClassOrInterfaceType)
88 name (SimpleName)
89 identifier='trade'
90 scope (ClassOrInterfaceType)
91 name (SimpleName)
92 identifier='org'
93 name (SimpleName)
94 identifier='type'
95 type (ClassOrInterfaceType)
96 name (SimpleName)
97 identifier='String'
98 statement (ExpressionStmt)
99 expression (VariableDeclarationExpr)
100 variables
101 variable (VariableDeclarator)
102 initializer (MethodCallExpr)
103 name (SimpleName)
104 identifier='substring'
105 scope (NameExpr)
106 name (SimpleName)
107 identifier='type'
108 arguments
109 argument (IntegerLiteralExpr)
110 value='0'
111 argument (MethodCallExpr)
112 name (SimpleName)
113 identifier='indexOf'
114 scope (NameExpr)
115 name (SimpleName)
116 identifier='type'
117 arguments
118 argument (StringLiteralExpr)
119 value='Series'
120 name (SimpleName)
121 identifier='indicatorName'
122 type (ClassOrInterfaceType)
123 name (SimpleName)
124 identifier='String'
125 statement (ExpressionStmt)
126 expression (AssignExpr)
127 operator='ASSIGN'
128 target (NameExpr)
129 name (SimpleName)
130 identifier='element'
131 value (MethodCallExpr)
132 name (SimpleName)
133 identifier='getIndicatorSeries'
134 scope (ThisExpr)
135 arguments
136 argument (MethodCallExpr)
137 name (SimpleName)
138 identifier='getStrategy'
139 scope (NameExpr)
140 name (SimpleName)
141 identifier='element'
142 argument (NameExpr)
143 name (SimpleName)
144 identifier='indicatorName'
145 argument (NameExpr)
146 name (SimpleName)
147 identifier='type'
148 argument (NameExpr)
149 name (SimpleName)
150 identifier='indicatorName'
151 argument (ObjectCreationExpr)
152 type (ClassOrInterfaceType)
153 name (SimpleName)
154 identifier='Boolean'
155 arguments
156 argument (BooleanLiteralExpr)
157 value='false'
158 argument (ObjectCreationExpr)
159 type (ClassOrInterfaceType)
160 name (SimpleName)
161 identifier='Integer'
162 arguments
163 argument (IntegerLiteralExpr)
164 value='0'
165 argument (ObjectCreationExpr)
166 type (ClassOrInterfaceType)
167 name (SimpleName)
168 identifier='Boolean'
169 arguments
170 argument (BooleanLiteralExpr)
171 value='false'
172 statement (ExpressionStmt)
173 expression (MethodCallExpr)
174 name (SimpleName)
175 identifier='replaceRow'
176 scope (ThisExpr)
177 arguments
178 argument (NameExpr)
179 name (SimpleName)
180 identifier='element'
181 argument (NameExpr)
182 name (SimpleName)
183 identifier='row'
184 statement (BreakStmt)
185 entrie (SwitchEntryStmt)
186 label (IntegerLiteralExpr)
187 value='2'
188 statements
189 statement (BlockStmt)
190 statements
191 statement (ExpressionStmt)
192 expression (MethodCallExpr)
193 name (SimpleName)
194 identifier='setName'
195 scope (NameExpr)
196 name (SimpleName)
197 identifier='element'
198 arguments
199 argument (MethodCallExpr)
200 name (SimpleName)
201 identifier='trim'
202 scope (EnclosedExpr)
203 inner (CastExpr)
204 expression (NameExpr)
205 name (SimpleName)
206 identifier='value'
207 type (ClassOrInterfaceType)
208 name (SimpleName)
209 identifier='String'
210 statement (BreakStmt)
211 entrie (SwitchEntryStmt)
212 label (IntegerLiteralExpr)
213 value='3'
214 statements
215 statement (BlockStmt)
216 statements
217 statement (ExpressionStmt)
218 expression (MethodCallExpr)
219 name (SimpleName)
220 identifier='setDescription'
221 scope (NameExpr)
222 name (SimpleName)
223 identifier='element'
224 arguments
225 argument (CastExpr)
226 expression (NameExpr)
227 name (SimpleName)
228 identifier='value'
229 type (ClassOrInterfaceType)
230 name (SimpleName)
231 identifier='String'
232 statement (BreakStmt)
233 entrie (SwitchEntryStmt)
234 label (IntegerLiteralExpr)
235 value='4'
236 statements
237 statement (BlockStmt)
238 statements
239 statement (ExpressionStmt)
240 expression (MethodCallExpr)
241 name (SimpleName)
242 identifier='setDisplaySeries'
243 scope (NameExpr)
244 name (SimpleName)
245 identifier='element'
246 arguments
247 argument (ObjectCreationExpr)
248 type (ClassOrInterfaceType)
249 name (SimpleName)
250 identifier='Boolean'
251 arguments
252 argument (MethodCallExpr)
253 name (SimpleName)
254 identifier='getCode'
255 scope (EnclosedExpr)
256 inner (CastExpr)
257 expression (NameExpr)
258 name (SimpleName)
259 identifier='value'
260 type (ClassOrInterfaceType)
261 name (SimpleName)
262 identifier='YesNo'
263 statement (BreakStmt)
264 entrie (SwitchEntryStmt)
265 label (IntegerLiteralExpr)
266 value='5'
267 statements
268 statement (BlockStmt)
269 statements
270 statement (ExpressionStmt)
271 expression (MethodCallExpr)
272 name (SimpleName)
273 identifier='setSubChart'
274 scope (NameExpr)
275 name (SimpleName)
276 identifier='element'
277 arguments
278 argument (ObjectCreationExpr)
279 type (ClassOrInterfaceType)
280 name (SimpleName)
281 identifier='Boolean'
282 arguments
283 argument (MethodCallExpr)
284 name (SimpleName)
285 identifier='getCode'
286 scope (EnclosedExpr)
287 inner (CastExpr)
288 expression (NameExpr)
289 name (SimpleName)
290 identifier='value'
291 type (ClassOrInterfaceType)
292 name (SimpleName)
293 identifier='YesNo'
294 statement (BreakStmt)
295 entrie (SwitchEntryStmt)
296 label (IntegerLiteralExpr)
297 value='6'
298 statements
299 statement (BlockStmt)
300 statements
301 statement (ExpressionStmt)
302 expression (MethodCallExpr)
303 name (SimpleName)
304 identifier='setSeriesRGBColor'
305 scope (NameExpr)
306 name (SimpleName)
307 identifier='element'
308 arguments
309 argument (MethodCallExpr)
310 name (SimpleName)
311 identifier='getRGB'
312 scope (EnclosedExpr)
313 inner (CastExpr)
314 expression (NameExpr)
315 name (SimpleName)
316 identifier='value'
317 type (ClassOrInterfaceType)
318 name (SimpleName)
319 identifier='Color'
320 statement (BreakStmt)
321 entrie (SwitchEntryStmt)
322 label (IntegerLiteralExpr)
323 value='7'
324 statements
325 statement (BlockStmt)
326 statements
327 statement (ExpressionStmt)
328 expression (VariableDeclarationExpr)
329 variables
330 variable (VariableDeclarator)
331 initializer (ObjectCreationExpr)
332 type (ClassOrInterfaceType)
333 name (SimpleName)
334 identifier='ArrayList'
335 name (SimpleName)
336 identifier='code'
337 type (ClassOrInterfaceType)
338 name (SimpleName)
339 identifier='List'
340 typeArguments
341 typeArgument (ClassOrInterfaceType)
342 name (SimpleName)
343 identifier='CodeValue'
344 statement (ForeachStmt)
345 body (BlockStmt)
346 statements
347 statement (ExpressionStmt)
348 expression (MethodCallExpr)
349 name (SimpleName)
350 identifier='add'
351 scope (NameExpr)
352 name (SimpleName)
353 identifier='code'
354 arguments
355 argument (CastExpr)
356 expression (NameExpr)
357 name (SimpleName)
358 identifier='aspect'
359 type (ClassOrInterfaceType)
360 name (SimpleName)
361 identifier='CodeValue'
362 iterable (MethodCallExpr)
363 name (SimpleName)
364 identifier='getAspect'
365 scope (EnclosedExpr)
366 inner (CastExpr)
367 expression (NameExpr)
368 name (SimpleName)
369 identifier='value'
370 type (ClassOrInterfaceType)
371 name (SimpleName)
372 identifier='Aspects'
373 variable (VariableDeclarationExpr)
374 variables
375 variable (VariableDeclarator)
376 name (SimpleName)
377 identifier='aspect'
378 type (ClassOrInterfaceType)
379 name (SimpleName)
380 identifier='Aspect'
381 statement (IfStmt)
382 condition (UnaryExpr)
383 operator='LOGICAL_COMPLEMENT'
384 expression (MethodCallExpr)
385 name (SimpleName)
386 identifier='isEmpty'
387 scope (NameExpr)
388 name (SimpleName)
389 identifier='code'
390 thenStmt (ExpressionStmt)
391 expression (MethodCallExpr)
392 name (SimpleName)
393 identifier='setCodeValues'
394 scope (NameExpr)
395 name (SimpleName)
396 identifier='element'
397 arguments
398 argument (NameExpr)
399 name (SimpleName)
400 identifier='code'
401 statement (BreakStmt)
402 entrie (SwitchEntryStmt)
403 statements
404 statement (BlockStmt)
405 statement (ExpressionStmt)
406 expression (MethodCallExpr)
407 name (SimpleName)
408 identifier='setDirty'
409 scope (NameExpr)
410 name (SimpleName)
411 identifier='element'
412 arguments
413 argument (BooleanLiteralExpr)
414 value='true'
415 type (VoidType)
416 name (SimpleName)
417 identifier='populateDAO'
418 parameters
419 parameter (Parameter)
420 isVarArgs='false'
421 name (SimpleName)
422 identifier='value'
423 type (ClassOrInterfaceType)
424 name (SimpleName)
425 identifier='Object'
426 parameter (Parameter)
427 isVarArgs='false'
428 name (SimpleName)
429 identifier='row'
430 type (PrimitiveType)
431 type='INT'
432 parameter (Parameter)
433 isVarArgs='false'
434 name (SimpleName)
435 identifier='column'
436 type (PrimitiveType)
437 type='INT'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
7 8
8 9
7 10
10 11
11 12
10 13
13 14
14 15
7 16
16 17
17 18
18 19
6 20
20 21
6 22
22 23
23 24
2 25
25 26
26 27
27 28
25 29
29 30
30 31
31 32
30 33
33 34
34 35
35 36
36 37
37 38
38 39
37 40
40 41
41 42
37 43
43 44
44 45
45 46
46 47
45 48
48 49
49 50
50 51
51 52
49 53
53 54
54 55
44 56
56 57
57 58
35 59
29 60
60 61
61 62
60 63
63 64
64 65
65 66
66 67
67 68
68 69
69 70
70 71
71 72
70 73
73 74
74 75
75 76
76 77
74 78
78 79
79 80
78 81
81 82
82 83
81 84
84 85
85 86
84 87
87 88
88 89
87 90
90 91
91 92
69 93
93 94
69 95
95 96
96 97
65 98
98 99
99 100
100 101
101 102
102 103
103 104
102 105
105 106
106 107
102 108
108 109
109 110
108 111
111 112
112 113
111 114
114 115
115 116
111 117
117 118
118 119
101 120
120 121
101 122
122 123
123 124
65 125
125 126
126 127
126 128
128 129
129 130
126 131
131 132
132 133
131 134
131 135
135 136
136 137
137 138
136 139
139 140
140 141
135 142
142 143
143 144
135 145
145 146
146 147
135 148
148 149
149 150
135 151
151 152
152 153
153 154
151 155
155 156
156 157
135 158
158 159
159 160
160 161
158 162
162 163
163 164
135 165
165 166
166 167
167 168
165 169
169 170
170 171
65 172
172 173
173 174
174 175
173 176
173 177
177 178
178 179
179 180
177 181
181 182
182 183
65 184
29 185
185 186
186 187
185 188
188 189
189 190
190 191
191 192
192 193
193 194
192 195
195 196
196 197
192 198
198 199
199 200
200 201
199 202
202 203
203 204
204 205
205 206
203 207
207 208
208 209
190 210
29 211
211 212
212 213
211 214
214 215
215 216
216 217
217 218
218 219
219 220
218 221
221 222
222 223
218 224
224 225
225 226
226 227
227 228
225 229
229 230
230 231
216 232
29 233
233 234
234 235
233 236
236 237
237 238
238 239
239 240
240 241
241 242
240 243
243 244
244 245
240 246
246 247
247 248
248 249
249 250
247 251
251 252
252 253
253 254
252 255
255 256
256 257
257 258
258 259
256 260
260 261
261 262
238 263
29 264
264 265
265 266
264 267
267 268
268 269
269 270
270 271
271 272
272 273
271 274
274 275
275 276
271 277
277 278
278 279
279 280
280 281
278 282
282 283
283 284
284 285
283 286
286 287
287 288
288 289
289 290
287 291
291 292
292 293
269 294
29 295
295 296
296 297
295 298
298 299
299 300
300 301
301 302
302 303
303 304
302 305
305 306
306 307
302 308
308 309
309 310
310 311
309 312
312 313
313 314
314 315
315 316
313 317
317 318
318 319
300 320
29 321
321 322
322 323
321 324
324 325
325 326
326 327
327 328
328 329
329 330
330 331
331 332
332 333
333 334
330 335
335 336
330 337
337 338
338 339
337 340
340 341
341 342
342 343
326 344
344 345
345 346
346 347
347 348
348 349
349 350
348 351
351 352
352 353
348 354
354 355
355 356
356 357
357 358
355 359
359 360
360 361
344 362
362 363
363 364
362 365
365 366
366 367
367 368
368 369
366 370
370 371
371 372
344 373
373 374
374 375
375 376
376 377
375 378
378 379
379 380
326 381
381 382
382 383
382 384
384 385
385 386
384 387
387 388
388 389
381 390
390 391
391 392
392 393
391 394
394 395
395 396
391 397
397 398
398 399
399 400
326 401
29 402
402 403
403 404
2 405
405 406
406 407
407 408
406 409
409 410
410 411
406 412
412 413
413 414
0 415
0 416
416 417
0 418
418 419
419 420
419 421
421 422
419 423
423 424
424 425
418 426
426 427
426 428
428 429
426 430
430 431
418 432
432 433
432 434
434 435
432 436
436 437

Method populateDAO.
