250
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (VariableDeclarationExpr)
5 variables
6 variable (VariableDeclarator)
7 initializer (NullLiteralExpr)
8 name (SimpleName)
9 identifier='properties'
10 type (ClassOrInterfaceType)
11 name (SimpleName)
12 identifier='Properties'
13 statement (ExpressionStmt)
14 expression (MethodCallExpr)
15 name (SimpleName)
16 identifier='assertTrue'
17 scope (NameExpr)
18 name (SimpleName)
19 identifier='Assert'
20 arguments
21 argument (MethodCallExpr)
22 name (SimpleName)
23 identifier='hasNext'
24 scope (NameExpr)
25 name (SimpleName)
26 identifier='reader'
27 statement (ExpressionStmt)
28 expression (AssignExpr)
29 operator='ASSIGN'
30 target (NameExpr)
31 name (SimpleName)
32 identifier='properties'
33 value (MethodCallExpr)
34 name (SimpleName)
35 identifier='next'
36 scope (NameExpr)
37 name (SimpleName)
38 identifier='reader'
39 statement (ExpressionStmt)
40 expression (MethodCallExpr)
41 name (SimpleName)
42 identifier='assertEquals'
43 scope (NameExpr)
44 name (SimpleName)
45 identifier='Assert'
46 arguments
47 argument (IntegerLiteralExpr)
48 value='3'
49 argument (MethodCallExpr)
50 name (SimpleName)
51 identifier='size'
52 scope (NameExpr)
53 name (SimpleName)
54 identifier='properties'
55 statement (ExpressionStmt)
56 expression (MethodCallExpr)
57 name (SimpleName)
58 identifier='assertEquals'
59 scope (NameExpr)
60 name (SimpleName)
61 identifier='Assert'
62 arguments
63 argument (StringLiteralExpr)
64 value='0.0'
65 argument (MethodCallExpr)
66 name (SimpleName)
67 identifier='getProperty'
68 scope (NameExpr)
69 name (SimpleName)
70 identifier='properties'
71 arguments
72 argument (StringLiteralExpr)
73 value='entry1'
74 statement (ExpressionStmt)
75 expression (MethodCallExpr)
76 name (SimpleName)
77 identifier='assertEquals'
78 scope (NameExpr)
79 name (SimpleName)
80 identifier='Assert'
81 arguments
82 argument (StringLiteralExpr)
83 value='100.0'
84 argument (MethodCallExpr)
85 name (SimpleName)
86 identifier='getProperty'
87 scope (NameExpr)
88 name (SimpleName)
89 identifier='properties'
90 arguments
91 argument (StringLiteralExpr)
92 value='entry2'
93 statement (ExpressionStmt)
94 expression (MethodCallExpr)
95 name (SimpleName)
96 identifier='assertEquals'
97 scope (NameExpr)
98 name (SimpleName)
99 identifier='Assert'
100 arguments
101 argument (StringLiteralExpr)
102 value='0.0'
103 argument (MethodCallExpr)
104 name (SimpleName)
105 identifier='getProperty'
106 scope (NameExpr)
107 name (SimpleName)
108 identifier='properties'
109 arguments
110 argument (StringLiteralExpr)
111 value='entry3'
112 statement (ExpressionStmt)
113 expression (MethodCallExpr)
114 name (SimpleName)
115 identifier='assertTrue'
116 scope (NameExpr)
117 name (SimpleName)
118 identifier='Assert'
119 arguments
120 argument (MethodCallExpr)
121 name (SimpleName)
122 identifier='hasNext'
123 scope (NameExpr)
124 name (SimpleName)
125 identifier='reader'
126 statement (ExpressionStmt)
127 expression (AssignExpr)
128 operator='ASSIGN'
129 target (NameExpr)
130 name (SimpleName)
131 identifier='properties'
132 value (MethodCallExpr)
133 name (SimpleName)
134 identifier='next'
135 scope (NameExpr)
136 name (SimpleName)
137 identifier='reader'
138 statement (ExpressionStmt)
139 expression (MethodCallExpr)
140 name (SimpleName)
141 identifier='assertEquals'
142 scope (NameExpr)
143 name (SimpleName)
144 identifier='Assert'
145 arguments
146 argument (IntegerLiteralExpr)
147 value='3'
148 argument (MethodCallExpr)
149 name (SimpleName)
150 identifier='size'
151 scope (NameExpr)
152 name (SimpleName)
153 identifier='properties'
154 statement (ExpressionStmt)
155 expression (MethodCallExpr)
156 name (SimpleName)
157 identifier='assertEquals'
158 scope (NameExpr)
159 name (SimpleName)
160 identifier='Assert'
161 arguments
162 argument (StringLiteralExpr)
163 value='1.0'
164 argument (MethodCallExpr)
165 name (SimpleName)
166 identifier='getProperty'
167 scope (NameExpr)
168 name (SimpleName)
169 identifier='properties'
170 arguments
171 argument (StringLiteralExpr)
172 value='entry1'
173 statement (ExpressionStmt)
174 expression (MethodCallExpr)
175 name (SimpleName)
176 identifier='assertEquals'
177 scope (NameExpr)
178 name (SimpleName)
179 identifier='Assert'
180 arguments
181 argument (StringLiteralExpr)
182 value='10000.0'
183 argument (MethodCallExpr)
184 name (SimpleName)
185 identifier='getProperty'
186 scope (NameExpr)
187 name (SimpleName)
188 identifier='properties'
189 arguments
190 argument (StringLiteralExpr)
191 value='entry2'
192 statement (ExpressionStmt)
193 expression (MethodCallExpr)
194 name (SimpleName)
195 identifier='assertEquals'
196 scope (NameExpr)
197 name (SimpleName)
198 identifier='Assert'
199 arguments
200 argument (StringLiteralExpr)
201 value='1.0'
202 argument (MethodCallExpr)
203 name (SimpleName)
204 identifier='getProperty'
205 scope (NameExpr)
206 name (SimpleName)
207 identifier='properties'
208 arguments
209 argument (StringLiteralExpr)
210 value='entry3'
211 statement (ExpressionStmt)
212 expression (MethodCallExpr)
213 name (SimpleName)
214 identifier='assertFalse'
215 scope (NameExpr)
216 name (SimpleName)
217 identifier='Assert'
218 arguments
219 argument (MethodCallExpr)
220 name (SimpleName)
221 identifier='hasNext'
222 scope (NameExpr)
223 name (SimpleName)
224 identifier='reader'
225 statement (ExpressionStmt)
226 expression (MethodCallExpr)
227 name (SimpleName)
228 identifier='assertFalse'
229 scope (NameExpr)
230 name (SimpleName)
231 identifier='Assert'
232 arguments
233 argument (MethodCallExpr)
234 name (SimpleName)
235 identifier='hasNext'
236 scope (NameExpr)
237 name (SimpleName)
238 identifier='reader'
239 type (VoidType)
240 name (SimpleName)
241 identifier='validateComplete'
242 parameters
243 parameter (Parameter)
244 isVarArgs='false'
245 name (SimpleName)
246 identifier='reader'
247 type (ClassOrInterfaceType)
248 name (SimpleName)
249 identifier='SampleReader'
0 1
1 2
2 3
3 4
4 5
5 6
6 7
6 8
8 9
6 10
10 11
11 12
2 13
13 14
14 15
15 16
14 17
17 18
18 19
14 20
20 21
21 22
22 23
21 24
24 25
25 26
2 27
27 28
28 29
28 30
30 31
31 32
28 33
33 34
34 35
33 36
36 37
37 38
2 39
39 40
40 41
41 42
40 43
43 44
44 45
40 46
46 47
47 48
46 49
49 50
50 51
49 52
52 53
53 54
2 55
55 56
56 57
57 58
56 59
59 60
60 61
56 62
62 63
63 64
62 65
65 66
66 67
65 68
68 69
69 70
65 71
71 72
72 73
2 74
74 75
75 76
76 77
75 78
78 79
79 80
75 81
81 82
82 83
81 84
84 85
85 86
84 87
87 88
88 89
84 90
90 91
91 92
2 93
93 94
94 95
95 96
94 97
97 98
98 99
94 100
100 101
101 102
100 103
103 104
104 105
103 106
106 107
107 108
103 109
109 110
110 111
2 112
112 113
113 114
114 115
113 116
116 117
117 118
113 119
119 120
120 121
121 122
120 123
123 124
124 125
2 126
126 127
127 128
127 129
129 130
130 131
127 132
132 133
133 134
132 135
135 136
136 137
2 138
138 139
139 140
140 141
139 142
142 143
143 144
139 145
145 146
146 147
145 148
148 149
149 150
148 151
151 152
152 153
2 154
154 155
155 156
156 157
155 158
158 159
159 160
155 161
161 162
162 163
161 164
164 165
165 166
164 167
167 168
168 169
164 170
170 171
171 172
2 173
173 174
174 175
175 176
174 177
177 178
178 179
174 180
180 181
181 182
180 183
183 184
184 185
183 186
186 187
187 188
183 189
189 190
190 191
2 192
192 193
193 194
194 195
193 196
196 197
197 198
193 199
199 200
200 201
199 202
202 203
203 204
202 205
205 206
206 207
202 208
208 209
209 210
2 211
211 212
212 213
213 214
212 215
215 216
216 217
212 218
218 219
219 220
220 221
219 222
222 223
223 224
2 225
225 226
226 227
227 228
226 229
229 230
230 231
226 232
232 233
233 234
234 235
233 236
236 237
237 238
0 239
0 240
240 241
0 242
242 243
243 244
243 245
245 246
243 247
247 248
248 249

Performs the necessary assertions to ensure a complete parameter sample file is read correctly.
