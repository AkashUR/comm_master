63
0 root (MethodDeclaration)
1 body (BlockStmt)
2 statements
3 statement (ExpressionStmt)
4 expression (MethodCallExpr)
5 name (SimpleName)
6 identifier='putObject'
7 scope (NameExpr)
8 name (SimpleName)
9 identifier='spellPieceRegistry'
10 arguments
11 argument (NameExpr)
12 name (SimpleName)
13 identifier='key'
14 argument (NameExpr)
15 name (SimpleName)
16 identifier='clazz'
17 statement (ExpressionStmt)
18 expression (MethodCallExpr)
19 name (SimpleName)
20 identifier='put'
21 scope (NameExpr)
22 name (SimpleName)
23 identifier='pieceMods'
24 arguments
25 argument (NameExpr)
26 name (SimpleName)
27 identifier='clazz'
28 argument (MethodCallExpr)
29 name (SimpleName)
30 identifier='getName'
31 scope (MethodCallExpr)
32 name (SimpleName)
33 identifier='activeModContainer'
34 scope (MethodCallExpr)
35 name (SimpleName)
36 identifier='instance'
37 scope (NameExpr)
38 name (SimpleName)
39 identifier='Loader'
40 type (VoidType)
41 name (SimpleName)
42 identifier='registerSpellPiece'
43 parameters
44 parameter (Parameter)
45 isVarArgs='false'
46 name (SimpleName)
47 identifier='key'
48 type (ClassOrInterfaceType)
49 name (SimpleName)
50 identifier='String'
51 parameter (Parameter)
52 isVarArgs='false'
53 name (SimpleName)
54 identifier='clazz'
55 type (ClassOrInterfaceType)
56 name (SimpleName)
57 identifier='Class'
58 typeArguments
59 typeArgument (WildcardType)
60 extendedType (ClassOrInterfaceType)
61 name (SimpleName)
62 identifier='SpellPiece'
0 1
1 2
2 3
3 4
4 5
5 6
4 7
7 8
8 9
4 10
10 11
11 12
12 13
10 14
14 15
15 16
2 17
17 18
18 19
19 20
18 21
21 22
22 23
18 24
24 25
25 26
26 27
24 28
28 29
29 30
28 31
31 32
32 33
31 34
34 35
35 36
34 37
37 38
38 39
0 40
0 41
41 42
0 43
43 44
44 45
44 46
46 47
44 48
48 49
49 50
43 51
51 52
51 53
53 54
51 55
55 56
56 57
55 58
58 59
59 60
60 61
61 62

Registers a Spell Piece given its class, by which, it puts it in the registry.
